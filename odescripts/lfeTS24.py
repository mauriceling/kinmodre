''' -------------------------------------
Python ODE script generated by ASModeller
(a package in AdvanceSynToolKit)

Date Time: 2025-1-10 3:43:43:111558

name: Whole Cell Kinetic Model (Enzymatic reactions with enzyme transcriptions and translations) of Limosilactobacillus fermentum EFEL6800 (lfeTS24)
author: Tanisha D/O Saisudhanbabu, Maurice Ling
------------------------------------- '''

def C00001(t, y):
    r19 = (13.7 * y[1233] * y[771] * y[3] * y[77]) / (1 + (y[1233] * y[771] * y[3] * y[77]))
    r38 = (13.7 * y[1233] * y[771] * y[3] * y[77]) / (1 + (y[1233] * y[771] * y[3] * y[77]))
    r92 = (13.7 * y[1251] * y[3] * y[802] * y[77]) / (1 + (y[1251] * y[3] * y[802] * y[77]))
    r129 = (13.7 * y[1259] * y[784] * y[321]) / (1 + (y[1259] * y[784] * y[321]))
    r130 = (13.7 * y[1259] * y[784] * y[321]) / (1 + (y[1259] * y[784] * y[321]))
    r171 = (13.7 * y[1270] * y[4] * y[77] * y[1537]) / (1 + (y[1270] * y[4] * y[77] * y[1537]))
    r194 = (13.7 * y[1285] * y[62] * y[495]) / (1 + (y[1285] * y[62] * y[495]))
    r250 = (13.7 * y[1310] * y[335] * y[9]) / (1 + (y[1310] * y[335] * y[9]))
    r258 = (13.7 * y[1313] * y[572] * y[12] * y[24]) / (1 + (y[1313] * y[572] * y[12] * y[24]))
    r273 = (13.7 * y[1319] * y[506] * y[419]) / (1 + (y[1319] * y[506] * y[419]))
    r282 = (13.7 * y[1323] * y[8] * y[12] * y[18]) / (1 + (y[1323] * y[8] * y[12] * y[18]))
    r285 = (13.7 * y[1325] * y[662] * y[805]) / (1 + (y[1325] * y[662] * y[805]))
    r353 = (13.7 * y[1357] * y[1] * y[13] * y[273]) / (1 + (y[1357] * y[1] * y[13] * y[273]))
    r355 = (13.7 * y[1357] * y[13] * y[273]) / (1 + (y[1357] * y[13] * y[273]))
    r356 = (13.7 * y[1357] * y[1] * y[13] * y[273]) / (1 + (y[1357] * y[1] * y[13] * y[273]))
    r358 = (13.7 * y[1357] * y[13] * y[273]) / (1 + (y[1357] * y[13] * y[273]))
    r482 = (13.7 * y[1386] * y[183] * y[1] * y[273] * y[77]) / (1 + (y[1386] * y[183] * y[1] * y[273] * y[77]))
    r556 = (13.7 * y[1409] * y[414] * y[13]) / (1 + (y[1409] * y[414] * y[13]))
    r604 = (13.7 * y[1438] * y[574]) / (1 + (y[1438] * y[574]))
    r606 = (13.7 * y[1440] * y[428]) / (1 + (y[1440] * y[428]))
    r607 = (13.7 * y[1440] * y[584]) / (1 + (y[1440] * y[584]))
    r609 = (13.7 * y[1442] * y[658]) / (1 + (y[1442] * y[658]))
    r610 = (13.7 * y[1443] * y[144]) / (1 + (y[1443] * y[144]))
    r611 = (13.7 * y[1444] * y[547]) / (1 + (y[1444] * y[547]))
    r612 = (13.7 * y[1444] * y[642]) / (1 + (y[1444] * y[642]))
    r614 = (13.7 * y[1444] * y[547]) / (1 + (y[1444] * y[547]))
    r615 = (13.7 * y[1444] * y[642]) / (1 + (y[1444] * y[642]))
    r617 = (13.7 * y[1445] * y[456]) / (1 + (y[1445] * y[456]))
    r618 = (13.7 * y[1445] * y[456]) / (1 + (y[1445] * y[456]))
    r619 = (13.7 * y[1446] * y[503]) / (1 + (y[1446] * y[503]))
    r620 = (13.7 * y[1446] * y[651]) / (1 + (y[1446] * y[651]))
    r621 = (13.7 * y[1446] * y[652]) / (1 + (y[1446] * y[652]))
    r622 = (13.7 * y[1446] * y[653]) / (1 + (y[1446] * y[653]))
    r623 = (13.7 * y[1446] * y[655]) / (1 + (y[1446] * y[655]))
    r624 = (13.7 * y[1446] * y[660]) / (1 + (y[1446] * y[660]))
    r625 = (13.7 * y[1446] * y[716]) / (1 + (y[1446] * y[716]))
    r626 = (13.7 * y[1446] * y[726]) / (1 + (y[1446] * y[726]))
    r627 = (13.7 * y[1446] * y[871]) / (1 + (y[1446] * y[871]))
    r628 = (13.7 * y[1446] * y[875]) / (1 + (y[1446] * y[875]))
    r629 = (13.7 * y[1446] * y[503]) / (1 + (y[1446] * y[503]))
    r630 = (13.7 * y[1446] * y[651]) / (1 + (y[1446] * y[651]))
    r631 = (13.7 * y[1446] * y[652]) / (1 + (y[1446] * y[652]))
    r632 = (13.7 * y[1446] * y[653]) / (1 + (y[1446] * y[653]))
    r633 = (13.7 * y[1446] * y[655]) / (1 + (y[1446] * y[655]))
    r634 = (13.7 * y[1446] * y[660]) / (1 + (y[1446] * y[660]))
    r635 = (13.7 * y[1446] * y[716]) / (1 + (y[1446] * y[716]))
    r636 = (13.7 * y[1446] * y[726]) / (1 + (y[1446] * y[726]))
    r637 = (13.7 * y[1446] * y[871]) / (1 + (y[1446] * y[871]))
    r638 = (13.7 * y[1446] * y[875]) / (1 + (y[1446] * y[875]))
    r639 = (13.7 * y[1447] * y[612]) / (1 + (y[1447] * y[612]))
    r640 = (13.7 * y[1447] * y[631]) / (1 + (y[1447] * y[631]))
    r641 = (13.7 * y[1447] * y[749]) / (1 + (y[1447] * y[749]))
    r646 = (13.7 * y[1450] * y[62]) / (1 + (y[1450] * y[62]))
    r659 = (13.7 * y[1454] * y[678] * y[13]) / (1 + (y[1454] * y[678] * y[13]))
    r662 = (13.7 * y[1454] * y[678] * y[13]) / (1 + (y[1454] * y[678] * y[13]))
    r665 = (13.7 * y[1454] * y[678] * y[13]) / (1 + (y[1454] * y[678] * y[13]))
    r669 = (13.7 * y[1456] * y[397] * y[21]) / (1 + (y[1456] * y[397] * y[21]))
    r680 = (13.7 * y[1465] * y[431] * y[14]) / (1 + (y[1465] * y[431] * y[14]))
    r802 = (13.7 * y[1521] * y[860] * y[46] * y[1]) / (1 + (y[1521] * y[860] * y[46] * y[1]))
    r806 = (13.7 * y[1523] * y[492] * y[12] * y[7] * y[8]) / (1 + (y[1523] * y[492] * y[12] * y[7] * y[8]))
    r807 = (13.7 * y[1523] * y[492] * y[12] * y[7] * y[8]) / (1 + (y[1523] * y[492] * y[12] * y[7] * y[8]))
    r42 = (13.7 * y[1237] * y[458] * y[2] * y[0] ) / (1 + (y[1237] * y[458] * y[2] * y[0] ))
    r43 = (13.7 * y[1237] * y[525] * y[0] * y[2]) / (1 + (y[1237] * y[525] * y[0] * y[2]))
    r93 = (13.7 * y[1252] * y[611] * y[2] * y[0]) / (1 + (y[1252] * y[611] * y[2] * y[0]))
    r94 = (13.7 * y[1252] * y[611] * y[5] * y[0]) / (1 + (y[1252] * y[611] * y[5] * y[0]))
    r95 = (13.7 * y[1253] * y[623] * y[322] * y[0]) / (1 + (y[1253] * y[623] * y[322] * y[0]))
    r96 = (13.7 * y[1253] * y[201] * y[322] * y[0]) / (1 + (y[1253] * y[201] * y[322] * y[0]))
    r97 = (13.7 * y[1253] * y[510] * y[322] * y[0]) / (1 + (y[1253] * y[510] * y[322] * y[0]))
    r98 = (13.7 * y[1253] * y[338] * y[322] * y[0]) / (1 + (y[1253] * y[338] * y[322] * y[0]))
    r99 = (13.7 * y[1253] * y[447] * y[322] * y[0]) / (1 + (y[1253] * y[447] * y[322] * y[0]))
    r100 = (13.7 * y[1253] * y[623] * y[847] * y[0]) / (1 + (y[1253] * y[623] * y[847] * y[0]))
    r101 = (13.7 * y[1253] * y[623] * y[575] * y[0]) / (1 + (y[1253] * y[623] * y[575] * y[0]))
    r102 = (13.7 * y[1253] * y[897] * y[322] * y[0]) / (1 + (y[1253] * y[897] * y[322] * y[0]))
    r103 = (13.7 * y[1253] * y[623] * y[322] * y[0]) / (1 + (y[1253] * y[623] * y[322] * y[0]))
    r104 = (13.7 * y[1253] * y[201] * y[322] * y[0]) / (1 + (y[1253] * y[201] * y[322] * y[0]))
    r105 = (13.7 * y[1253] * y[510] * y[322] * y[0]) / (1 + (y[1253] * y[510] * y[322] * y[0]))
    r106 = (13.7 * y[1253] * y[338] * y[322] * y[0]) / (1 + (y[1253] * y[338] * y[322] * y[0]))
    r107 = (13.7 * y[1253] * y[447] * y[322] * y[0]) / (1 + (y[1253] * y[447] * y[322] * y[0]))
    r108 = (13.7 * y[1253] * y[623] * y[847] * y[0]) / (1 + (y[1253] * y[623] * y[847] * y[0]))
    r109 = (13.7 * y[1253] * y[623] * y[575] * y[0]) / (1 + (y[1253] * y[623] * y[575] * y[0]))
    r110 = (13.7 * y[1253] * y[897] * y[322] * y[0]) / (1 + (y[1253] * y[897] * y[322] * y[0]))
    r111 = (13.7 * y[1253] * y[623] * y[322] * y[0]) / (1 + (y[1253] * y[623] * y[322] * y[0]))
    r112 = (13.7 * y[1253] * y[201] * y[322] * y[0]) / (1 + (y[1253] * y[201] * y[322] * y[0]))
    r113 = (13.7 * y[1253] * y[510] * y[322] * y[0]) / (1 + (y[1253] * y[510] * y[322] * y[0]))
    r114 = (13.7 * y[1253] * y[338] * y[322] * y[0]) / (1 + (y[1253] * y[338] * y[322] * y[0]))
    r115 = (13.7 * y[1253] * y[447] * y[322] * y[0]) / (1 + (y[1253] * y[447] * y[322] * y[0]))
    r116 = (13.7 * y[1253] * y[623] * y[847] * y[0]) / (1 + (y[1253] * y[623] * y[847] * y[0]))
    r117 = (13.7 * y[1253] * y[623] * y[575] * y[0]) / (1 + (y[1253] * y[623] * y[575] * y[0]))
    r118 = (13.7 * y[1253] * y[897] * y[322] * y[0]) / (1 + (y[1253] * y[897] * y[322] * y[0]))
    r119 = (13.7 * y[1254] * y[438] * y[322] * y[0]) / (1 + (y[1254] * y[438] * y[322] * y[0]))
    r120 = (13.7 * y[1254] * y[127] * y[322] * y[0]) / (1 + (y[1254] * y[127] * y[322] * y[0]))
    r121 = (13.7 * y[1254] * y[272] * y[322] * y[0]) / (1 + (y[1254] * y[272] * y[322] * y[0]))
    r122 = (13.7 * y[1254] * y[402] * y[322] * y[0]) / (1 + (y[1254] * y[402] * y[322] * y[0]))
    r123 = (13.7 * y[1254] * y[404] * y[322] * y[0]) / (1 + (y[1254] * y[404] * y[322] * y[0]))
    r145 = (13.7 * y[1264] * y[24] * y[5] * y[0]) / (1 + (y[1264] * y[24] * y[5] * y[0]))
    r146 = (13.7 * y[1264] * y[61] * y[0]) / (1 + (y[1264] * y[61] * y[0]))
    r170 = (13.7 * y[1270] * y[513] * y[5] * y[0]) / (1 + (y[1270] * y[513] * y[5] * y[0]))
    r172 = (13.7 * y[1271] * y[567] * y[322] * y[0]) / (1 + (y[1271] * y[567] * y[322] * y[0]))
    r173 = (13.7 * y[1271] * y[70] * y[322] * y[0]) / (1 + (y[1271] * y[70] * y[322] * y[0]))
    r174 = (13.7 * y[1271] * y[567] * y[322] * y[0]) / (1 + (y[1271] * y[567] * y[322] * y[0]))
    r175 = (13.7 * y[1271] * y[70] * y[322] * y[0]) / (1 + (y[1271] * y[70] * y[322] * y[0]))
    r176 = (13.7 * y[1272] * y[567] * y[322] * y[0]) / (1 + (y[1272] * y[567] * y[322] * y[0]))
    r193 = (13.7 * y[1285] * y[138] * y[36] * y[0]) / (1 + (y[1285] * y[138] * y[36] * y[0]))
    r196 = (13.7 * y[1286] * y[605] * y[398] * y[0]) / (1 + (y[1286] * y[605] * y[398] * y[0]))
    r237 = (13.7 * y[1303] * y[2] * y[884] * y[0]) / (1 + (y[1303] * y[2] * y[884] * y[0]))
    r238 = (13.7 * y[1303] * y[2] * y[527] * y[0]) / (1 + (y[1303] * y[2] * y[527] * y[0]))
    r246 = (13.7 * y[1308] * y[611] * y[23] * y[0]) / (1 + (y[1308] * y[611] * y[23] * y[0]))
    r283 = (13.7 * y[1323] * y[1] * y[696] * y[0]) / (1 + (y[1323] * y[1] * y[696] * y[0]))
    r494 = (13.7 * y[1394] * y[901] * y[0]) / (1 + (y[1394] * y[901] * y[0]))
    r495 = (13.7 * y[1394] * y[901] * y[0]) / (1 + (y[1394] * y[901] * y[0]))
    r496 = (13.7 * y[1395] * y[903] * y[0]) / (1 + (y[1395] * y[903] * y[0]))
    r497 = (13.7 * y[1395] * y[883] * y[0]) / (1 + (y[1395] * y[883] * y[0]))
    r498 = (13.7 * y[1396] * y[606] * y[0]) / (1 + (y[1396] * y[606] * y[0]))
    r499 = (13.7 * y[1397] * y[477] * y[0]) / (1 + (y[1397] * y[477] * y[0]))
    r500 = (13.7 * y[1398] * y[607] * y[0] ) / (1 + (y[1398] * y[607] * y[0] ))
    r501 = (13.7 * y[1399] * y[488] * y[0]) / (1 + (y[1399] * y[488] * y[0]))
    r502 = (13.7 * y[1399] * y[488] * y[0]) / (1 + (y[1399] * y[488] * y[0]))
    r503 = (13.7 * y[1399] * y[488] * y[0]) / (1 + (y[1399] * y[488] * y[0]))
    r504 = (13.7 * y[1400] * y[53] * y[0]) / (1 + (y[1400] * y[53] * y[0]))
    r505 = (13.7 * y[1400] * y[52] * y[0]) / (1 + (y[1400] * y[52] * y[0]))
    r507 = (13.7 * y[1401] * y[152] * y[0]) / (1 + (y[1401] * y[152] * y[0]))
    r508 = (13.7 * y[1401] * y[329] * y[0]) / (1 + (y[1401] * y[329] * y[0]))
    r509 = (13.7 * y[1401] * y[667] * y[0] ) / (1 + (y[1401] * y[667] * y[0] ))
    r510 = (13.7 * y[1402] * y[702] * y[0]) / (1 + (y[1402] * y[702] * y[0]))
    r511 = (13.7 * y[1402] * y[408] * y[0]) / (1 + (y[1402] * y[408] * y[0]))
    r512 = (13.7 * y[1402] * y[701] * y[0]) / (1 + (y[1402] * y[701] * y[0]))
    r513 = (13.7 * y[1402] * y[496] * y[0]) / (1 + (y[1402] * y[496] * y[0]))
    r514 = (13.7 * y[1402] * y[700] * y[0]) / (1 + (y[1402] * y[700] * y[0]))
    r515 = (13.7 * y[1402] * y[699] * y[0]) / (1 + (y[1402] * y[699] * y[0]))
    r516 = (13.7 * y[1402] * y[664] * y[0]) / (1 + (y[1402] * y[664] * y[0]))
    r517 = (13.7 * y[1402] * y[517] * y[0]) / (1 + (y[1402] * y[517] * y[0]))
    r518 = (13.7 * y[1402] * y[757] * y[0] ) / (1 + (y[1402] * y[757] * y[0] ))
    r519 = (13.7 * y[1402] * y[752] * y[0]) / (1 + (y[1402] * y[752] * y[0]))
    r520 = (13.7 * y[1402] * y[703] * y[0]) / (1 + (y[1402] * y[703] * y[0]))
    r521 = (13.7 * y[1402] * y[0] * y[911]) / (1 + (y[1402] * y[0] * y[911]))
    r522 = (13.7 * y[1402] * y[912] * y[0]) / (1 + (y[1402] * y[912] * y[0]))
    r523 = (13.7 * y[1402] * y[917] * y[0]) / (1 + (y[1402] * y[917] * y[0]))
    r524 = (13.7 * y[1402] * y[919] * y[0]) / (1 + (y[1402] * y[919] * y[0]))
    r525 = (13.7 * y[1402] * y[915] * y[0]) / (1 + (y[1402] * y[915] * y[0]))
    r526 = (13.7 * y[1402] * y[916] * y[0]) / (1 + (y[1402] * y[916] * y[0]))
    r527 = (13.7 * y[1402] * y[921] * y[0]) / (1 + (y[1402] * y[921] * y[0]))
    r528 = (13.7 * y[1402] * y[913] * y[0]) / (1 + (y[1402] * y[913] * y[0]))
    r529 = (13.7 * y[1403] * y[86] * y[0]) / (1 + (y[1403] * y[86] * y[0]))
    r530 = (13.7 * y[1403] * y[86] * y[0]) / (1 + (y[1403] * y[86] * y[0]))
    r531 = (13.7 * y[1403] * y[408] * y[0]) / (1 + (y[1403] * y[408] * y[0]))
    r532 = (13.7 * y[1403] * y[517] * y[0]) / (1 + (y[1403] * y[517] * y[0]))
    r533 = (13.7 * y[1403] * y[848] * y[0]) / (1 + (y[1403] * y[848] * y[0]))
    r534 = (13.7 * y[1403] * y[914] * y[0]) / (1 + (y[1403] * y[914] * y[0]))
    r535 = (13.7 * y[1403] * y[914] * y[0]) / (1 + (y[1403] * y[914] * y[0]))
    r536 = (13.7 * y[1403] * y[912] * y[0]) / (1 + (y[1403] * y[912] * y[0]))
    r537 = (13.7 * y[1403] * y[913] * y[0]) / (1 + (y[1403] * y[913] * y[0]))
    r538 = (13.7 * y[1403] * y[920] * y[0]) / (1 + (y[1403] * y[920] * y[0]))
    r539 = (13.7 * y[1404] * y[0] * y[443] ) / (1 + (y[1404] * y[0] * y[443] ))
    r540 = (13.7 * y[1404] * y[0] * y[918] ) / (1 + (y[1404] * y[0] * y[918] ))
    r541 = (13.7 * y[1405] * y[282] * y[0]) / (1 + (y[1405] * y[282] * y[0]))
    r542 = (13.7 * y[1405] * y[573] * y[0]) / (1 + (y[1405] * y[573] * y[0]))
    r543 = (13.7 * y[1405] * y[738] * y[0]) / (1 + (y[1405] * y[738] * y[0]))
    r544 = (13.7 * y[1406] * y[20] * y[0] ) / (1 + (y[1406] * y[20] * y[0] ))
    r545 = (13.7 * y[1406] * y[165] * y[0]) / (1 + (y[1406] * y[165] * y[0]))
    r546 = (13.7 * y[1406] * y[681] * y[0] ) / (1 + (y[1406] * y[681] * y[0] ))
    r547 = (13.7 * y[1407] * y[61] * y[0]) / (1 + (y[1407] * y[61] * y[0]))
    r548 = (13.7 * y[1407] * y[453] * y[0]) / (1 + (y[1407] * y[453] * y[0]))
    r549 = (13.7 * y[1407] * y[235] * y[0]) / (1 + (y[1407] * y[235] * y[0]))
    r550 = (13.7 * y[1408] * y[566] * y[0]) / (1 + (y[1408] * y[566] * y[0]))
    r551 = (13.7 * y[1409] * y[593] * y[0]) / (1 + (y[1409] * y[593] * y[0]))
    r552 = (13.7 * y[1409] * y[761] * y[0]) / (1 + (y[1409] * y[761] * y[0]))
    r553 = (13.7 * y[1409] * y[548] * y[0]) / (1 + (y[1409] * y[548] * y[0]))
    r554 = (13.7 * y[1409] * y[552] * y[0]) / (1 + (y[1409] * y[552] * y[0]))
    r555 = (13.7 * y[1409] * y[569] * y[0]) / (1 + (y[1409] * y[569] * y[0]))
    r557 = (13.7 * y[1409] * y[781] * y[0]) / (1 + (y[1409] * y[781] * y[0]))
    r558 = (13.7 * y[1409] * y[235] * y[0]) / (1 + (y[1409] * y[235] * y[0]))
    r559 = (13.7 * y[1410] * y[788] * y[0]) / (1 + (y[1410] * y[788] * y[0]))
    r560 = (13.7 * y[1410] * y[628] * y[0] ) / (1 + (y[1410] * y[628] * y[0] ))
    r561 = (13.7 * y[1410] * y[235] * y[0]) / (1 + (y[1410] * y[235] * y[0]))
    r562 = (13.7 * y[1410] * y[628] * y[0] ) / (1 + (y[1410] * y[628] * y[0] ))
    r563 = (13.7 * y[1411] * y[316] * y[0]) / (1 + (y[1411] * y[316] * y[0]))
    r564 = (13.7 * y[1412] * y[538] * y[0] ) / (1 + (y[1412] * y[538] * y[0] ))
    r565 = (13.7 * y[1413] * y[1] * y[524] * y[0]) / (1 + (y[1413] * y[1] * y[524] * y[0]))
    r566 = (13.7 * y[1413] * y[1] * y[524] * y[0]) / (1 + (y[1413] * y[1] * y[524] * y[0]))
    r567 = (13.7 * y[1414] * y[59] * y[0]) / (1 + (y[1414] * y[59] * y[0]))
    r568 = (13.7 * y[1414] * y[756] * y[0]) / (1 + (y[1414] * y[756] * y[0]))
    r569 = (13.7 * y[1415] * y[126] * y[0]) / (1 + (y[1415] * y[126] * y[0]))
    r570 = (13.7 * y[1416] * y[43] * y[0]) / (1 + (y[1416] * y[43] * y[0]))
    r571 = (13.7 * y[1416] * y[43] * y[0]) / (1 + (y[1416] * y[43] * y[0]))
    r572 = (13.7 * y[1416] * y[675] * y[0]) / (1 + (y[1416] * y[675] * y[0]))
    r573 = (13.7 * y[1416] * y[745] * y[0]) / (1 + (y[1416] * y[745] * y[0]))
    r575 = (13.7 * y[1417] * y[556] * y[0]) / (1 + (y[1417] * y[556] * y[0]))
    r576 = (13.7 * y[1418] * y[43] * y[0]) / (1 + (y[1418] * y[43] * y[0]))
    r577 = (13.7 * y[1419] * y[507] * y[0]) / (1 + (y[1419] * y[507] * y[0]))
    r578 = (13.7 * y[1420] * y[236] * y[0]) / (1 + (y[1420] * y[236] * y[0]))
    r579 = (13.7 * y[1421] * y[852] * y[0]) / (1 + (y[1421] * y[852] * y[0]))
    r580 = (13.7 * y[1422] * y[354] * y[0]) / (1 + (y[1422] * y[354] * y[0]))
    r581 = (13.7 * y[1422] * y[869] * y[0]) / (1 + (y[1422] * y[869] * y[0]))
    r582 = (13.7 * y[1423] * y[12] * y[0] ) / (1 + (y[1423] * y[12] * y[0] ))
    r583 = (13.7 * y[1424] * y[650] * y[0]) / (1 + (y[1424] * y[650] * y[0]))
    r584 = (13.7 * y[1425] * y[555] * y[0]) / (1 + (y[1425] * y[555] * y[0]))
    r585 = (13.7 * y[1426] * y[499] * y[0]) / (1 + (y[1426] * y[499] * y[0]))
    r586 = (13.7 * y[1427] * y[78] * y[0]) / (1 + (y[1427] * y[78] * y[0]))
    r587 = (13.7 * y[1427] * y[446] * y[0]) / (1 + (y[1427] * y[446] * y[0]))
    r588 = (13.7 * y[1427] * y[509] * y[0]) / (1 + (y[1427] * y[509] * y[0]))
    r589 = (13.7 * y[1427] * y[840] * y[0]) / (1 + (y[1427] * y[840] * y[0]))
    r608 = (13.7 * y[1441] * y[554] * y[0]) / (1 + (y[1441] * y[554] * y[0]))
    r642 = (13.7 * y[1448] * y[478] * y[0]) / (1 + (y[1448] * y[478] * y[0]))
    r643 = (13.7 * y[1448] * y[754] * y[0]) / (1 + (y[1448] * y[754] * y[0]))
    r647 = (13.7 * y[1450] * y[889] * y[0]) / (1 + (y[1450] * y[889] * y[0]))
    r651 = (13.7 * y[1451] * y[890] * y[0]) / (1 + (y[1451] * y[890] * y[0]))
    r655 = (13.7 * y[1452] * y[464] * y[0]) / (1 + (y[1452] * y[464] * y[0]))
    r657 = (13.7 * y[1454] * y[61] * y[0]) / (1 + (y[1454] * y[61] * y[0]))
    r660 = (13.7 * y[1454] * y[61] * y[0]) / (1 + (y[1454] * y[61] * y[0]))
    r663 = (13.7 * y[1454] * y[61] * y[0]) / (1 + (y[1454] * y[61] * y[0]))
    r671 = (13.7 * y[1458] * y[893] * y[0]) / (1 + (y[1458] * y[893] * y[0]))
    r679 = (13.7 * y[1465] * y[42] * y[0]) / (1 + (y[1465] * y[42] * y[0]))
    r803 = (13.7 * y[1522] * y[61] * y[0]) / (1 + (y[1522] * y[61] * y[0]))
    r805 = (13.7 * y[1522] * y[1] * y[72] * y[61] * y[0]) / (1 + (y[1522] * y[1] * y[72] * y[61] * y[0]))
    r811 = (13.7 * y[1527] * y[61] * y[0]) / (1 + (y[1527] * y[61] * y[0]))
    r813 = (13.7 * y[1527] * y[1] * y[432] * y[61] * y[0]) / (1 + (y[1527] * y[1] * y[432] * y[61] * y[0]))
    r814 = (13.7 * y[1527] * y[841] * y[1] * y[61] * y[0]) / (1 + (y[1527] * y[841] * y[1] * y[61] * y[0]))
    r815 = (13.7 * y[1528] * y[1] * y[639] * y[61] * y[0]) / (1 + (y[1528] * y[1] * y[639] * y[61] * y[0]))
    r816 = (13.7 * y[1528] * y[1] * y[639] * y[61] * y[0]) / (1 + (y[1528] * y[1] * y[639] * y[61] * y[0]))
    r817 = (13.7 * y[1528] * y[1] * y[639] * y[61] * y[0]) / (1 + (y[1528] * y[1] * y[639] * y[61] * y[0]))
    r818 = (13.7 * y[1529] * y[61] * y[0]) / (1 + (y[1529] * y[61] * y[0]))
    r820 = (13.7 * y[1529] * y[1] * y[48] * y[61] * y[0]) / (1 + (y[1529] * y[1] * y[48] * y[61] * y[0]))
    r821 = (13.7 * y[1529] * y[61] * y[0]) / (1 + (y[1529] * y[61] * y[0]))
    r823 = (13.7 * y[1529] * y[1] * y[48] * y[61] * y[0]) / (1 + (y[1529] * y[1] * y[48] * y[61] * y[0]))
    r824 = (13.7 * y[1530] * y[61] * y[0]) / (1 + (y[1530] * y[61] * y[0]))
    r825 = (13.7 * y[1530] * y[1] * y[61] * y[273] * y[0]) / (1 + (y[1530] * y[1] * y[61] * y[273] * y[0]))
    r830 = (13.7 * y[1530] * y[61] * y[0]) / (1 + (y[1530] * y[61] * y[0]))
    r831 = (13.7 * y[1530] * y[1] * y[61] * y[273] * y[0]) / (1 + (y[1530] * y[1] * y[61] * y[273] * y[0]))
    r836 = (13.7 * y[1530] * y[61] * y[0]) / (1 + (y[1530] * y[61] * y[0]))
    r837 = (13.7 * y[1530] * y[1] * y[61] * y[273] * y[0]) / (1 + (y[1530] * y[1] * y[61] * y[273] * y[0]))
    r846 = (13.7 * y[1534] * y[1] * y[0]) / (1 + (y[1534] * y[1] * y[0]))
    r847 = (13.7 * y[1534] * y[1] * y[0]) / (1 + (y[1534] * y[1] * y[0]))
    r848 = (13.7 * y[1534] * y[1] * y[0]) / (1 + (y[1534] * y[1] * y[0]))
    r849 = (13.7 * y[1534] * y[1] * y[0]) / (1 + (y[1534] * y[1] * y[0]))
    r850 = (13.7 * y[1534] * y[1] * y[0]) / (1 + (y[1534] * y[1] * y[0]))
    r851 = (13.7 * y[1534] * y[1] * y[0]) / (1 + (y[1534] * y[1] * y[0]))
    r852 = (13.7 * y[1534] * y[1] * y[0]) / (1 + (y[1534] * y[1] * y[0]))
    r853 = (13.7 * y[1534] * y[1] * y[0]) / (1 + (y[1534] * y[1] * y[0]))
    return (r19 + r38 + r92 + r129 + r130 + r171 + r194 + r250 + r258 + r273 + r282 + r285 + r353 + r355 + r356 + r358 + r482 + r556 + r604 + r606 + r607 + r609 + r610 + r611 + r612 + r614 + r615 + r617 + r618 + r619 + r620 + r621 + r622 + r623 + r624 + r625 + r626 + r627 + r628 + r629 + r630 + r631 + r632 + r633 + r634 + r635 + r636 + r637 + r638 + r639 + r640 + r641 + r646 + r659 + r662 + r665 + r669 + r680 + r802 + r806 + r807) - (r42 + r43 + r93 + r94 + r95 + r96 + r97 + r98 + r99 + r100 + r101 + r102 + r103 + r104 + r105 + r106 + r107 + r108 + r109 + r110 + r111 + r112 + r113 + r114 + r115 + r116 + r117 + r118 + r119 + r120 + r121 + r122 + r123 + r145 + r146 + r170 + r172 + r173 + r174 + r175 + r176 + r193 + r196 + r237 + r238 + r246 + r283 + r494 + r495 + r496 + r497 + r498 + r499 + r500 + r501 + r502 + r503 + r504 + r505 + r507 + r508 + r509 + r510 + r511 + r512 + r513 + r514 + r515 + r516 + r517 + r518 + r519 + r520 + r521 + r522 + r523 + r524 + r525 + r526 + r527 + r528 + r529 + r530 + r531 + r532 + r533 + r534 + r535 + r536 + r537 + r538 + r539 + r540 + r541 + r542 + r543 + r544 + r545 + r546 + r547 + r548 + r549 + r550 + r551 + r552 + r553 + r554 + r555 + r557 + r558 + r559 + r560 + r561 + r562 + r563 + r564 + r565 + r566 + r567 + r568 + r569 + r570 + r571 + r572 + r573 + r575 + r576 + r577 + r578 + r579 + r580 + r581 + r582 + r583 + r584 + r585 + r586 + r587 + r588 + r589 + r608 + r642 + r643 + r647 + r651 + r655 + r657 + r660 + r663 + r671 + r679 + r803 + r805 + r811 + r813 + r814 + r815 + r816 + r817 + r818 + r820 + r821 + r823 + r824 + r825 + r830 + r831 + r836 + r837 + r846 + r847 + r848 + r849 + r850 + r851 + r852 + r853)
 
def C00002(t, y):
    r120 = (13.7 * y[1254] * y[127] * y[322] * y[0]) / (1 + (y[1254] * y[127] * y[322] * y[0]))
    r259 = (13.7 * y[1314] * y[555] * y[12]) / (1 + (y[1314] * y[555] * y[12]))
    r282 = (13.7 * y[1323] * y[8] * y[12] * y[18]) / (1 + (y[1323] * y[8] * y[12] * y[18]))
    r306 = (13.7 * y[1335] * y[437] * y[7]) / (1 + (y[1335] * y[437] * y[7]))
    r308 = (13.7 * y[1335] * y[437] * y[7]) / (1 + (y[1335] * y[437] * y[7]))
    r310 = (13.7 * y[1335] * y[437] * y[7]) / (1 + (y[1335] * y[437] * y[7]))
    r373 = (13.7 * y[1367] * y[1] * y[7]) / (1 + (y[1367] * y[1] * y[7]))
    r806 = (13.7 * y[1523] * y[492] * y[12] * y[7] * y[8]) / (1 + (y[1523] * y[492] * y[12] * y[7] * y[8]))
    r807 = (13.7 * y[1523] * y[492] * y[12] * y[7] * y[8]) / (1 + (y[1523] * y[492] * y[12] * y[7] * y[8]))
    r283 = (13.7 * y[1323] * y[1] * y[696] * y[0]) / (1 + (y[1323] * y[1] * y[696] * y[0]))
    r302 = (13.7 * y[1332] * y[1] * y[430]) / (1 + (y[1332] * y[1] * y[430]))
    r303 = (13.7 * y[1333] * y[1] * y[251]) / (1 + (y[1333] * y[1] * y[251]))
    r304 = (13.7 * y[1334] * y[785] * y[1]) / (1 + (y[1334] * y[785] * y[1]))
    r305 = (13.7 * y[1335] * y[1] * y[117]) / (1 + (y[1335] * y[1] * y[117]))
    r307 = (13.7 * y[1335] * y[1] * y[117]) / (1 + (y[1335] * y[1] * y[117]))
    r309 = (13.7 * y[1335] * y[1] * y[117]) / (1 + (y[1335] * y[1] * y[117]))
    r311 = (13.7 * y[1336] * y[1] * y[30]) / (1 + (y[1336] * y[1] * y[30]))
    r312 = (13.7 * y[1336] * y[1] * y[216]) / (1 + (y[1336] * y[1] * y[216]))
    r313 = (13.7 * y[1336] * y[1] * y[260]) / (1 + (y[1336] * y[1] * y[260]))
    r314 = (13.7 * y[1337] * y[1] * y[209]) / (1 + (y[1337] * y[1] * y[209]))
    r315 = (13.7 * y[1337] * y[1] * y[417]) / (1 + (y[1337] * y[1] * y[417]))
    r316 = (13.7 * y[1337] * y[791] * y[1]) / (1 + (y[1337] * y[791] * y[1]))
    r318 = (13.7 * y[1339] * y[1] * y[2]) / (1 + (y[1339] * y[1] * y[2]))
    r319 = (13.7 * y[1340] * y[1] * y[461]) / (1 + (y[1340] * y[1] * y[461]))
    r320 = (13.7 * y[1341] * y[1] * y[249]) / (1 + (y[1341] * y[1] * y[249]))
    r321 = (13.7 * y[1342] * y[1] * y[112]) / (1 + (y[1342] * y[1] * y[112]))
    r322 = (13.7 * y[1343] * y[1] * y[252]) / (1 + (y[1343] * y[1] * y[252]))
    r323 = (13.7 * y[1344] * y[1] * y[459]) / (1 + (y[1344] * y[1] * y[459]))
    r324 = (13.7 * y[1344] * y[1] * y[455]) / (1 + (y[1344] * y[1] * y[455]))
    r325 = (13.7 * y[1344] * y[1] * y[614]) / (1 + (y[1344] * y[1] * y[614]))
    r326 = (13.7 * y[1345] * y[1] * y[393]) / (1 + (y[1345] * y[1] * y[393]))
    r327 = (13.7 * y[1346] * y[1] * y[256]) / (1 + (y[1346] * y[1] * y[256]))
    r328 = (13.7 * y[1347] * y[1] * y[92]) / (1 + (y[1347] * y[1] * y[92]))
    r329 = (13.7 * y[1347] * y[1] * y[92]) / (1 + (y[1347] * y[1] * y[92]))
    r330 = (13.7 * y[1347] * y[1] * y[536]) / (1 + (y[1347] * y[1] * y[536]))
    r331 = (13.7 * y[1348] * y[1] * y[21] ) / (1 + (y[1348] * y[1] * y[21] ))
    r339 = (13.7 * y[1349] * y[1] * y[407] ) / (1 + (y[1349] * y[1] * y[407] ))
    r340 = (13.7 * y[1349] * y[1] * y[282]) / (1 + (y[1349] * y[1] * y[282]))
    r343 = (13.7 * y[1349] * y[843] * y[1]) / (1 + (y[1349] * y[843] * y[1]))
    r344 = (13.7 * y[1350] * y[1] * y[504]) / (1 + (y[1350] * y[1] * y[504]))
    r345 = (13.7 * y[1350] * y[1] * y[504]) / (1 + (y[1350] * y[1] * y[504]))
    r346 = (13.7 * y[1351] * y[1] * y[633]) / (1 + (y[1351] * y[1] * y[633]))
    r347 = (13.7 * y[1352] * y[1] * y[470]) / (1 + (y[1352] * y[1] * y[470]))
    r348 = (13.7 * y[1353] * y[1] * y[409]) / (1 + (y[1353] * y[1] * y[409]))
    r349 = (13.7 * y[1354] * y[1] * y[423]) / (1 + (y[1354] * y[1] * y[423]))
    r350 = (13.7 * y[1355] * y[1] * y[32]) / (1 + (y[1355] * y[1] * y[32]))
    r351 = (13.7 * y[1355] * y[1] * y[158]) / (1 + (y[1355] * y[1] * y[158]))
    r352 = (13.7 * y[1356] * y[1] * y[24]) / (1 + (y[1356] * y[1] * y[24]))
    r353 = (13.7 * y[1357] * y[1] * y[13] * y[273]) / (1 + (y[1357] * y[1] * y[13] * y[273]))
    r354 = (13.7 * y[1357] * y[1] * y[515]) / (1 + (y[1357] * y[1] * y[515]))
    r356 = (13.7 * y[1357] * y[1] * y[13] * y[273]) / (1 + (y[1357] * y[1] * y[13] * y[273]))
    r357 = (13.7 * y[1357] * y[1] * y[515]) / (1 + (y[1357] * y[1] * y[515]))
    r359 = (13.7 * y[1358] * y[1] * y[192]) / (1 + (y[1358] * y[1] * y[192]))
    r360 = (13.7 * y[1359] * y[1] * y[48]) / (1 + (y[1359] * y[1] * y[48]))
    r361 = (13.7 * y[1360] * y[1] * y[427] ) / (1 + (y[1360] * y[1] * y[427] ))
    r364 = (13.7 * y[1362] * y[1] * y[380]) / (1 + (y[1362] * y[1] * y[380]))
    r365 = (13.7 * y[1363] * y[1] * y[480]) / (1 + (y[1363] * y[1] * y[480]))
    r366 = (13.7 * y[1364] * y[1] * y[102]) / (1 + (y[1364] * y[1] * y[102]))
    r367 = (13.7 * y[1365] * y[1] * y[54]) / (1 + (y[1365] * y[1] * y[54]))
    r368 = (13.7 * y[1365] * y[1] * y[233]) / (1 + (y[1365] * y[1] * y[233]))
    r369 = (13.7 * y[1366] * y[1] * y[19]) / (1 + (y[1366] * y[1] * y[19]))
    r370 = (13.7 * y[1366] * y[1] * y[337]) / (1 + (y[1366] * y[1] * y[337]))
    r372 = (13.7 * y[1367] * y[1] * y[400]) / (1 + (y[1367] * y[1] * y[400]))
    r373 = (13.7 * y[1367] * y[1] * y[7]) / (1 + (y[1367] * y[1] * y[7]))
    r374 = (13.7 * y[1367] * y[782] * y[1]) / (1 + (y[1367] * y[782] * y[1]))
    r375 = (13.7 * y[1367] * y[1] * y[14]) / (1 + (y[1367] * y[1] * y[14]))
    r376 = (13.7 * y[1367] * y[1] * y[34]) / (1 + (y[1367] * y[1] * y[34]))
    r377 = (13.7 * y[1367] * y[1] * y[109]) / (1 + (y[1367] * y[1] * y[109]))
    r378 = (13.7 * y[1367] * y[1] * y[101]) / (1 + (y[1367] * y[1] * y[101]))
    r379 = (13.7 * y[1367] * y[1] * y[201]) / (1 + (y[1367] * y[1] * y[201]))
    r380 = (13.7 * y[1367] * y[1] * y[338]) / (1 + (y[1367] * y[1] * y[338]))
    r381 = (13.7 * y[1367] * y[1] * y[340] ) / (1 + (y[1367] * y[1] * y[340] ))
    r382 = (13.7 * y[1367] * y[1] * y[447]) / (1 + (y[1367] * y[1] * y[447]))
    r383 = (13.7 * y[1367] * y[1] * y[510]) / (1 + (y[1367] * y[1] * y[510]))
    r384 = (13.7 * y[1367] * y[1] * y[508]) / (1 + (y[1367] * y[1] * y[508]))
    r385 = (13.7 * y[1367] * y[908] * y[1]) / (1 + (y[1367] * y[908] * y[1]))
    r386 = (13.7 * y[1367] * y[1] * y[895]) / (1 + (y[1367] * y[1] * y[895]))
    r387 = (13.7 * y[1367] * y[1] * y[897]) / (1 + (y[1367] * y[1] * y[897]))
    r388 = (13.7 * y[1368] * y[1] * y[649]) / (1 + (y[1368] * y[1] * y[649]))
    r389 = (13.7 * y[1368] * y[1] * y[649]) / (1 + (y[1368] * y[1] * y[649]))
    r390 = (13.7 * y[1369] * y[1] * y[139]) / (1 + (y[1369] * y[1] * y[139]))
    r391 = (13.7 * y[1369] * y[1] * y[339]) / (1 + (y[1369] * y[1] * y[339]))
    r392 = (13.7 * y[1369] * y[907] * y[1]) / (1 + (y[1369] * y[907] * y[1]))
    r393 = (13.7 * y[1370] * y[1] * y[341]) / (1 + (y[1370] * y[1] * y[341]))
    r394 = (13.7 * y[1370] * y[1] * y[342]) / (1 + (y[1370] * y[1] * y[342]))
    r395 = (13.7 * y[1371] * y[1] * y[113]) / (1 + (y[1371] * y[1] * y[113]))
    r396 = (13.7 * y[1371] * y[1] * y[113]) / (1 + (y[1371] * y[1] * y[113]))
    r397 = (13.7 * y[1372] * y[1] * y[354]) / (1 + (y[1372] * y[1] * y[354]))
    r398 = (13.7 * y[1373] * y[1] * y[506]) / (1 + (y[1373] * y[1] * y[506]))
    r399 = (13.7 * y[1374] * y[1] * y[43]) / (1 + (y[1374] * y[1] * y[43]))
    r401 = (13.7 * y[1376] * y[1] * y[492]) / (1 + (y[1376] * y[1] * y[492]))
    r402 = (13.7 * y[1376] * y[1] * y[401]) / (1 + (y[1376] * y[1] * y[401]))
    r403 = (13.7 * y[1377] * y[1] * y[58]) / (1 + (y[1377] * y[1] * y[58]))
    r406 = (13.7 * y[1380] * y[1] * y[482]) / (1 + (y[1380] * y[1] * y[482]))
    r409 = (13.7 * y[1382] * y[1] * y[45]) / (1 + (y[1382] * y[1] * y[45]))
    r415 = (13.7 * y[1382] * y[1] * y[45]) / (1 + (y[1382] * y[1] * y[45]))
    r421 = (13.7 * y[1382] * y[1] * y[45]) / (1 + (y[1382] * y[1] * y[45]))
    r427 = (13.7 * y[1382] * y[1] * y[45]) / (1 + (y[1382] * y[1] * y[45]))
    r433 = (13.7 * y[1382] * y[1] * y[45]) / (1 + (y[1382] * y[1] * y[45]))
    r439 = (13.7 * y[1382] * y[1] * y[45]) / (1 + (y[1382] * y[1] * y[45]))
    r481 = (13.7 * y[1385] * y[1]) / (1 + (y[1385] * y[1]))
    r482 = (13.7 * y[1386] * y[183] * y[1] * y[273] * y[77]) / (1 + (y[1386] * y[183] * y[1] * y[273] * y[77]))
    r488 = (13.7 * y[1391] * y[460] * y[811] * y[1]) / (1 + (y[1391] * y[460] * y[811] * y[1]))
    r565 = (13.7 * y[1413] * y[1] * y[524] * y[0]) / (1 + (y[1413] * y[1] * y[524] * y[0]))
    r566 = (13.7 * y[1413] * y[1] * y[524] * y[0]) / (1 + (y[1413] * y[1] * y[524] * y[0]))
    r598 = (13.7 * y[1433] * y[1] * y[483]) / (1 + (y[1433] * y[1] * y[483]))
    r724 = (13.7 * y[1484] * y[1] * y[79] * y[1540]) / (1 + (y[1484] * y[1] * y[79] * y[1540]))
    r725 = (13.7 * y[1485] * y[1] * y[70] * y[1542]) / (1 + (y[1485] * y[1] * y[70] * y[1542]))
    r726 = (13.7 * y[1485] * y[1] * y[696] * y[1542]) / (1 + (y[1485] * y[1] * y[696] * y[1542]))
    r727 = (13.7 * y[1486] * y[1] * y[62] * y[1544]) / (1 + (y[1486] * y[1] * y[62] * y[1544]))
    r728 = (13.7 * y[1486] * y[1] * y[62] * y[1546]) / (1 + (y[1486] * y[1] * y[62] * y[1546]))
    r729 = (13.7 * y[1487] * y[519] * y[48] * y[1]) / (1 + (y[1487] * y[519] * y[48] * y[1]))
    r730 = (13.7 * y[1488] * y[1] * y[129] * y[1548]) / (1 + (y[1488] * y[1] * y[129] * y[1548]))
    r731 = (13.7 * y[1488] * y[1] * y[129] * y[1550]) / (1 + (y[1488] * y[1] * y[129] * y[1550]))
    r732 = (13.7 * y[1488] * y[1] * y[129] * y[1552]) / (1 + (y[1488] * y[1] * y[129] * y[1552]))
    r733 = (13.7 * y[1488] * y[1] * y[129] * y[1554]) / (1 + (y[1488] * y[1] * y[129] * y[1554]))
    r734 = (13.7 * y[1488] * y[1] * y[129] * y[1556]) / (1 + (y[1488] * y[1] * y[129] * y[1556]))
    r735 = (13.7 * y[1488] * y[1] * y[129] * y[1558]) / (1 + (y[1488] * y[1] * y[129] * y[1558]))
    r736 = (13.7 * y[1488] * y[1] * y[129] * y[1560]) / (1 + (y[1488] * y[1] * y[129] * y[1560]))
    r737 = (13.7 * y[1488] * y[1] * y[129] * y[1562]) / (1 + (y[1488] * y[1] * y[129] * y[1562]))
    r738 = (13.7 * y[1488] * y[1] * y[129] * y[1548]) / (1 + (y[1488] * y[1] * y[129] * y[1548]))
    r739 = (13.7 * y[1488] * y[1] * y[129] * y[1550]) / (1 + (y[1488] * y[1] * y[129] * y[1550]))
    r740 = (13.7 * y[1488] * y[1] * y[129] * y[1552]) / (1 + (y[1488] * y[1] * y[129] * y[1552]))
    r741 = (13.7 * y[1488] * y[1] * y[129] * y[1554]) / (1 + (y[1488] * y[1] * y[129] * y[1554]))
    r742 = (13.7 * y[1488] * y[1] * y[129] * y[1556]) / (1 + (y[1488] * y[1] * y[129] * y[1556]))
    r743 = (13.7 * y[1488] * y[1] * y[129] * y[1558]) / (1 + (y[1488] * y[1] * y[129] * y[1558]))
    r744 = (13.7 * y[1488] * y[1] * y[129] * y[1560]) / (1 + (y[1488] * y[1] * y[129] * y[1560]))
    r745 = (13.7 * y[1488] * y[1] * y[129] * y[1562]) / (1 + (y[1488] * y[1] * y[129] * y[1562]))
    r746 = (13.7 * y[1489] * y[1] * y[36] * y[1564]) / (1 + (y[1489] * y[1] * y[36] * y[1564]))
    r747 = (13.7 * y[1489] * y[1] * y[36] * y[1564]) / (1 + (y[1489] * y[1] * y[36] * y[1564]))
    r748 = (13.7 * y[1490] * y[1] * y[143] * y[1566]) / (1 + (y[1490] * y[1] * y[143] * y[1566]))
    r749 = (13.7 * y[1491] * y[1] * y[94] * y[1568]) / (1 + (y[1491] * y[1] * y[94] * y[1568]))
    r750 = (13.7 * y[1492] * y[520] * y[24] * y[1]) / (1 + (y[1492] * y[520] * y[24] * y[1]))
    r751 = (13.7 * y[1493] * y[1] * y[59] * y[1570]) / (1 + (y[1493] * y[1] * y[59] * y[1570]))
    r752 = (13.7 * y[1494] * y[1] * y[75] * y[1572]) / (1 + (y[1494] * y[1] * y[75] * y[1572]))
    r753 = (13.7 * y[1495] * y[1] * y[76] * y[1574]) / (1 + (y[1495] * y[1] * y[76] * y[1574]))
    r754 = (13.7 * y[1495] * y[1] * y[76] * y[1574]) / (1 + (y[1495] * y[1] * y[76] * y[1574]))
    r755 = (13.7 * y[1496] * y[1] * y[131] * y[1576]) / (1 + (y[1496] * y[1] * y[131] * y[1576]))
    r756 = (13.7 * y[1497] * y[1] * y[119] * y[1578]) / (1 + (y[1497] * y[1] * y[119] * y[1578]))
    r757 = (13.7 * y[1498] * y[1] * y[183] * y[1580]) / (1 + (y[1498] * y[1] * y[183] * y[1580]))
    r758 = (13.7 * y[1499] * y[1] * y[119] * y[1578]) / (1 + (y[1499] * y[1] * y[119] * y[1578]))
    r759 = (13.7 * y[1500] * y[1] * y[383] * y[1583]) / (1 + (y[1500] * y[1] * y[383] * y[1583]))
    r760 = (13.7 * y[1501] * y[1] * y[46] * y[1585]) / (1 + (y[1501] * y[1] * y[46] * y[1585]))
    r761 = (13.7 * y[1502] * y[1] * y[40] * y[1587]) / (1 + (y[1502] * y[1] * y[40] * y[1587]))
    r762 = (13.7 * y[1503] * y[1] * y[178] * y[1589]) / (1 + (y[1503] * y[1] * y[178] * y[1589]))
    r763 = (13.7 * y[1504] * y[1] * y[554] * y[9]) / (1 + (y[1504] * y[1] * y[554] * y[9]))
    r764 = (13.7 * y[1505] * y[1] * y[48] * y[13]) / (1 + (y[1505] * y[1] * y[48] * y[13]))
    r765 = (13.7 * y[1506] * y[1] * y[822] * y[821]) / (1 + (y[1506] * y[1] * y[822] * y[821]))
    r766 = (13.7 * y[1507] * y[1] * y[822] * y[821]) / (1 + (y[1507] * y[1] * y[822] * y[821]))
    r767 = (13.7 * y[1507] * y[1] * y[822] * y[1591]) / (1 + (y[1507] * y[1] * y[822] * y[1591]))
    r768 = (13.7 * y[1507] * y[1] * y[822] * y[1592]) / (1 + (y[1507] * y[1] * y[822] * y[1592]))
    r769 = (13.7 * y[1507] * y[1] * y[822]) / (1 + (y[1507] * y[1] * y[822]))
    r771 = (13.7 * y[1507] * y[1] * y[764] * y[1592]) / (1 + (y[1507] * y[1] * y[764] * y[1592]))
    r772 = (13.7 * y[1507] * y[1] * y[822] * y[821]) / (1 + (y[1507] * y[1] * y[822] * y[821]))
    r773 = (13.7 * y[1507] * y[1] * y[822] * y[1591]) / (1 + (y[1507] * y[1] * y[822] * y[1591]))
    r774 = (13.7 * y[1507] * y[1] * y[822] * y[1592]) / (1 + (y[1507] * y[1] * y[822] * y[1592]))
    r775 = (13.7 * y[1507] * y[1] * y[822]) / (1 + (y[1507] * y[1] * y[822]))
    r777 = (13.7 * y[1507] * y[1] * y[764] * y[1592]) / (1 + (y[1507] * y[1] * y[764] * y[1592]))
    r778 = (13.7 * y[1507] * y[1] * y[822] * y[821]) / (1 + (y[1507] * y[1] * y[822] * y[821]))
    r779 = (13.7 * y[1507] * y[1] * y[822] * y[1591]) / (1 + (y[1507] * y[1] * y[822] * y[1591]))
    r780 = (13.7 * y[1507] * y[1] * y[822] * y[1592]) / (1 + (y[1507] * y[1] * y[822] * y[1592]))
    r781 = (13.7 * y[1507] * y[1] * y[822]) / (1 + (y[1507] * y[1] * y[822]))
    r783 = (13.7 * y[1507] * y[1] * y[764] * y[1592]) / (1 + (y[1507] * y[1] * y[764] * y[1592]))
    r784 = (13.7 * y[1508] * y[1] * y[457] * y[13]) / (1 + (y[1508] * y[1] * y[457] * y[13]))
    r785 = (13.7 * y[1509] * y[1] * y[740] * y[1593]) / (1 + (y[1509] * y[1] * y[740] * y[1593]))
    r786 = (13.7 * y[1509] * y[1] * y[673] * y[1593]) / (1 + (y[1509] * y[1] * y[673] * y[1593]))
    r787 = (13.7 * y[1510] * y[1] * y[444] * y[439]) / (1 + (y[1510] * y[1] * y[444] * y[439]))
    r788 = (13.7 * y[1512] * y[1] * y[665] * y[48]) / (1 + (y[1512] * y[1] * y[665] * y[48]))
    r789 = (13.7 * y[1513] * y[1] * y[474] * y[40]) / (1 + (y[1513] * y[1] * y[474] * y[40]))
    r790 = (13.7 * y[1514] * y[1] * y[494] * y[212]) / (1 + (y[1514] * y[1] * y[494] * y[212]))
    r791 = (13.7 * y[1515] * y[1] * y[656]) / (1 + (y[1515] * y[1] * y[656]))
    r792 = (13.7 * y[1516] * y[1] * y[588] * y[77]) / (1 + (y[1516] * y[1] * y[588] * y[77]))
    r793 = (13.7 * y[1517] * y[1] * y[572] * y[36]) / (1 + (y[1517] * y[1] * y[572] * y[36]))
    r794 = (13.7 * y[1518] * y[1] * y[763] * y[273]) / (1 + (y[1518] * y[1] * y[763] * y[273]))
    r795 = (13.7 * y[1519] * y[1] * y[116] * y[1594]) / (1 + (y[1519] * y[1] * y[116] * y[1594]))
    r796 = (13.7 * y[1519] * y[1] * y[1596]) / (1 + (y[1519] * y[1] * y[1596]))
    r798 = (13.7 * y[1519] * y[1] * y[116] * y[1594]) / (1 + (y[1519] * y[1] * y[116] * y[1594]))
    r799 = (13.7 * y[1519] * y[1] * y[116]) / (1 + (y[1519] * y[1] * y[116]))
    r801 = (13.7 * y[1520] * y[1] * y[585] * y[273]) / (1 + (y[1520] * y[1] * y[585] * y[273]))
    r802 = (13.7 * y[1521] * y[860] * y[46] * y[1]) / (1 + (y[1521] * y[860] * y[46] * y[1]))
    r804 = (13.7 * y[1522] * y[1] * y[72] * y[13]) / (1 + (y[1522] * y[1] * y[72] * y[13]))
    r805 = (13.7 * y[1522] * y[1] * y[72] * y[61] * y[0]) / (1 + (y[1522] * y[1] * y[72] * y[61] * y[0]))
    r808 = (13.7 * y[1524] * y[98] * y[55] * y[1]) / (1 + (y[1524] * y[98] * y[55] * y[1]))
    r810 = (13.7 * y[1526] * y[1] * y[308] * y[48]) / (1 + (y[1526] * y[1] * y[308] * y[48]))
    r812 = (13.7 * y[1527] * y[1] * y[432] * y[13]) / (1 + (y[1527] * y[1] * y[432] * y[13]))
    r813 = (13.7 * y[1527] * y[1] * y[432] * y[61] * y[0]) / (1 + (y[1527] * y[1] * y[432] * y[61] * y[0]))
    r814 = (13.7 * y[1527] * y[841] * y[1] * y[61] * y[0]) / (1 + (y[1527] * y[841] * y[1] * y[61] * y[0]))
    r815 = (13.7 * y[1528] * y[1] * y[639] * y[61] * y[0]) / (1 + (y[1528] * y[1] * y[639] * y[61] * y[0]))
    r816 = (13.7 * y[1528] * y[1] * y[639] * y[61] * y[0]) / (1 + (y[1528] * y[1] * y[639] * y[61] * y[0]))
    r817 = (13.7 * y[1528] * y[1] * y[639] * y[61] * y[0]) / (1 + (y[1528] * y[1] * y[639] * y[61] * y[0]))
    r819 = (13.7 * y[1529] * y[1] * y[48] * y[13]) / (1 + (y[1529] * y[1] * y[48] * y[13]))
    r820 = (13.7 * y[1529] * y[1] * y[48] * y[61] * y[0]) / (1 + (y[1529] * y[1] * y[48] * y[61] * y[0]))
    r822 = (13.7 * y[1529] * y[1] * y[48] * y[13]) / (1 + (y[1529] * y[1] * y[48] * y[13]))
    r823 = (13.7 * y[1529] * y[1] * y[48] * y[61] * y[0]) / (1 + (y[1529] * y[1] * y[48] * y[61] * y[0]))
    r825 = (13.7 * y[1530] * y[1] * y[61] * y[273] * y[0]) / (1 + (y[1530] * y[1] * y[61] * y[273] * y[0]))
    r826 = (13.7 * y[1530] * y[1] * y[515]) / (1 + (y[1530] * y[1] * y[515]))
    r827 = (13.7 * y[1530] * y[1] * y[273]) / (1 + (y[1530] * y[1] * y[273]))
    r829 = (13.7 * y[1530] * y[1] * y[273] * y[13]) / (1 + (y[1530] * y[1] * y[273] * y[13]))
    r831 = (13.7 * y[1530] * y[1] * y[61] * y[273] * y[0]) / (1 + (y[1530] * y[1] * y[61] * y[273] * y[0]))
    r832 = (13.7 * y[1530] * y[1] * y[515]) / (1 + (y[1530] * y[1] * y[515]))
    r833 = (13.7 * y[1530] * y[1] * y[273]) / (1 + (y[1530] * y[1] * y[273]))
    r835 = (13.7 * y[1530] * y[1] * y[273] * y[13]) / (1 + (y[1530] * y[1] * y[273] * y[13]))
    r837 = (13.7 * y[1530] * y[1] * y[61] * y[273] * y[0]) / (1 + (y[1530] * y[1] * y[61] * y[273] * y[0]))
    r838 = (13.7 * y[1530] * y[1] * y[515]) / (1 + (y[1530] * y[1] * y[515]))
    r839 = (13.7 * y[1530] * y[1] * y[273]) / (1 + (y[1530] * y[1] * y[273]))
    r841 = (13.7 * y[1530] * y[1] * y[273] * y[13]) / (1 + (y[1530] * y[1] * y[273] * y[13]))
    r842 = (13.7 * y[1531] * y[1] * y[23] * y[273]) / (1 + (y[1531] * y[1] * y[23] * y[273]))
    r843 = (13.7 * y[1532] * y[1] * y[23] * y[273]) / (1 + (y[1532] * y[1] * y[23] * y[273]))
    r844 = (13.7 * y[1532] * y[1] * y[23] * y[273]) / (1 + (y[1532] * y[1] * y[23] * y[273]))
    r846 = (13.7 * y[1534] * y[1] * y[0]) / (1 + (y[1534] * y[1] * y[0]))
    r847 = (13.7 * y[1534] * y[1] * y[0]) / (1 + (y[1534] * y[1] * y[0]))
    r848 = (13.7 * y[1534] * y[1] * y[0]) / (1 + (y[1534] * y[1] * y[0]))
    r849 = (13.7 * y[1534] * y[1] * y[0]) / (1 + (y[1534] * y[1] * y[0]))
    r850 = (13.7 * y[1534] * y[1] * y[0]) / (1 + (y[1534] * y[1] * y[0]))
    r851 = (13.7 * y[1534] * y[1] * y[0]) / (1 + (y[1534] * y[1] * y[0]))
    r852 = (13.7 * y[1534] * y[1] * y[0]) / (1 + (y[1534] * y[1] * y[0]))
    r853 = (13.7 * y[1534] * y[1] * y[0]) / (1 + (y[1534] * y[1] * y[0]))
    return (r120 + r259 + r282 + r306 + r308 + r310 + r373 + r806 + r807) - (r283 + r302 + r303 + r304 + r305 + r307 + r309 + r311 + r312 + r313 + r314 + r315 + r316 + r318 + r319 + r320 + r321 + r322 + r323 + r324 + r325 + r326 + r327 + r328 + r329 + r330 + r331 + r339 + r340 + r343 + r344 + r345 + r346 + r347 + r348 + r349 + r350 + r351 + r352 + r353 + r354 + r356 + r357 + r359 + r360 + r361 + r364 + r365 + r366 + r367 + r368 + r369 + r370 + r372 + r373 + r374 + r375 + r376 + r377 + r378 + r379 + r380 + r381 + r382 + r383 + r384 + r385 + r386 + r387 + r388 + r389 + r390 + r391 + r392 + r393 + r394 + r395 + r396 + r397 + r398 + r399 + r401 + r402 + r403 + r406 + r409 + r415 + r421 + r427 + r433 + r439 + r481 + r482 + r488 + r565 + r566 + r598 + r724 + r725 + r726 + r727 + r728 + r729 + r730 + r731 + r732 + r733 + r734 + r735 + r736 + r737 + r738 + r739 + r740 + r741 + r742 + r743 + r744 + r745 + r746 + r747 + r748 + r749 + r750 + r751 + r752 + r753 + r754 + r755 + r756 + r757 + r758 + r759 + r760 + r761 + r762 + r763 + r764 + r765 + r766 + r767 + r768 + r769 + r771 + r772 + r773 + r774 + r775 + r777 + r778 + r779 + r780 + r781 + r783 + r784 + r785 + r786 + r787 + r788 + r789 + r790 + r791 + r792 + r793 + r794 + r795 + r796 + r798 + r799 + r801 + r802 + r804 + r805 + r808 + r810 + r812 + r813 + r814 + r815 + r816 + r817 + r819 + r820 + r822 + r823 + r825 + r826 + r827 + r829 + r831 + r832 + r833 + r835 + r837 + r838 + r839 + r841 + r842 + r843 + r844 + r846 + r847 + r848 + r849 + r850 + r851 + r852 + r853)
 
def C00003(t, y):
    r11 = (13.7 * y[1233] * y[776] * y[3] * y[77]) / (1 + (y[1233] * y[776] * y[3] * y[77]))
    r15 = (13.7 * y[1233] * y[823] * y[3] * y[77]) / (1 + (y[1233] * y[823] * y[3] * y[77]))
    r19 = (13.7 * y[1233] * y[771] * y[3] * y[77]) / (1 + (y[1233] * y[771] * y[3] * y[77]))
    r30 = (13.7 * y[1233] * y[776] * y[3] * y[77]) / (1 + (y[1233] * y[776] * y[3] * y[77]))
    r34 = (13.7 * y[1233] * y[823] * y[3] * y[77]) / (1 + (y[1233] * y[823] * y[3] * y[77]))
    r38 = (13.7 * y[1233] * y[771] * y[3] * y[77]) / (1 + (y[1233] * y[771] * y[3] * y[77]))
    r53 = (13.7 * y[1241] * y[448] * y[3] * y[77]) / (1 + (y[1241] * y[448] * y[3] * y[77]))
    r82 = (13.7 * y[1247] * y[106] * y[10] * y[3] * y[77]) / (1 + (y[1247] * y[106] * y[10] * y[3] * y[77]))
    r89 = (13.7 * y[1249] * y[393] * y[9] * y[2]) / (1 + (y[1249] * y[393] * y[9] * y[2]))
    r92 = (13.7 * y[1251] * y[3] * y[802] * y[77]) / (1 + (y[1251] * y[3] * y[802] * y[77]))
    r141 = (13.7 * y[1262] * y[818] * y[3] * y[77]) / (1 + (y[1262] * y[818] * y[3] * y[77]))
    r158 = (13.7 * y[1267] * y[3] * y[77] * y[1536]) / (1 + (y[1267] * y[3] * y[77] * y[1536]))
    r159 = (13.7 * y[1267] * y[454] * y[77] * y[3]) / (1 + (y[1267] * y[454] * y[77] * y[3]))
    r160 = (13.7 * y[1267] * y[518] * y[3] * y[77]) / (1 + (y[1267] * y[518] * y[3] * y[77]))
    r161 = (13.7 * y[1267] * y[529] * y[3] * y[77]) / (1 + (y[1267] * y[529] * y[3] * y[77]))
    r402 = (13.7 * y[1376] * y[1] * y[401]) / (1 + (y[1376] * y[1] * y[401]))
    r784 = (13.7 * y[1508] * y[1] * y[457] * y[13]) / (1 + (y[1508] * y[1] * y[457] * y[13]))
    r1 = (13.7 * y[1233] * y[221] * y[2] ) / (1 + (y[1233] * y[221] * y[2] ))
    r2 = (13.7 * y[1233] * y[405] * y[2] ) / (1 + (y[1233] * y[405] * y[2] ))
    r3 = (13.7 * y[1233] * y[406] * y[2]) / (1 + (y[1233] * y[406] * y[2]))
    r4 = (13.7 * y[1233] * y[449] * y[2]) / (1 + (y[1233] * y[449] * y[2]))
    r5 = (13.7 * y[1233] * y[704] * y[2]) / (1 + (y[1233] * y[704] * y[2]))
    r6 = (13.7 * y[1233] * y[708] * y[2]) / (1 + (y[1233] * y[708] * y[2]))
    r7 = (13.7 * y[1233] * y[765] * y[2]) / (1 + (y[1233] * y[765] * y[2]))
    r8 = (13.7 * y[1233] * y[766] * y[2]) / (1 + (y[1233] * y[766] * y[2]))
    r9 = (13.7 * y[1233] * y[797] * y[2]) / (1 + (y[1233] * y[797] * y[2]))
    r10 = (13.7 * y[1233] * y[560] * y[2]) / (1 + (y[1233] * y[560] * y[2]))
    r12 = (13.7 * y[1233] * y[834] * y[2]) / (1 + (y[1233] * y[834] * y[2]))
    r13 = (13.7 * y[1233] * y[111] * y[2]) / (1 + (y[1233] * y[111] * y[2]))
    r16 = (13.7 * y[1233] * y[516] * y[2]) / (1 + (y[1233] * y[516] * y[2]))
    r17 = (13.7 * y[1233] * y[836] * y[2]) / (1 + (y[1233] * y[836] * y[2]))
    r18 = (13.7 * y[1233] * y[393] * y[2]) / (1 + (y[1233] * y[393] * y[2]))
    r20 = (13.7 * y[1233] * y[221] * y[2]) / (1 + (y[1233] * y[221] * y[2]))
    r21 = (13.7 * y[1233] * y[405] * y[2] ) / (1 + (y[1233] * y[405] * y[2] ))
    r22 = (13.7 * y[1233] * y[406] * y[2]) / (1 + (y[1233] * y[406] * y[2]))
    r23 = (13.7 * y[1233] * y[449] * y[2]) / (1 + (y[1233] * y[449] * y[2]))
    r24 = (13.7 * y[1233] * y[704] * y[2]) / (1 + (y[1233] * y[704] * y[2]))
    r25 = (13.7 * y[1233] * y[708] * y[2]) / (1 + (y[1233] * y[708] * y[2]))
    r26 = (13.7 * y[1233] * y[765] * y[2]) / (1 + (y[1233] * y[765] * y[2]))
    r27 = (13.7 * y[1233] * y[766] * y[2]) / (1 + (y[1233] * y[766] * y[2]))
    r28 = (13.7 * y[1233] * y[797] * y[2]) / (1 + (y[1233] * y[797] * y[2]))
    r29 = (13.7 * y[1233] * y[560] * y[2]) / (1 + (y[1233] * y[560] * y[2]))
    r31 = (13.7 * y[1233] * y[834] * y[2]) / (1 + (y[1233] * y[834] * y[2]))
    r32 = (13.7 * y[1233] * y[111] * y[2]) / (1 + (y[1233] * y[111] * y[2]))
    r35 = (13.7 * y[1233] * y[516] * y[2]) / (1 + (y[1233] * y[516] * y[2]))
    r36 = (13.7 * y[1233] * y[836] * y[2]) / (1 + (y[1233] * y[836] * y[2]))
    r37 = (13.7 * y[1233] * y[393] * y[2]) / (1 + (y[1233] * y[393] * y[2]))
    r42 = (13.7 * y[1237] * y[458] * y[2] * y[0] ) / (1 + (y[1237] * y[458] * y[2] * y[0] ))
    r43 = (13.7 * y[1237] * y[525] * y[0] * y[2]) / (1 + (y[1237] * y[525] * y[0] * y[2]))
    r44 = (13.7 * y[1237] * y[458] * y[2] ) / (1 + (y[1237] * y[458] * y[2] ))
    r45 = (13.7 * y[1238] * y[181] * y[2]) / (1 + (y[1238] * y[181] * y[2]))
    r46 = (13.7 * y[1238] * y[747] * y[2] ) / (1 + (y[1238] * y[747] * y[2] ))
    r47 = (13.7 * y[1238] * y[737] * y[2]) / (1 + (y[1238] * y[737] * y[2]))
    r48 = (13.7 * y[1239] * y[250] * y[2]) / (1 + (y[1239] * y[250] * y[2]))
    r49 = (13.7 * y[1240] * y[256] * y[2]) / (1 + (y[1240] * y[256] * y[2]))
    r51 = (13.7 * y[1240] * y[256] * y[2]) / (1 + (y[1240] * y[256] * y[2]))
    r54 = (13.7 * y[1242] * y[429] * y[2]) / (1 + (y[1242] * y[429] * y[2]))
    r55 = (13.7 * y[1242] * y[484] * y[2]) / (1 + (y[1242] * y[484] * y[2]))
    r56 = (13.7 * y[1242] * y[641] * y[2] ) / (1 + (y[1242] * y[641] * y[2] ))
    r57 = (13.7 * y[1242] * y[684] * y[2]) / (1 + (y[1242] * y[684] * y[2]))
    r58 = (13.7 * y[1242] * y[686] * y[2]) / (1 + (y[1242] * y[686] * y[2]))
    r59 = (13.7 * y[1242] * y[688] * y[2]) / (1 + (y[1242] * y[688] * y[2]))
    r60 = (13.7 * y[1242] * y[690] * y[2]) / (1 + (y[1242] * y[690] * y[2]))
    r61 = (13.7 * y[1242] * y[692] * y[2]) / (1 + (y[1242] * y[692] * y[2]))
    r62 = (13.7 * y[1242] * y[694] * y[2]) / (1 + (y[1242] * y[694] * y[2]))
    r63 = (13.7 * y[1242] * y[800] * y[2]) / (1 + (y[1242] * y[800] * y[2]))
    r64 = (13.7 * y[1242] * y[824] * y[2]) / (1 + (y[1242] * y[824] * y[2]))
    r65 = (13.7 * y[1242] * y[826] * y[2]) / (1 + (y[1242] * y[826] * y[2]))
    r66 = (13.7 * y[1242] * y[828] * y[2]) / (1 + (y[1242] * y[828] * y[2]))
    r67 = (13.7 * y[1242] * y[769] * y[2]) / (1 + (y[1242] * y[769] * y[2]))
    r68 = (13.7 * y[1242] * y[831] * y[2]) / (1 + (y[1242] * y[831] * y[2]))
    r70 = (13.7 * y[1244] * y[216] * y[2]) / (1 + (y[1244] * y[216] * y[2]))
    r72 = (13.7 * y[1244] * y[216] * y[2]) / (1 + (y[1244] * y[216] * y[2]))
    r76 = (13.7 * y[1246] * y[112] * y[2]) / (1 + (y[1246] * y[112] * y[2]))
    r77 = (13.7 * y[1246] * y[394] * y[2]) / (1 + (y[1246] * y[394] * y[2]))
    r78 = (13.7 * y[1246] * y[422] * y[2]) / (1 + (y[1246] * y[422] * y[2]))
    r80 = (13.7 * y[1247] * y[642] * y[2]) / (1 + (y[1247] * y[642] * y[2]))
    r81 = (13.7 * y[1247] * y[642] * y[2]) / (1 + (y[1247] * y[642] * y[2]))
    r89 = (13.7 * y[1249] * y[393] * y[9] * y[2]) / (1 + (y[1249] * y[393] * y[9] * y[2]))
    r90 = (13.7 * y[1250] * y[90] * y[2] ) / (1 + (y[1250] * y[90] * y[2] ))
    r93 = (13.7 * y[1252] * y[611] * y[2] * y[0]) / (1 + (y[1252] * y[611] * y[2] * y[0]))
    r124 = (13.7 * y[1255] * y[81] * y[9] * y[2]) / (1 + (y[1255] * y[81] * y[9] * y[2]))
    r125 = (13.7 * y[1255] * y[511] * y[9] * y[2]) / (1 + (y[1255] * y[511] * y[9] * y[2]))
    r131 = (13.7 * y[1260] * y[248] * y[2]) / (1 + (y[1260] * y[248] * y[2]))
    r132 = (13.7 * y[1261] * y[316] * y[2]) / (1 + (y[1261] * y[316] * y[2]))
    r133 = (13.7 * y[1262] * y[168] * y[2]) / (1 + (y[1262] * y[168] * y[2]))
    r134 = (13.7 * y[1262] * y[714] * y[2]) / (1 + (y[1262] * y[714] * y[2]))
    r135 = (13.7 * y[1262] * y[682] * y[2]) / (1 + (y[1262] * y[682] * y[2]))
    r136 = (13.7 * y[1262] * y[718] * y[2]) / (1 + (y[1262] * y[718] * y[2]))
    r137 = (13.7 * y[1262] * y[721] * y[2]) / (1 + (y[1262] * y[721] * y[2]))
    r138 = (13.7 * y[1262] * y[724] * y[2]) / (1 + (y[1262] * y[724] * y[2]))
    r139 = (13.7 * y[1262] * y[730] * y[2]) / (1 + (y[1262] * y[730] * y[2]))
    r140 = (13.7 * y[1262] * y[733] * y[2] ) / (1 + (y[1262] * y[733] * y[2] ))
    r143 = (13.7 * y[1263] * y[474] * y[2]) / (1 + (y[1263] * y[474] * y[2]))
    r147 = (13.7 * y[1265] * y[143] * y[2]) / (1 + (y[1265] * y[143] * y[2]))
    r149 = (13.7 * y[1265] * y[485] * y[2]) / (1 + (y[1265] * y[485] * y[2]))
    r152 = (13.7 * y[1266] * y[98] * y[2]) / (1 + (y[1266] * y[98] * y[2]))
    r153 = (13.7 * y[1266] * y[98] * y[2]) / (1 + (y[1266] * y[98] * y[2]))
    r155 = (13.7 * y[1266] * y[391] * y[2]) / (1 + (y[1266] * y[391] * y[2]))
    r164 = (13.7 * y[1269] * y[849] * y[2] ) / (1 + (y[1269] * y[849] * y[2] ))
    r165 = (13.7 * y[1269] * y[563] * y[2]) / (1 + (y[1269] * y[563] * y[2]))
    r166 = (13.7 * y[1269] * y[815] * y[2]) / (1 + (y[1269] * y[815] * y[2]))
    r167 = (13.7 * y[1269] * y[421] * y[2]) / (1 + (y[1269] * y[421] * y[2]))
    r237 = (13.7 * y[1303] * y[2] * y[884] * y[0]) / (1 + (y[1303] * y[2] * y[884] * y[0]))
    r238 = (13.7 * y[1303] * y[2] * y[527] * y[0]) / (1 + (y[1303] * y[2] * y[527] * y[0]))
    r318 = (13.7 * y[1339] * y[1] * y[2]) / (1 + (y[1339] * y[1] * y[2]))
    r845 = (13.7 * y[1533] * y[2] * y[38] * y[1597]) / (1 + (y[1533] * y[2] * y[38] * y[1597]))
    return (r11 + r15 + r19 + r30 + r34 + r38 + r53 + r82 + r89 + r92 + r141 + r158 + r159 + r160 + r161 + r402 + r784) - (r1 + r2 + r3 + r4 + r5 + r6 + r7 + r8 + r9 + r10 + r12 + r13 + r16 + r17 + r18 + r20 + r21 + r22 + r23 + r24 + r25 + r26 + r27 + r28 + r29 + r31 + r32 + r35 + r36 + r37 + r42 + r43 + r44 + r45 + r46 + r47 + r48 + r49 + r51 + r54 + r55 + r56 + r57 + r58 + r59 + r60 + r61 + r62 + r63 + r64 + r65 + r66 + r67 + r68 + r70 + r72 + r76 + r77 + r78 + r80 + r81 + r89 + r90 + r93 + r124 + r125 + r131 + r132 + r133 + r134 + r135 + r136 + r137 + r138 + r139 + r140 + r143 + r147 + r149 + r152 + r153 + r155 + r164 + r165 + r166 + r167 + r237 + r238 + r318 + r845)
 
def C00004(t, y):
    r1 = (13.7 * y[1233] * y[221] * y[2] ) / (1 + (y[1233] * y[221] * y[2] ))
    r2 = (13.7 * y[1233] * y[405] * y[2] ) / (1 + (y[1233] * y[405] * y[2] ))
    r3 = (13.7 * y[1233] * y[406] * y[2]) / (1 + (y[1233] * y[406] * y[2]))
    r4 = (13.7 * y[1233] * y[449] * y[2]) / (1 + (y[1233] * y[449] * y[2]))
    r5 = (13.7 * y[1233] * y[704] * y[2]) / (1 + (y[1233] * y[704] * y[2]))
    r6 = (13.7 * y[1233] * y[708] * y[2]) / (1 + (y[1233] * y[708] * y[2]))
    r7 = (13.7 * y[1233] * y[765] * y[2]) / (1 + (y[1233] * y[765] * y[2]))
    r8 = (13.7 * y[1233] * y[766] * y[2]) / (1 + (y[1233] * y[766] * y[2]))
    r9 = (13.7 * y[1233] * y[797] * y[2]) / (1 + (y[1233] * y[797] * y[2]))
    r10 = (13.7 * y[1233] * y[560] * y[2]) / (1 + (y[1233] * y[560] * y[2]))
    r12 = (13.7 * y[1233] * y[834] * y[2]) / (1 + (y[1233] * y[834] * y[2]))
    r13 = (13.7 * y[1233] * y[111] * y[2]) / (1 + (y[1233] * y[111] * y[2]))
    r16 = (13.7 * y[1233] * y[516] * y[2]) / (1 + (y[1233] * y[516] * y[2]))
    r17 = (13.7 * y[1233] * y[836] * y[2]) / (1 + (y[1233] * y[836] * y[2]))
    r18 = (13.7 * y[1233] * y[393] * y[2]) / (1 + (y[1233] * y[393] * y[2]))
    r20 = (13.7 * y[1233] * y[221] * y[2]) / (1 + (y[1233] * y[221] * y[2]))
    r21 = (13.7 * y[1233] * y[405] * y[2] ) / (1 + (y[1233] * y[405] * y[2] ))
    r22 = (13.7 * y[1233] * y[406] * y[2]) / (1 + (y[1233] * y[406] * y[2]))
    r23 = (13.7 * y[1233] * y[449] * y[2]) / (1 + (y[1233] * y[449] * y[2]))
    r24 = (13.7 * y[1233] * y[704] * y[2]) / (1 + (y[1233] * y[704] * y[2]))
    r25 = (13.7 * y[1233] * y[708] * y[2]) / (1 + (y[1233] * y[708] * y[2]))
    r26 = (13.7 * y[1233] * y[765] * y[2]) / (1 + (y[1233] * y[765] * y[2]))
    r27 = (13.7 * y[1233] * y[766] * y[2]) / (1 + (y[1233] * y[766] * y[2]))
    r28 = (13.7 * y[1233] * y[797] * y[2]) / (1 + (y[1233] * y[797] * y[2]))
    r29 = (13.7 * y[1233] * y[560] * y[2]) / (1 + (y[1233] * y[560] * y[2]))
    r31 = (13.7 * y[1233] * y[834] * y[2]) / (1 + (y[1233] * y[834] * y[2]))
    r32 = (13.7 * y[1233] * y[111] * y[2]) / (1 + (y[1233] * y[111] * y[2]))
    r35 = (13.7 * y[1233] * y[516] * y[2]) / (1 + (y[1233] * y[516] * y[2]))
    r36 = (13.7 * y[1233] * y[836] * y[2]) / (1 + (y[1233] * y[836] * y[2]))
    r37 = (13.7 * y[1233] * y[393] * y[2]) / (1 + (y[1233] * y[393] * y[2]))
    r42 = (13.7 * y[1237] * y[458] * y[2] * y[0] ) / (1 + (y[1237] * y[458] * y[2] * y[0] ))
    r43 = (13.7 * y[1237] * y[525] * y[0] * y[2]) / (1 + (y[1237] * y[525] * y[0] * y[2]))
    r44 = (13.7 * y[1237] * y[458] * y[2] ) / (1 + (y[1237] * y[458] * y[2] ))
    r45 = (13.7 * y[1238] * y[181] * y[2]) / (1 + (y[1238] * y[181] * y[2]))
    r46 = (13.7 * y[1238] * y[747] * y[2] ) / (1 + (y[1238] * y[747] * y[2] ))
    r47 = (13.7 * y[1238] * y[737] * y[2]) / (1 + (y[1238] * y[737] * y[2]))
    r48 = (13.7 * y[1239] * y[250] * y[2]) / (1 + (y[1239] * y[250] * y[2]))
    r49 = (13.7 * y[1240] * y[256] * y[2]) / (1 + (y[1240] * y[256] * y[2]))
    r51 = (13.7 * y[1240] * y[256] * y[2]) / (1 + (y[1240] * y[256] * y[2]))
    r54 = (13.7 * y[1242] * y[429] * y[2]) / (1 + (y[1242] * y[429] * y[2]))
    r55 = (13.7 * y[1242] * y[484] * y[2]) / (1 + (y[1242] * y[484] * y[2]))
    r56 = (13.7 * y[1242] * y[641] * y[2] ) / (1 + (y[1242] * y[641] * y[2] ))
    r57 = (13.7 * y[1242] * y[684] * y[2]) / (1 + (y[1242] * y[684] * y[2]))
    r58 = (13.7 * y[1242] * y[686] * y[2]) / (1 + (y[1242] * y[686] * y[2]))
    r59 = (13.7 * y[1242] * y[688] * y[2]) / (1 + (y[1242] * y[688] * y[2]))
    r60 = (13.7 * y[1242] * y[690] * y[2]) / (1 + (y[1242] * y[690] * y[2]))
    r61 = (13.7 * y[1242] * y[692] * y[2]) / (1 + (y[1242] * y[692] * y[2]))
    r62 = (13.7 * y[1242] * y[694] * y[2]) / (1 + (y[1242] * y[694] * y[2]))
    r63 = (13.7 * y[1242] * y[800] * y[2]) / (1 + (y[1242] * y[800] * y[2]))
    r64 = (13.7 * y[1242] * y[824] * y[2]) / (1 + (y[1242] * y[824] * y[2]))
    r65 = (13.7 * y[1242] * y[826] * y[2]) / (1 + (y[1242] * y[826] * y[2]))
    r66 = (13.7 * y[1242] * y[828] * y[2]) / (1 + (y[1242] * y[828] * y[2]))
    r67 = (13.7 * y[1242] * y[769] * y[2]) / (1 + (y[1242] * y[769] * y[2]))
    r68 = (13.7 * y[1242] * y[831] * y[2]) / (1 + (y[1242] * y[831] * y[2]))
    r70 = (13.7 * y[1244] * y[216] * y[2]) / (1 + (y[1244] * y[216] * y[2]))
    r72 = (13.7 * y[1244] * y[216] * y[2]) / (1 + (y[1244] * y[216] * y[2]))
    r76 = (13.7 * y[1246] * y[112] * y[2]) / (1 + (y[1246] * y[112] * y[2]))
    r77 = (13.7 * y[1246] * y[394] * y[2]) / (1 + (y[1246] * y[394] * y[2]))
    r78 = (13.7 * y[1246] * y[422] * y[2]) / (1 + (y[1246] * y[422] * y[2]))
    r80 = (13.7 * y[1247] * y[642] * y[2]) / (1 + (y[1247] * y[642] * y[2]))
    r81 = (13.7 * y[1247] * y[642] * y[2]) / (1 + (y[1247] * y[642] * y[2]))
    r90 = (13.7 * y[1250] * y[90] * y[2] ) / (1 + (y[1250] * y[90] * y[2] ))
    r93 = (13.7 * y[1252] * y[611] * y[2] * y[0]) / (1 + (y[1252] * y[611] * y[2] * y[0]))
    r124 = (13.7 * y[1255] * y[81] * y[9] * y[2]) / (1 + (y[1255] * y[81] * y[9] * y[2]))
    r125 = (13.7 * y[1255] * y[511] * y[9] * y[2]) / (1 + (y[1255] * y[511] * y[9] * y[2]))
    r131 = (13.7 * y[1260] * y[248] * y[2]) / (1 + (y[1260] * y[248] * y[2]))
    r132 = (13.7 * y[1261] * y[316] * y[2]) / (1 + (y[1261] * y[316] * y[2]))
    r133 = (13.7 * y[1262] * y[168] * y[2]) / (1 + (y[1262] * y[168] * y[2]))
    r134 = (13.7 * y[1262] * y[714] * y[2]) / (1 + (y[1262] * y[714] * y[2]))
    r135 = (13.7 * y[1262] * y[682] * y[2]) / (1 + (y[1262] * y[682] * y[2]))
    r136 = (13.7 * y[1262] * y[718] * y[2]) / (1 + (y[1262] * y[718] * y[2]))
    r137 = (13.7 * y[1262] * y[721] * y[2]) / (1 + (y[1262] * y[721] * y[2]))
    r138 = (13.7 * y[1262] * y[724] * y[2]) / (1 + (y[1262] * y[724] * y[2]))
    r139 = (13.7 * y[1262] * y[730] * y[2]) / (1 + (y[1262] * y[730] * y[2]))
    r140 = (13.7 * y[1262] * y[733] * y[2] ) / (1 + (y[1262] * y[733] * y[2] ))
    r143 = (13.7 * y[1263] * y[474] * y[2]) / (1 + (y[1263] * y[474] * y[2]))
    r147 = (13.7 * y[1265] * y[143] * y[2]) / (1 + (y[1265] * y[143] * y[2]))
    r149 = (13.7 * y[1265] * y[485] * y[2]) / (1 + (y[1265] * y[485] * y[2]))
    r152 = (13.7 * y[1266] * y[98] * y[2]) / (1 + (y[1266] * y[98] * y[2]))
    r153 = (13.7 * y[1266] * y[98] * y[2]) / (1 + (y[1266] * y[98] * y[2]))
    r155 = (13.7 * y[1266] * y[391] * y[2]) / (1 + (y[1266] * y[391] * y[2]))
    r164 = (13.7 * y[1269] * y[849] * y[2] ) / (1 + (y[1269] * y[849] * y[2] ))
    r165 = (13.7 * y[1269] * y[563] * y[2]) / (1 + (y[1269] * y[563] * y[2]))
    r166 = (13.7 * y[1269] * y[815] * y[2]) / (1 + (y[1269] * y[815] * y[2]))
    r167 = (13.7 * y[1269] * y[421] * y[2]) / (1 + (y[1269] * y[421] * y[2]))
    r11 = (13.7 * y[1233] * y[776] * y[3] * y[77]) / (1 + (y[1233] * y[776] * y[3] * y[77]))
    r15 = (13.7 * y[1233] * y[823] * y[3] * y[77]) / (1 + (y[1233] * y[823] * y[3] * y[77]))
    r19 = (13.7 * y[1233] * y[771] * y[3] * y[77]) / (1 + (y[1233] * y[771] * y[3] * y[77]))
    r30 = (13.7 * y[1233] * y[776] * y[3] * y[77]) / (1 + (y[1233] * y[776] * y[3] * y[77]))
    r34 = (13.7 * y[1233] * y[823] * y[3] * y[77]) / (1 + (y[1233] * y[823] * y[3] * y[77]))
    r38 = (13.7 * y[1233] * y[771] * y[3] * y[77]) / (1 + (y[1233] * y[771] * y[3] * y[77]))
    r53 = (13.7 * y[1241] * y[448] * y[3] * y[77]) / (1 + (y[1241] * y[448] * y[3] * y[77]))
    r82 = (13.7 * y[1247] * y[106] * y[10] * y[3] * y[77]) / (1 + (y[1247] * y[106] * y[10] * y[3] * y[77]))
    r92 = (13.7 * y[1251] * y[3] * y[802] * y[77]) / (1 + (y[1251] * y[3] * y[802] * y[77]))
    r141 = (13.7 * y[1262] * y[818] * y[3] * y[77]) / (1 + (y[1262] * y[818] * y[3] * y[77]))
    r158 = (13.7 * y[1267] * y[3] * y[77] * y[1536]) / (1 + (y[1267] * y[3] * y[77] * y[1536]))
    r159 = (13.7 * y[1267] * y[454] * y[77] * y[3]) / (1 + (y[1267] * y[454] * y[77] * y[3]))
    r160 = (13.7 * y[1267] * y[518] * y[3] * y[77]) / (1 + (y[1267] * y[518] * y[3] * y[77]))
    r161 = (13.7 * y[1267] * y[529] * y[3] * y[77]) / (1 + (y[1267] * y[529] * y[3] * y[77]))
    return (r1 + r2 + r3 + r4 + r5 + r6 + r7 + r8 + r9 + r10 + r12 + r13 + r16 + r17 + r18 + r20 + r21 + r22 + r23 + r24 + r25 + r26 + r27 + r28 + r29 + r31 + r32 + r35 + r36 + r37 + r42 + r43 + r44 + r45 + r46 + r47 + r48 + r49 + r51 + r54 + r55 + r56 + r57 + r58 + r59 + r60 + r61 + r62 + r63 + r64 + r65 + r66 + r67 + r68 + r70 + r72 + r76 + r77 + r78 + r80 + r81 + r90 + r93 + r124 + r125 + r131 + r132 + r133 + r134 + r135 + r136 + r137 + r138 + r139 + r140 + r143 + r147 + r149 + r152 + r153 + r155 + r164 + r165 + r166 + r167) - (r11 + r15 + r19 + r30 + r34 + r38 + r53 + r82 + r92 + r141 + r158 + r159 + r160 + r161)
 
def C00005(t, y):
    r14 = (13.7 * y[1233] * y[111] * y[5]) / (1 + (y[1233] * y[111] * y[5]))
    r33 = (13.7 * y[1233] * y[111] * y[5]) / (1 + (y[1233] * y[111] * y[5]))
    r39 = (13.7 * y[1234] * y[582] * y[5]) / (1 + (y[1234] * y[582] * y[5]))
    r40 = (13.7 * y[1235] * y[416] * y[5]) / (1 + (y[1235] * y[416] * y[5]))
    r41 = (13.7 * y[1236] * y[645] * y[5]) / (1 + (y[1236] * y[645] * y[5]))
    r50 = (13.7 * y[1240] * y[256] * y[5]) / (1 + (y[1240] * y[256] * y[5]))
    r52 = (13.7 * y[1240] * y[256] * y[5]) / (1 + (y[1240] * y[256] * y[5]))
    r69 = (13.7 * y[1243] * y[324] * y[5]) / (1 + (y[1243] * y[324] * y[5]))
    r71 = (13.7 * y[1244] * y[216] * y[5] ) / (1 + (y[1244] * y[216] * y[5] ))
    r73 = (13.7 * y[1244] * y[216] * y[5] ) / (1 + (y[1244] * y[216] * y[5] ))
    r74 = (13.7 * y[1245] * y[89] * y[5]) / (1 + (y[1245] * y[89] * y[5]))
    r75 = (13.7 * y[1245] * y[490] * y[5]) / (1 + (y[1245] * y[490] * y[5]))
    r83 = (13.7 * y[1248] * y[631] * y[5]) / (1 + (y[1248] * y[631] * y[5]))
    r85 = (13.7 * y[1248] * y[631] * y[5]) / (1 + (y[1248] * y[631] * y[5]))
    r86 = (13.7 * y[1248] * y[749] * y[5]) / (1 + (y[1248] * y[749] * y[5]))
    r91 = (13.7 * y[1250] * y[90] * y[5]) / (1 + (y[1250] * y[90] * y[5]))
    r94 = (13.7 * y[1252] * y[611] * y[5] * y[0]) / (1 + (y[1252] * y[611] * y[5] * y[0]))
    r126 = (13.7 * y[1256] * y[397] * y[8] * y[5]) / (1 + (y[1256] * y[397] * y[8] * y[5]))
    r127 = (13.7 * y[1257] * y[498] * y[8] * y[5]) / (1 + (y[1257] * y[498] * y[8] * y[5]))
    r142 = (13.7 * y[1263] * y[474] * y[5]) / (1 + (y[1263] * y[474] * y[5]))
    r144 = (13.7 * y[1264] * y[24] * y[5]) / (1 + (y[1264] * y[24] * y[5]))
    r145 = (13.7 * y[1264] * y[24] * y[5] * y[0]) / (1 + (y[1264] * y[24] * y[5] * y[0]))
    r148 = (13.7 * y[1265] * y[143] * y[5]) / (1 + (y[1265] * y[143] * y[5]))
    r150 = (13.7 * y[1265] * y[485] * y[5]) / (1 + (y[1265] * y[485] * y[5]))
    r151 = (13.7 * y[1266] * y[98] * y[5]) / (1 + (y[1266] * y[98] * y[5]))
    r154 = (13.7 * y[1266] * y[98] * y[5]) / (1 + (y[1266] * y[98] * y[5]))
    r156 = (13.7 * y[1266] * y[391] * y[5]) / (1 + (y[1266] * y[391] * y[5]))
    r157 = (13.7 * y[1266] * y[264] * y[5]) / (1 + (y[1266] * y[264] * y[5]))
    r163 = (13.7 * y[1268] * y[126] * y[13] * y[5] ) / (1 + (y[1268] * y[126] * y[13] * y[5] ))
    r168 = (13.7 * y[1270] * y[321] * y[5]) / (1 + (y[1270] * y[321] * y[5]))
    r169 = (13.7 * y[1270] * y[94] * y[50] * y[5]) / (1 + (y[1270] * y[94] * y[50] * y[5]))
    r170 = (13.7 * y[1270] * y[513] * y[5] * y[0]) / (1 + (y[1270] * y[513] * y[5] * y[0]))
    r84 = (13.7 * y[1248] * y[462] * y[4] * y[77]) / (1 + (y[1248] * y[462] * y[4] * y[77]))
    r162 = (13.7 * y[1267] * y[4] * y[77] * y[1536]) / (1 + (y[1267] * y[4] * y[77] * y[1536]))
    r171 = (13.7 * y[1270] * y[4] * y[77] * y[1537]) / (1 + (y[1270] * y[4] * y[77] * y[1537]))
    return (r14 + r33 + r39 + r40 + r41 + r50 + r52 + r69 + r71 + r73 + r74 + r75 + r83 + r85 + r86 + r91 + r94 + r126 + r127 + r142 + r144 + r145 + r148 + r150 + r151 + r154 + r156 + r157 + r163 + r168 + r169 + r170) - (r84 + r162 + r171)
 
def C00006(t, y):
    r84 = (13.7 * y[1248] * y[462] * y[4] * y[77]) / (1 + (y[1248] * y[462] * y[4] * y[77]))
    r128 = (13.7 * y[1258] * y[487] * y[8] * y[5]) / (1 + (y[1258] * y[487] * y[8] * y[5]))
    r162 = (13.7 * y[1267] * y[4] * y[77] * y[1536]) / (1 + (y[1267] * y[4] * y[77] * y[1536]))
    r171 = (13.7 * y[1270] * y[4] * y[77] * y[1537]) / (1 + (y[1270] * y[4] * y[77] * y[1537]))
    r318 = (13.7 * y[1339] * y[1] * y[2]) / (1 + (y[1339] * y[1] * y[2]))
    r14 = (13.7 * y[1233] * y[111] * y[5]) / (1 + (y[1233] * y[111] * y[5]))
    r33 = (13.7 * y[1233] * y[111] * y[5]) / (1 + (y[1233] * y[111] * y[5]))
    r39 = (13.7 * y[1234] * y[582] * y[5]) / (1 + (y[1234] * y[582] * y[5]))
    r40 = (13.7 * y[1235] * y[416] * y[5]) / (1 + (y[1235] * y[416] * y[5]))
    r41 = (13.7 * y[1236] * y[645] * y[5]) / (1 + (y[1236] * y[645] * y[5]))
    r50 = (13.7 * y[1240] * y[256] * y[5]) / (1 + (y[1240] * y[256] * y[5]))
    r52 = (13.7 * y[1240] * y[256] * y[5]) / (1 + (y[1240] * y[256] * y[5]))
    r69 = (13.7 * y[1243] * y[324] * y[5]) / (1 + (y[1243] * y[324] * y[5]))
    r71 = (13.7 * y[1244] * y[216] * y[5] ) / (1 + (y[1244] * y[216] * y[5] ))
    r73 = (13.7 * y[1244] * y[216] * y[5] ) / (1 + (y[1244] * y[216] * y[5] ))
    r74 = (13.7 * y[1245] * y[89] * y[5]) / (1 + (y[1245] * y[89] * y[5]))
    r75 = (13.7 * y[1245] * y[490] * y[5]) / (1 + (y[1245] * y[490] * y[5]))
    r83 = (13.7 * y[1248] * y[631] * y[5]) / (1 + (y[1248] * y[631] * y[5]))
    r85 = (13.7 * y[1248] * y[631] * y[5]) / (1 + (y[1248] * y[631] * y[5]))
    r86 = (13.7 * y[1248] * y[749] * y[5]) / (1 + (y[1248] * y[749] * y[5]))
    r91 = (13.7 * y[1250] * y[90] * y[5]) / (1 + (y[1250] * y[90] * y[5]))
    r94 = (13.7 * y[1252] * y[611] * y[5] * y[0]) / (1 + (y[1252] * y[611] * y[5] * y[0]))
    r126 = (13.7 * y[1256] * y[397] * y[8] * y[5]) / (1 + (y[1256] * y[397] * y[8] * y[5]))
    r127 = (13.7 * y[1257] * y[498] * y[8] * y[5]) / (1 + (y[1257] * y[498] * y[8] * y[5]))
    r128 = (13.7 * y[1258] * y[487] * y[8] * y[5]) / (1 + (y[1258] * y[487] * y[8] * y[5]))
    r142 = (13.7 * y[1263] * y[474] * y[5]) / (1 + (y[1263] * y[474] * y[5]))
    r144 = (13.7 * y[1264] * y[24] * y[5]) / (1 + (y[1264] * y[24] * y[5]))
    r145 = (13.7 * y[1264] * y[24] * y[5] * y[0]) / (1 + (y[1264] * y[24] * y[5] * y[0]))
    r148 = (13.7 * y[1265] * y[143] * y[5]) / (1 + (y[1265] * y[143] * y[5]))
    r150 = (13.7 * y[1265] * y[485] * y[5]) / (1 + (y[1265] * y[485] * y[5]))
    r151 = (13.7 * y[1266] * y[98] * y[5]) / (1 + (y[1266] * y[98] * y[5]))
    r154 = (13.7 * y[1266] * y[98] * y[5]) / (1 + (y[1266] * y[98] * y[5]))
    r156 = (13.7 * y[1266] * y[391] * y[5]) / (1 + (y[1266] * y[391] * y[5]))
    r157 = (13.7 * y[1266] * y[264] * y[5]) / (1 + (y[1266] * y[264] * y[5]))
    r163 = (13.7 * y[1268] * y[126] * y[13] * y[5] ) / (1 + (y[1268] * y[126] * y[13] * y[5] ))
    r168 = (13.7 * y[1270] * y[321] * y[5]) / (1 + (y[1270] * y[321] * y[5]))
    r169 = (13.7 * y[1270] * y[94] * y[50] * y[5]) / (1 + (y[1270] * y[94] * y[50] * y[5]))
    r170 = (13.7 * y[1270] * y[513] * y[5] * y[0]) / (1 + (y[1270] * y[513] * y[5] * y[0]))
    return (r84 + r128 + r162 + r171 + r318) - (r14 + r33 + r39 + r40 + r41 + r50 + r52 + r69 + r71 + r73 + r74 + r75 + r83 + r85 + r86 + r91 + r94 + r126 + r127 + r128 + r142 + r144 + r145 + r148 + r150 + r151 + r154 + r156 + r157 + r163 + r168 + r169 + r170)
 
def C00007(t, y):
    return (0) - (0)
 
def C00008(t, y):
    r96 = (13.7 * y[1253] * y[201] * y[322] * y[0]) / (1 + (y[1253] * y[201] * y[322] * y[0]))
    r104 = (13.7 * y[1253] * y[201] * y[322] * y[0]) / (1 + (y[1253] * y[201] * y[322] * y[0]))
    r112 = (13.7 * y[1253] * y[201] * y[322] * y[0]) / (1 + (y[1253] * y[201] * y[322] * y[0]))
    r302 = (13.7 * y[1332] * y[1] * y[430]) / (1 + (y[1332] * y[1] * y[430]))
    r303 = (13.7 * y[1333] * y[1] * y[251]) / (1 + (y[1333] * y[1] * y[251]))
    r304 = (13.7 * y[1334] * y[785] * y[1]) / (1 + (y[1334] * y[785] * y[1]))
    r305 = (13.7 * y[1335] * y[1] * y[117]) / (1 + (y[1335] * y[1] * y[117]))
    r307 = (13.7 * y[1335] * y[1] * y[117]) / (1 + (y[1335] * y[1] * y[117]))
    r309 = (13.7 * y[1335] * y[1] * y[117]) / (1 + (y[1335] * y[1] * y[117]))
    r311 = (13.7 * y[1336] * y[1] * y[30]) / (1 + (y[1336] * y[1] * y[30]))
    r312 = (13.7 * y[1336] * y[1] * y[216]) / (1 + (y[1336] * y[1] * y[216]))
    r313 = (13.7 * y[1336] * y[1] * y[260]) / (1 + (y[1336] * y[1] * y[260]))
    r314 = (13.7 * y[1337] * y[1] * y[209]) / (1 + (y[1337] * y[1] * y[209]))
    r315 = (13.7 * y[1337] * y[1] * y[417]) / (1 + (y[1337] * y[1] * y[417]))
    r316 = (13.7 * y[1337] * y[791] * y[1]) / (1 + (y[1337] * y[791] * y[1]))
    r318 = (13.7 * y[1339] * y[1] * y[2]) / (1 + (y[1339] * y[1] * y[2]))
    r319 = (13.7 * y[1340] * y[1] * y[461]) / (1 + (y[1340] * y[1] * y[461]))
    r320 = (13.7 * y[1341] * y[1] * y[249]) / (1 + (y[1341] * y[1] * y[249]))
    r321 = (13.7 * y[1342] * y[1] * y[112]) / (1 + (y[1342] * y[1] * y[112]))
    r322 = (13.7 * y[1343] * y[1] * y[252]) / (1 + (y[1343] * y[1] * y[252]))
    r323 = (13.7 * y[1344] * y[1] * y[459]) / (1 + (y[1344] * y[1] * y[459]))
    r324 = (13.7 * y[1344] * y[1] * y[455]) / (1 + (y[1344] * y[1] * y[455]))
    r325 = (13.7 * y[1344] * y[1] * y[614]) / (1 + (y[1344] * y[1] * y[614]))
    r326 = (13.7 * y[1345] * y[1] * y[393]) / (1 + (y[1345] * y[1] * y[393]))
    r327 = (13.7 * y[1346] * y[1] * y[256]) / (1 + (y[1346] * y[1] * y[256]))
    r328 = (13.7 * y[1347] * y[1] * y[92]) / (1 + (y[1347] * y[1] * y[92]))
    r329 = (13.7 * y[1347] * y[1] * y[92]) / (1 + (y[1347] * y[1] * y[92]))
    r330 = (13.7 * y[1347] * y[1] * y[536]) / (1 + (y[1347] * y[1] * y[536]))
    r331 = (13.7 * y[1348] * y[1] * y[21] ) / (1 + (y[1348] * y[1] * y[21] ))
    r339 = (13.7 * y[1349] * y[1] * y[407] ) / (1 + (y[1349] * y[1] * y[407] ))
    r340 = (13.7 * y[1349] * y[1] * y[282]) / (1 + (y[1349] * y[1] * y[282]))
    r343 = (13.7 * y[1349] * y[843] * y[1]) / (1 + (y[1349] * y[843] * y[1]))
    r344 = (13.7 * y[1350] * y[1] * y[504]) / (1 + (y[1350] * y[1] * y[504]))
    r345 = (13.7 * y[1350] * y[1] * y[504]) / (1 + (y[1350] * y[1] * y[504]))
    r346 = (13.7 * y[1351] * y[1] * y[633]) / (1 + (y[1351] * y[1] * y[633]))
    r347 = (13.7 * y[1352] * y[1] * y[470]) / (1 + (y[1352] * y[1] * y[470]))
    r348 = (13.7 * y[1353] * y[1] * y[409]) / (1 + (y[1353] * y[1] * y[409]))
    r349 = (13.7 * y[1354] * y[1] * y[423]) / (1 + (y[1354] * y[1] * y[423]))
    r350 = (13.7 * y[1355] * y[1] * y[32]) / (1 + (y[1355] * y[1] * y[32]))
    r351 = (13.7 * y[1355] * y[1] * y[158]) / (1 + (y[1355] * y[1] * y[158]))
    r352 = (13.7 * y[1356] * y[1] * y[24]) / (1 + (y[1356] * y[1] * y[24]))
    r353 = (13.7 * y[1357] * y[1] * y[13] * y[273]) / (1 + (y[1357] * y[1] * y[13] * y[273]))
    r354 = (13.7 * y[1357] * y[1] * y[515]) / (1 + (y[1357] * y[1] * y[515]))
    r356 = (13.7 * y[1357] * y[1] * y[13] * y[273]) / (1 + (y[1357] * y[1] * y[13] * y[273]))
    r357 = (13.7 * y[1357] * y[1] * y[515]) / (1 + (y[1357] * y[1] * y[515]))
    r359 = (13.7 * y[1358] * y[1] * y[192]) / (1 + (y[1358] * y[1] * y[192]))
    r360 = (13.7 * y[1359] * y[1] * y[48]) / (1 + (y[1359] * y[1] * y[48]))
    r361 = (13.7 * y[1360] * y[1] * y[427] ) / (1 + (y[1360] * y[1] * y[427] ))
    r364 = (13.7 * y[1362] * y[1] * y[380]) / (1 + (y[1362] * y[1] * y[380]))
    r365 = (13.7 * y[1363] * y[1] * y[480]) / (1 + (y[1363] * y[1] * y[480]))
    r366 = (13.7 * y[1364] * y[1] * y[102]) / (1 + (y[1364] * y[1] * y[102]))
    r367 = (13.7 * y[1365] * y[1] * y[54]) / (1 + (y[1365] * y[1] * y[54]))
    r368 = (13.7 * y[1365] * y[1] * y[233]) / (1 + (y[1365] * y[1] * y[233]))
    r369 = (13.7 * y[1366] * y[1] * y[19]) / (1 + (y[1366] * y[1] * y[19]))
    r370 = (13.7 * y[1366] * y[1] * y[337]) / (1 + (y[1366] * y[1] * y[337]))
    r372 = (13.7 * y[1367] * y[1] * y[400]) / (1 + (y[1367] * y[1] * y[400]))
    r373 = (13.7 * y[1367] * y[1] * y[7]) / (1 + (y[1367] * y[1] * y[7]))
    r374 = (13.7 * y[1367] * y[782] * y[1]) / (1 + (y[1367] * y[782] * y[1]))
    r375 = (13.7 * y[1367] * y[1] * y[14]) / (1 + (y[1367] * y[1] * y[14]))
    r376 = (13.7 * y[1367] * y[1] * y[34]) / (1 + (y[1367] * y[1] * y[34]))
    r377 = (13.7 * y[1367] * y[1] * y[109]) / (1 + (y[1367] * y[1] * y[109]))
    r378 = (13.7 * y[1367] * y[1] * y[101]) / (1 + (y[1367] * y[1] * y[101]))
    r379 = (13.7 * y[1367] * y[1] * y[201]) / (1 + (y[1367] * y[1] * y[201]))
    r380 = (13.7 * y[1367] * y[1] * y[338]) / (1 + (y[1367] * y[1] * y[338]))
    r381 = (13.7 * y[1367] * y[1] * y[340] ) / (1 + (y[1367] * y[1] * y[340] ))
    r382 = (13.7 * y[1367] * y[1] * y[447]) / (1 + (y[1367] * y[1] * y[447]))
    r383 = (13.7 * y[1367] * y[1] * y[510]) / (1 + (y[1367] * y[1] * y[510]))
    r384 = (13.7 * y[1367] * y[1] * y[508]) / (1 + (y[1367] * y[1] * y[508]))
    r385 = (13.7 * y[1367] * y[908] * y[1]) / (1 + (y[1367] * y[908] * y[1]))
    r386 = (13.7 * y[1367] * y[1] * y[895]) / (1 + (y[1367] * y[1] * y[895]))
    r387 = (13.7 * y[1367] * y[1] * y[897]) / (1 + (y[1367] * y[1] * y[897]))
    r388 = (13.7 * y[1368] * y[1] * y[649]) / (1 + (y[1368] * y[1] * y[649]))
    r389 = (13.7 * y[1368] * y[1] * y[649]) / (1 + (y[1368] * y[1] * y[649]))
    r390 = (13.7 * y[1369] * y[1] * y[139]) / (1 + (y[1369] * y[1] * y[139]))
    r391 = (13.7 * y[1369] * y[1] * y[339]) / (1 + (y[1369] * y[1] * y[339]))
    r392 = (13.7 * y[1369] * y[907] * y[1]) / (1 + (y[1369] * y[907] * y[1]))
    r393 = (13.7 * y[1370] * y[1] * y[341]) / (1 + (y[1370] * y[1] * y[341]))
    r394 = (13.7 * y[1370] * y[1] * y[342]) / (1 + (y[1370] * y[1] * y[342]))
    r565 = (13.7 * y[1413] * y[1] * y[524] * y[0]) / (1 + (y[1413] * y[1] * y[524] * y[0]))
    r566 = (13.7 * y[1413] * y[1] * y[524] * y[0]) / (1 + (y[1413] * y[1] * y[524] * y[0]))
    r585 = (13.7 * y[1426] * y[499] * y[0]) / (1 + (y[1426] * y[499] * y[0]))
    r598 = (13.7 * y[1433] * y[1] * y[483]) / (1 + (y[1433] * y[1] * y[483]))
    r765 = (13.7 * y[1506] * y[1] * y[822] * y[821]) / (1 + (y[1506] * y[1] * y[822] * y[821]))
    r785 = (13.7 * y[1509] * y[1] * y[740] * y[1593]) / (1 + (y[1509] * y[1] * y[740] * y[1593]))
    r786 = (13.7 * y[1509] * y[1] * y[673] * y[1593]) / (1 + (y[1509] * y[1] * y[673] * y[1593]))
    r787 = (13.7 * y[1510] * y[1] * y[444] * y[439]) / (1 + (y[1510] * y[1] * y[444] * y[439]))
    r788 = (13.7 * y[1512] * y[1] * y[665] * y[48]) / (1 + (y[1512] * y[1] * y[665] * y[48]))
    r789 = (13.7 * y[1513] * y[1] * y[474] * y[40]) / (1 + (y[1513] * y[1] * y[474] * y[40]))
    r790 = (13.7 * y[1514] * y[1] * y[494] * y[212]) / (1 + (y[1514] * y[1] * y[494] * y[212]))
    r791 = (13.7 * y[1515] * y[1] * y[656]) / (1 + (y[1515] * y[1] * y[656]))
    r792 = (13.7 * y[1516] * y[1] * y[588] * y[77]) / (1 + (y[1516] * y[1] * y[588] * y[77]))
    r793 = (13.7 * y[1517] * y[1] * y[572] * y[36]) / (1 + (y[1517] * y[1] * y[572] * y[36]))
    r794 = (13.7 * y[1518] * y[1] * y[763] * y[273]) / (1 + (y[1518] * y[1] * y[763] * y[273]))
    r801 = (13.7 * y[1520] * y[1] * y[585] * y[273]) / (1 + (y[1520] * y[1] * y[585] * y[273]))
    r804 = (13.7 * y[1522] * y[1] * y[72] * y[13]) / (1 + (y[1522] * y[1] * y[72] * y[13]))
    r805 = (13.7 * y[1522] * y[1] * y[72] * y[61] * y[0]) / (1 + (y[1522] * y[1] * y[72] * y[61] * y[0]))
    r808 = (13.7 * y[1524] * y[98] * y[55] * y[1]) / (1 + (y[1524] * y[98] * y[55] * y[1]))
    r815 = (13.7 * y[1528] * y[1] * y[639] * y[61] * y[0]) / (1 + (y[1528] * y[1] * y[639] * y[61] * y[0]))
    r816 = (13.7 * y[1528] * y[1] * y[639] * y[61] * y[0]) / (1 + (y[1528] * y[1] * y[639] * y[61] * y[0]))
    r817 = (13.7 * y[1528] * y[1] * y[639] * y[61] * y[0]) / (1 + (y[1528] * y[1] * y[639] * y[61] * y[0]))
    r825 = (13.7 * y[1530] * y[1] * y[61] * y[273] * y[0]) / (1 + (y[1530] * y[1] * y[61] * y[273] * y[0]))
    r826 = (13.7 * y[1530] * y[1] * y[515]) / (1 + (y[1530] * y[1] * y[515]))
    r827 = (13.7 * y[1530] * y[1] * y[273]) / (1 + (y[1530] * y[1] * y[273]))
    r829 = (13.7 * y[1530] * y[1] * y[273] * y[13]) / (1 + (y[1530] * y[1] * y[273] * y[13]))
    r831 = (13.7 * y[1530] * y[1] * y[61] * y[273] * y[0]) / (1 + (y[1530] * y[1] * y[61] * y[273] * y[0]))
    r832 = (13.7 * y[1530] * y[1] * y[515]) / (1 + (y[1530] * y[1] * y[515]))
    r833 = (13.7 * y[1530] * y[1] * y[273]) / (1 + (y[1530] * y[1] * y[273]))
    r835 = (13.7 * y[1530] * y[1] * y[273] * y[13]) / (1 + (y[1530] * y[1] * y[273] * y[13]))
    r837 = (13.7 * y[1530] * y[1] * y[61] * y[273] * y[0]) / (1 + (y[1530] * y[1] * y[61] * y[273] * y[0]))
    r838 = (13.7 * y[1530] * y[1] * y[515]) / (1 + (y[1530] * y[1] * y[515]))
    r839 = (13.7 * y[1530] * y[1] * y[273]) / (1 + (y[1530] * y[1] * y[273]))
    r841 = (13.7 * y[1530] * y[1] * y[273] * y[13]) / (1 + (y[1530] * y[1] * y[273] * y[13]))
    r842 = (13.7 * y[1531] * y[1] * y[23] * y[273]) / (1 + (y[1531] * y[1] * y[23] * y[273]))
    r843 = (13.7 * y[1532] * y[1] * y[23] * y[273]) / (1 + (y[1532] * y[1] * y[23] * y[273]))
    r844 = (13.7 * y[1532] * y[1] * y[23] * y[273]) / (1 + (y[1532] * y[1] * y[23] * y[273]))
    r846 = (13.7 * y[1534] * y[1] * y[0]) / (1 + (y[1534] * y[1] * y[0]))
    r847 = (13.7 * y[1534] * y[1] * y[0]) / (1 + (y[1534] * y[1] * y[0]))
    r848 = (13.7 * y[1534] * y[1] * y[0]) / (1 + (y[1534] * y[1] * y[0]))
    r849 = (13.7 * y[1534] * y[1] * y[0]) / (1 + (y[1534] * y[1] * y[0]))
    r850 = (13.7 * y[1534] * y[1] * y[0]) / (1 + (y[1534] * y[1] * y[0]))
    r851 = (13.7 * y[1534] * y[1] * y[0]) / (1 + (y[1534] * y[1] * y[0]))
    r852 = (13.7 * y[1534] * y[1] * y[0]) / (1 + (y[1534] * y[1] * y[0]))
    r853 = (13.7 * y[1534] * y[1] * y[0]) / (1 + (y[1534] * y[1] * y[0]))
    r306 = (13.7 * y[1335] * y[437] * y[7]) / (1 + (y[1335] * y[437] * y[7]))
    r308 = (13.7 * y[1335] * y[437] * y[7]) / (1 + (y[1335] * y[437] * y[7]))
    r310 = (13.7 * y[1335] * y[437] * y[7]) / (1 + (y[1335] * y[437] * y[7]))
    r371 = (13.7 * y[1366] * y[65] * y[7]) / (1 + (y[1366] * y[65] * y[7]))
    r373 = (13.7 * y[1367] * y[1] * y[7]) / (1 + (y[1367] * y[1] * y[7]))
    r806 = (13.7 * y[1523] * y[492] * y[12] * y[7] * y[8]) / (1 + (y[1523] * y[492] * y[12] * y[7] * y[8]))
    r807 = (13.7 * y[1523] * y[492] * y[12] * y[7] * y[8]) / (1 + (y[1523] * y[492] * y[12] * y[7] * y[8]))
    return (r96 + r104 + r112 + r302 + r303 + r304 + r305 + r307 + r309 + r311 + r312 + r313 + r314 + r315 + r316 + r318 + r319 + r320 + r321 + r322 + r323 + r324 + r325 + r326 + r327 + r328 + r329 + r330 + r331 + r339 + r340 + r343 + r344 + r345 + r346 + r347 + r348 + r349 + r350 + r351 + r352 + r353 + r354 + r356 + r357 + r359 + r360 + r361 + r364 + r365 + r366 + r367 + r368 + r369 + r370 + r372 + r373 + r374 + r375 + r376 + r377 + r378 + r379 + r380 + r381 + r382 + r383 + r384 + r385 + r386 + r387 + r388 + r389 + r390 + r391 + r392 + r393 + r394 + r565 + r566 + r585 + r598 + r765 + r785 + r786 + r787 + r788 + r789 + r790 + r791 + r792 + r793 + r794 + r801 + r804 + r805 + r808 + r815 + r816 + r817 + r825 + r826 + r827 + r829 + r831 + r832 + r833 + r835 + r837 + r838 + r839 + r841 + r842 + r843 + r844 + r846 + r847 + r848 + r849 + r850 + r851 + r852 + r853) - (r306 + r308 + r310 + r371 + r373 + r806 + r807)
 
def C00009(t, y):
    r128 = (13.7 * y[1258] * y[487] * y[8] * y[5]) / (1 + (y[1258] * y[487] * y[8] * y[5]))
    r200 = (13.7 * y[1290] * y[164] * y[48]) / (1 + (y[1290] * y[164] * y[48]))
    r201 = (13.7 * y[1291] * y[164] * y[74]) / (1 + (y[1291] * y[164] * y[74]))
    r274 = (13.7 * y[1320] * y[71] * y[577]) / (1 + (y[1320] * y[71] * y[577]))
    r281 = (13.7 * y[1322] * y[471] * y[270]) / (1 + (y[1322] * y[471] * y[270]))
    r283 = (13.7 * y[1323] * y[1] * y[696] * y[0]) / (1 + (y[1323] * y[1] * y[696] * y[0]))
    r285 = (13.7 * y[1325] * y[662] * y[805]) / (1 + (y[1325] * y[662] * y[805]))
    r499 = (13.7 * y[1397] * y[477] * y[0]) / (1 + (y[1397] * y[477] * y[0]))
    r500 = (13.7 * y[1398] * y[607] * y[0] ) / (1 + (y[1398] * y[607] * y[0] ))
    r501 = (13.7 * y[1399] * y[488] * y[0]) / (1 + (y[1399] * y[488] * y[0]))
    r502 = (13.7 * y[1399] * y[488] * y[0]) / (1 + (y[1399] * y[488] * y[0]))
    r503 = (13.7 * y[1399] * y[488] * y[0]) / (1 + (y[1399] * y[488] * y[0]))
    r504 = (13.7 * y[1400] * y[53] * y[0]) / (1 + (y[1400] * y[53] * y[0]))
    r505 = (13.7 * y[1400] * y[52] * y[0]) / (1 + (y[1400] * y[52] * y[0]))
    r565 = (13.7 * y[1413] * y[1] * y[524] * y[0]) / (1 + (y[1413] * y[1] * y[524] * y[0]))
    r566 = (13.7 * y[1413] * y[1] * y[524] * y[0]) / (1 + (y[1413] * y[1] * y[524] * y[0]))
    r576 = (13.7 * y[1418] * y[43] * y[0]) / (1 + (y[1418] * y[43] * y[0]))
    r582 = (13.7 * y[1423] * y[12] * y[0] ) / (1 + (y[1423] * y[12] * y[0] ))
    r583 = (13.7 * y[1424] * y[650] * y[0]) / (1 + (y[1424] * y[650] * y[0]))
    r598 = (13.7 * y[1433] * y[1] * y[483]) / (1 + (y[1433] * y[1] * y[483]))
    r642 = (13.7 * y[1448] * y[478] * y[0]) / (1 + (y[1448] * y[478] * y[0]))
    r643 = (13.7 * y[1448] * y[754] * y[0]) / (1 + (y[1448] * y[754] * y[0]))
    r644 = (13.7 * y[1449] * y[502]) / (1 + (y[1449] * y[502]))
    r765 = (13.7 * y[1506] * y[1] * y[822] * y[821]) / (1 + (y[1506] * y[1] * y[822] * y[821]))
    r785 = (13.7 * y[1509] * y[1] * y[740] * y[1593]) / (1 + (y[1509] * y[1] * y[740] * y[1593]))
    r786 = (13.7 * y[1509] * y[1] * y[673] * y[1593]) / (1 + (y[1509] * y[1] * y[673] * y[1593]))
    r787 = (13.7 * y[1510] * y[1] * y[444] * y[439]) / (1 + (y[1510] * y[1] * y[444] * y[439]))
    r788 = (13.7 * y[1512] * y[1] * y[665] * y[48]) / (1 + (y[1512] * y[1] * y[665] * y[48]))
    r789 = (13.7 * y[1513] * y[1] * y[474] * y[40]) / (1 + (y[1513] * y[1] * y[474] * y[40]))
    r790 = (13.7 * y[1514] * y[1] * y[494] * y[212]) / (1 + (y[1514] * y[1] * y[494] * y[212]))
    r791 = (13.7 * y[1515] * y[1] * y[656]) / (1 + (y[1515] * y[1] * y[656]))
    r792 = (13.7 * y[1516] * y[1] * y[588] * y[77]) / (1 + (y[1516] * y[1] * y[588] * y[77]))
    r793 = (13.7 * y[1517] * y[1] * y[572] * y[36]) / (1 + (y[1517] * y[1] * y[572] * y[36]))
    r794 = (13.7 * y[1518] * y[1] * y[763] * y[273]) / (1 + (y[1518] * y[1] * y[763] * y[273]))
    r801 = (13.7 * y[1520] * y[1] * y[585] * y[273]) / (1 + (y[1520] * y[1] * y[585] * y[273]))
    r804 = (13.7 * y[1522] * y[1] * y[72] * y[13]) / (1 + (y[1522] * y[1] * y[72] * y[13]))
    r805 = (13.7 * y[1522] * y[1] * y[72] * y[61] * y[0]) / (1 + (y[1522] * y[1] * y[72] * y[61] * y[0]))
    r808 = (13.7 * y[1524] * y[98] * y[55] * y[1]) / (1 + (y[1524] * y[98] * y[55] * y[1]))
    r809 = (13.7 * y[1525] * y[43] * y[126] * y[48]) / (1 + (y[1525] * y[43] * y[126] * y[48]))
    r815 = (13.7 * y[1528] * y[1] * y[639] * y[61] * y[0]) / (1 + (y[1528] * y[1] * y[639] * y[61] * y[0]))
    r816 = (13.7 * y[1528] * y[1] * y[639] * y[61] * y[0]) / (1 + (y[1528] * y[1] * y[639] * y[61] * y[0]))
    r817 = (13.7 * y[1528] * y[1] * y[639] * y[61] * y[0]) / (1 + (y[1528] * y[1] * y[639] * y[61] * y[0]))
    r825 = (13.7 * y[1530] * y[1] * y[61] * y[273] * y[0]) / (1 + (y[1530] * y[1] * y[61] * y[273] * y[0]))
    r828 = (13.7 * y[1530] * y[13] * y[891]) / (1 + (y[1530] * y[13] * y[891]))
    r829 = (13.7 * y[1530] * y[1] * y[273] * y[13]) / (1 + (y[1530] * y[1] * y[273] * y[13]))
    r831 = (13.7 * y[1530] * y[1] * y[61] * y[273] * y[0]) / (1 + (y[1530] * y[1] * y[61] * y[273] * y[0]))
    r834 = (13.7 * y[1530] * y[13] * y[891]) / (1 + (y[1530] * y[13] * y[891]))
    r835 = (13.7 * y[1530] * y[1] * y[273] * y[13]) / (1 + (y[1530] * y[1] * y[273] * y[13]))
    r837 = (13.7 * y[1530] * y[1] * y[61] * y[273] * y[0]) / (1 + (y[1530] * y[1] * y[61] * y[273] * y[0]))
    r840 = (13.7 * y[1530] * y[13] * y[891]) / (1 + (y[1530] * y[13] * y[891]))
    r841 = (13.7 * y[1530] * y[1] * y[273] * y[13]) / (1 + (y[1530] * y[1] * y[273] * y[13]))
    r842 = (13.7 * y[1531] * y[1] * y[23] * y[273]) / (1 + (y[1531] * y[1] * y[23] * y[273]))
    r843 = (13.7 * y[1532] * y[1] * y[23] * y[273]) / (1 + (y[1532] * y[1] * y[23] * y[273]))
    r844 = (13.7 * y[1532] * y[1] * y[23] * y[273]) / (1 + (y[1532] * y[1] * y[23] * y[273]))
    r846 = (13.7 * y[1534] * y[1] * y[0]) / (1 + (y[1534] * y[1] * y[0]))
    r847 = (13.7 * y[1534] * y[1] * y[0]) / (1 + (y[1534] * y[1] * y[0]))
    r848 = (13.7 * y[1534] * y[1] * y[0]) / (1 + (y[1534] * y[1] * y[0]))
    r849 = (13.7 * y[1534] * y[1] * y[0]) / (1 + (y[1534] * y[1] * y[0]))
    r850 = (13.7 * y[1534] * y[1] * y[0]) / (1 + (y[1534] * y[1] * y[0]))
    r851 = (13.7 * y[1534] * y[1] * y[0]) / (1 + (y[1534] * y[1] * y[0]))
    r852 = (13.7 * y[1534] * y[1] * y[0]) / (1 + (y[1534] * y[1] * y[0]))
    r853 = (13.7 * y[1534] * y[1] * y[0]) / (1 + (y[1534] * y[1] * y[0]))
    r126 = (13.7 * y[1256] * y[397] * y[8] * y[5]) / (1 + (y[1256] * y[397] * y[8] * y[5]))
    r127 = (13.7 * y[1257] * y[498] * y[8] * y[5]) / (1 + (y[1257] * y[498] * y[8] * y[5]))
    r128 = (13.7 * y[1258] * y[487] * y[8] * y[5]) / (1 + (y[1258] * y[487] * y[8] * y[5]))
    r236 = (13.7 * y[1302] * y[168] * y[8]) / (1 + (y[1302] * y[168] * y[8]))
    r244 = (13.7 * y[1307] * y[23] * y[8]) / (1 + (y[1307] * y[23] * y[8]))
    r245 = (13.7 * y[1307] * y[97] * y[8]) / (1 + (y[1307] * y[97] * y[8]))
    r282 = (13.7 * y[1323] * y[8] * y[12] * y[18]) / (1 + (y[1323] * y[8] * y[12] * y[18]))
    r806 = (13.7 * y[1523] * y[492] * y[12] * y[7] * y[8]) / (1 + (y[1523] * y[492] * y[12] * y[7] * y[8]))
    r807 = (13.7 * y[1523] * y[492] * y[12] * y[7] * y[8]) / (1 + (y[1523] * y[492] * y[12] * y[7] * y[8]))
    return (r128 + r200 + r201 + r274 + r281 + r283 + r285 + r499 + r500 + r501 + r502 + r503 + r504 + r505 + r565 + r566 + r576 + r582 + r583 + r598 + r642 + r643 + r644 + r765 + r785 + r786 + r787 + r788 + r789 + r790 + r791 + r792 + r793 + r794 + r801 + r804 + r805 + r808 + r809 + r815 + r816 + r817 + r825 + r828 + r829 + r831 + r834 + r835 + r837 + r840 + r841 + r842 + r843 + r844 + r846 + r847 + r848 + r849 + r850 + r851 + r852 + r853) - (r126 + r127 + r128 + r236 + r244 + r245 + r282 + r806 + r807)
 
def C00010(t, y):
    r89 = (13.7 * y[1249] * y[393] * y[9] * y[2]) / (1 + (y[1249] * y[393] * y[9] * y[2]))
    r216 = (13.7 * y[1295] * y[23] * y[24]) / (1 + (y[1295] * y[23] * y[24]))
    r217 = (13.7 * y[1296] * y[90] * y[39]) / (1 + (y[1296] * y[90] * y[39]))
    r218 = (13.7 * y[1296] * y[424] * y[90]) / (1 + (y[1296] * y[424] * y[90]))
    r220 = (13.7 * y[1297] * y[23] * y[759]) / (1 + (y[1297] * y[23] * y[759]))
    r232 = (13.7 * y[1299] * y[23] * y[493]) / (1 + (y[1299] * y[23] * y[493]))
    r235 = (13.7 * y[1301] * y[23] * y[604]) / (1 + (y[1301] * y[23] * y[604]))
    r240 = (13.7 * y[1305] * y[80] * y[223]) / (1 + (y[1305] * y[80] * y[223]))
    r242 = (13.7 * y[1306] * y[88] * y[256]) / (1 + (y[1306] * y[88] * y[256]))
    r243 = (13.7 * y[1306] * y[88] * y[256]) / (1 + (y[1306] * y[88] * y[256]))
    r244 = (13.7 * y[1307] * y[23] * y[8]) / (1 + (y[1307] * y[23] * y[8]))
    r245 = (13.7 * y[1307] * y[97] * y[8]) / (1 + (y[1307] * y[97] * y[8]))
    r246 = (13.7 * y[1308] * y[611] * y[23] * y[0]) / (1 + (y[1308] * y[611] * y[23] * y[0]))
    r247 = (13.7 * y[1309] * y[23]) / (1 + (y[1309] * y[23]))
    r248 = (13.7 * y[1309] * y[97] * y[23]) / (1 + (y[1309] * y[97] * y[23]))
    r249 = (13.7 * y[1309] * y[23] * y[132]) / (1 + (y[1309] * y[23] * y[132]))
    r319 = (13.7 * y[1340] * y[1] * y[461]) / (1 + (y[1340] * y[1] * y[461]))
    r603 = (13.7 * y[1438] * y[574]) / (1 + (y[1438] * y[574]))
    r89 = (13.7 * y[1249] * y[393] * y[9] * y[2]) / (1 + (y[1249] * y[393] * y[9] * y[2]))
    r124 = (13.7 * y[1255] * y[81] * y[9] * y[2]) / (1 + (y[1255] * y[81] * y[9] * y[2]))
    r125 = (13.7 * y[1255] * y[511] * y[9] * y[2]) / (1 + (y[1255] * y[511] * y[9] * y[2]))
    r250 = (13.7 * y[1310] * y[335] * y[9]) / (1 + (y[1310] * y[335] * y[9]))
    r487 = (13.7 * y[1390] * y[9] * y[596]) / (1 + (y[1390] * y[9] * y[596]))
    r763 = (13.7 * y[1504] * y[1] * y[554] * y[9]) / (1 + (y[1504] * y[1] * y[554] * y[9]))
    return (r89 + r216 + r217 + r218 + r220 + r232 + r235 + r240 + r242 + r243 + r244 + r245 + r246 + r247 + r248 + r249 + r319 + r603) - (r89 + r124 + r125 + r250 + r487 + r763)
 
def C00011(t, y):
    r69 = (13.7 * y[1243] * y[324] * y[5]) / (1 + (y[1243] * y[324] * y[5]))
    r81 = (13.7 * y[1247] * y[642] * y[2]) / (1 + (y[1247] * y[642] * y[2]))
    r131 = (13.7 * y[1260] * y[248] * y[2]) / (1 + (y[1260] * y[248] * y[2]))
    r210 = (13.7 * y[1293] * y[21] * y[65]) / (1 + (y[1293] * y[21] * y[65]))
    r214 = (13.7 * y[1293] * y[21] * y[106]) / (1 + (y[1293] * y[21] * y[106]))
    r215 = (13.7 * y[1294] * y[21] * y[114]) / (1 + (y[1294] * y[21] * y[114]))
    r221 = (13.7 * y[1298] * y[168] * y[493]) / (1 + (y[1298] * y[168] * y[493]))
    r222 = (13.7 * y[1298] * y[610] * y[493]) / (1 + (y[1298] * y[610] * y[493]))
    r223 = (13.7 * y[1298] * y[682] * y[493]) / (1 + (y[1298] * y[682] * y[493]))
    r224 = (13.7 * y[1298] * y[714] * y[493]) / (1 + (y[1298] * y[714] * y[493]))
    r225 = (13.7 * y[1298] * y[718] * y[493]) / (1 + (y[1298] * y[718] * y[493]))
    r226 = (13.7 * y[1298] * y[721] * y[493]) / (1 + (y[1298] * y[721] * y[493]))
    r227 = (13.7 * y[1298] * y[724] * y[493]) / (1 + (y[1298] * y[724] * y[493]))
    r228 = (13.7 * y[1298] * y[730] * y[493]) / (1 + (y[1298] * y[730] * y[493]))
    r229 = (13.7 * y[1298] * y[733] * y[493]) / (1 + (y[1298] * y[733] * y[493]))
    r230 = (13.7 * y[1298] * y[859] * y[493]) / (1 + (y[1298] * y[859] * y[493]))
    r231 = (13.7 * y[1298] * y[873] * y[493]) / (1 + (y[1298] * y[873] * y[493]))
    r232 = (13.7 * y[1299] * y[23] * y[493]) / (1 + (y[1299] * y[23] * y[493]))
    r276 = (13.7 * y[1321] * y[666] * y[867]) / (1 + (y[1321] * y[666] * y[867]))
    r277 = (13.7 * y[1321] * y[666] * y[866]) / (1 + (y[1321] * y[666] * y[866]))
    r590 = (13.7 * y[1428] * y[144]) / (1 + (y[1428] * y[144]))
    r591 = (13.7 * y[1429] * y[24]) / (1 + (y[1429] * y[24]))
    r592 = (13.7 * y[1429] * y[48]) / (1 + (y[1429] * y[48]))
    r593 = (13.7 * y[1429] * y[412]) / (1 + (y[1429] * y[412]))
    r594 = (13.7 * y[1429] * y[425]) / (1 + (y[1429] * y[425]))
    r595 = (13.7 * y[1430] * y[439]) / (1 + (y[1430] * y[439]))
    r596 = (13.7 * y[1431] * y[665]) / (1 + (y[1431] * y[665]))
    r597 = (13.7 * y[1432] * y[479]) / (1 + (y[1432] * y[479]))
    r598 = (13.7 * y[1433] * y[1] * y[483]) / (1 + (y[1433] * y[1] * y[483]))
    r599 = (13.7 * y[1434] * y[638]) / (1 + (y[1434] * y[638]))
    r600 = (13.7 * y[1435] * y[750]) / (1 + (y[1435] * y[750]))
    r79 = (13.7 * y[1247] * y[227] * y[10]) / (1 + (y[1247] * y[227] * y[10]))
    r82 = (13.7 * y[1247] * y[106] * y[10] * y[3] * y[77]) / (1 + (y[1247] * y[106] * y[10] * y[3] * y[77]))
    r208 = (13.7 * y[1293] * y[462] * y[10] ) / (1 + (y[1293] * y[462] * y[10] ))
    r209 = (13.7 * y[1293] * y[750] * y[10]) / (1 + (y[1293] * y[750] * y[10]))
    return (r69 + r81 + r131 + r210 + r214 + r215 + r221 + r222 + r223 + r224 + r225 + r226 + r227 + r228 + r229 + r230 + r231 + r232 + r276 + r277 + r590 + r591 + r592 + r593 + r594 + r595 + r596 + r597 + r598 + r599 + r600) - (r79 + r82 + r208 + r209)
 
def C00012(t, y):
    return (0) - (0)
 
def C00013(t, y):
    r241 = (13.7 * y[1511] * y[60] * y[589] * y[94]) / (1 + (y[1511] * y[60] * y[589] * y[94]))
    r257 = (13.7 * y[1312] * y[778] * y[115]) / (1 + (y[1312] * y[778] * y[115]))
    r267 = (13.7 * y[1317] * y[540] * y[115]) / (1 + (y[1317] * y[540] * y[115]))
    r268 = (13.7 * y[1317] * y[838] * y[115]) / (1 + (y[1317] * y[838] * y[115]))
    r269 = (13.7 * y[1317] * y[777] * y[115]) / (1 + (y[1317] * y[777] * y[115]))
    r272 = (13.7 * y[1319] * y[668] * y[419]) / (1 + (y[1319] * y[668] * y[419]))
    r275 = (13.7 * y[1321] * y[666] * y[635]) / (1 + (y[1321] * y[666] * y[635]))
    r276 = (13.7 * y[1321] * y[666] * y[867]) / (1 + (y[1321] * y[666] * y[867]))
    r277 = (13.7 * y[1321] * y[666] * y[866]) / (1 + (y[1321] * y[666] * y[866]))
    r283 = (13.7 * y[1323] * y[1] * y[696] * y[0]) / (1 + (y[1323] * y[1] * y[696] * y[0]))
    r284 = (13.7 * y[1324] * y[229] * y[852]) / (1 + (y[1324] * y[229] * y[852]))
    r401 = (13.7 * y[1376] * y[1] * y[492]) / (1 + (y[1376] * y[1] * y[492]))
    r402 = (13.7 * y[1376] * y[1] * y[401]) / (1 + (y[1376] * y[1] * y[401]))
    r403 = (13.7 * y[1377] * y[1] * y[58]) / (1 + (y[1377] * y[1] * y[58]))
    r404 = (13.7 * y[1378] * y[72] * y[648]) / (1 + (y[1378] * y[72] * y[648]))
    r405 = (13.7 * y[1379] * y[403] * y[100]) / (1 + (y[1379] * y[403] * y[100]))
    r406 = (13.7 * y[1380] * y[1] * y[482]) / (1 + (y[1380] * y[1] * y[482]))
    r407 = (13.7 * y[1381] * y[60] * y[392]) / (1 + (y[1381] * y[60] * y[392]))
    r408 = (13.7 * y[1382] * y[196] * y[45]) / (1 + (y[1382] * y[196] * y[45]))
    r409 = (13.7 * y[1382] * y[1] * y[45]) / (1 + (y[1382] * y[1] * y[45]))
    r410 = (13.7 * y[1382] * y[43] * y[45]) / (1 + (y[1382] * y[43] * y[45]))
    r411 = (13.7 * y[1382] * y[60] * y[45] ) / (1 + (y[1382] * y[60] * y[45] ))
    r412 = (13.7 * y[1382] * y[72] * y[45]) / (1 + (y[1382] * y[72] * y[45]))
    r413 = (13.7 * y[1382] * y[196]) / (1 + (y[1382] * y[196]))
    r414 = (13.7 * y[1382] * y[196] * y[45]) / (1 + (y[1382] * y[196] * y[45]))
    r415 = (13.7 * y[1382] * y[1] * y[45]) / (1 + (y[1382] * y[1] * y[45]))
    r416 = (13.7 * y[1382] * y[43] * y[45]) / (1 + (y[1382] * y[43] * y[45]))
    r417 = (13.7 * y[1382] * y[60] * y[45] ) / (1 + (y[1382] * y[60] * y[45] ))
    r418 = (13.7 * y[1382] * y[72] * y[45]) / (1 + (y[1382] * y[72] * y[45]))
    r419 = (13.7 * y[1382] * y[196]) / (1 + (y[1382] * y[196]))
    r420 = (13.7 * y[1382] * y[196] * y[45]) / (1 + (y[1382] * y[196] * y[45]))
    r421 = (13.7 * y[1382] * y[1] * y[45]) / (1 + (y[1382] * y[1] * y[45]))
    r422 = (13.7 * y[1382] * y[43] * y[45]) / (1 + (y[1382] * y[43] * y[45]))
    r423 = (13.7 * y[1382] * y[60] * y[45] ) / (1 + (y[1382] * y[60] * y[45] ))
    r424 = (13.7 * y[1382] * y[72] * y[45]) / (1 + (y[1382] * y[72] * y[45]))
    r425 = (13.7 * y[1382] * y[196]) / (1 + (y[1382] * y[196]))
    r426 = (13.7 * y[1382] * y[196] * y[45]) / (1 + (y[1382] * y[196] * y[45]))
    r427 = (13.7 * y[1382] * y[1] * y[45]) / (1 + (y[1382] * y[1] * y[45]))
    r428 = (13.7 * y[1382] * y[43] * y[45]) / (1 + (y[1382] * y[43] * y[45]))
    r429 = (13.7 * y[1382] * y[60] * y[45] ) / (1 + (y[1382] * y[60] * y[45] ))
    r430 = (13.7 * y[1382] * y[72] * y[45]) / (1 + (y[1382] * y[72] * y[45]))
    r432 = (13.7 * y[1382] * y[196] * y[45]) / (1 + (y[1382] * y[196] * y[45]))
    r433 = (13.7 * y[1382] * y[1] * y[45]) / (1 + (y[1382] * y[1] * y[45]))
    r434 = (13.7 * y[1382] * y[43] * y[45]) / (1 + (y[1382] * y[43] * y[45]))
    r435 = (13.7 * y[1382] * y[60] * y[45] ) / (1 + (y[1382] * y[60] * y[45] ))
    r436 = (13.7 * y[1382] * y[72] * y[45]) / (1 + (y[1382] * y[72] * y[45]))
    r438 = (13.7 * y[1382] * y[196] * y[45]) / (1 + (y[1382] * y[196] * y[45]))
    r439 = (13.7 * y[1382] * y[1] * y[45]) / (1 + (y[1382] * y[1] * y[45]))
    r440 = (13.7 * y[1382] * y[43] * y[45]) / (1 + (y[1382] * y[43] * y[45]))
    r441 = (13.7 * y[1382] * y[60] * y[45] ) / (1 + (y[1382] * y[60] * y[45] ))
    r442 = (13.7 * y[1382] * y[72] * y[45]) / (1 + (y[1382] * y[72] * y[45]))
    r444 = (13.7 * y[1383] * y[438] * y[38]) / (1 + (y[1383] * y[438] * y[38]))
    r445 = (13.7 * y[1383] * y[127] * y[38]) / (1 + (y[1383] * y[127] * y[38]))
    r446 = (13.7 * y[1383] * y[272] * y[38]) / (1 + (y[1383] * y[272] * y[38]))
    r447 = (13.7 * y[1383] * y[402] * y[38]) / (1 + (y[1383] * y[402] * y[38]))
    r448 = (13.7 * y[1383] * y[403] * y[38]) / (1 + (y[1383] * y[403] * y[38]))
    r450 = (13.7 * y[1383] * y[438] * y[38]) / (1 + (y[1383] * y[438] * y[38]))
    r451 = (13.7 * y[1383] * y[127] * y[38]) / (1 + (y[1383] * y[127] * y[38]))
    r452 = (13.7 * y[1383] * y[272] * y[38]) / (1 + (y[1383] * y[272] * y[38]))
    r453 = (13.7 * y[1383] * y[402] * y[38]) / (1 + (y[1383] * y[402] * y[38]))
    r454 = (13.7 * y[1383] * y[403] * y[38]) / (1 + (y[1383] * y[403] * y[38]))
    r456 = (13.7 * y[1383] * y[438] * y[38]) / (1 + (y[1383] * y[438] * y[38]))
    r457 = (13.7 * y[1383] * y[272] * y[38]) / (1 + (y[1383] * y[272] * y[38]))
    r458 = (13.7 * y[1383] * y[272] * y[38]) / (1 + (y[1383] * y[272] * y[38]))
    r459 = (13.7 * y[1383] * y[402] * y[38]) / (1 + (y[1383] * y[402] * y[38]))
    r460 = (13.7 * y[1383] * y[403] * y[38]) / (1 + (y[1383] * y[403] * y[38]))
    r462 = (13.7 * y[1383] * y[438] * y[38]) / (1 + (y[1383] * y[438] * y[38]))
    r463 = (13.7 * y[1383] * y[127] * y[38]) / (1 + (y[1383] * y[127] * y[38]))
    r464 = (13.7 * y[1383] * y[272] * y[38]) / (1 + (y[1383] * y[272] * y[38]))
    r465 = (13.7 * y[1383] * y[402] * y[38]) / (1 + (y[1383] * y[402] * y[38]))
    r466 = (13.7 * y[1383] * y[403] * y[38]) / (1 + (y[1383] * y[403] * y[38]))
    r468 = (13.7 * y[1383] * y[438] * y[38]) / (1 + (y[1383] * y[438] * y[38]))
    r469 = (13.7 * y[1383] * y[127] * y[38]) / (1 + (y[1383] * y[127] * y[38]))
    r470 = (13.7 * y[1383] * y[272] * y[38]) / (1 + (y[1383] * y[272] * y[38]))
    r471 = (13.7 * y[1383] * y[402] * y[38]) / (1 + (y[1383] * y[402] * y[38]))
    r472 = (13.7 * y[1383] * y[403] * y[38]) / (1 + (y[1383] * y[403] * y[38]))
    r474 = (13.7 * y[1383] * y[438] * y[38]) / (1 + (y[1383] * y[438] * y[38]))
    r475 = (13.7 * y[1383] * y[127] * y[38]) / (1 + (y[1383] * y[127] * y[38]))
    r476 = (13.7 * y[1383] * y[272] * y[38]) / (1 + (y[1383] * y[272] * y[38]))
    r477 = (13.7 * y[1383] * y[402] * y[38]) / (1 + (y[1383] * y[402] * y[38]))
    r478 = (13.7 * y[1383] * y[403] * y[38]) / (1 + (y[1383] * y[403] * y[38]))
    r480 = (13.7 * y[1384] * y[856] * y[43]) / (1 + (y[1384] * y[856] * y[43]))
    r481 = (13.7 * y[1385] * y[1]) / (1 + (y[1385] * y[1]))
    r482 = (13.7 * y[1386] * y[183] * y[1] * y[273] * y[77]) / (1 + (y[1386] * y[183] * y[1] * y[273] * y[77]))
    r483 = (13.7 * y[1387] * y[72] * y[100]) / (1 + (y[1387] * y[72] * y[100]))
    r488 = (13.7 * y[1391] * y[460] * y[811] * y[1]) / (1 + (y[1391] * y[460] * y[811] * y[1]))
    r584 = (13.7 * y[1425] * y[555] * y[0]) / (1 + (y[1425] * y[555] * y[0]))
    r586 = (13.7 * y[1427] * y[78] * y[0]) / (1 + (y[1427] * y[78] * y[0]))
    r587 = (13.7 * y[1427] * y[446] * y[0]) / (1 + (y[1427] * y[446] * y[0]))
    r588 = (13.7 * y[1427] * y[509] * y[0]) / (1 + (y[1427] * y[509] * y[0]))
    r589 = (13.7 * y[1427] * y[840] * y[0]) / (1 + (y[1427] * y[840] * y[0]))
    r671 = (13.7 * y[1458] * y[893] * y[0]) / (1 + (y[1458] * y[893] * y[0]))
    r724 = (13.7 * y[1484] * y[1] * y[79] * y[1540]) / (1 + (y[1484] * y[1] * y[79] * y[1540]))
    r725 = (13.7 * y[1485] * y[1] * y[70] * y[1542]) / (1 + (y[1485] * y[1] * y[70] * y[1542]))
    r726 = (13.7 * y[1485] * y[1] * y[696] * y[1542]) / (1 + (y[1485] * y[1] * y[696] * y[1542]))
    r727 = (13.7 * y[1486] * y[1] * y[62] * y[1544]) / (1 + (y[1486] * y[1] * y[62] * y[1544]))
    r728 = (13.7 * y[1486] * y[1] * y[62] * y[1546]) / (1 + (y[1486] * y[1] * y[62] * y[1546]))
    r729 = (13.7 * y[1487] * y[519] * y[48] * y[1]) / (1 + (y[1487] * y[519] * y[48] * y[1]))
    r730 = (13.7 * y[1488] * y[1] * y[129] * y[1548]) / (1 + (y[1488] * y[1] * y[129] * y[1548]))
    r731 = (13.7 * y[1488] * y[1] * y[129] * y[1550]) / (1 + (y[1488] * y[1] * y[129] * y[1550]))
    r732 = (13.7 * y[1488] * y[1] * y[129] * y[1552]) / (1 + (y[1488] * y[1] * y[129] * y[1552]))
    r733 = (13.7 * y[1488] * y[1] * y[129] * y[1554]) / (1 + (y[1488] * y[1] * y[129] * y[1554]))
    r734 = (13.7 * y[1488] * y[1] * y[129] * y[1556]) / (1 + (y[1488] * y[1] * y[129] * y[1556]))
    r735 = (13.7 * y[1488] * y[1] * y[129] * y[1558]) / (1 + (y[1488] * y[1] * y[129] * y[1558]))
    r736 = (13.7 * y[1488] * y[1] * y[129] * y[1560]) / (1 + (y[1488] * y[1] * y[129] * y[1560]))
    r737 = (13.7 * y[1488] * y[1] * y[129] * y[1562]) / (1 + (y[1488] * y[1] * y[129] * y[1562]))
    r738 = (13.7 * y[1488] * y[1] * y[129] * y[1548]) / (1 + (y[1488] * y[1] * y[129] * y[1548]))
    r739 = (13.7 * y[1488] * y[1] * y[129] * y[1550]) / (1 + (y[1488] * y[1] * y[129] * y[1550]))
    r740 = (13.7 * y[1488] * y[1] * y[129] * y[1552]) / (1 + (y[1488] * y[1] * y[129] * y[1552]))
    r741 = (13.7 * y[1488] * y[1] * y[129] * y[1554]) / (1 + (y[1488] * y[1] * y[129] * y[1554]))
    r742 = (13.7 * y[1488] * y[1] * y[129] * y[1556]) / (1 + (y[1488] * y[1] * y[129] * y[1556]))
    r743 = (13.7 * y[1488] * y[1] * y[129] * y[1558]) / (1 + (y[1488] * y[1] * y[129] * y[1558]))
    r744 = (13.7 * y[1488] * y[1] * y[129] * y[1560]) / (1 + (y[1488] * y[1] * y[129] * y[1560]))
    r745 = (13.7 * y[1488] * y[1] * y[129] * y[1562]) / (1 + (y[1488] * y[1] * y[129] * y[1562]))
    r746 = (13.7 * y[1489] * y[1] * y[36] * y[1564]) / (1 + (y[1489] * y[1] * y[36] * y[1564]))
    r747 = (13.7 * y[1489] * y[1] * y[36] * y[1564]) / (1 + (y[1489] * y[1] * y[36] * y[1564]))
    r748 = (13.7 * y[1490] * y[1] * y[143] * y[1566]) / (1 + (y[1490] * y[1] * y[143] * y[1566]))
    r749 = (13.7 * y[1491] * y[1] * y[94] * y[1568]) / (1 + (y[1491] * y[1] * y[94] * y[1568]))
    r750 = (13.7 * y[1492] * y[520] * y[24] * y[1]) / (1 + (y[1492] * y[520] * y[24] * y[1]))
    r751 = (13.7 * y[1493] * y[1] * y[59] * y[1570]) / (1 + (y[1493] * y[1] * y[59] * y[1570]))
    r752 = (13.7 * y[1494] * y[1] * y[75] * y[1572]) / (1 + (y[1494] * y[1] * y[75] * y[1572]))
    r753 = (13.7 * y[1495] * y[1] * y[76] * y[1574]) / (1 + (y[1495] * y[1] * y[76] * y[1574]))
    r754 = (13.7 * y[1495] * y[1] * y[76] * y[1574]) / (1 + (y[1495] * y[1] * y[76] * y[1574]))
    r755 = (13.7 * y[1496] * y[1] * y[131] * y[1576]) / (1 + (y[1496] * y[1] * y[131] * y[1576]))
    r756 = (13.7 * y[1497] * y[1] * y[119] * y[1578]) / (1 + (y[1497] * y[1] * y[119] * y[1578]))
    r757 = (13.7 * y[1498] * y[1] * y[183] * y[1580]) / (1 + (y[1498] * y[1] * y[183] * y[1580]))
    r758 = (13.7 * y[1499] * y[1] * y[119] * y[1578]) / (1 + (y[1499] * y[1] * y[119] * y[1578]))
    r759 = (13.7 * y[1500] * y[1] * y[383] * y[1583]) / (1 + (y[1500] * y[1] * y[383] * y[1583]))
    r760 = (13.7 * y[1501] * y[1] * y[46] * y[1585]) / (1 + (y[1501] * y[1] * y[46] * y[1585]))
    r761 = (13.7 * y[1502] * y[1] * y[40] * y[1587]) / (1 + (y[1502] * y[1] * y[40] * y[1587]))
    r762 = (13.7 * y[1503] * y[1] * y[178] * y[1589]) / (1 + (y[1503] * y[1] * y[178] * y[1589]))
    r763 = (13.7 * y[1504] * y[1] * y[554] * y[9]) / (1 + (y[1504] * y[1] * y[554] * y[9]))
    r764 = (13.7 * y[1505] * y[1] * y[48] * y[13]) / (1 + (y[1505] * y[1] * y[48] * y[13]))
    r766 = (13.7 * y[1507] * y[1] * y[822] * y[821]) / (1 + (y[1507] * y[1] * y[822] * y[821]))
    r767 = (13.7 * y[1507] * y[1] * y[822] * y[1591]) / (1 + (y[1507] * y[1] * y[822] * y[1591]))
    r768 = (13.7 * y[1507] * y[1] * y[822] * y[1592]) / (1 + (y[1507] * y[1] * y[822] * y[1592]))
    r769 = (13.7 * y[1507] * y[1] * y[822]) / (1 + (y[1507] * y[1] * y[822]))
    r771 = (13.7 * y[1507] * y[1] * y[764] * y[1592]) / (1 + (y[1507] * y[1] * y[764] * y[1592]))
    r772 = (13.7 * y[1507] * y[1] * y[822] * y[821]) / (1 + (y[1507] * y[1] * y[822] * y[821]))
    r773 = (13.7 * y[1507] * y[1] * y[822] * y[1591]) / (1 + (y[1507] * y[1] * y[822] * y[1591]))
    r774 = (13.7 * y[1507] * y[1] * y[822] * y[1592]) / (1 + (y[1507] * y[1] * y[822] * y[1592]))
    r775 = (13.7 * y[1507] * y[1] * y[822]) / (1 + (y[1507] * y[1] * y[822]))
    r777 = (13.7 * y[1507] * y[1] * y[764] * y[1592]) / (1 + (y[1507] * y[1] * y[764] * y[1592]))
    r778 = (13.7 * y[1507] * y[1] * y[822] * y[821]) / (1 + (y[1507] * y[1] * y[822] * y[821]))
    r779 = (13.7 * y[1507] * y[1] * y[822] * y[1591]) / (1 + (y[1507] * y[1] * y[822] * y[1591]))
    r780 = (13.7 * y[1507] * y[1] * y[822] * y[1592]) / (1 + (y[1507] * y[1] * y[822] * y[1592]))
    r781 = (13.7 * y[1507] * y[1] * y[822]) / (1 + (y[1507] * y[1] * y[822]))
    r783 = (13.7 * y[1507] * y[1] * y[764] * y[1592]) / (1 + (y[1507] * y[1] * y[764] * y[1592]))
    r784 = (13.7 * y[1508] * y[1] * y[457] * y[13]) / (1 + (y[1508] * y[1] * y[457] * y[13]))
    r795 = (13.7 * y[1519] * y[1] * y[116] * y[1594]) / (1 + (y[1519] * y[1] * y[116] * y[1594]))
    r796 = (13.7 * y[1519] * y[1] * y[1596]) / (1 + (y[1519] * y[1] * y[1596]))
    r798 = (13.7 * y[1519] * y[1] * y[116] * y[1594]) / (1 + (y[1519] * y[1] * y[116] * y[1594]))
    r799 = (13.7 * y[1519] * y[1] * y[116]) / (1 + (y[1519] * y[1] * y[116]))
    r802 = (13.7 * y[1521] * y[860] * y[46] * y[1]) / (1 + (y[1521] * y[860] * y[46] * y[1]))
    r810 = (13.7 * y[1526] * y[1] * y[308] * y[48]) / (1 + (y[1526] * y[1] * y[308] * y[48]))
    r812 = (13.7 * y[1527] * y[1] * y[432] * y[13]) / (1 + (y[1527] * y[1] * y[432] * y[13]))
    r813 = (13.7 * y[1527] * y[1] * y[432] * y[61] * y[0]) / (1 + (y[1527] * y[1] * y[432] * y[61] * y[0]))
    r814 = (13.7 * y[1527] * y[841] * y[1] * y[61] * y[0]) / (1 + (y[1527] * y[841] * y[1] * y[61] * y[0]))
    r819 = (13.7 * y[1529] * y[1] * y[48] * y[13]) / (1 + (y[1529] * y[1] * y[48] * y[13]))
    r820 = (13.7 * y[1529] * y[1] * y[48] * y[61] * y[0]) / (1 + (y[1529] * y[1] * y[48] * y[61] * y[0]))
    r822 = (13.7 * y[1529] * y[1] * y[48] * y[13]) / (1 + (y[1529] * y[1] * y[48] * y[13]))
    r823 = (13.7 * y[1529] * y[1] * y[48] * y[61] * y[0]) / (1 + (y[1529] * y[1] * y[48] * y[61] * y[0]))
    r256 = (13.7 * y[1312] * y[479] * y[12]) / (1 + (y[1312] * y[479] * y[12]))
    r258 = (13.7 * y[1313] * y[572] * y[12] * y[24]) / (1 + (y[1313] * y[572] * y[12] * y[24]))
    r259 = (13.7 * y[1314] * y[555] * y[12]) / (1 + (y[1314] * y[555] * y[12]))
    r260 = (13.7 * y[1315] * y[432] * y[12]) / (1 + (y[1315] * y[432] * y[12]))
    r261 = (13.7 * y[1315] * y[139] * y[12]) / (1 + (y[1315] * y[139] * y[12]))
    r262 = (13.7 * y[1316] * y[19] * y[12]) / (1 + (y[1316] * y[19] * y[12]))
    r263 = (13.7 * y[1316] * y[659] * y[12]) / (1 + (y[1316] * y[659] * y[12]))
    r264 = (13.7 * y[1317] * y[126] * y[12]) / (1 + (y[1317] * y[126] * y[12]))
    r265 = (13.7 * y[1317] * y[139] * y[12]) / (1 + (y[1317] * y[139] * y[12]))
    r266 = (13.7 * y[1317] * y[432] * y[12]) / (1 + (y[1317] * y[432] * y[12]))
    r270 = (13.7 * y[1318] * y[102] * y[12]) / (1 + (y[1318] * y[102] * y[12]))
    r271 = (13.7 * y[1318] * y[102] * y[12]) / (1 + (y[1318] * y[102] * y[12]))
    r282 = (13.7 * y[1323] * y[8] * y[12] * y[18]) / (1 + (y[1323] * y[8] * y[12] * y[18]))
    r582 = (13.7 * y[1423] * y[12] * y[0] ) / (1 + (y[1423] * y[12] * y[0] ))
    r806 = (13.7 * y[1523] * y[492] * y[12] * y[7] * y[8]) / (1 + (y[1523] * y[492] * y[12] * y[7] * y[8]))
    r807 = (13.7 * y[1523] * y[492] * y[12] * y[7] * y[8]) / (1 + (y[1523] * y[492] * y[12] * y[7] * y[8]))
    return (r241 + r257 + r267 + r268 + r269 + r272 + r275 + r276 + r277 + r283 + r284 + r401 + r402 + r403 + r404 + r405 + r406 + r407 + r408 + r409 + r410 + r411 + r412 + r413 + r414 + r415 + r416 + r417 + r418 + r419 + r420 + r421 + r422 + r423 + r424 + r425 + r426 + r427 + r428 + r429 + r430 + r432 + r433 + r434 + r435 + r436 + r438 + r439 + r440 + r441 + r442 + r444 + r445 + r446 + r447 + r448 + r450 + r451 + r452 + r453 + r454 + r456 + r457 + r458 + r459 + r460 + r462 + r463 + r464 + r465 + r466 + r468 + r469 + r470 + r471 + r472 + r474 + r475 + r476 + r477 + r478 + r480 + r481 + r482 + r483 + r488 + r584 + r586 + r587 + r588 + r589 + r671 + r724 + r725 + r726 + r727 + r728 + r729 + r730 + r731 + r732 + r733 + r734 + r735 + r736 + r737 + r738 + r739 + r740 + r741 + r742 + r743 + r744 + r745 + r746 + r747 + r748 + r749 + r750 + r751 + r752 + r753 + r754 + r755 + r756 + r757 + r758 + r759 + r760 + r761 + r762 + r763 + r764 + r766 + r767 + r768 + r769 + r771 + r772 + r773 + r774 + r775 + r777 + r778 + r779 + r780 + r781 + r783 + r784 + r795 + r796 + r798 + r799 + r802 + r810 + r812 + r813 + r814 + r819 + r820 + r822 + r823) - (r256 + r258 + r259 + r260 + r261 + r262 + r263 + r264 + r265 + r266 + r270 + r271 + r282 + r582 + r806 + r807)
 
def C00014(t, y):
    r145 = (13.7 * y[1264] * y[24] * y[5] * y[0]) / (1 + (y[1264] * y[24] * y[5] * y[0]))
    r146 = (13.7 * y[1264] * y[61] * y[0]) / (1 + (y[1264] * y[61] * y[0]))
    r547 = (13.7 * y[1407] * y[61] * y[0]) / (1 + (y[1407] * y[61] * y[0]))
    r548 = (13.7 * y[1407] * y[453] * y[0]) / (1 + (y[1407] * y[453] * y[0]))
    r549 = (13.7 * y[1407] * y[235] * y[0]) / (1 + (y[1407] * y[235] * y[0]))
    r551 = (13.7 * y[1409] * y[593] * y[0]) / (1 + (y[1409] * y[593] * y[0]))
    r552 = (13.7 * y[1409] * y[761] * y[0]) / (1 + (y[1409] * y[761] * y[0]))
    r553 = (13.7 * y[1409] * y[548] * y[0]) / (1 + (y[1409] * y[548] * y[0]))
    r554 = (13.7 * y[1409] * y[552] * y[0]) / (1 + (y[1409] * y[552] * y[0]))
    r555 = (13.7 * y[1409] * y[569] * y[0]) / (1 + (y[1409] * y[569] * y[0]))
    r557 = (13.7 * y[1409] * y[781] * y[0]) / (1 + (y[1409] * y[781] * y[0]))
    r558 = (13.7 * y[1409] * y[235] * y[0]) / (1 + (y[1409] * y[235] * y[0]))
    r561 = (13.7 * y[1410] * y[235] * y[0]) / (1 + (y[1410] * y[235] * y[0]))
    r567 = (13.7 * y[1414] * y[59] * y[0]) / (1 + (y[1414] * y[59] * y[0]))
    r568 = (13.7 * y[1414] * y[756] * y[0]) / (1 + (y[1414] * y[756] * y[0]))
    r577 = (13.7 * y[1419] * y[507] * y[0]) / (1 + (y[1419] * y[507] * y[0]))
    r578 = (13.7 * y[1420] * y[236] * y[0]) / (1 + (y[1420] * y[236] * y[0]))
    r579 = (13.7 * y[1421] * y[852] * y[0]) / (1 + (y[1421] * y[852] * y[0]))
    r581 = (13.7 * y[1422] * y[869] * y[0]) / (1 + (y[1422] * y[869] * y[0]))
    r645 = (13.7 * y[1450] * y[62]) / (1 + (y[1450] * y[62]))
    r647 = (13.7 * y[1450] * y[889] * y[0]) / (1 + (y[1450] * y[889] * y[0]))
    r649 = (13.7 * y[1450] * y[680]) / (1 + (y[1450] * y[680]))
    r650 = (13.7 * y[1451] * y[183]) / (1 + (y[1451] * y[183]))
    r651 = (13.7 * y[1451] * y[890] * y[0]) / (1 + (y[1451] * y[890] * y[0]))
    r653 = (13.7 * y[1451] * y[62]) / (1 + (y[1451] * y[62]))
    r654 = (13.7 * y[1451] * y[680]) / (1 + (y[1451] * y[680]))
    r655 = (13.7 * y[1452] * y[464] * y[0]) / (1 + (y[1452] * y[464] * y[0]))
    r657 = (13.7 * y[1454] * y[61] * y[0]) / (1 + (y[1454] * y[61] * y[0]))
    r660 = (13.7 * y[1454] * y[61] * y[0]) / (1 + (y[1454] * y[61] * y[0]))
    r663 = (13.7 * y[1454] * y[61] * y[0]) / (1 + (y[1454] * y[61] * y[0]))
    r803 = (13.7 * y[1522] * y[61] * y[0]) / (1 + (y[1522] * y[61] * y[0]))
    r811 = (13.7 * y[1527] * y[61] * y[0]) / (1 + (y[1527] * y[61] * y[0]))
    r818 = (13.7 * y[1529] * y[61] * y[0]) / (1 + (y[1529] * y[61] * y[0]))
    r821 = (13.7 * y[1529] * y[61] * y[0]) / (1 + (y[1529] * y[61] * y[0]))
    r824 = (13.7 * y[1530] * y[61] * y[0]) / (1 + (y[1530] * y[61] * y[0]))
    r830 = (13.7 * y[1530] * y[61] * y[0]) / (1 + (y[1530] * y[61] * y[0]))
    r836 = (13.7 * y[1530] * y[61] * y[0]) / (1 + (y[1530] * y[61] * y[0]))
    r163 = (13.7 * y[1268] * y[126] * y[13] * y[5] ) / (1 + (y[1268] * y[126] * y[13] * y[5] ))
    r353 = (13.7 * y[1357] * y[1] * y[13] * y[273]) / (1 + (y[1357] * y[1] * y[13] * y[273]))
    r355 = (13.7 * y[1357] * y[13] * y[273]) / (1 + (y[1357] * y[13] * y[273]))
    r356 = (13.7 * y[1357] * y[1] * y[13] * y[273]) / (1 + (y[1357] * y[1] * y[13] * y[273]))
    r358 = (13.7 * y[1357] * y[13] * y[273]) / (1 + (y[1357] * y[13] * y[273]))
    r556 = (13.7 * y[1409] * y[414] * y[13]) / (1 + (y[1409] * y[414] * y[13]))
    r659 = (13.7 * y[1454] * y[678] * y[13]) / (1 + (y[1454] * y[678] * y[13]))
    r662 = (13.7 * y[1454] * y[678] * y[13]) / (1 + (y[1454] * y[678] * y[13]))
    r665 = (13.7 * y[1454] * y[678] * y[13]) / (1 + (y[1454] * y[678] * y[13]))
    r764 = (13.7 * y[1505] * y[1] * y[48] * y[13]) / (1 + (y[1505] * y[1] * y[48] * y[13]))
    r784 = (13.7 * y[1508] * y[1] * y[457] * y[13]) / (1 + (y[1508] * y[1] * y[457] * y[13]))
    r804 = (13.7 * y[1522] * y[1] * y[72] * y[13]) / (1 + (y[1522] * y[1] * y[72] * y[13]))
    r812 = (13.7 * y[1527] * y[1] * y[432] * y[13]) / (1 + (y[1527] * y[1] * y[432] * y[13]))
    r819 = (13.7 * y[1529] * y[1] * y[48] * y[13]) / (1 + (y[1529] * y[1] * y[48] * y[13]))
    r822 = (13.7 * y[1529] * y[1] * y[48] * y[13]) / (1 + (y[1529] * y[1] * y[48] * y[13]))
    r828 = (13.7 * y[1530] * y[13] * y[891]) / (1 + (y[1530] * y[13] * y[891]))
    r829 = (13.7 * y[1530] * y[1] * y[273] * y[13]) / (1 + (y[1530] * y[1] * y[273] * y[13]))
    r834 = (13.7 * y[1530] * y[13] * y[891]) / (1 + (y[1530] * y[13] * y[891]))
    r835 = (13.7 * y[1530] * y[1] * y[273] * y[13]) / (1 + (y[1530] * y[1] * y[273] * y[13]))
    r840 = (13.7 * y[1530] * y[13] * y[891]) / (1 + (y[1530] * y[13] * y[891]))
    r841 = (13.7 * y[1530] * y[1] * y[273] * y[13]) / (1 + (y[1530] * y[1] * y[273] * y[13]))
    return (r145 + r146 + r547 + r548 + r549 + r551 + r552 + r553 + r554 + r555 + r557 + r558 + r561 + r567 + r568 + r577 + r578 + r579 + r581 + r645 + r647 + r649 + r650 + r651 + r653 + r654 + r655 + r657 + r660 + r663 + r803 + r811 + r818 + r821 + r824 + r830 + r836) - (r163 + r353 + r355 + r356 + r358 + r556 + r659 + r662 + r665 + r764 + r784 + r804 + r812 + r819 + r822 + r828 + r829 + r834 + r835 + r840 + r841)
 
def C00015(t, y):
    r97 = (13.7 * y[1253] * y[510] * y[322] * y[0]) / (1 + (y[1253] * y[510] * y[322] * y[0]))
    r105 = (13.7 * y[1253] * y[510] * y[322] * y[0]) / (1 + (y[1253] * y[510] * y[322] * y[0]))
    r113 = (13.7 * y[1253] * y[510] * y[322] * y[0]) / (1 + (y[1253] * y[510] * y[322] * y[0]))
    r251 = (13.7 * y[1311] * y[670] * y[42]) / (1 + (y[1311] * y[670] * y[42]))
    r253 = (13.7 * y[1311] * y[742] * y[42]) / (1 + (y[1311] * y[742] * y[42]))
    r334 = (13.7 * y[1348] * y[72] * y[21]) / (1 + (y[1348] * y[72] * y[21]))
    r366 = (13.7 * y[1364] * y[1] * y[102]) / (1 + (y[1364] * y[1] * y[102]))
    r679 = (13.7 * y[1465] * y[42] * y[0]) / (1 + (y[1465] * y[42] * y[0]))
    r375 = (13.7 * y[1367] * y[1] * y[14]) / (1 + (y[1367] * y[1] * y[14]))
    r680 = (13.7 * y[1465] * y[431] * y[14]) / (1 + (y[1465] * y[431] * y[14]))
    return (r97 + r105 + r113 + r251 + r253 + r334 + r366 + r679) - (r375 + r680)
 
def C00016(t, y):
    r403 = (13.7 * y[1377] * y[1] * y[58]) / (1 + (y[1377] * y[1] * y[58]))
    return (r403) - (0)
 
def C00017(t, y):
    return (0) - (0)
 
def C00018(t, y):
    return (0) - (0)
 
def C00019(t, y):
    r178 = (13.7 * y[1273] * y[18] * y[150]) / (1 + (y[1273] * y[18] * y[150]))
    r179 = (13.7 * y[1274] * y[18] * y[475]) / (1 + (y[1274] * y[18] * y[475]))
    r180 = (13.7 * y[1274] * y[18] * y[475]) / (1 + (y[1274] * y[18] * y[475]))
    r181 = (13.7 * y[1274] * y[18] * y[803]) / (1 + (y[1274] * y[18] * y[803]))
    r182 = (13.7 * y[1274] * y[18] * y[544]) / (1 + (y[1274] * y[18] * y[544]))
    r185 = (13.7 * y[1276] * y[862] * y[18]) / (1 + (y[1276] * y[862] * y[18]))
    r186 = (13.7 * y[1277] * y[18] * y[234]) / (1 + (y[1277] * y[18] * y[234]))
    r187 = (13.7 * y[1278] * y[18] * y[882]) / (1 + (y[1278] * y[18] * y[882]))
    r188 = (13.7 * y[1280] * y[18] * y[526]) / (1 + (y[1280] * y[18] * y[526]))
    r189 = (13.7 * y[1281] * y[549] * y[18]) / (1 + (y[1281] * y[549] * y[18]))
    r190 = (13.7 * y[1282] * y[18] * y[526]) / (1 + (y[1282] * y[18] * y[526]))
    r282 = (13.7 * y[1323] * y[8] * y[12] * y[18]) / (1 + (y[1323] * y[8] * y[12] * y[18]))
    r506 = (13.7 * y[1279] * y[18] * y[863]) / (1 + (y[1279] * y[18] * y[863]))
    r605 = (13.7 * y[1439] * y[43] * y[18] * y[29]) / (1 + (y[1439] * y[43] * y[18] * y[29]))
    return (0) - (r178 + r179 + r180 + r181 + r182 + r185 + r186 + r187 + r188 + r189 + r190 + r282 + r506 + r605)
 
def C00020(t, y):
    r233 = (13.7 * y[1300] * y[881] * y[852]) / (1 + (y[1300] * y[881] * y[852]))
    r234 = (13.7 * y[1300] * y[881] * y[852]) / (1 + (y[1300] * y[881] * y[852]))
    r371 = (13.7 * y[1366] * y[65] * y[7]) / (1 + (y[1366] * y[65] * y[7]))
    r395 = (13.7 * y[1371] * y[1] * y[113]) / (1 + (y[1371] * y[1] * y[113]))
    r396 = (13.7 * y[1371] * y[1] * y[113]) / (1 + (y[1371] * y[1] * y[113]))
    r397 = (13.7 * y[1372] * y[1] * y[354]) / (1 + (y[1372] * y[1] * y[354]))
    r398 = (13.7 * y[1373] * y[1] * y[506]) / (1 + (y[1373] * y[1] * y[506]))
    r399 = (13.7 * y[1374] * y[1] * y[43]) / (1 + (y[1374] * y[1] * y[43]))
    r488 = (13.7 * y[1391] * y[460] * y[811] * y[1]) / (1 + (y[1391] * y[460] * y[811] * y[1]))
    r490 = (13.7 * y[1392] * y[811] * y[812] * y[29]) / (1 + (y[1392] * y[811] * y[812] * y[29]))
    r504 = (13.7 * y[1400] * y[53] * y[0]) / (1 + (y[1400] * y[53] * y[0]))
    r666 = (13.7 * y[1455] * y[600]) / (1 + (y[1455] * y[600]))
    r724 = (13.7 * y[1484] * y[1] * y[79] * y[1540]) / (1 + (y[1484] * y[1] * y[79] * y[1540]))
    r725 = (13.7 * y[1485] * y[1] * y[70] * y[1542]) / (1 + (y[1485] * y[1] * y[70] * y[1542]))
    r726 = (13.7 * y[1485] * y[1] * y[696] * y[1542]) / (1 + (y[1485] * y[1] * y[696] * y[1542]))
    r727 = (13.7 * y[1486] * y[1] * y[62] * y[1544]) / (1 + (y[1486] * y[1] * y[62] * y[1544]))
    r728 = (13.7 * y[1486] * y[1] * y[62] * y[1546]) / (1 + (y[1486] * y[1] * y[62] * y[1546]))
    r729 = (13.7 * y[1487] * y[519] * y[48] * y[1]) / (1 + (y[1487] * y[519] * y[48] * y[1]))
    r730 = (13.7 * y[1488] * y[1] * y[129] * y[1548]) / (1 + (y[1488] * y[1] * y[129] * y[1548]))
    r731 = (13.7 * y[1488] * y[1] * y[129] * y[1550]) / (1 + (y[1488] * y[1] * y[129] * y[1550]))
    r732 = (13.7 * y[1488] * y[1] * y[129] * y[1552]) / (1 + (y[1488] * y[1] * y[129] * y[1552]))
    r733 = (13.7 * y[1488] * y[1] * y[129] * y[1554]) / (1 + (y[1488] * y[1] * y[129] * y[1554]))
    r734 = (13.7 * y[1488] * y[1] * y[129] * y[1556]) / (1 + (y[1488] * y[1] * y[129] * y[1556]))
    r735 = (13.7 * y[1488] * y[1] * y[129] * y[1558]) / (1 + (y[1488] * y[1] * y[129] * y[1558]))
    r736 = (13.7 * y[1488] * y[1] * y[129] * y[1560]) / (1 + (y[1488] * y[1] * y[129] * y[1560]))
    r737 = (13.7 * y[1488] * y[1] * y[129] * y[1562]) / (1 + (y[1488] * y[1] * y[129] * y[1562]))
    r738 = (13.7 * y[1488] * y[1] * y[129] * y[1548]) / (1 + (y[1488] * y[1] * y[129] * y[1548]))
    r739 = (13.7 * y[1488] * y[1] * y[129] * y[1550]) / (1 + (y[1488] * y[1] * y[129] * y[1550]))
    r740 = (13.7 * y[1488] * y[1] * y[129] * y[1552]) / (1 + (y[1488] * y[1] * y[129] * y[1552]))
    r741 = (13.7 * y[1488] * y[1] * y[129] * y[1554]) / (1 + (y[1488] * y[1] * y[129] * y[1554]))
    r742 = (13.7 * y[1488] * y[1] * y[129] * y[1556]) / (1 + (y[1488] * y[1] * y[129] * y[1556]))
    r743 = (13.7 * y[1488] * y[1] * y[129] * y[1558]) / (1 + (y[1488] * y[1] * y[129] * y[1558]))
    r744 = (13.7 * y[1488] * y[1] * y[129] * y[1560]) / (1 + (y[1488] * y[1] * y[129] * y[1560]))
    r745 = (13.7 * y[1488] * y[1] * y[129] * y[1562]) / (1 + (y[1488] * y[1] * y[129] * y[1562]))
    r746 = (13.7 * y[1489] * y[1] * y[36] * y[1564]) / (1 + (y[1489] * y[1] * y[36] * y[1564]))
    r747 = (13.7 * y[1489] * y[1] * y[36] * y[1564]) / (1 + (y[1489] * y[1] * y[36] * y[1564]))
    r748 = (13.7 * y[1490] * y[1] * y[143] * y[1566]) / (1 + (y[1490] * y[1] * y[143] * y[1566]))
    r749 = (13.7 * y[1491] * y[1] * y[94] * y[1568]) / (1 + (y[1491] * y[1] * y[94] * y[1568]))
    r750 = (13.7 * y[1492] * y[520] * y[24] * y[1]) / (1 + (y[1492] * y[520] * y[24] * y[1]))
    r751 = (13.7 * y[1493] * y[1] * y[59] * y[1570]) / (1 + (y[1493] * y[1] * y[59] * y[1570]))
    r752 = (13.7 * y[1494] * y[1] * y[75] * y[1572]) / (1 + (y[1494] * y[1] * y[75] * y[1572]))
    r753 = (13.7 * y[1495] * y[1] * y[76] * y[1574]) / (1 + (y[1495] * y[1] * y[76] * y[1574]))
    r754 = (13.7 * y[1495] * y[1] * y[76] * y[1574]) / (1 + (y[1495] * y[1] * y[76] * y[1574]))
    r755 = (13.7 * y[1496] * y[1] * y[131] * y[1576]) / (1 + (y[1496] * y[1] * y[131] * y[1576]))
    r756 = (13.7 * y[1497] * y[1] * y[119] * y[1578]) / (1 + (y[1497] * y[1] * y[119] * y[1578]))
    r757 = (13.7 * y[1498] * y[1] * y[183] * y[1580]) / (1 + (y[1498] * y[1] * y[183] * y[1580]))
    r758 = (13.7 * y[1499] * y[1] * y[119] * y[1578]) / (1 + (y[1499] * y[1] * y[119] * y[1578]))
    r759 = (13.7 * y[1500] * y[1] * y[383] * y[1583]) / (1 + (y[1500] * y[1] * y[383] * y[1583]))
    r760 = (13.7 * y[1501] * y[1] * y[46] * y[1585]) / (1 + (y[1501] * y[1] * y[46] * y[1585]))
    r761 = (13.7 * y[1502] * y[1] * y[40] * y[1587]) / (1 + (y[1502] * y[1] * y[40] * y[1587]))
    r762 = (13.7 * y[1503] * y[1] * y[178] * y[1589]) / (1 + (y[1503] * y[1] * y[178] * y[1589]))
    r763 = (13.7 * y[1504] * y[1] * y[554] * y[9]) / (1 + (y[1504] * y[1] * y[554] * y[9]))
    r764 = (13.7 * y[1505] * y[1] * y[48] * y[13]) / (1 + (y[1505] * y[1] * y[48] * y[13]))
    r766 = (13.7 * y[1507] * y[1] * y[822] * y[821]) / (1 + (y[1507] * y[1] * y[822] * y[821]))
    r767 = (13.7 * y[1507] * y[1] * y[822] * y[1591]) / (1 + (y[1507] * y[1] * y[822] * y[1591]))
    r768 = (13.7 * y[1507] * y[1] * y[822] * y[1592]) / (1 + (y[1507] * y[1] * y[822] * y[1592]))
    r770 = (13.7 * y[1507] * y[820] * y[821]) / (1 + (y[1507] * y[820] * y[821]))
    r771 = (13.7 * y[1507] * y[1] * y[764] * y[1592]) / (1 + (y[1507] * y[1] * y[764] * y[1592]))
    r772 = (13.7 * y[1507] * y[1] * y[822] * y[821]) / (1 + (y[1507] * y[1] * y[822] * y[821]))
    r773 = (13.7 * y[1507] * y[1] * y[822] * y[1591]) / (1 + (y[1507] * y[1] * y[822] * y[1591]))
    r774 = (13.7 * y[1507] * y[1] * y[822] * y[1592]) / (1 + (y[1507] * y[1] * y[822] * y[1592]))
    r776 = (13.7 * y[1507] * y[820] * y[821]) / (1 + (y[1507] * y[820] * y[821]))
    r777 = (13.7 * y[1507] * y[1] * y[764] * y[1592]) / (1 + (y[1507] * y[1] * y[764] * y[1592]))
    r778 = (13.7 * y[1507] * y[1] * y[822] * y[821]) / (1 + (y[1507] * y[1] * y[822] * y[821]))
    r779 = (13.7 * y[1507] * y[1] * y[822] * y[1591]) / (1 + (y[1507] * y[1] * y[822] * y[1591]))
    r780 = (13.7 * y[1507] * y[1] * y[822] * y[1592]) / (1 + (y[1507] * y[1] * y[822] * y[1592]))
    r782 = (13.7 * y[1507] * y[820] * y[821]) / (1 + (y[1507] * y[820] * y[821]))
    r783 = (13.7 * y[1507] * y[1] * y[764] * y[1592]) / (1 + (y[1507] * y[1] * y[764] * y[1592]))
    r784 = (13.7 * y[1508] * y[1] * y[457] * y[13]) / (1 + (y[1508] * y[1] * y[457] * y[13]))
    r795 = (13.7 * y[1519] * y[1] * y[116] * y[1594]) / (1 + (y[1519] * y[1] * y[116] * y[1594]))
    r797 = (13.7 * y[1519] * y[744] * y[762]) / (1 + (y[1519] * y[744] * y[762]))
    r798 = (13.7 * y[1519] * y[1] * y[116] * y[1594]) / (1 + (y[1519] * y[1] * y[116] * y[1594]))
    r800 = (13.7 * y[1519] * y[744] * y[762]) / (1 + (y[1519] * y[744] * y[762]))
    r802 = (13.7 * y[1521] * y[860] * y[46] * y[1]) / (1 + (y[1521] * y[860] * y[46] * y[1]))
    r810 = (13.7 * y[1526] * y[1] * y[308] * y[48]) / (1 + (y[1526] * y[1] * y[308] * y[48]))
    r812 = (13.7 * y[1527] * y[1] * y[432] * y[13]) / (1 + (y[1527] * y[1] * y[432] * y[13]))
    r813 = (13.7 * y[1527] * y[1] * y[432] * y[61] * y[0]) / (1 + (y[1527] * y[1] * y[432] * y[61] * y[0]))
    r814 = (13.7 * y[1527] * y[841] * y[1] * y[61] * y[0]) / (1 + (y[1527] * y[841] * y[1] * y[61] * y[0]))
    r819 = (13.7 * y[1529] * y[1] * y[48] * y[13]) / (1 + (y[1529] * y[1] * y[48] * y[13]))
    r820 = (13.7 * y[1529] * y[1] * y[48] * y[61] * y[0]) / (1 + (y[1529] * y[1] * y[48] * y[61] * y[0]))
    r822 = (13.7 * y[1529] * y[1] * y[48] * y[13]) / (1 + (y[1529] * y[1] * y[48] * y[13]))
    r823 = (13.7 * y[1529] * y[1] * y[48] * y[61] * y[0]) / (1 + (y[1529] * y[1] * y[48] * y[61] * y[0]))
    r845 = (13.7 * y[1533] * y[2] * y[38] * y[1597]) / (1 + (y[1533] * y[2] * y[38] * y[1597]))
    r262 = (13.7 * y[1316] * y[19] * y[12]) / (1 + (y[1316] * y[19] * y[12]))
    r369 = (13.7 * y[1366] * y[1] * y[19]) / (1 + (y[1366] * y[1] * y[19]))
    return (r233 + r234 + r371 + r395 + r396 + r397 + r398 + r399 + r488 + r490 + r504 + r666 + r724 + r725 + r726 + r727 + r728 + r729 + r730 + r731 + r732 + r733 + r734 + r735 + r736 + r737 + r738 + r739 + r740 + r741 + r742 + r743 + r744 + r745 + r746 + r747 + r748 + r749 + r750 + r751 + r752 + r753 + r754 + r755 + r756 + r757 + r758 + r759 + r760 + r761 + r762 + r763 + r764 + r766 + r767 + r768 + r770 + r771 + r772 + r773 + r774 + r776 + r777 + r778 + r779 + r780 + r782 + r783 + r784 + r795 + r797 + r798 + r800 + r802 + r810 + r812 + r813 + r814 + r819 + r820 + r822 + r823 + r845) - (r262 + r369)
 
def C00021(t, y):
    r178 = (13.7 * y[1273] * y[18] * y[150]) / (1 + (y[1273] * y[18] * y[150]))
    r179 = (13.7 * y[1274] * y[18] * y[475]) / (1 + (y[1274] * y[18] * y[475]))
    r180 = (13.7 * y[1274] * y[18] * y[475]) / (1 + (y[1274] * y[18] * y[475]))
    r181 = (13.7 * y[1274] * y[18] * y[803]) / (1 + (y[1274] * y[18] * y[803]))
    r182 = (13.7 * y[1274] * y[18] * y[544]) / (1 + (y[1274] * y[18] * y[544]))
    r185 = (13.7 * y[1276] * y[862] * y[18]) / (1 + (y[1276] * y[862] * y[18]))
    r186 = (13.7 * y[1277] * y[18] * y[234]) / (1 + (y[1277] * y[18] * y[234]))
    r187 = (13.7 * y[1278] * y[18] * y[882]) / (1 + (y[1278] * y[18] * y[882]))
    r188 = (13.7 * y[1280] * y[18] * y[526]) / (1 + (y[1280] * y[18] * y[526]))
    r189 = (13.7 * y[1281] * y[549] * y[18]) / (1 + (y[1281] * y[549] * y[18]))
    r190 = (13.7 * y[1282] * y[18] * y[526]) / (1 + (y[1282] * y[18] * y[526]))
    r506 = (13.7 * y[1279] * y[18] * y[863]) / (1 + (y[1279] * y[18] * y[863]))
    r544 = (13.7 * y[1406] * y[20] * y[0] ) / (1 + (y[1406] * y[20] * y[0] ))
    return (r178 + r179 + r180 + r181 + r182 + r185 + r186 + r187 + r188 + r189 + r190 + r506) - (r544)
 
def C00022(t, y):
    r45 = (13.7 * y[1238] * y[181] * y[2]) / (1 + (y[1238] * y[181] * y[2]))
    r48 = (13.7 * y[1239] * y[250] * y[2]) / (1 + (y[1239] * y[250] * y[2]))
    r208 = (13.7 * y[1293] * y[462] * y[10] ) / (1 + (y[1293] * y[462] * y[10] ))
    r209 = (13.7 * y[1293] * y[750] * y[10]) / (1 + (y[1293] * y[750] * y[10]))
    r211 = (13.7 * y[1293] * y[462] * y[65]) / (1 + (y[1293] * y[462] * y[65]))
    r212 = (13.7 * y[1293] * y[750] * y[65]) / (1 + (y[1293] * y[750] * y[65]))
    r362 = (13.7 * y[1361] * y[71] * y[426]) / (1 + (y[1361] * y[71] * y[426]))
    r363 = (13.7 * y[1361] * y[71] * y[426]) / (1 + (y[1361] * y[71] * y[426]))
    r645 = (13.7 * y[1450] * y[62]) / (1 + (y[1450] * y[62]))
    r647 = (13.7 * y[1450] * y[889] * y[0]) / (1 + (y[1450] * y[889] * y[0]))
    r653 = (13.7 * y[1451] * y[62]) / (1 + (y[1451] * y[62]))
    r210 = (13.7 * y[1293] * y[21] * y[65]) / (1 + (y[1293] * y[21] * y[65]))
    r214 = (13.7 * y[1293] * y[21] * y[106]) / (1 + (y[1293] * y[21] * y[106]))
    r215 = (13.7 * y[1294] * y[21] * y[114]) / (1 + (y[1294] * y[21] * y[114]))
    r331 = (13.7 * y[1348] * y[1] * y[21] ) / (1 + (y[1348] * y[1] * y[21] ))
    r332 = (13.7 * y[1348] * y[43] * y[21]) / (1 + (y[1348] * y[43] * y[21]))
    r333 = (13.7 * y[1348] * y[60] * y[21]) / (1 + (y[1348] * y[60] * y[21]))
    r334 = (13.7 * y[1348] * y[72] * y[21]) / (1 + (y[1348] * y[72] * y[21]))
    r335 = (13.7 * y[1348] * y[78] * y[21]) / (1 + (y[1348] * y[78] * y[21]))
    r336 = (13.7 * y[1348] * y[127] * y[21]) / (1 + (y[1348] * y[127] * y[21]))
    r337 = (13.7 * y[1348] * y[272] * y[21]) / (1 + (y[1348] * y[272] * y[21]))
    r338 = (13.7 * y[1348] * y[196] * y[21]) / (1 + (y[1348] * y[196] * y[21]))
    r669 = (13.7 * y[1456] * y[397] * y[21]) / (1 + (y[1456] * y[397] * y[21]))
    return (r45 + r48 + r208 + r209 + r211 + r212 + r362 + r363 + r645 + r647 + r653) - (r210 + r214 + r215 + r331 + r332 + r333 + r334 + r335 + r336 + r337 + r338 + r669)
 
def C00023(t, y):
    return (0) - (0)
 
def C00024(t, y):
    r124 = (13.7 * y[1255] * y[81] * y[9] * y[2]) / (1 + (y[1255] * y[81] * y[9] * y[2]))
    r250 = (13.7 * y[1310] * y[335] * y[9]) / (1 + (y[1310] * y[335] * y[9]))
    r199 = (13.7 * y[1289] * y[23] * y[643]) / (1 + (y[1289] * y[23] * y[643]))
    r216 = (13.7 * y[1295] * y[23] * y[24]) / (1 + (y[1295] * y[23] * y[24]))
    r220 = (13.7 * y[1297] * y[23] * y[759]) / (1 + (y[1297] * y[23] * y[759]))
    r232 = (13.7 * y[1299] * y[23] * y[493]) / (1 + (y[1299] * y[23] * y[493]))
    r235 = (13.7 * y[1301] * y[23] * y[604]) / (1 + (y[1301] * y[23] * y[604]))
    r244 = (13.7 * y[1307] * y[23] * y[8]) / (1 + (y[1307] * y[23] * y[8]))
    r246 = (13.7 * y[1308] * y[611] * y[23] * y[0]) / (1 + (y[1308] * y[611] * y[23] * y[0]))
    r247 = (13.7 * y[1309] * y[23]) / (1 + (y[1309] * y[23]))
    r248 = (13.7 * y[1309] * y[97] * y[23]) / (1 + (y[1309] * y[97] * y[23]))
    r249 = (13.7 * y[1309] * y[23] * y[132]) / (1 + (y[1309] * y[23] * y[132]))
    r842 = (13.7 * y[1531] * y[1] * y[23] * y[273]) / (1 + (y[1531] * y[1] * y[23] * y[273]))
    r843 = (13.7 * y[1532] * y[1] * y[23] * y[273]) / (1 + (y[1532] * y[1] * y[23] * y[273]))
    r844 = (13.7 * y[1532] * y[1] * y[23] * y[273]) / (1 + (y[1532] * y[1] * y[23] * y[273]))
    return (r124 + r250) - (r199 + r216 + r220 + r232 + r235 + r244 + r246 + r247 + r248 + r249 + r842 + r843 + r844)
 
def C00025(t, y):
    r146 = (13.7 * y[1264] * y[61] * y[0]) / (1 + (y[1264] * y[61] * y[0]))
    r287 = (13.7 * y[1327] * y[395] * y[25]) / (1 + (y[1327] * y[395] * y[25]))
    r288 = (13.7 * y[1328] * y[61] * y[82]) / (1 + (y[1328] * y[61] * y[82]))
    r289 = (13.7 * y[1329] * y[119] * y[25]) / (1 + (y[1329] * y[119] * y[25]))
    r290 = (13.7 * y[1329] * y[178] * y[25]) / (1 + (y[1329] * y[178] * y[25]))
    r291 = (13.7 * y[1329] * y[383] * y[25]) / (1 + (y[1329] * y[383] * y[25]))
    r292 = (13.7 * y[1329] * y[539] * y[25]) / (1 + (y[1329] * y[539] * y[25]))
    r293 = (13.7 * y[1329] * y[119] * y[25]) / (1 + (y[1329] * y[119] * y[25]))
    r294 = (13.7 * y[1329] * y[178] * y[25]) / (1 + (y[1329] * y[178] * y[25]))
    r295 = (13.7 * y[1329] * y[383] * y[25]) / (1 + (y[1329] * y[383] * y[25]))
    r296 = (13.7 * y[1329] * y[539] * y[25]) / (1 + (y[1329] * y[539] * y[25]))
    r297 = (13.7 * y[1330] * y[471] * y[25]) / (1 + (y[1330] * y[471] * y[25]))
    r298 = (13.7 * y[1330] * y[754] * y[25]) / (1 + (y[1330] * y[754] * y[25]))
    r299 = (13.7 * y[1331] * y[477] * y[25]) / (1 + (y[1331] * y[477] * y[25]))
    r300 = (13.7 * y[1331] * y[76] * y[25]) / (1 + (y[1331] * y[76] * y[25]))
    r301 = (13.7 * y[1331] * y[79] * y[25]) / (1 + (y[1331] * y[79] * y[25]))
    r547 = (13.7 * y[1407] * y[61] * y[0]) / (1 + (y[1407] * y[61] * y[0]))
    r565 = (13.7 * y[1413] * y[1] * y[524] * y[0]) / (1 + (y[1413] * y[1] * y[524] * y[0]))
    r566 = (13.7 * y[1413] * y[1] * y[524] * y[0]) / (1 + (y[1413] * y[1] * y[524] * y[0]))
    r657 = (13.7 * y[1454] * y[61] * y[0]) / (1 + (y[1454] * y[61] * y[0]))
    r658 = (13.7 * y[1454] * y[678] * y[61]) / (1 + (y[1454] * y[678] * y[61]))
    r660 = (13.7 * y[1454] * y[61] * y[0]) / (1 + (y[1454] * y[61] * y[0]))
    r661 = (13.7 * y[1454] * y[678] * y[61]) / (1 + (y[1454] * y[678] * y[61]))
    r663 = (13.7 * y[1454] * y[61] * y[0]) / (1 + (y[1454] * y[61] * y[0]))
    r664 = (13.7 * y[1454] * y[678] * y[61]) / (1 + (y[1454] * y[678] * y[61]))
    r803 = (13.7 * y[1522] * y[61] * y[0]) / (1 + (y[1522] * y[61] * y[0]))
    r805 = (13.7 * y[1522] * y[1] * y[72] * y[61] * y[0]) / (1 + (y[1522] * y[1] * y[72] * y[61] * y[0]))
    r811 = (13.7 * y[1527] * y[61] * y[0]) / (1 + (y[1527] * y[61] * y[0]))
    r813 = (13.7 * y[1527] * y[1] * y[432] * y[61] * y[0]) / (1 + (y[1527] * y[1] * y[432] * y[61] * y[0]))
    r814 = (13.7 * y[1527] * y[841] * y[1] * y[61] * y[0]) / (1 + (y[1527] * y[841] * y[1] * y[61] * y[0]))
    r815 = (13.7 * y[1528] * y[1] * y[639] * y[61] * y[0]) / (1 + (y[1528] * y[1] * y[639] * y[61] * y[0]))
    r816 = (13.7 * y[1528] * y[1] * y[639] * y[61] * y[0]) / (1 + (y[1528] * y[1] * y[639] * y[61] * y[0]))
    r817 = (13.7 * y[1528] * y[1] * y[639] * y[61] * y[0]) / (1 + (y[1528] * y[1] * y[639] * y[61] * y[0]))
    r818 = (13.7 * y[1529] * y[61] * y[0]) / (1 + (y[1529] * y[61] * y[0]))
    r820 = (13.7 * y[1529] * y[1] * y[48] * y[61] * y[0]) / (1 + (y[1529] * y[1] * y[48] * y[61] * y[0]))
    r821 = (13.7 * y[1529] * y[61] * y[0]) / (1 + (y[1529] * y[61] * y[0]))
    r823 = (13.7 * y[1529] * y[1] * y[48] * y[61] * y[0]) / (1 + (y[1529] * y[1] * y[48] * y[61] * y[0]))
    r824 = (13.7 * y[1530] * y[61] * y[0]) / (1 + (y[1530] * y[61] * y[0]))
    r825 = (13.7 * y[1530] * y[1] * y[61] * y[273] * y[0]) / (1 + (y[1530] * y[1] * y[61] * y[273] * y[0]))
    r830 = (13.7 * y[1530] * y[61] * y[0]) / (1 + (y[1530] * y[61] * y[0]))
    r831 = (13.7 * y[1530] * y[1] * y[61] * y[273] * y[0]) / (1 + (y[1530] * y[1] * y[61] * y[273] * y[0]))
    r836 = (13.7 * y[1530] * y[61] * y[0]) / (1 + (y[1530] * y[61] * y[0]))
    r837 = (13.7 * y[1530] * y[1] * y[61] * y[273] * y[0]) / (1 + (y[1530] * y[1] * y[61] * y[273] * y[0]))
    r144 = (13.7 * y[1264] * y[24] * y[5]) / (1 + (y[1264] * y[24] * y[5]))
    r145 = (13.7 * y[1264] * y[24] * y[5] * y[0]) / (1 + (y[1264] * y[24] * y[5] * y[0]))
    r216 = (13.7 * y[1295] * y[23] * y[24]) / (1 + (y[1295] * y[23] * y[24]))
    r239 = (13.7 * y[1304] * y[395] * y[24]) / (1 + (y[1304] * y[395] * y[24]))
    r258 = (13.7 * y[1313] * y[572] * y[12] * y[24]) / (1 + (y[1313] * y[572] * y[12] * y[24]))
    r352 = (13.7 * y[1356] * y[1] * y[24]) / (1 + (y[1356] * y[1] * y[24]))
    r591 = (13.7 * y[1429] * y[24]) / (1 + (y[1429] * y[24]))
    r674 = (13.7 * y[1461] * y[24]) / (1 + (y[1461] * y[24]))
    r750 = (13.7 * y[1492] * y[520] * y[24] * y[1]) / (1 + (y[1492] * y[520] * y[24] * y[1]))
    return (r146 + r287 + r288 + r289 + r290 + r291 + r292 + r293 + r294 + r295 + r296 + r297 + r298 + r299 + r300 + r301 + r547 + r565 + r566 + r657 + r658 + r660 + r661 + r663 + r664 + r803 + r805 + r811 + r813 + r814 + r815 + r816 + r817 + r818 + r820 + r821 + r823 + r824 + r825 + r830 + r831 + r836 + r837) - (r144 + r145 + r216 + r239 + r258 + r352 + r591 + r674 + r750)
 
def C00026(t, y):
    r144 = (13.7 * y[1264] * y[24] * y[5]) / (1 + (y[1264] * y[24] * y[5]))
    r145 = (13.7 * y[1264] * y[24] * y[5] * y[0]) / (1 + (y[1264] * y[24] * y[5] * y[0]))
    r287 = (13.7 * y[1327] * y[395] * y[25]) / (1 + (y[1327] * y[395] * y[25]))
    r289 = (13.7 * y[1329] * y[119] * y[25]) / (1 + (y[1329] * y[119] * y[25]))
    r290 = (13.7 * y[1329] * y[178] * y[25]) / (1 + (y[1329] * y[178] * y[25]))
    r291 = (13.7 * y[1329] * y[383] * y[25]) / (1 + (y[1329] * y[383] * y[25]))
    r292 = (13.7 * y[1329] * y[539] * y[25]) / (1 + (y[1329] * y[539] * y[25]))
    r293 = (13.7 * y[1329] * y[119] * y[25]) / (1 + (y[1329] * y[119] * y[25]))
    r294 = (13.7 * y[1329] * y[178] * y[25]) / (1 + (y[1329] * y[178] * y[25]))
    r295 = (13.7 * y[1329] * y[383] * y[25]) / (1 + (y[1329] * y[383] * y[25]))
    r296 = (13.7 * y[1329] * y[539] * y[25]) / (1 + (y[1329] * y[539] * y[25]))
    r297 = (13.7 * y[1330] * y[471] * y[25]) / (1 + (y[1330] * y[471] * y[25]))
    r298 = (13.7 * y[1330] * y[754] * y[25]) / (1 + (y[1330] * y[754] * y[25]))
    r299 = (13.7 * y[1331] * y[477] * y[25]) / (1 + (y[1331] * y[477] * y[25]))
    r300 = (13.7 * y[1331] * y[76] * y[25]) / (1 + (y[1331] * y[76] * y[25]))
    r301 = (13.7 * y[1331] * y[79] * y[25]) / (1 + (y[1331] * y[79] * y[25]))
    return (r144 + r145) - (r287 + r289 + r290 + r291 + r292 + r293 + r294 + r295 + r296 + r297 + r298 + r299 + r300 + r301)
 
def C00027(t, y):
    return (0) - (0)
 
def C00028(t, y):
    r490 = (13.7 * y[1392] * y[811] * y[812] * y[29]) / (1 + (y[1392] * y[811] * y[812] * y[29]))
    r605 = (13.7 * y[1439] * y[43] * y[18] * y[29]) / (1 + (y[1439] * y[43] * y[18] * y[29]))
    return (r490 + r605) - (0)
 
def C00029(t, y):
    r483 = (13.7 * y[1387] * y[72] * y[100]) / (1 + (y[1387] * y[72] * y[100]))
    r400 = (13.7 * y[1375] * y[28] * y[399]) / (1 + (y[1375] * y[28] * y[399]))
    r681 = (13.7 * y[1466] * y[28]) / (1 + (y[1466] * y[28]))
    return (r483) - (r400 + r681)
 
def C00030(t, y):
    r490 = (13.7 * y[1392] * y[811] * y[812] * y[29]) / (1 + (y[1392] * y[811] * y[812] * y[29]))
    r605 = (13.7 * y[1439] * y[43] * y[18] * y[29]) / (1 + (y[1439] * y[43] * y[18] * y[29]))
    return (0) - (r490 + r605)
 
def C00031(t, y):
    r510 = (13.7 * y[1402] * y[702] * y[0]) / (1 + (y[1402] * y[702] * y[0]))
    r523 = (13.7 * y[1402] * y[917] * y[0]) / (1 + (y[1402] * y[917] * y[0]))
    r529 = (13.7 * y[1403] * y[86] * y[0]) / (1 + (y[1403] * y[86] * y[0]))
    r534 = (13.7 * y[1403] * y[914] * y[0]) / (1 + (y[1403] * y[914] * y[0]))
    r539 = (13.7 * y[1404] * y[0] * y[443] ) / (1 + (y[1404] * y[0] * y[443] ))
    r540 = (13.7 * y[1404] * y[0] * y[918] ) / (1 + (y[1404] * y[0] * y[918] ))
    r311 = (13.7 * y[1336] * y[1] * y[30]) / (1 + (y[1336] * y[1] * y[30]))
    return (r510 + r523 + r529 + r534 + r539 + r540) - (r311)
 
def C00032(t, y):
    return (0) - (0)
 
def C00033(t, y):
    r278 = (13.7 * y[1322] * y[469] * y[270]) / (1 + (y[1322] * y[469] * y[270]))
    r279 = (13.7 * y[1322] * y[469] * y[513]) / (1 + (y[1322] * y[469] * y[513]))
    r280 = (13.7 * y[1322] * y[469] * y[302] * y[321] * y[77]) / (1 + (y[1322] * y[469] * y[302] * y[321] * y[77]))
    r496 = (13.7 * y[1395] * y[903] * y[0]) / (1 + (y[1395] * y[903] * y[0]))
    r497 = (13.7 * y[1395] * y[883] * y[0]) / (1 + (y[1395] * y[883] * y[0]))
    r552 = (13.7 * y[1409] * y[761] * y[0]) / (1 + (y[1409] * y[761] * y[0]))
    r350 = (13.7 * y[1355] * y[1] * y[32]) / (1 + (y[1355] * y[1] * y[32]))
    return (r278 + r279 + r280 + r496 + r497 + r552) - (r350)
 
def C00034(t, y):
    return (0) - (0)
 
def C00035(t, y):
    r98 = (13.7 * y[1253] * y[338] * y[322] * y[0]) / (1 + (y[1253] * y[338] * y[322] * y[0]))
    r106 = (13.7 * y[1253] * y[338] * y[322] * y[0]) / (1 + (y[1253] * y[338] * y[322] * y[0]))
    r114 = (13.7 * y[1253] * y[338] * y[322] * y[0]) / (1 + (y[1253] * y[338] * y[322] * y[0]))
    r332 = (13.7 * y[1348] * y[43] * y[21]) / (1 + (y[1348] * y[43] * y[21]))
    r341 = (13.7 * y[1349] * y[43] * y[407]) / (1 + (y[1349] * y[43] * y[407]))
    r342 = (13.7 * y[1349] * y[43] * y[282]) / (1 + (y[1349] * y[43] * y[282]))
    r390 = (13.7 * y[1369] * y[1] * y[139]) / (1 + (y[1369] * y[1] * y[139]))
    r809 = (13.7 * y[1525] * y[43] * y[126] * y[48]) / (1 + (y[1525] * y[43] * y[126] * y[48]))
    r376 = (13.7 * y[1367] * y[1] * y[34]) / (1 + (y[1367] * y[1] * y[34]))
    return (r98 + r106 + r114 + r332 + r341 + r342 + r390 + r809) - (r376)
 
def C00036(t, y):
    r842 = (13.7 * y[1531] * y[1] * y[23] * y[273]) / (1 + (y[1531] * y[1] * y[23] * y[273]))
    return (r842) - (0)
 
def C00037(t, y):
    r194 = (13.7 * y[1285] * y[62] * y[495]) / (1 + (y[1285] * y[62] * y[495]))
    r193 = (13.7 * y[1285] * y[138] * y[36] * y[0]) / (1 + (y[1285] * y[138] * y[36] * y[0]))
    r746 = (13.7 * y[1489] * y[1] * y[36] * y[1564]) / (1 + (y[1489] * y[1] * y[36] * y[1564]))
    r747 = (13.7 * y[1489] * y[1] * y[36] * y[1564]) / (1 + (y[1489] * y[1] * y[36] * y[1564]))
    r793 = (13.7 * y[1517] * y[1] * y[572] * y[36]) / (1 + (y[1517] * y[1] * y[572] * y[36]))
    return (r194) - (r193 + r746 + r747 + r793)
 
def C00038(t, y):
    return (0) - (0)
 
def C00039(t, y):
    r426 = (13.7 * y[1382] * y[196] * y[45]) / (1 + (y[1382] * y[196] * y[45]))
    r427 = (13.7 * y[1382] * y[1] * y[45]) / (1 + (y[1382] * y[1] * y[45]))
    r428 = (13.7 * y[1382] * y[43] * y[45]) / (1 + (y[1382] * y[43] * y[45]))
    r429 = (13.7 * y[1382] * y[60] * y[45] ) / (1 + (y[1382] * y[60] * y[45] ))
    r430 = (13.7 * y[1382] * y[72] * y[45]) / (1 + (y[1382] * y[72] * y[45]))
    r432 = (13.7 * y[1382] * y[196] * y[45]) / (1 + (y[1382] * y[196] * y[45]))
    r433 = (13.7 * y[1382] * y[1] * y[45]) / (1 + (y[1382] * y[1] * y[45]))
    r434 = (13.7 * y[1382] * y[43] * y[45]) / (1 + (y[1382] * y[43] * y[45]))
    r435 = (13.7 * y[1382] * y[60] * y[45] ) / (1 + (y[1382] * y[60] * y[45] ))
    r436 = (13.7 * y[1382] * y[72] * y[45]) / (1 + (y[1382] * y[72] * y[45]))
    r438 = (13.7 * y[1382] * y[196] * y[45]) / (1 + (y[1382] * y[196] * y[45]))
    r439 = (13.7 * y[1382] * y[1] * y[45]) / (1 + (y[1382] * y[1] * y[45]))
    r440 = (13.7 * y[1382] * y[43] * y[45]) / (1 + (y[1382] * y[43] * y[45]))
    r441 = (13.7 * y[1382] * y[60] * y[45] ) / (1 + (y[1382] * y[60] * y[45] ))
    r442 = (13.7 * y[1382] * y[72] * y[45]) / (1 + (y[1382] * y[72] * y[45]))
    r444 = (13.7 * y[1383] * y[438] * y[38]) / (1 + (y[1383] * y[438] * y[38]))
    r445 = (13.7 * y[1383] * y[127] * y[38]) / (1 + (y[1383] * y[127] * y[38]))
    r446 = (13.7 * y[1383] * y[272] * y[38]) / (1 + (y[1383] * y[272] * y[38]))
    r447 = (13.7 * y[1383] * y[402] * y[38]) / (1 + (y[1383] * y[402] * y[38]))
    r448 = (13.7 * y[1383] * y[403] * y[38]) / (1 + (y[1383] * y[403] * y[38]))
    r450 = (13.7 * y[1383] * y[438] * y[38]) / (1 + (y[1383] * y[438] * y[38]))
    r451 = (13.7 * y[1383] * y[127] * y[38]) / (1 + (y[1383] * y[127] * y[38]))
    r452 = (13.7 * y[1383] * y[272] * y[38]) / (1 + (y[1383] * y[272] * y[38]))
    r453 = (13.7 * y[1383] * y[402] * y[38]) / (1 + (y[1383] * y[402] * y[38]))
    r454 = (13.7 * y[1383] * y[403] * y[38]) / (1 + (y[1383] * y[403] * y[38]))
    r456 = (13.7 * y[1383] * y[438] * y[38]) / (1 + (y[1383] * y[438] * y[38]))
    r457 = (13.7 * y[1383] * y[272] * y[38]) / (1 + (y[1383] * y[272] * y[38]))
    r458 = (13.7 * y[1383] * y[272] * y[38]) / (1 + (y[1383] * y[272] * y[38]))
    r459 = (13.7 * y[1383] * y[402] * y[38]) / (1 + (y[1383] * y[402] * y[38]))
    r460 = (13.7 * y[1383] * y[403] * y[38]) / (1 + (y[1383] * y[403] * y[38]))
    r462 = (13.7 * y[1383] * y[438] * y[38]) / (1 + (y[1383] * y[438] * y[38]))
    r463 = (13.7 * y[1383] * y[127] * y[38]) / (1 + (y[1383] * y[127] * y[38]))
    r464 = (13.7 * y[1383] * y[272] * y[38]) / (1 + (y[1383] * y[272] * y[38]))
    r465 = (13.7 * y[1383] * y[402] * y[38]) / (1 + (y[1383] * y[402] * y[38]))
    r466 = (13.7 * y[1383] * y[403] * y[38]) / (1 + (y[1383] * y[403] * y[38]))
    r468 = (13.7 * y[1383] * y[438] * y[38]) / (1 + (y[1383] * y[438] * y[38]))
    r469 = (13.7 * y[1383] * y[127] * y[38]) / (1 + (y[1383] * y[127] * y[38]))
    r470 = (13.7 * y[1383] * y[272] * y[38]) / (1 + (y[1383] * y[272] * y[38]))
    r471 = (13.7 * y[1383] * y[402] * y[38]) / (1 + (y[1383] * y[402] * y[38]))
    r472 = (13.7 * y[1383] * y[403] * y[38]) / (1 + (y[1383] * y[403] * y[38]))
    r474 = (13.7 * y[1383] * y[438] * y[38]) / (1 + (y[1383] * y[438] * y[38]))
    r475 = (13.7 * y[1383] * y[127] * y[38]) / (1 + (y[1383] * y[127] * y[38]))
    r476 = (13.7 * y[1383] * y[272] * y[38]) / (1 + (y[1383] * y[272] * y[38]))
    r477 = (13.7 * y[1383] * y[402] * y[38]) / (1 + (y[1383] * y[402] * y[38]))
    r478 = (13.7 * y[1383] * y[403] * y[38]) / (1 + (y[1383] * y[403] * y[38]))
    r845 = (13.7 * y[1533] * y[2] * y[38] * y[1597]) / (1 + (y[1533] * y[2] * y[38] * y[1597]))
    r444 = (13.7 * y[1383] * y[438] * y[38]) / (1 + (y[1383] * y[438] * y[38]))
    r445 = (13.7 * y[1383] * y[127] * y[38]) / (1 + (y[1383] * y[127] * y[38]))
    r446 = (13.7 * y[1383] * y[272] * y[38]) / (1 + (y[1383] * y[272] * y[38]))
    r447 = (13.7 * y[1383] * y[402] * y[38]) / (1 + (y[1383] * y[402] * y[38]))
    r448 = (13.7 * y[1383] * y[403] * y[38]) / (1 + (y[1383] * y[403] * y[38]))
    r450 = (13.7 * y[1383] * y[438] * y[38]) / (1 + (y[1383] * y[438] * y[38]))
    r451 = (13.7 * y[1383] * y[127] * y[38]) / (1 + (y[1383] * y[127] * y[38]))
    r452 = (13.7 * y[1383] * y[272] * y[38]) / (1 + (y[1383] * y[272] * y[38]))
    r453 = (13.7 * y[1383] * y[402] * y[38]) / (1 + (y[1383] * y[402] * y[38]))
    r454 = (13.7 * y[1383] * y[403] * y[38]) / (1 + (y[1383] * y[403] * y[38]))
    r456 = (13.7 * y[1383] * y[438] * y[38]) / (1 + (y[1383] * y[438] * y[38]))
    r457 = (13.7 * y[1383] * y[272] * y[38]) / (1 + (y[1383] * y[272] * y[38]))
    r458 = (13.7 * y[1383] * y[272] * y[38]) / (1 + (y[1383] * y[272] * y[38]))
    r459 = (13.7 * y[1383] * y[402] * y[38]) / (1 + (y[1383] * y[402] * y[38]))
    r460 = (13.7 * y[1383] * y[403] * y[38]) / (1 + (y[1383] * y[403] * y[38]))
    r462 = (13.7 * y[1383] * y[438] * y[38]) / (1 + (y[1383] * y[438] * y[38]))
    r463 = (13.7 * y[1383] * y[127] * y[38]) / (1 + (y[1383] * y[127] * y[38]))
    r464 = (13.7 * y[1383] * y[272] * y[38]) / (1 + (y[1383] * y[272] * y[38]))
    r465 = (13.7 * y[1383] * y[402] * y[38]) / (1 + (y[1383] * y[402] * y[38]))
    r466 = (13.7 * y[1383] * y[403] * y[38]) / (1 + (y[1383] * y[403] * y[38]))
    r468 = (13.7 * y[1383] * y[438] * y[38]) / (1 + (y[1383] * y[438] * y[38]))
    r469 = (13.7 * y[1383] * y[127] * y[38]) / (1 + (y[1383] * y[127] * y[38]))
    r470 = (13.7 * y[1383] * y[272] * y[38]) / (1 + (y[1383] * y[272] * y[38]))
    r471 = (13.7 * y[1383] * y[402] * y[38]) / (1 + (y[1383] * y[402] * y[38]))
    r472 = (13.7 * y[1383] * y[403] * y[38]) / (1 + (y[1383] * y[403] * y[38]))
    r474 = (13.7 * y[1383] * y[438] * y[38]) / (1 + (y[1383] * y[438] * y[38]))
    r475 = (13.7 * y[1383] * y[127] * y[38]) / (1 + (y[1383] * y[127] * y[38]))
    r476 = (13.7 * y[1383] * y[272] * y[38]) / (1 + (y[1383] * y[272] * y[38]))
    r477 = (13.7 * y[1383] * y[402] * y[38]) / (1 + (y[1383] * y[402] * y[38]))
    r478 = (13.7 * y[1383] * y[403] * y[38]) / (1 + (y[1383] * y[403] * y[38]))
    r845 = (13.7 * y[1533] * y[2] * y[38] * y[1597]) / (1 + (y[1533] * y[2] * y[38] * y[1597]))
    return (r426 + r427 + r428 + r429 + r430 + r432 + r433 + r434 + r435 + r436 + r438 + r439 + r440 + r441 + r442 + r444 + r445 + r446 + r447 + r448 + r450 + r451 + r452 + r453 + r454 + r456 + r457 + r458 + r459 + r460 + r462 + r463 + r464 + r465 + r466 + r468 + r469 + r470 + r471 + r472 + r474 + r475 + r476 + r477 + r478 + r845) - (r444 + r445 + r446 + r447 + r448 + r450 + r451 + r452 + r453 + r454 + r456 + r457 + r458 + r459 + r460 + r462 + r463 + r464 + r465 + r466 + r468 + r469 + r470 + r471 + r472 + r474 + r475 + r476 + r477 + r478 + r845)
 
def C00040(t, y):
    r217 = (13.7 * y[1296] * y[90] * y[39]) / (1 + (y[1296] * y[90] * y[39]))
    return (0) - (r217)
 
def C00041(t, y):
    r491 = (13.7 * y[1393] * y[810] * y[94]) / (1 + (y[1393] * y[810] * y[94]))
    r492 = (13.7 * y[1393] * y[94] * y[557]) / (1 + (y[1393] * y[94] * y[557]))
    r550 = (13.7 * y[1408] * y[566] * y[0]) / (1 + (y[1408] * y[566] * y[0]))
    r673 = (13.7 * y[1460] * y[40]) / (1 + (y[1460] * y[40]))
    r761 = (13.7 * y[1502] * y[1] * y[40] * y[1587]) / (1 + (y[1502] * y[1] * y[40] * y[1587]))
    r789 = (13.7 * y[1513] * y[1] * y[474] * y[40]) / (1 + (y[1513] * y[1] * y[474] * y[40]))
    return (r491 + r492 + r550) - (r673 + r761 + r789)
 
def C00042(t, y):
    return (0) - (0)
 
def C00043(t, y):
    r404 = (13.7 * y[1378] * y[72] * y[648]) / (1 + (y[1378] * y[72] * y[648]))
    r251 = (13.7 * y[1311] * y[670] * y[42]) / (1 + (y[1311] * y[670] * y[42]))
    r253 = (13.7 * y[1311] * y[742] * y[42]) / (1 + (y[1311] * y[742] * y[42]))
    r678 = (13.7 * y[1465] * y[42]) / (1 + (y[1465] * y[42]))
    r679 = (13.7 * y[1465] * y[42] * y[0]) / (1 + (y[1465] * y[42] * y[0]))
    r682 = (13.7 * y[1466] * y[42]) / (1 + (y[1466] * y[42]))
    return (r404) - (r251 + r253 + r678 + r679 + r682)
 
def C00044(t, y):
    r121 = (13.7 * y[1254] * y[272] * y[322] * y[0]) / (1 + (y[1254] * y[272] * y[322] * y[0]))
    r376 = (13.7 * y[1367] * y[1] * y[34]) / (1 + (y[1367] * y[1] * y[34]))
    r332 = (13.7 * y[1348] * y[43] * y[21]) / (1 + (y[1348] * y[43] * y[21]))
    r341 = (13.7 * y[1349] * y[43] * y[407]) / (1 + (y[1349] * y[43] * y[407]))
    r342 = (13.7 * y[1349] * y[43] * y[282]) / (1 + (y[1349] * y[43] * y[282]))
    r399 = (13.7 * y[1374] * y[1] * y[43]) / (1 + (y[1374] * y[1] * y[43]))
    r410 = (13.7 * y[1382] * y[43] * y[45]) / (1 + (y[1382] * y[43] * y[45]))
    r416 = (13.7 * y[1382] * y[43] * y[45]) / (1 + (y[1382] * y[43] * y[45]))
    r422 = (13.7 * y[1382] * y[43] * y[45]) / (1 + (y[1382] * y[43] * y[45]))
    r428 = (13.7 * y[1382] * y[43] * y[45]) / (1 + (y[1382] * y[43] * y[45]))
    r434 = (13.7 * y[1382] * y[43] * y[45]) / (1 + (y[1382] * y[43] * y[45]))
    r440 = (13.7 * y[1382] * y[43] * y[45]) / (1 + (y[1382] * y[43] * y[45]))
    r480 = (13.7 * y[1384] * y[856] * y[43]) / (1 + (y[1384] * y[856] * y[43]))
    r570 = (13.7 * y[1416] * y[43] * y[0]) / (1 + (y[1416] * y[43] * y[0]))
    r571 = (13.7 * y[1416] * y[43] * y[0]) / (1 + (y[1416] * y[43] * y[0]))
    r576 = (13.7 * y[1418] * y[43] * y[0]) / (1 + (y[1418] * y[43] * y[0]))
    r605 = (13.7 * y[1439] * y[43] * y[18] * y[29]) / (1 + (y[1439] * y[43] * y[18] * y[29]))
    r809 = (13.7 * y[1525] * y[43] * y[126] * y[48]) / (1 + (y[1525] * y[43] * y[126] * y[48]))
    return (r121 + r376) - (r332 + r341 + r342 + r399 + r410 + r416 + r422 + r428 + r434 + r440 + r480 + r570 + r571 + r576 + r605 + r809)
 
def C00045(t, y):
    return (0) - (0)
 
def C00046(t, y):
    r408 = (13.7 * y[1382] * y[196] * y[45]) / (1 + (y[1382] * y[196] * y[45]))
    r409 = (13.7 * y[1382] * y[1] * y[45]) / (1 + (y[1382] * y[1] * y[45]))
    r410 = (13.7 * y[1382] * y[43] * y[45]) / (1 + (y[1382] * y[43] * y[45]))
    r411 = (13.7 * y[1382] * y[60] * y[45] ) / (1 + (y[1382] * y[60] * y[45] ))
    r412 = (13.7 * y[1382] * y[72] * y[45]) / (1 + (y[1382] * y[72] * y[45]))
    r414 = (13.7 * y[1382] * y[196] * y[45]) / (1 + (y[1382] * y[196] * y[45]))
    r415 = (13.7 * y[1382] * y[1] * y[45]) / (1 + (y[1382] * y[1] * y[45]))
    r416 = (13.7 * y[1382] * y[43] * y[45]) / (1 + (y[1382] * y[43] * y[45]))
    r417 = (13.7 * y[1382] * y[60] * y[45] ) / (1 + (y[1382] * y[60] * y[45] ))
    r418 = (13.7 * y[1382] * y[72] * y[45]) / (1 + (y[1382] * y[72] * y[45]))
    r420 = (13.7 * y[1382] * y[196] * y[45]) / (1 + (y[1382] * y[196] * y[45]))
    r421 = (13.7 * y[1382] * y[1] * y[45]) / (1 + (y[1382] * y[1] * y[45]))
    r422 = (13.7 * y[1382] * y[43] * y[45]) / (1 + (y[1382] * y[43] * y[45]))
    r423 = (13.7 * y[1382] * y[60] * y[45] ) / (1 + (y[1382] * y[60] * y[45] ))
    r424 = (13.7 * y[1382] * y[72] * y[45]) / (1 + (y[1382] * y[72] * y[45]))
    r408 = (13.7 * y[1382] * y[196] * y[45]) / (1 + (y[1382] * y[196] * y[45]))
    r409 = (13.7 * y[1382] * y[1] * y[45]) / (1 + (y[1382] * y[1] * y[45]))
    r410 = (13.7 * y[1382] * y[43] * y[45]) / (1 + (y[1382] * y[43] * y[45]))
    r411 = (13.7 * y[1382] * y[60] * y[45] ) / (1 + (y[1382] * y[60] * y[45] ))
    r412 = (13.7 * y[1382] * y[72] * y[45]) / (1 + (y[1382] * y[72] * y[45]))
    r414 = (13.7 * y[1382] * y[196] * y[45]) / (1 + (y[1382] * y[196] * y[45]))
    r415 = (13.7 * y[1382] * y[1] * y[45]) / (1 + (y[1382] * y[1] * y[45]))
    r416 = (13.7 * y[1382] * y[43] * y[45]) / (1 + (y[1382] * y[43] * y[45]))
    r417 = (13.7 * y[1382] * y[60] * y[45] ) / (1 + (y[1382] * y[60] * y[45] ))
    r418 = (13.7 * y[1382] * y[72] * y[45]) / (1 + (y[1382] * y[72] * y[45]))
    r420 = (13.7 * y[1382] * y[196] * y[45]) / (1 + (y[1382] * y[196] * y[45]))
    r421 = (13.7 * y[1382] * y[1] * y[45]) / (1 + (y[1382] * y[1] * y[45]))
    r422 = (13.7 * y[1382] * y[43] * y[45]) / (1 + (y[1382] * y[43] * y[45]))
    r423 = (13.7 * y[1382] * y[60] * y[45] ) / (1 + (y[1382] * y[60] * y[45] ))
    r424 = (13.7 * y[1382] * y[72] * y[45]) / (1 + (y[1382] * y[72] * y[45]))
    r426 = (13.7 * y[1382] * y[196] * y[45]) / (1 + (y[1382] * y[196] * y[45]))
    r427 = (13.7 * y[1382] * y[1] * y[45]) / (1 + (y[1382] * y[1] * y[45]))
    r428 = (13.7 * y[1382] * y[43] * y[45]) / (1 + (y[1382] * y[43] * y[45]))
    r429 = (13.7 * y[1382] * y[60] * y[45] ) / (1 + (y[1382] * y[60] * y[45] ))
    r430 = (13.7 * y[1382] * y[72] * y[45]) / (1 + (y[1382] * y[72] * y[45]))
    r432 = (13.7 * y[1382] * y[196] * y[45]) / (1 + (y[1382] * y[196] * y[45]))
    r433 = (13.7 * y[1382] * y[1] * y[45]) / (1 + (y[1382] * y[1] * y[45]))
    r434 = (13.7 * y[1382] * y[43] * y[45]) / (1 + (y[1382] * y[43] * y[45]))
    r435 = (13.7 * y[1382] * y[60] * y[45] ) / (1 + (y[1382] * y[60] * y[45] ))
    r436 = (13.7 * y[1382] * y[72] * y[45]) / (1 + (y[1382] * y[72] * y[45]))
    r438 = (13.7 * y[1382] * y[196] * y[45]) / (1 + (y[1382] * y[196] * y[45]))
    r439 = (13.7 * y[1382] * y[1] * y[45]) / (1 + (y[1382] * y[1] * y[45]))
    r440 = (13.7 * y[1382] * y[43] * y[45]) / (1 + (y[1382] * y[43] * y[45]))
    r441 = (13.7 * y[1382] * y[60] * y[45] ) / (1 + (y[1382] * y[60] * y[45] ))
    r442 = (13.7 * y[1382] * y[72] * y[45]) / (1 + (y[1382] * y[72] * y[45]))
    return (r408 + r409 + r410 + r411 + r412 + r414 + r415 + r416 + r417 + r418 + r420 + r421 + r422 + r423 + r424) - (r408 + r409 + r410 + r411 + r412 + r414 + r415 + r416 + r417 + r418 + r420 + r421 + r422 + r423 + r424 + r426 + r427 + r428 + r429 + r430 + r432 + r433 + r434 + r435 + r436 + r438 + r439 + r440 + r441 + r442)
 
def C00047(t, y):
    r595 = (13.7 * y[1430] * y[439]) / (1 + (y[1430] * y[439]))
    r760 = (13.7 * y[1501] * y[1] * y[46] * y[1585]) / (1 + (y[1501] * y[1] * y[46] * y[1585]))
    r802 = (13.7 * y[1521] * y[860] * y[46] * y[1]) / (1 + (y[1521] * y[860] * y[46] * y[1]))
    return (r595) - (r760 + r802)
 
def C00048(t, y):
    return (0) - (0)
 
def C00049(t, y):
    r200 = (13.7 * y[1290] * y[164] * y[48]) / (1 + (y[1290] * y[164] * y[48]))
    r360 = (13.7 * y[1359] * y[1] * y[48]) / (1 + (y[1359] * y[1] * y[48]))
    r592 = (13.7 * y[1429] * y[48]) / (1 + (y[1429] * y[48]))
    r729 = (13.7 * y[1487] * y[519] * y[48] * y[1]) / (1 + (y[1487] * y[519] * y[48] * y[1]))
    r764 = (13.7 * y[1505] * y[1] * y[48] * y[13]) / (1 + (y[1505] * y[1] * y[48] * y[13]))
    r788 = (13.7 * y[1512] * y[1] * y[665] * y[48]) / (1 + (y[1512] * y[1] * y[665] * y[48]))
    r809 = (13.7 * y[1525] * y[43] * y[126] * y[48]) / (1 + (y[1525] * y[43] * y[126] * y[48]))
    r810 = (13.7 * y[1526] * y[1] * y[308] * y[48]) / (1 + (y[1526] * y[1] * y[308] * y[48]))
    r819 = (13.7 * y[1529] * y[1] * y[48] * y[13]) / (1 + (y[1529] * y[1] * y[48] * y[13]))
    r820 = (13.7 * y[1529] * y[1] * y[48] * y[61] * y[0]) / (1 + (y[1529] * y[1] * y[48] * y[61] * y[0]))
    r822 = (13.7 * y[1529] * y[1] * y[48] * y[13]) / (1 + (y[1529] * y[1] * y[48] * y[13]))
    r823 = (13.7 * y[1529] * y[1] * y[48] * y[61] * y[0]) / (1 + (y[1529] * y[1] * y[48] * y[61] * y[0]))
    return (0) - (r200 + r360 + r592 + r729 + r764 + r788 + r809 + r810 + r819 + r820 + r822 + r823)
 
def C00050(t, y):
    return (0) - (0)
 
def C00051(t, y):
    r169 = (13.7 * y[1270] * y[94] * y[50] * y[5]) / (1 + (y[1270] * y[94] * y[50] * y[5]))
    return (0) - (r169)
 
def C00052(t, y):
    r400 = (13.7 * y[1375] * y[28] * y[399]) / (1 + (y[1375] * y[28] * y[399]))
    r681 = (13.7 * y[1466] * y[28]) / (1 + (y[1466] * y[28]))
    r722 = (13.7 * y[1483] * y[51]) / (1 + (y[1483] * y[51]))
    return (r400 + r681) - (r722)
 
def C00053(t, y):
    r505 = (13.7 * y[1400] * y[52] * y[0]) / (1 + (y[1400] * y[52] * y[0]))
    return (0) - (r505)
 
def C00054(t, y):
    r487 = (13.7 * y[1390] * y[9] * y[596]) / (1 + (y[1390] * y[9] * y[596]))
    r504 = (13.7 * y[1400] * y[53] * y[0]) / (1 + (y[1400] * y[53] * y[0]))
    return (r487) - (r504)
 
def C00055(t, y):
    r241 = (13.7 * y[1511] * y[60] * y[589] * y[94]) / (1 + (y[1511] * y[60] * y[589] * y[94]))
    r339 = (13.7 * y[1349] * y[1] * y[407] ) / (1 + (y[1349] * y[1] * y[407] ))
    r341 = (13.7 * y[1349] * y[43] * y[407]) / (1 + (y[1349] * y[43] * y[407]))
    r486 = (13.7 * y[1389] * y[262] * y[90]) / (1 + (y[1389] * y[262] * y[90]))
    r367 = (13.7 * y[1365] * y[1] * y[54]) / (1 + (y[1365] * y[1] * y[54]))
    return (r241 + r339 + r341 + r486) - (r367)
 
def C00058(t, y):
    r559 = (13.7 * y[1410] * y[788] * y[0]) / (1 + (y[1410] * y[788] * y[0]))
    r560 = (13.7 * y[1410] * y[628] * y[0] ) / (1 + (y[1410] * y[628] * y[0] ))
    r562 = (13.7 * y[1410] * y[628] * y[0] ) / (1 + (y[1410] * y[628] * y[0] ))
    r570 = (13.7 * y[1416] * y[43] * y[0]) / (1 + (y[1416] * y[43] * y[0]))
    r573 = (13.7 * y[1416] * y[745] * y[0]) / (1 + (y[1416] * y[745] * y[0]))
    r576 = (13.7 * y[1418] * y[43] * y[0]) / (1 + (y[1418] * y[43] * y[0]))
    r808 = (13.7 * y[1524] * y[98] * y[55] * y[1]) / (1 + (y[1524] * y[98] * y[55] * y[1]))
    return (r559 + r560 + r562 + r570 + r573 + r576) - (r808)
 
def C00059(t, y):
    return (0) - (0)
 
def C00060(t, y):
    r549 = (13.7 * y[1407] * y[235] * y[0]) / (1 + (y[1407] * y[235] * y[0]))
    r551 = (13.7 * y[1409] * y[593] * y[0]) / (1 + (y[1409] * y[593] * y[0]))
    r558 = (13.7 * y[1409] * y[235] * y[0]) / (1 + (y[1409] * y[235] * y[0]))
    r561 = (13.7 * y[1410] * y[235] * y[0]) / (1 + (y[1410] * y[235] * y[0]))
    return (r549 + r551 + r558 + r561) - (0)
 
def C00061(t, y):
    r320 = (13.7 * y[1341] * y[1] * y[249]) / (1 + (y[1341] * y[1] * y[249]))
    r403 = (13.7 * y[1377] * y[1] * y[58]) / (1 + (y[1377] * y[1] * y[58]))
    return (r320) - (r403)
 
def C00062(t, y):
    r656 = (13.7 * y[1453] * y[586]) / (1 + (y[1453] * y[586]))
    r567 = (13.7 * y[1414] * y[59] * y[0]) / (1 + (y[1414] * y[59] * y[0]))
    r751 = (13.7 * y[1493] * y[1] * y[59] * y[1570]) / (1 + (y[1493] * y[1] * y[59] * y[1570]))
    return (r656) - (r567 + r751)
 
def C00063(t, y):
    r122 = (13.7 * y[1254] * y[402] * y[322] * y[0]) / (1 + (y[1254] * y[402] * y[322] * y[0]))
    r377 = (13.7 * y[1367] * y[1] * y[109]) / (1 + (y[1367] * y[1] * y[109]))
    r804 = (13.7 * y[1522] * y[1] * y[72] * y[13]) / (1 + (y[1522] * y[1] * y[72] * y[13]))
    r805 = (13.7 * y[1522] * y[1] * y[72] * y[61] * y[0]) / (1 + (y[1522] * y[1] * y[72] * y[61] * y[0]))
    r241 = (13.7 * y[1511] * y[60] * y[589] * y[94]) / (1 + (y[1511] * y[60] * y[589] * y[94]))
    r333 = (13.7 * y[1348] * y[60] * y[21]) / (1 + (y[1348] * y[60] * y[21]))
    r407 = (13.7 * y[1381] * y[60] * y[392]) / (1 + (y[1381] * y[60] * y[392]))
    r411 = (13.7 * y[1382] * y[60] * y[45] ) / (1 + (y[1382] * y[60] * y[45] ))
    r417 = (13.7 * y[1382] * y[60] * y[45] ) / (1 + (y[1382] * y[60] * y[45] ))
    r423 = (13.7 * y[1382] * y[60] * y[45] ) / (1 + (y[1382] * y[60] * y[45] ))
    r429 = (13.7 * y[1382] * y[60] * y[45] ) / (1 + (y[1382] * y[60] * y[45] ))
    r435 = (13.7 * y[1382] * y[60] * y[45] ) / (1 + (y[1382] * y[60] * y[45] ))
    r441 = (13.7 * y[1382] * y[60] * y[45] ) / (1 + (y[1382] * y[60] * y[45] ))
    return (r122 + r377 + r804 + r805) - (r241 + r333 + r407 + r411 + r417 + r423 + r429 + r435 + r441)
 
def C00064(t, y):
    r144 = (13.7 * y[1264] * y[24] * y[5]) / (1 + (y[1264] * y[24] * y[5]))
    r258 = (13.7 * y[1313] * y[572] * y[12] * y[24]) / (1 + (y[1313] * y[572] * y[12] * y[24]))
    r765 = (13.7 * y[1506] * y[1] * y[822] * y[821]) / (1 + (y[1506] * y[1] * y[822] * y[821]))
    r146 = (13.7 * y[1264] * y[61] * y[0]) / (1 + (y[1264] * y[61] * y[0]))
    r288 = (13.7 * y[1328] * y[61] * y[82]) / (1 + (y[1328] * y[61] * y[82]))
    r547 = (13.7 * y[1407] * y[61] * y[0]) / (1 + (y[1407] * y[61] * y[0]))
    r657 = (13.7 * y[1454] * y[61] * y[0]) / (1 + (y[1454] * y[61] * y[0]))
    r658 = (13.7 * y[1454] * y[678] * y[61]) / (1 + (y[1454] * y[678] * y[61]))
    r660 = (13.7 * y[1454] * y[61] * y[0]) / (1 + (y[1454] * y[61] * y[0]))
    r661 = (13.7 * y[1454] * y[678] * y[61]) / (1 + (y[1454] * y[678] * y[61]))
    r663 = (13.7 * y[1454] * y[61] * y[0]) / (1 + (y[1454] * y[61] * y[0]))
    r664 = (13.7 * y[1454] * y[678] * y[61]) / (1 + (y[1454] * y[678] * y[61]))
    r803 = (13.7 * y[1522] * y[61] * y[0]) / (1 + (y[1522] * y[61] * y[0]))
    r805 = (13.7 * y[1522] * y[1] * y[72] * y[61] * y[0]) / (1 + (y[1522] * y[1] * y[72] * y[61] * y[0]))
    r811 = (13.7 * y[1527] * y[61] * y[0]) / (1 + (y[1527] * y[61] * y[0]))
    r813 = (13.7 * y[1527] * y[1] * y[432] * y[61] * y[0]) / (1 + (y[1527] * y[1] * y[432] * y[61] * y[0]))
    r814 = (13.7 * y[1527] * y[841] * y[1] * y[61] * y[0]) / (1 + (y[1527] * y[841] * y[1] * y[61] * y[0]))
    r815 = (13.7 * y[1528] * y[1] * y[639] * y[61] * y[0]) / (1 + (y[1528] * y[1] * y[639] * y[61] * y[0]))
    r816 = (13.7 * y[1528] * y[1] * y[639] * y[61] * y[0]) / (1 + (y[1528] * y[1] * y[639] * y[61] * y[0]))
    r817 = (13.7 * y[1528] * y[1] * y[639] * y[61] * y[0]) / (1 + (y[1528] * y[1] * y[639] * y[61] * y[0]))
    r818 = (13.7 * y[1529] * y[61] * y[0]) / (1 + (y[1529] * y[61] * y[0]))
    r820 = (13.7 * y[1529] * y[1] * y[48] * y[61] * y[0]) / (1 + (y[1529] * y[1] * y[48] * y[61] * y[0]))
    r821 = (13.7 * y[1529] * y[61] * y[0]) / (1 + (y[1529] * y[61] * y[0]))
    r823 = (13.7 * y[1529] * y[1] * y[48] * y[61] * y[0]) / (1 + (y[1529] * y[1] * y[48] * y[61] * y[0]))
    r824 = (13.7 * y[1530] * y[61] * y[0]) / (1 + (y[1530] * y[61] * y[0]))
    r825 = (13.7 * y[1530] * y[1] * y[61] * y[273] * y[0]) / (1 + (y[1530] * y[1] * y[61] * y[273] * y[0]))
    r830 = (13.7 * y[1530] * y[61] * y[0]) / (1 + (y[1530] * y[61] * y[0]))
    r831 = (13.7 * y[1530] * y[1] * y[61] * y[273] * y[0]) / (1 + (y[1530] * y[1] * y[61] * y[273] * y[0]))
    r836 = (13.7 * y[1530] * y[61] * y[0]) / (1 + (y[1530] * y[61] * y[0]))
    r837 = (13.7 * y[1530] * y[1] * y[61] * y[273] * y[0]) / (1 + (y[1530] * y[1] * y[61] * y[273] * y[0]))
    return (r144 + r258 + r765) - (r146 + r288 + r547 + r657 + r658 + r660 + r661 + r663 + r664 + r803 + r805 + r811 + r813 + r814 + r815 + r816 + r817 + r818 + r820 + r821 + r823 + r824 + r825 + r830 + r831 + r836 + r837)
 
def C00065(t, y):
    r193 = (13.7 * y[1285] * y[138] * y[36] * y[0]) / (1 + (y[1285] * y[138] * y[36] * y[0]))
    r489 = (13.7 * y[1392] * y[94] * y[537]) / (1 + (y[1392] * y[94] * y[537]))
    r194 = (13.7 * y[1285] * y[62] * y[495]) / (1 + (y[1285] * y[62] * y[495]))
    r645 = (13.7 * y[1450] * y[62]) / (1 + (y[1450] * y[62]))
    r646 = (13.7 * y[1450] * y[62]) / (1 + (y[1450] * y[62]))
    r653 = (13.7 * y[1451] * y[62]) / (1 + (y[1451] * y[62]))
    r727 = (13.7 * y[1486] * y[1] * y[62] * y[1544]) / (1 + (y[1486] * y[1] * y[62] * y[1544]))
    r728 = (13.7 * y[1486] * y[1] * y[62] * y[1546]) / (1 + (y[1486] * y[1] * y[62] * y[1546]))
    return (r193 + r489) - (r194 + r645 + r646 + r653 + r727 + r728)
 
def C00066(t, y):
    r498 = (13.7 * y[1396] * y[606] * y[0]) / (1 + (y[1396] * y[606] * y[0]))
    return (r498) - (0)
 
def C00067(t, y):
    return (0) - (0)
 
def C00068(t, y):
    r213 = (13.7 * y[1293] * y[106] * y[679]) / (1 + (y[1293] * y[106] * y[679]))
    r397 = (13.7 * y[1372] * y[1] * y[354]) / (1 + (y[1372] * y[1] * y[354]))
    r206 = (13.7 * y[1292] * y[225] * y[65]) / (1 + (y[1292] * y[225] * y[65]))
    r207 = (13.7 * y[1292] * y[698] * y[65]) / (1 + (y[1292] * y[698] * y[65]))
    r210 = (13.7 * y[1293] * y[21] * y[65]) / (1 + (y[1293] * y[21] * y[65]))
    r211 = (13.7 * y[1293] * y[462] * y[65]) / (1 + (y[1293] * y[462] * y[65]))
    r212 = (13.7 * y[1293] * y[750] * y[65]) / (1 + (y[1293] * y[750] * y[65]))
    r371 = (13.7 * y[1366] * y[65] * y[7]) / (1 + (y[1366] * y[65] * y[7]))
    return (r213 + r397) - (r206 + r207 + r210 + r211 + r212 + r371)
 
def C00069(t, y):
    return (0) - (0)
 
def C00070(t, y):
    return (0) - (0)
 
def C00071(t, y):
    r1 = (13.7 * y[1233] * y[221] * y[2] ) / (1 + (y[1233] * y[221] * y[2] ))
    r20 = (13.7 * y[1233] * y[221] * y[2]) / (1 + (y[1233] * y[221] * y[2]))
    return (r1 + r20) - (0)
 
def C00072(t, y):
    return (0) - (0)
 
def C00073(t, y):
    r177 = (13.7 * y[1273] * y[576] * y[150]) / (1 + (y[1273] * y[576] * y[150]))
    r178 = (13.7 * y[1273] * y[18] * y[150]) / (1 + (y[1273] * y[18] * y[150]))
    r183 = (13.7 * y[1275] * y[646] * y[150]) / (1 + (y[1275] * y[646] * y[150]))
    r282 = (13.7 * y[1323] * y[8] * y[12] * y[18]) / (1 + (y[1323] * y[8] * y[12] * y[18]))
    r605 = (13.7 * y[1439] * y[43] * y[18] * y[29]) / (1 + (y[1439] * y[43] * y[18] * y[29]))
    r173 = (13.7 * y[1271] * y[70] * y[322] * y[0]) / (1 + (y[1271] * y[70] * y[322] * y[0]))
    r175 = (13.7 * y[1271] * y[70] * y[322] * y[0]) / (1 + (y[1271] * y[70] * y[322] * y[0]))
    r725 = (13.7 * y[1485] * y[1] * y[70] * y[1542]) / (1 + (y[1485] * y[1] * y[70] * y[1542]))
    return (r177 + r178 + r183 + r282 + r605) - (r173 + r175 + r725)
 
def C00074(t, y):
    r331 = (13.7 * y[1348] * y[1] * y[21] ) / (1 + (y[1348] * y[1] * y[21] ))
    r332 = (13.7 * y[1348] * y[43] * y[21]) / (1 + (y[1348] * y[43] * y[21]))
    r333 = (13.7 * y[1348] * y[60] * y[21]) / (1 + (y[1348] * y[60] * y[21]))
    r334 = (13.7 * y[1348] * y[72] * y[21]) / (1 + (y[1348] * y[72] * y[21]))
    r335 = (13.7 * y[1348] * y[78] * y[21]) / (1 + (y[1348] * y[78] * y[21]))
    r336 = (13.7 * y[1348] * y[127] * y[21]) / (1 + (y[1348] * y[127] * y[21]))
    r337 = (13.7 * y[1348] * y[272] * y[21]) / (1 + (y[1348] * y[272] * y[21]))
    r338 = (13.7 * y[1348] * y[196] * y[21]) / (1 + (y[1348] * y[196] * y[21]))
    r606 = (13.7 * y[1440] * y[428]) / (1 + (y[1440] * y[428]))
    r274 = (13.7 * y[1320] * y[71] * y[577]) / (1 + (y[1320] * y[71] * y[577]))
    r362 = (13.7 * y[1361] * y[71] * y[426]) / (1 + (y[1361] * y[71] * y[426]))
    r363 = (13.7 * y[1361] * y[71] * y[426]) / (1 + (y[1361] * y[71] * y[426]))
    return (r331 + r332 + r333 + r334 + r335 + r336 + r337 + r338 + r606) - (r274 + r362 + r363)
 
def C00075(t, y):
    r123 = (13.7 * y[1254] * y[404] * y[322] * y[0]) / (1 + (y[1254] * y[404] * y[322] * y[0]))
    r375 = (13.7 * y[1367] * y[1] * y[14]) / (1 + (y[1367] * y[1] * y[14]))
    r334 = (13.7 * y[1348] * y[72] * y[21]) / (1 + (y[1348] * y[72] * y[21]))
    r404 = (13.7 * y[1378] * y[72] * y[648]) / (1 + (y[1378] * y[72] * y[648]))
    r412 = (13.7 * y[1382] * y[72] * y[45]) / (1 + (y[1382] * y[72] * y[45]))
    r418 = (13.7 * y[1382] * y[72] * y[45]) / (1 + (y[1382] * y[72] * y[45]))
    r424 = (13.7 * y[1382] * y[72] * y[45]) / (1 + (y[1382] * y[72] * y[45]))
    r430 = (13.7 * y[1382] * y[72] * y[45]) / (1 + (y[1382] * y[72] * y[45]))
    r436 = (13.7 * y[1382] * y[72] * y[45]) / (1 + (y[1382] * y[72] * y[45]))
    r442 = (13.7 * y[1382] * y[72] * y[45]) / (1 + (y[1382] * y[72] * y[45]))
    r483 = (13.7 * y[1387] * y[72] * y[100]) / (1 + (y[1387] * y[72] * y[100]))
    r804 = (13.7 * y[1522] * y[1] * y[72] * y[13]) / (1 + (y[1522] * y[1] * y[72] * y[13]))
    r805 = (13.7 * y[1522] * y[1] * y[72] * y[61] * y[0]) / (1 + (y[1522] * y[1] * y[72] * y[61] * y[0]))
    return (r123 + r375) - (r334 + r404 + r412 + r418 + r424 + r430 + r436 + r442 + r483 + r804 + r805)
 
def C00076(t, y):
    return (0) - (0)
 
def C00077(t, y):
    r239 = (13.7 * y[1304] * y[395] * y[24]) / (1 + (y[1304] * y[395] * y[24]))
    r201 = (13.7 * y[1291] * y[164] * y[74]) / (1 + (y[1291] * y[164] * y[74]))
    return (r239) - (r201)
 
def C00078(t, y):
    r752 = (13.7 * y[1494] * y[1] * y[75] * y[1572]) / (1 + (y[1494] * y[1] * y[75] * y[1572]))
    return (0) - (r752)
 
def C00079(t, y):
    r300 = (13.7 * y[1331] * y[76] * y[25]) / (1 + (y[1331] * y[76] * y[25]))
    r753 = (13.7 * y[1495] * y[1] * y[76] * y[1574]) / (1 + (y[1495] * y[1] * y[76] * y[1574]))
    r754 = (13.7 * y[1495] * y[1] * y[76] * y[1574]) / (1 + (y[1495] * y[1] * y[76] * y[1574]))
    return (0) - (r300 + r753 + r754)
 
def C00080(t, y):
    r1 = (13.7 * y[1233] * y[221] * y[2] ) / (1 + (y[1233] * y[221] * y[2] ))
    r2 = (13.7 * y[1233] * y[405] * y[2] ) / (1 + (y[1233] * y[405] * y[2] ))
    r3 = (13.7 * y[1233] * y[406] * y[2]) / (1 + (y[1233] * y[406] * y[2]))
    r4 = (13.7 * y[1233] * y[449] * y[2]) / (1 + (y[1233] * y[449] * y[2]))
    r5 = (13.7 * y[1233] * y[704] * y[2]) / (1 + (y[1233] * y[704] * y[2]))
    r6 = (13.7 * y[1233] * y[708] * y[2]) / (1 + (y[1233] * y[708] * y[2]))
    r7 = (13.7 * y[1233] * y[765] * y[2]) / (1 + (y[1233] * y[765] * y[2]))
    r8 = (13.7 * y[1233] * y[766] * y[2]) / (1 + (y[1233] * y[766] * y[2]))
    r9 = (13.7 * y[1233] * y[797] * y[2]) / (1 + (y[1233] * y[797] * y[2]))
    r10 = (13.7 * y[1233] * y[560] * y[2]) / (1 + (y[1233] * y[560] * y[2]))
    r12 = (13.7 * y[1233] * y[834] * y[2]) / (1 + (y[1233] * y[834] * y[2]))
    r13 = (13.7 * y[1233] * y[111] * y[2]) / (1 + (y[1233] * y[111] * y[2]))
    r14 = (13.7 * y[1233] * y[111] * y[5]) / (1 + (y[1233] * y[111] * y[5]))
    r16 = (13.7 * y[1233] * y[516] * y[2]) / (1 + (y[1233] * y[516] * y[2]))
    r17 = (13.7 * y[1233] * y[836] * y[2]) / (1 + (y[1233] * y[836] * y[2]))
    r18 = (13.7 * y[1233] * y[393] * y[2]) / (1 + (y[1233] * y[393] * y[2]))
    r20 = (13.7 * y[1233] * y[221] * y[2]) / (1 + (y[1233] * y[221] * y[2]))
    r21 = (13.7 * y[1233] * y[405] * y[2] ) / (1 + (y[1233] * y[405] * y[2] ))
    r22 = (13.7 * y[1233] * y[406] * y[2]) / (1 + (y[1233] * y[406] * y[2]))
    r23 = (13.7 * y[1233] * y[449] * y[2]) / (1 + (y[1233] * y[449] * y[2]))
    r24 = (13.7 * y[1233] * y[704] * y[2]) / (1 + (y[1233] * y[704] * y[2]))
    r25 = (13.7 * y[1233] * y[708] * y[2]) / (1 + (y[1233] * y[708] * y[2]))
    r26 = (13.7 * y[1233] * y[765] * y[2]) / (1 + (y[1233] * y[765] * y[2]))
    r27 = (13.7 * y[1233] * y[766] * y[2]) / (1 + (y[1233] * y[766] * y[2]))
    r28 = (13.7 * y[1233] * y[797] * y[2]) / (1 + (y[1233] * y[797] * y[2]))
    r29 = (13.7 * y[1233] * y[560] * y[2]) / (1 + (y[1233] * y[560] * y[2]))
    r31 = (13.7 * y[1233] * y[834] * y[2]) / (1 + (y[1233] * y[834] * y[2]))
    r32 = (13.7 * y[1233] * y[111] * y[2]) / (1 + (y[1233] * y[111] * y[2]))
    r33 = (13.7 * y[1233] * y[111] * y[5]) / (1 + (y[1233] * y[111] * y[5]))
    r35 = (13.7 * y[1233] * y[516] * y[2]) / (1 + (y[1233] * y[516] * y[2]))
    r36 = (13.7 * y[1233] * y[836] * y[2]) / (1 + (y[1233] * y[836] * y[2]))
    r37 = (13.7 * y[1233] * y[393] * y[2]) / (1 + (y[1233] * y[393] * y[2]))
    r39 = (13.7 * y[1234] * y[582] * y[5]) / (1 + (y[1234] * y[582] * y[5]))
    r40 = (13.7 * y[1235] * y[416] * y[5]) / (1 + (y[1235] * y[416] * y[5]))
    r41 = (13.7 * y[1236] * y[645] * y[5]) / (1 + (y[1236] * y[645] * y[5]))
    r42 = (13.7 * y[1237] * y[458] * y[2] * y[0] ) / (1 + (y[1237] * y[458] * y[2] * y[0] ))
    r43 = (13.7 * y[1237] * y[525] * y[0] * y[2]) / (1 + (y[1237] * y[525] * y[0] * y[2]))
    r44 = (13.7 * y[1237] * y[458] * y[2] ) / (1 + (y[1237] * y[458] * y[2] ))
    r45 = (13.7 * y[1238] * y[181] * y[2]) / (1 + (y[1238] * y[181] * y[2]))
    r46 = (13.7 * y[1238] * y[747] * y[2] ) / (1 + (y[1238] * y[747] * y[2] ))
    r47 = (13.7 * y[1238] * y[737] * y[2]) / (1 + (y[1238] * y[737] * y[2]))
    r48 = (13.7 * y[1239] * y[250] * y[2]) / (1 + (y[1239] * y[250] * y[2]))
    r49 = (13.7 * y[1240] * y[256] * y[2]) / (1 + (y[1240] * y[256] * y[2]))
    r50 = (13.7 * y[1240] * y[256] * y[5]) / (1 + (y[1240] * y[256] * y[5]))
    r51 = (13.7 * y[1240] * y[256] * y[2]) / (1 + (y[1240] * y[256] * y[2]))
    r52 = (13.7 * y[1240] * y[256] * y[5]) / (1 + (y[1240] * y[256] * y[5]))
    r54 = (13.7 * y[1242] * y[429] * y[2]) / (1 + (y[1242] * y[429] * y[2]))
    r55 = (13.7 * y[1242] * y[484] * y[2]) / (1 + (y[1242] * y[484] * y[2]))
    r56 = (13.7 * y[1242] * y[641] * y[2] ) / (1 + (y[1242] * y[641] * y[2] ))
    r57 = (13.7 * y[1242] * y[684] * y[2]) / (1 + (y[1242] * y[684] * y[2]))
    r59 = (13.7 * y[1242] * y[688] * y[2]) / (1 + (y[1242] * y[688] * y[2]))
    r60 = (13.7 * y[1242] * y[690] * y[2]) / (1 + (y[1242] * y[690] * y[2]))
    r61 = (13.7 * y[1242] * y[692] * y[2]) / (1 + (y[1242] * y[692] * y[2]))
    r62 = (13.7 * y[1242] * y[694] * y[2]) / (1 + (y[1242] * y[694] * y[2]))
    r63 = (13.7 * y[1242] * y[800] * y[2]) / (1 + (y[1242] * y[800] * y[2]))
    r64 = (13.7 * y[1242] * y[824] * y[2]) / (1 + (y[1242] * y[824] * y[2]))
    r65 = (13.7 * y[1242] * y[826] * y[2]) / (1 + (y[1242] * y[826] * y[2]))
    r66 = (13.7 * y[1242] * y[828] * y[2]) / (1 + (y[1242] * y[828] * y[2]))
    r67 = (13.7 * y[1242] * y[769] * y[2]) / (1 + (y[1242] * y[769] * y[2]))
    r68 = (13.7 * y[1242] * y[831] * y[2]) / (1 + (y[1242] * y[831] * y[2]))
    r69 = (13.7 * y[1243] * y[324] * y[5]) / (1 + (y[1243] * y[324] * y[5]))
    r70 = (13.7 * y[1244] * y[216] * y[2]) / (1 + (y[1244] * y[216] * y[2]))
    r71 = (13.7 * y[1244] * y[216] * y[5] ) / (1 + (y[1244] * y[216] * y[5] ))
    r72 = (13.7 * y[1244] * y[216] * y[2]) / (1 + (y[1244] * y[216] * y[2]))
    r73 = (13.7 * y[1244] * y[216] * y[5] ) / (1 + (y[1244] * y[216] * y[5] ))
    r74 = (13.7 * y[1245] * y[89] * y[5]) / (1 + (y[1245] * y[89] * y[5]))
    r75 = (13.7 * y[1245] * y[490] * y[5]) / (1 + (y[1245] * y[490] * y[5]))
    r76 = (13.7 * y[1246] * y[112] * y[2]) / (1 + (y[1246] * y[112] * y[2]))
    r77 = (13.7 * y[1246] * y[394] * y[2]) / (1 + (y[1246] * y[394] * y[2]))
    r78 = (13.7 * y[1246] * y[422] * y[2]) / (1 + (y[1246] * y[422] * y[2]))
    r80 = (13.7 * y[1247] * y[642] * y[2]) / (1 + (y[1247] * y[642] * y[2]))
    r81 = (13.7 * y[1247] * y[642] * y[2]) / (1 + (y[1247] * y[642] * y[2]))
    r83 = (13.7 * y[1248] * y[631] * y[5]) / (1 + (y[1248] * y[631] * y[5]))
    r85 = (13.7 * y[1248] * y[631] * y[5]) / (1 + (y[1248] * y[631] * y[5]))
    r86 = (13.7 * y[1248] * y[749] * y[5]) / (1 + (y[1248] * y[749] * y[5]))
    r90 = (13.7 * y[1250] * y[90] * y[2] ) / (1 + (y[1250] * y[90] * y[2] ))
    r91 = (13.7 * y[1250] * y[90] * y[5]) / (1 + (y[1250] * y[90] * y[5]))
    r93 = (13.7 * y[1252] * y[611] * y[2] * y[0]) / (1 + (y[1252] * y[611] * y[2] * y[0]))
    r94 = (13.7 * y[1252] * y[611] * y[5] * y[0]) / (1 + (y[1252] * y[611] * y[5] * y[0]))
    r124 = (13.7 * y[1255] * y[81] * y[9] * y[2]) / (1 + (y[1255] * y[81] * y[9] * y[2]))
    r125 = (13.7 * y[1255] * y[511] * y[9] * y[2]) / (1 + (y[1255] * y[511] * y[9] * y[2]))
    r126 = (13.7 * y[1256] * y[397] * y[8] * y[5]) / (1 + (y[1256] * y[397] * y[8] * y[5]))
    r127 = (13.7 * y[1257] * y[498] * y[8] * y[5]) / (1 + (y[1257] * y[498] * y[8] * y[5]))
    r131 = (13.7 * y[1260] * y[248] * y[2]) / (1 + (y[1260] * y[248] * y[2]))
    r132 = (13.7 * y[1261] * y[316] * y[2]) / (1 + (y[1261] * y[316] * y[2]))
    r133 = (13.7 * y[1262] * y[168] * y[2]) / (1 + (y[1262] * y[168] * y[2]))
    r134 = (13.7 * y[1262] * y[714] * y[2]) / (1 + (y[1262] * y[714] * y[2]))
    r135 = (13.7 * y[1262] * y[682] * y[2]) / (1 + (y[1262] * y[682] * y[2]))
    r136 = (13.7 * y[1262] * y[718] * y[2]) / (1 + (y[1262] * y[718] * y[2]))
    r137 = (13.7 * y[1262] * y[721] * y[2]) / (1 + (y[1262] * y[721] * y[2]))
    r138 = (13.7 * y[1262] * y[724] * y[2]) / (1 + (y[1262] * y[724] * y[2]))
    r139 = (13.7 * y[1262] * y[730] * y[2]) / (1 + (y[1262] * y[730] * y[2]))
    r140 = (13.7 * y[1262] * y[733] * y[2] ) / (1 + (y[1262] * y[733] * y[2] ))
    r142 = (13.7 * y[1263] * y[474] * y[5]) / (1 + (y[1263] * y[474] * y[5]))
    r143 = (13.7 * y[1263] * y[474] * y[2]) / (1 + (y[1263] * y[474] * y[2]))
    r144 = (13.7 * y[1264] * y[24] * y[5]) / (1 + (y[1264] * y[24] * y[5]))
    r145 = (13.7 * y[1264] * y[24] * y[5] * y[0]) / (1 + (y[1264] * y[24] * y[5] * y[0]))
    r147 = (13.7 * y[1265] * y[143] * y[2]) / (1 + (y[1265] * y[143] * y[2]))
    r148 = (13.7 * y[1265] * y[143] * y[5]) / (1 + (y[1265] * y[143] * y[5]))
    r149 = (13.7 * y[1265] * y[485] * y[2]) / (1 + (y[1265] * y[485] * y[2]))
    r150 = (13.7 * y[1265] * y[485] * y[5]) / (1 + (y[1265] * y[485] * y[5]))
    r151 = (13.7 * y[1266] * y[98] * y[5]) / (1 + (y[1266] * y[98] * y[5]))
    r152 = (13.7 * y[1266] * y[98] * y[2]) / (1 + (y[1266] * y[98] * y[2]))
    r153 = (13.7 * y[1266] * y[98] * y[2]) / (1 + (y[1266] * y[98] * y[2]))
    r154 = (13.7 * y[1266] * y[98] * y[5]) / (1 + (y[1266] * y[98] * y[5]))
    r155 = (13.7 * y[1266] * y[391] * y[2]) / (1 + (y[1266] * y[391] * y[2]))
    r156 = (13.7 * y[1266] * y[391] * y[5]) / (1 + (y[1266] * y[391] * y[5]))
    r157 = (13.7 * y[1266] * y[264] * y[5]) / (1 + (y[1266] * y[264] * y[5]))
    r163 = (13.7 * y[1268] * y[126] * y[13] * y[5] ) / (1 + (y[1268] * y[126] * y[13] * y[5] ))
    r164 = (13.7 * y[1269] * y[849] * y[2] ) / (1 + (y[1269] * y[849] * y[2] ))
    r165 = (13.7 * y[1269] * y[563] * y[2]) / (1 + (y[1269] * y[563] * y[2]))
    r166 = (13.7 * y[1269] * y[815] * y[2]) / (1 + (y[1269] * y[815] * y[2]))
    r167 = (13.7 * y[1269] * y[421] * y[2]) / (1 + (y[1269] * y[421] * y[2]))
    r168 = (13.7 * y[1270] * y[321] * y[5]) / (1 + (y[1270] * y[321] * y[5]))
    r170 = (13.7 * y[1270] * y[513] * y[5] * y[0]) / (1 + (y[1270] * y[513] * y[5] * y[0]))
    r237 = (13.7 * y[1303] * y[2] * y[884] * y[0]) / (1 + (y[1303] * y[2] * y[884] * y[0]))
    r238 = (13.7 * y[1303] * y[2] * y[527] * y[0]) / (1 + (y[1303] * y[2] * y[527] * y[0]))
    r580 = (13.7 * y[1422] * y[354] * y[0]) / (1 + (y[1422] * y[354] * y[0]))
    r806 = (13.7 * y[1523] * y[492] * y[12] * y[7] * y[8]) / (1 + (y[1523] * y[492] * y[12] * y[7] * y[8]))
    r807 = (13.7 * y[1523] * y[492] * y[12] * y[7] * y[8]) / (1 + (y[1523] * y[492] * y[12] * y[7] * y[8]))
    r11 = (13.7 * y[1233] * y[776] * y[3] * y[77]) / (1 + (y[1233] * y[776] * y[3] * y[77]))
    r15 = (13.7 * y[1233] * y[823] * y[3] * y[77]) / (1 + (y[1233] * y[823] * y[3] * y[77]))
    r19 = (13.7 * y[1233] * y[771] * y[3] * y[77]) / (1 + (y[1233] * y[771] * y[3] * y[77]))
    r30 = (13.7 * y[1233] * y[776] * y[3] * y[77]) / (1 + (y[1233] * y[776] * y[3] * y[77]))
    r34 = (13.7 * y[1233] * y[823] * y[3] * y[77]) / (1 + (y[1233] * y[823] * y[3] * y[77]))
    r38 = (13.7 * y[1233] * y[771] * y[3] * y[77]) / (1 + (y[1233] * y[771] * y[3] * y[77]))
    r53 = (13.7 * y[1241] * y[448] * y[3] * y[77]) / (1 + (y[1241] * y[448] * y[3] * y[77]))
    r82 = (13.7 * y[1247] * y[106] * y[10] * y[3] * y[77]) / (1 + (y[1247] * y[106] * y[10] * y[3] * y[77]))
    r84 = (13.7 * y[1248] * y[462] * y[4] * y[77]) / (1 + (y[1248] * y[462] * y[4] * y[77]))
    r92 = (13.7 * y[1251] * y[3] * y[802] * y[77]) / (1 + (y[1251] * y[3] * y[802] * y[77]))
    r141 = (13.7 * y[1262] * y[818] * y[3] * y[77]) / (1 + (y[1262] * y[818] * y[3] * y[77]))
    r158 = (13.7 * y[1267] * y[3] * y[77] * y[1536]) / (1 + (y[1267] * y[3] * y[77] * y[1536]))
    r159 = (13.7 * y[1267] * y[454] * y[77] * y[3]) / (1 + (y[1267] * y[454] * y[77] * y[3]))
    r160 = (13.7 * y[1267] * y[518] * y[3] * y[77]) / (1 + (y[1267] * y[518] * y[3] * y[77]))
    r161 = (13.7 * y[1267] * y[529] * y[3] * y[77]) / (1 + (y[1267] * y[529] * y[3] * y[77]))
    r162 = (13.7 * y[1267] * y[4] * y[77] * y[1536]) / (1 + (y[1267] * y[4] * y[77] * y[1536]))
    r171 = (13.7 * y[1270] * y[4] * y[77] * y[1537]) / (1 + (y[1270] * y[4] * y[77] * y[1537]))
    r280 = (13.7 * y[1322] * y[469] * y[302] * y[321] * y[77]) / (1 + (y[1322] * y[469] * y[302] * y[321] * y[77]))
    r482 = (13.7 * y[1386] * y[183] * y[1] * y[273] * y[77]) / (1 + (y[1386] * y[183] * y[1] * y[273] * y[77]))
    r792 = (13.7 * y[1516] * y[1] * y[588] * y[77]) / (1 + (y[1516] * y[1] * y[588] * y[77]))
    return (r1 + r2 + r3 + r4 + r5 + r6 + r7 + r8 + r9 + r10 + r12 + r13 + r14 + r16 + r17 + r18 + r20 + r21 + r22 + r23 + r24 + r25 + r26 + r27 + r28 + r29 + r31 + r32 + r33 + r35 + r36 + r37 + r39 + r40 + r41 + r42 + r43 + r44 + r45 + r46 + r47 + r48 + r49 + r50 + r51 + r52 + r54 + r55 + r56 + r57 + r59 + r60 + r61 + r62 + r63 + r64 + r65 + r66 + r67 + r68 + r69 + r70 + r71 + r72 + r73 + r74 + r75 + r76 + r77 + r78 + r80 + r81 + r83 + r85 + r86 + r90 + r91 + r93 + r94 + r124 + r125 + r126 + r127 + r131 + r132 + r133 + r134 + r135 + r136 + r137 + r138 + r139 + r140 + r142 + r143 + r144 + r145 + r147 + r148 + r149 + r150 + r151 + r152 + r153 + r154 + r155 + r156 + r157 + r163 + r164 + r165 + r166 + r167 + r168 + r170 + r237 + r238 + r580 + r806 + r807) - (r11 + r15 + r19 + r30 + r34 + r38 + r53 + r82 + r84 + r92 + r141 + r158 + r159 + r160 + r161 + r162 + r171 + r280 + r482 + r792)
 
def C00081(t, y):
    r378 = (13.7 * y[1367] * y[1] * y[101]) / (1 + (y[1367] * y[1] * y[101]))
    r335 = (13.7 * y[1348] * y[78] * y[21]) / (1 + (y[1348] * y[78] * y[21]))
    r586 = (13.7 * y[1427] * y[78] * y[0]) / (1 + (y[1427] * y[78] * y[0]))
    return (r378) - (r335 + r586)
 
def C00082(t, y):
    r301 = (13.7 * y[1331] * y[79] * y[25]) / (1 + (y[1331] * y[79] * y[25]))
    r724 = (13.7 * y[1484] * y[1] * y[79] * y[1540]) / (1 + (y[1484] * y[1] * y[79] * y[1540]))
    return (0) - (r301 + r724)
 
def C00083(t, y):
    r199 = (13.7 * y[1289] * y[23] * y[643]) / (1 + (y[1289] * y[23] * y[643]))
    r843 = (13.7 * y[1532] * y[1] * y[23] * y[273]) / (1 + (y[1532] * y[1] * y[23] * y[273]))
    r844 = (13.7 * y[1532] * y[1] * y[23] * y[273]) / (1 + (y[1532] * y[1] * y[23] * y[273]))
    r240 = (13.7 * y[1305] * y[80] * y[223]) / (1 + (y[1305] * y[80] * y[223]))
    return (r199 + r843 + r844) - (r240)
 
def C00084(t, y):
    r2 = (13.7 * y[1233] * y[405] * y[2] ) / (1 + (y[1233] * y[405] * y[2] ))
    r21 = (13.7 * y[1233] * y[405] * y[2] ) / (1 + (y[1233] * y[405] * y[2] ))
    r602 = (13.7 * y[1437] * y[437]) / (1 + (y[1437] * y[437]))
    r124 = (13.7 * y[1255] * y[81] * y[9] * y[2]) / (1 + (y[1255] * y[81] * y[9] * y[2]))
    return (r2 + r21 + r602) - (r124)
 
def C00085(t, y):
    r328 = (13.7 * y[1347] * y[1] * y[92]) / (1 + (y[1347] * y[1] * y[92]))
    r699 = (13.7 * y[1473] * y[89]) / (1 + (y[1473] * y[89]))
    r702 = (13.7 * y[1473] * y[435]) / (1 + (y[1473] * y[435]))
    r704 = (13.7 * y[1473] * y[89]) / (1 + (y[1473] * y[89]))
    r707 = (13.7 * y[1473] * y[435]) / (1 + (y[1473] * y[435]))
    r203 = (13.7 * y[1292] * y[82] * y[114]) / (1 + (y[1292] * y[82] * y[114]))
    r288 = (13.7 * y[1328] * y[61] * y[82]) / (1 + (y[1328] * y[61] * y[82]))
    return (r328 + r699 + r702 + r704 + r707) - (r203 + r288)
 
def C00086(t, y):
    return (0) - (0)
 
def C00087(t, y):
    return (0) - (0)
 
def C00088(t, y):
    return (0) - (0)
 
def C00089(t, y):
    r511 = (13.7 * y[1402] * y[408] * y[0]) / (1 + (y[1402] * y[408] * y[0]))
    r317 = (13.7 * y[1338] * y[86] * y[629]) / (1 + (y[1338] * y[86] * y[629]))
    r529 = (13.7 * y[1403] * y[86] * y[0]) / (1 + (y[1403] * y[86] * y[0]))
    r530 = (13.7 * y[1403] * y[86] * y[0]) / (1 + (y[1403] * y[86] * y[0]))
    return (r511) - (r317 + r529 + r530)
 
def C00090(t, y):
    return (0) - (0)
 
def C00091(t, y):
    r242 = (13.7 * y[1306] * y[88] * y[256]) / (1 + (y[1306] * y[88] * y[256]))
    r243 = (13.7 * y[1306] * y[88] * y[256]) / (1 + (y[1306] * y[88] * y[256]))
    return (0) - (r242 + r243)
 
def C00092(t, y):
    r311 = (13.7 * y[1336] * y[1] * y[30]) / (1 + (y[1336] * y[1] * y[30]))
    r533 = (13.7 * y[1403] * y[848] * y[0]) / (1 + (y[1403] * y[848] * y[0]))
    r539 = (13.7 * y[1404] * y[0] * y[443] ) / (1 + (y[1404] * y[0] * y[443] ))
    r540 = (13.7 * y[1404] * y[0] * y[918] ) / (1 + (y[1404] * y[0] * y[918] ))
    r717 = (13.7 * y[1478] * y[433]) / (1 + (y[1478] * y[433]))
    r74 = (13.7 * y[1245] * y[89] * y[5]) / (1 + (y[1245] * y[89] * y[5]))
    r699 = (13.7 * y[1473] * y[89]) / (1 + (y[1473] * y[89]))
    r704 = (13.7 * y[1473] * y[89]) / (1 + (y[1473] * y[89]))
    return (r311 + r533 + r539 + r540 + r717) - (r74 + r699 + r704)
 
def C00093(t, y):
    r321 = (13.7 * y[1342] * y[1] * y[112]) / (1 + (y[1342] * y[1] * y[112]))
    r90 = (13.7 * y[1250] * y[90] * y[2] ) / (1 + (y[1250] * y[90] * y[2] ))
    r91 = (13.7 * y[1250] * y[90] * y[5]) / (1 + (y[1250] * y[90] * y[5]))
    r217 = (13.7 * y[1296] * y[90] * y[39]) / (1 + (y[1296] * y[90] * y[39]))
    r218 = (13.7 * y[1296] * y[424] * y[90]) / (1 + (y[1296] * y[424] * y[90]))
    r219 = (13.7 * y[1296] * y[168] * y[90]) / (1 + (y[1296] * y[168] * y[90]))
    r486 = (13.7 * y[1389] * y[262] * y[90]) / (1 + (y[1389] * y[262] * y[90]))
    return (r321) - (r90 + r91 + r217 + r218 + r219 + r486)
 
def C00094(t, y):
    r280 = (13.7 * y[1322] * y[469] * y[302] * y[321] * y[77]) / (1 + (y[1322] * y[469] * y[302] * y[321] * y[77]))
    return (r280) - (0)
 
def C00095(t, y):
    r529 = (13.7 * y[1403] * y[86] * y[0]) / (1 + (y[1403] * y[86] * y[0]))
    r531 = (13.7 * y[1403] * y[408] * y[0]) / (1 + (y[1403] * y[408] * y[0]))
    r532 = (13.7 * y[1403] * y[517] * y[0]) / (1 + (y[1403] * y[517] * y[0]))
    r533 = (13.7 * y[1403] * y[848] * y[0]) / (1 + (y[1403] * y[848] * y[0]))
    r534 = (13.7 * y[1403] * y[914] * y[0]) / (1 + (y[1403] * y[914] * y[0]))
    r536 = (13.7 * y[1403] * y[912] * y[0]) / (1 + (y[1403] * y[912] * y[0]))
    r537 = (13.7 * y[1403] * y[913] * y[0]) / (1 + (y[1403] * y[913] * y[0]))
    r328 = (13.7 * y[1347] * y[1] * y[92]) / (1 + (y[1347] * y[1] * y[92]))
    r329 = (13.7 * y[1347] * y[1] * y[92]) / (1 + (y[1347] * y[1] * y[92]))
    return (r529 + r531 + r532 + r533 + r534 + r536 + r537) - (r328 + r329)
 
def C00096(t, y):
    return (0) - (0)
 
def C00097(t, y):
    r278 = (13.7 * y[1322] * y[469] * y[270]) / (1 + (y[1322] * y[469] * y[270]))
    r280 = (13.7 * y[1322] * y[469] * y[302] * y[321] * y[77]) / (1 + (y[1322] * y[469] * y[302] * y[321] * y[77]))
    r281 = (13.7 * y[1322] * y[471] * y[270]) / (1 + (y[1322] * y[471] * y[270]))
    r169 = (13.7 * y[1270] * y[94] * y[50] * y[5]) / (1 + (y[1270] * y[94] * y[50] * y[5]))
    r241 = (13.7 * y[1511] * y[60] * y[589] * y[94]) / (1 + (y[1511] * y[60] * y[589] * y[94]))
    r489 = (13.7 * y[1392] * y[94] * y[537]) / (1 + (y[1392] * y[94] * y[537]))
    r491 = (13.7 * y[1393] * y[810] * y[94]) / (1 + (y[1393] * y[810] * y[94]))
    r492 = (13.7 * y[1393] * y[94] * y[557]) / (1 + (y[1393] * y[94] * y[557]))
    r749 = (13.7 * y[1491] * y[1] * y[94] * y[1568]) / (1 + (y[1491] * y[1] * y[94] * y[1568]))
    return (r278 + r280 + r281) - (r169 + r241 + r489 + r491 + r492 + r749)
 
def C00098(t, y):
    return (0) - (0)
 
def C00099(t, y):
    r592 = (13.7 * y[1429] * y[48]) / (1 + (y[1429] * y[48]))
    return (r592) - (0)
 
def C00100(t, y):
    r245 = (13.7 * y[1307] * y[97] * y[8]) / (1 + (y[1307] * y[97] * y[8]))
    r248 = (13.7 * y[1309] * y[97] * y[23]) / (1 + (y[1309] * y[97] * y[23]))
    return (0) - (r245 + r248)
 
def C00101(t, y):
    r193 = (13.7 * y[1285] * y[138] * y[36] * y[0]) / (1 + (y[1285] * y[138] * y[36] * y[0]))
    r195 = (13.7 * y[1286] * y[228] * y[605]) / (1 + (y[1286] * y[228] * y[605]))
    r196 = (13.7 * y[1286] * y[605] * y[398] * y[0]) / (1 + (y[1286] * y[605] * y[398] * y[0]))
    r197 = (13.7 * y[1287] * y[228] * y[659]) / (1 + (y[1287] * y[228] * y[659]))
    r198 = (13.7 * y[1288] * y[542] * y[228]) / (1 + (y[1288] * y[542] * y[228]))
    r151 = (13.7 * y[1266] * y[98] * y[5]) / (1 + (y[1266] * y[98] * y[5]))
    r152 = (13.7 * y[1266] * y[98] * y[2]) / (1 + (y[1266] * y[98] * y[2]))
    r153 = (13.7 * y[1266] * y[98] * y[2]) / (1 + (y[1266] * y[98] * y[2]))
    r154 = (13.7 * y[1266] * y[98] * y[5]) / (1 + (y[1266] * y[98] * y[5]))
    r808 = (13.7 * y[1524] * y[98] * y[55] * y[1]) / (1 + (y[1524] * y[98] * y[55] * y[1]))
    return (r193 + r195 + r196 + r197 + r198) - (r151 + r152 + r153 + r154 + r808)
 
def C00102(t, y):
    return (0) - (0)
 
def C00103(t, y):
    r400 = (13.7 * y[1375] * y[28] * y[399]) / (1 + (y[1375] * y[28] * y[399]))
    r405 = (13.7 * y[1379] * y[403] * y[100]) / (1 + (y[1379] * y[403] * y[100]))
    r483 = (13.7 * y[1387] * y[72] * y[100]) / (1 + (y[1387] * y[72] * y[100]))
    return (r400) - (r405 + r483)
 
def C00104(t, y):
    r335 = (13.7 * y[1348] * y[78] * y[21]) / (1 + (y[1348] * y[78] * y[21]))
    r378 = (13.7 * y[1367] * y[1] * y[101]) / (1 + (y[1367] * y[1] * y[101]))
    return (r335) - (r378)
 
def C00105(t, y):
    r340 = (13.7 * y[1349] * y[1] * y[282]) / (1 + (y[1349] * y[1] * y[282]))
    r342 = (13.7 * y[1349] * y[43] * y[282]) / (1 + (y[1349] * y[43] * y[282]))
    r484 = (13.7 * y[1388] * y[661] * y[853]) / (1 + (y[1388] * y[661] * y[853]))
    r485 = (13.7 * y[1388] * y[674] * y[853]) / (1 + (y[1388] * y[674] * y[853]))
    r597 = (13.7 * y[1432] * y[479]) / (1 + (y[1432] * y[479]))
    r270 = (13.7 * y[1318] * y[102] * y[12]) / (1 + (y[1318] * y[102] * y[12]))
    r271 = (13.7 * y[1318] * y[102] * y[12]) / (1 + (y[1318] * y[102] * y[12]))
    r366 = (13.7 * y[1364] * y[1] * y[102]) / (1 + (y[1364] * y[1] * y[102]))
    return (r340 + r342 + r484 + r485 + r597) - (r270 + r271 + r366)
 
def C00106(t, y):
    r270 = (13.7 * y[1318] * y[102] * y[12]) / (1 + (y[1318] * y[102] * y[12]))
    r271 = (13.7 * y[1318] * y[102] * y[12]) / (1 + (y[1318] * y[102] * y[12]))
    r541 = (13.7 * y[1405] * y[282] * y[0]) / (1 + (y[1405] * y[282] * y[0]))
    return (r270 + r271 + r541) - (0)
 
def C00107(t, y):
    return (0) - (0)
 
def C00108(t, y):
    return (0) - (0)
 
def C00109(t, y):
    r46 = (13.7 * y[1238] * y[747] * y[2] ) / (1 + (y[1238] * y[747] * y[2] ))
    r292 = (13.7 * y[1329] * y[539] * y[25]) / (1 + (y[1329] * y[539] * y[25]))
    r296 = (13.7 * y[1329] * y[539] * y[25]) / (1 + (y[1329] * y[539] * y[25]))
    r650 = (13.7 * y[1451] * y[183]) / (1 + (y[1451] * y[183]))
    r651 = (13.7 * y[1451] * y[890] * y[0]) / (1 + (y[1451] * y[890] * y[0]))
    r82 = (13.7 * y[1247] * y[106] * y[10] * y[3] * y[77]) / (1 + (y[1247] * y[106] * y[10] * y[3] * y[77]))
    r213 = (13.7 * y[1293] * y[106] * y[679]) / (1 + (y[1293] * y[106] * y[679]))
    r214 = (13.7 * y[1293] * y[21] * y[106]) / (1 + (y[1293] * y[21] * y[106]))
    return (r46 + r292 + r296 + r650 + r651) - (r82 + r213 + r214)
 
def C00110(t, y):
    return (0) - (0)
 
def C00111(t, y):
    r90 = (13.7 * y[1250] * y[90] * y[2] ) / (1 + (y[1250] * y[90] * y[2] ))
    r91 = (13.7 * y[1250] * y[90] * y[5]) / (1 + (y[1250] * y[90] * y[5]))
    r689 = (13.7 * y[1469] * y[114]) / (1 + (y[1469] * y[114]))
    r690 = (13.7 * y[1469] * y[114]) / (1 + (y[1469] * y[114]))
    return (r90 + r91 + r689 + r690) - (0)
 
def C00112(t, y):
    r99 = (13.7 * y[1253] * y[447] * y[322] * y[0]) / (1 + (y[1253] * y[447] * y[322] * y[0]))
    r107 = (13.7 * y[1253] * y[447] * y[322] * y[0]) / (1 + (y[1253] * y[447] * y[322] * y[0]))
    r115 = (13.7 * y[1253] * y[447] * y[322] * y[0]) / (1 + (y[1253] * y[447] * y[322] * y[0]))
    r333 = (13.7 * y[1348] * y[60] * y[21]) / (1 + (y[1348] * y[60] * y[21]))
    r367 = (13.7 * y[1365] * y[1] * y[54]) / (1 + (y[1365] * y[1] * y[54]))
    r377 = (13.7 * y[1367] * y[1] * y[109]) / (1 + (y[1367] * y[1] * y[109]))
    return (r99 + r107 + r115 + r333 + r367) - (r377)
 
def C00113(t, y):
    return (0) - (0)
 
def C00114(t, y):
    r507 = (13.7 * y[1401] * y[152] * y[0]) / (1 + (y[1401] * y[152] * y[0]))
    r13 = (13.7 * y[1233] * y[111] * y[2]) / (1 + (y[1233] * y[111] * y[2]))
    r14 = (13.7 * y[1233] * y[111] * y[5]) / (1 + (y[1233] * y[111] * y[5]))
    r32 = (13.7 * y[1233] * y[111] * y[2]) / (1 + (y[1233] * y[111] * y[2]))
    r33 = (13.7 * y[1233] * y[111] * y[5]) / (1 + (y[1233] * y[111] * y[5]))
    return (r507) - (r13 + r14 + r32 + r33)
 
def C00116(t, y):
    r512 = (13.7 * y[1402] * y[701] * y[0]) / (1 + (y[1402] * y[701] * y[0]))
    r76 = (13.7 * y[1246] * y[112] * y[2]) / (1 + (y[1246] * y[112] * y[2]))
    r321 = (13.7 * y[1342] * y[1] * y[112]) / (1 + (y[1342] * y[1] * y[112]))
    return (r512) - (r76 + r321)
 
def C00117(t, y):
    r202 = (13.7 * y[1292] * y[698] * y[114]) / (1 + (y[1292] * y[698] * y[114]))
    r207 = (13.7 * y[1292] * y[698] * y[65]) / (1 + (y[1292] * y[698] * y[65]))
    r305 = (13.7 * y[1335] * y[1] * y[117]) / (1 + (y[1335] * y[1] * y[117]))
    r307 = (13.7 * y[1335] * y[1] * y[117]) / (1 + (y[1335] * y[1] * y[117]))
    r309 = (13.7 * y[1335] * y[1] * y[117]) / (1 + (y[1335] * y[1] * y[117]))
    r205 = (13.7 * y[1292] * y[794] * y[113]) / (1 + (y[1292] * y[794] * y[113]))
    r395 = (13.7 * y[1371] * y[1] * y[113]) / (1 + (y[1371] * y[1] * y[113]))
    r396 = (13.7 * y[1371] * y[1] * y[113]) / (1 + (y[1371] * y[1] * y[113]))
    r694 = (13.7 * y[1472] * y[113]) / (1 + (y[1472] * y[113]))
    r696 = (13.7 * y[1472] * y[113]) / (1 + (y[1472] * y[113]))
    return (r202 + r207 + r305 + r307 + r309) - (r205 + r395 + r396 + r694 + r696)
 
def C00118(t, y):
    r206 = (13.7 * y[1292] * y[225] * y[65]) / (1 + (y[1292] * y[225] * y[65]))
    r602 = (13.7 * y[1437] * y[437]) / (1 + (y[1437] * y[437]))
    r202 = (13.7 * y[1292] * y[698] * y[114]) / (1 + (y[1292] * y[698] * y[114]))
    r203 = (13.7 * y[1292] * y[82] * y[114]) / (1 + (y[1292] * y[82] * y[114]))
    r204 = (13.7 * y[1292] * y[697] * y[114]) / (1 + (y[1292] * y[697] * y[114]))
    r215 = (13.7 * y[1294] * y[21] * y[114]) / (1 + (y[1294] * y[21] * y[114]))
    r689 = (13.7 * y[1469] * y[114]) / (1 + (y[1469] * y[114]))
    r690 = (13.7 * y[1469] * y[114]) / (1 + (y[1469] * y[114]))
    return (r206 + r602) - (r202 + r203 + r204 + r215 + r689 + r690)
 
def C00119(t, y):
    r256 = (13.7 * y[1312] * y[479] * y[12]) / (1 + (y[1312] * y[479] * y[12]))
    r258 = (13.7 * y[1313] * y[572] * y[12] * y[24]) / (1 + (y[1313] * y[572] * y[12] * y[24]))
    r259 = (13.7 * y[1314] * y[555] * y[12]) / (1 + (y[1314] * y[555] * y[12]))
    r260 = (13.7 * y[1315] * y[432] * y[12]) / (1 + (y[1315] * y[432] * y[12]))
    r261 = (13.7 * y[1315] * y[139] * y[12]) / (1 + (y[1315] * y[139] * y[12]))
    r262 = (13.7 * y[1316] * y[19] * y[12]) / (1 + (y[1316] * y[19] * y[12]))
    r263 = (13.7 * y[1316] * y[659] * y[12]) / (1 + (y[1316] * y[659] * y[12]))
    r264 = (13.7 * y[1317] * y[126] * y[12]) / (1 + (y[1317] * y[126] * y[12]))
    r265 = (13.7 * y[1317] * y[139] * y[12]) / (1 + (y[1317] * y[139] * y[12]))
    r266 = (13.7 * y[1317] * y[432] * y[12]) / (1 + (y[1317] * y[432] * y[12]))
    r270 = (13.7 * y[1318] * y[102] * y[12]) / (1 + (y[1318] * y[102] * y[12]))
    r271 = (13.7 * y[1318] * y[102] * y[12]) / (1 + (y[1318] * y[102] * y[12]))
    r395 = (13.7 * y[1371] * y[1] * y[113]) / (1 + (y[1371] * y[1] * y[113]))
    r396 = (13.7 * y[1371] * y[1] * y[113]) / (1 + (y[1371] * y[1] * y[113]))
    r806 = (13.7 * y[1523] * y[492] * y[12] * y[7] * y[8]) / (1 + (y[1523] * y[492] * y[12] * y[7] * y[8]))
    r807 = (13.7 * y[1523] * y[492] * y[12] * y[7] * y[8]) / (1 + (y[1523] * y[492] * y[12] * y[7] * y[8]))
    r257 = (13.7 * y[1312] * y[778] * y[115]) / (1 + (y[1312] * y[778] * y[115]))
    r267 = (13.7 * y[1317] * y[540] * y[115]) / (1 + (y[1317] * y[540] * y[115]))
    r268 = (13.7 * y[1317] * y[838] * y[115]) / (1 + (y[1317] * y[838] * y[115]))
    r269 = (13.7 * y[1317] * y[777] * y[115]) / (1 + (y[1317] * y[777] * y[115]))
    return (r256 + r258 + r259 + r260 + r261 + r262 + r263 + r264 + r265 + r266 + r270 + r271 + r395 + r396 + r806 + r807) - (r257 + r267 + r268 + r269)
 
def C00120(t, y):
    r795 = (13.7 * y[1519] * y[1] * y[116] * y[1594]) / (1 + (y[1519] * y[1] * y[116] * y[1594]))
    r798 = (13.7 * y[1519] * y[1] * y[116] * y[1594]) / (1 + (y[1519] * y[1] * y[116] * y[1594]))
    r799 = (13.7 * y[1519] * y[1] * y[116]) / (1 + (y[1519] * y[1] * y[116]))
    return (0) - (r795 + r798 + r799)
 
def C00121(t, y):
    r541 = (13.7 * y[1405] * y[282] * y[0]) / (1 + (y[1405] * y[282] * y[0]))
    r542 = (13.7 * y[1405] * y[573] * y[0]) / (1 + (y[1405] * y[573] * y[0]))
    r543 = (13.7 * y[1405] * y[738] * y[0]) / (1 + (y[1405] * y[738] * y[0]))
    r305 = (13.7 * y[1335] * y[1] * y[117]) / (1 + (y[1335] * y[1] * y[117]))
    r307 = (13.7 * y[1335] * y[1] * y[117]) / (1 + (y[1335] * y[1] * y[117]))
    r309 = (13.7 * y[1335] * y[1] * y[117]) / (1 + (y[1335] * y[1] * y[117]))
    return (r541 + r542 + r543) - (r305 + r307 + r309)
 
def C00122(t, y):
    r610 = (13.7 * y[1443] * y[144]) / (1 + (y[1443] * y[144]))
    r656 = (13.7 * y[1453] * y[586]) / (1 + (y[1453] * y[586]))
    r666 = (13.7 * y[1455] * y[600]) / (1 + (y[1455] * y[600]))
    r667 = (13.7 * y[1455] * y[669]) / (1 + (y[1455] * y[669]))
    r668 = (13.7 * y[1455] * y[906]) / (1 + (y[1455] * y[906]))
    return (r610 + r656 + r666 + r667 + r668) - (0)
 
def C00123(t, y):
    r289 = (13.7 * y[1329] * y[119] * y[25]) / (1 + (y[1329] * y[119] * y[25]))
    r293 = (13.7 * y[1329] * y[119] * y[25]) / (1 + (y[1329] * y[119] * y[25]))
    r756 = (13.7 * y[1497] * y[1] * y[119] * y[1578]) / (1 + (y[1497] * y[1] * y[119] * y[1578]))
    r758 = (13.7 * y[1499] * y[1] * y[119] * y[1578]) / (1 + (y[1499] * y[1] * y[119] * y[1578]))
    return (0) - (r289 + r293 + r756 + r758)
 
def C00124(t, y):
    r510 = (13.7 * y[1402] * y[702] * y[0]) / (1 + (y[1402] * y[702] * y[0]))
    r511 = (13.7 * y[1402] * y[408] * y[0]) / (1 + (y[1402] * y[408] * y[0]))
    r512 = (13.7 * y[1402] * y[701] * y[0]) / (1 + (y[1402] * y[701] * y[0]))
    r513 = (13.7 * y[1402] * y[496] * y[0]) / (1 + (y[1402] * y[496] * y[0]))
    r514 = (13.7 * y[1402] * y[700] * y[0]) / (1 + (y[1402] * y[700] * y[0]))
    r515 = (13.7 * y[1402] * y[699] * y[0]) / (1 + (y[1402] * y[699] * y[0]))
    r516 = (13.7 * y[1402] * y[664] * y[0]) / (1 + (y[1402] * y[664] * y[0]))
    r517 = (13.7 * y[1402] * y[517] * y[0]) / (1 + (y[1402] * y[517] * y[0]))
    r518 = (13.7 * y[1402] * y[757] * y[0] ) / (1 + (y[1402] * y[757] * y[0] ))
    r519 = (13.7 * y[1402] * y[752] * y[0]) / (1 + (y[1402] * y[752] * y[0]))
    r520 = (13.7 * y[1402] * y[703] * y[0]) / (1 + (y[1402] * y[703] * y[0]))
    r521 = (13.7 * y[1402] * y[0] * y[911]) / (1 + (y[1402] * y[0] * y[911]))
    r522 = (13.7 * y[1402] * y[912] * y[0]) / (1 + (y[1402] * y[912] * y[0]))
    r523 = (13.7 * y[1402] * y[917] * y[0]) / (1 + (y[1402] * y[917] * y[0]))
    r524 = (13.7 * y[1402] * y[919] * y[0]) / (1 + (y[1402] * y[919] * y[0]))
    r525 = (13.7 * y[1402] * y[915] * y[0]) / (1 + (y[1402] * y[915] * y[0]))
    r526 = (13.7 * y[1402] * y[916] * y[0]) / (1 + (y[1402] * y[916] * y[0]))
    r527 = (13.7 * y[1402] * y[921] * y[0]) / (1 + (y[1402] * y[921] * y[0]))
    r528 = (13.7 * y[1402] * y[913] * y[0]) / (1 + (y[1402] * y[913] * y[0]))
    return (r510 + r511 + r512 + r513 + r514 + r515 + r516 + r517 + r518 + r519 + r520 + r521 + r522 + r523 + r524 + r525 + r526 + r527 + r528) - (0)
 
def C00125(t, y):
    return (0) - (0)
 
def C00126(t, y):
    return (0) - (0)
 
def C00127(t, y):
    return (0) - (0)
 
def C00128(t, y):
    return (0) - (0)
 
def C00129(t, y):
    r598 = (13.7 * y[1433] * y[1] * y[483]) / (1 + (y[1433] * y[1] * y[483]))
    r710 = (13.7 * y[1475] * y[125]) / (1 + (y[1475] * y[125]))
    return (r598) - (r710)
 
def C00130(t, y):
    r586 = (13.7 * y[1427] * y[78] * y[0]) / (1 + (y[1427] * y[78] * y[0]))
    r163 = (13.7 * y[1268] * y[126] * y[13] * y[5] ) / (1 + (y[1268] * y[126] * y[13] * y[5] ))
    r264 = (13.7 * y[1317] * y[126] * y[12]) / (1 + (y[1317] * y[126] * y[12]))
    r569 = (13.7 * y[1415] * y[126] * y[0]) / (1 + (y[1415] * y[126] * y[0]))
    r809 = (13.7 * y[1525] * y[43] * y[126] * y[48]) / (1 + (y[1525] * y[43] * y[126] * y[48]))
    return (r586) - (r163 + r264 + r569 + r809)
 
def C00131(t, y):
    r379 = (13.7 * y[1367] * y[1] * y[201]) / (1 + (y[1367] * y[1] * y[201]))
    r120 = (13.7 * y[1254] * y[127] * y[322] * y[0]) / (1 + (y[1254] * y[127] * y[322] * y[0]))
    r336 = (13.7 * y[1348] * y[127] * y[21]) / (1 + (y[1348] * y[127] * y[21]))
    r445 = (13.7 * y[1383] * y[127] * y[38]) / (1 + (y[1383] * y[127] * y[38]))
    r451 = (13.7 * y[1383] * y[127] * y[38]) / (1 + (y[1383] * y[127] * y[38]))
    r463 = (13.7 * y[1383] * y[127] * y[38]) / (1 + (y[1383] * y[127] * y[38]))
    r469 = (13.7 * y[1383] * y[127] * y[38]) / (1 + (y[1383] * y[127] * y[38]))
    r475 = (13.7 * y[1383] * y[127] * y[38]) / (1 + (y[1383] * y[127] * y[38]))
    return (r379) - (r120 + r336 + r445 + r451 + r463 + r469 + r475)
 
def C00132(t, y):
    return (0) - (0)
 
def C00133(t, y):
    r494 = (13.7 * y[1394] * y[901] * y[0]) / (1 + (y[1394] * y[901] * y[0]))
    r495 = (13.7 * y[1394] * y[901] * y[0]) / (1 + (y[1394] * y[901] * y[0]))
    r673 = (13.7 * y[1460] * y[40]) / (1 + (y[1460] * y[40]))
    r730 = (13.7 * y[1488] * y[1] * y[129] * y[1548]) / (1 + (y[1488] * y[1] * y[129] * y[1548]))
    r731 = (13.7 * y[1488] * y[1] * y[129] * y[1550]) / (1 + (y[1488] * y[1] * y[129] * y[1550]))
    r732 = (13.7 * y[1488] * y[1] * y[129] * y[1552]) / (1 + (y[1488] * y[1] * y[129] * y[1552]))
    r733 = (13.7 * y[1488] * y[1] * y[129] * y[1554]) / (1 + (y[1488] * y[1] * y[129] * y[1554]))
    r734 = (13.7 * y[1488] * y[1] * y[129] * y[1556]) / (1 + (y[1488] * y[1] * y[129] * y[1556]))
    r735 = (13.7 * y[1488] * y[1] * y[129] * y[1558]) / (1 + (y[1488] * y[1] * y[129] * y[1558]))
    r736 = (13.7 * y[1488] * y[1] * y[129] * y[1560]) / (1 + (y[1488] * y[1] * y[129] * y[1560]))
    r737 = (13.7 * y[1488] * y[1] * y[129] * y[1562]) / (1 + (y[1488] * y[1] * y[129] * y[1562]))
    r738 = (13.7 * y[1488] * y[1] * y[129] * y[1548]) / (1 + (y[1488] * y[1] * y[129] * y[1548]))
    r739 = (13.7 * y[1488] * y[1] * y[129] * y[1550]) / (1 + (y[1488] * y[1] * y[129] * y[1550]))
    r740 = (13.7 * y[1488] * y[1] * y[129] * y[1552]) / (1 + (y[1488] * y[1] * y[129] * y[1552]))
    r741 = (13.7 * y[1488] * y[1] * y[129] * y[1554]) / (1 + (y[1488] * y[1] * y[129] * y[1554]))
    r742 = (13.7 * y[1488] * y[1] * y[129] * y[1556]) / (1 + (y[1488] * y[1] * y[129] * y[1556]))
    r743 = (13.7 * y[1488] * y[1] * y[129] * y[1558]) / (1 + (y[1488] * y[1] * y[129] * y[1558]))
    r744 = (13.7 * y[1488] * y[1] * y[129] * y[1560]) / (1 + (y[1488] * y[1] * y[129] * y[1560]))
    r745 = (13.7 * y[1488] * y[1] * y[129] * y[1562]) / (1 + (y[1488] * y[1] * y[129] * y[1562]))
    return (r494 + r495 + r673) - (r730 + r731 + r732 + r733 + r734 + r735 + r736 + r737 + r738 + r739 + r740 + r741 + r742 + r743 + r744 + r745)
 
def C00134(t, y):
    return (0) - (0)
 
def C00135(t, y):
    r42 = (13.7 * y[1237] * y[458] * y[2] * y[0] ) / (1 + (y[1237] * y[458] * y[2] * y[0] ))
    r43 = (13.7 * y[1237] * y[525] * y[0] * y[2]) / (1 + (y[1237] * y[525] * y[0] * y[2]))
    r755 = (13.7 * y[1496] * y[1] * y[131] * y[1576]) / (1 + (y[1496] * y[1] * y[131] * y[1576]))
    return (r42 + r43) - (r755)
 
def C00136(t, y):
    r125 = (13.7 * y[1255] * y[511] * y[9] * y[2]) / (1 + (y[1255] * y[511] * y[9] * y[2]))
    r249 = (13.7 * y[1309] * y[23] * y[132]) / (1 + (y[1309] * y[23] * y[132]))
    return (r125) - (r249)
 
def C00137(t, y):
    r513 = (13.7 * y[1402] * y[496] * y[0]) / (1 + (y[1402] * y[496] * y[0]))
    r524 = (13.7 * y[1402] * y[919] * y[0]) / (1 + (y[1402] * y[919] * y[0]))
    return (r513 + r524) - (0)
 
def C00138(t, y):
    return (0) - (0)
 
def C00139(t, y):
    return (0) - (0)
 
def C00140(t, y):
    return (0) - (0)
 
def C00141(t, y):
    r290 = (13.7 * y[1329] * y[178] * y[25]) / (1 + (y[1329] * y[178] * y[25]))
    r294 = (13.7 * y[1329] * y[178] * y[25]) / (1 + (y[1329] * y[178] * y[25]))
    r639 = (13.7 * y[1447] * y[612]) / (1 + (y[1447] * y[612]))
    r640 = (13.7 * y[1447] * y[631]) / (1 + (y[1447] * y[631]))
    return (r290 + r294 + r639 + r640) - (0)
 
def C00143(t, y):
    r191 = (13.7 * y[1283] * y[342] * y[138]) / (1 + (y[1283] * y[342] * y[138]))
    r193 = (13.7 * y[1285] * y[138] * y[36] * y[0]) / (1 + (y[1285] * y[138] * y[36] * y[0]))
    return (0) - (r191 + r193)
 
def C00144(t, y):
    r163 = (13.7 * y[1268] * y[126] * y[13] * y[5] ) / (1 + (y[1268] * y[126] * y[13] * y[5] ))
    r812 = (13.7 * y[1527] * y[1] * y[432] * y[13]) / (1 + (y[1527] * y[1] * y[432] * y[13]))
    r813 = (13.7 * y[1527] * y[1] * y[432] * y[61] * y[0]) / (1 + (y[1527] * y[1] * y[432] * y[61] * y[0]))
    r261 = (13.7 * y[1315] * y[139] * y[12]) / (1 + (y[1315] * y[139] * y[12]))
    r265 = (13.7 * y[1317] * y[139] * y[12]) / (1 + (y[1317] * y[139] * y[12]))
    r390 = (13.7 * y[1369] * y[1] * y[139]) / (1 + (y[1369] * y[1] * y[139]))
    return (r163 + r812 + r813) - (r261 + r265 + r390)
 
def C00145(t, y):
    return (0) - (0)
 
def C00146(t, y):
    return (0) - (0)
 
def C00147(t, y):
    r262 = (13.7 * y[1316] * y[19] * y[12]) / (1 + (y[1316] * y[19] * y[12]))
    r544 = (13.7 * y[1406] * y[20] * y[0] ) / (1 + (y[1406] * y[20] * y[0] ))
    r545 = (13.7 * y[1406] * y[165] * y[0]) / (1 + (y[1406] * y[165] * y[0]))
    r546 = (13.7 * y[1406] * y[681] * y[0] ) / (1 + (y[1406] * y[681] * y[0] ))
    return (r262 + r544 + r545 + r546) - (0)
 
def C00148(t, y):
    r147 = (13.7 * y[1265] * y[143] * y[2]) / (1 + (y[1265] * y[143] * y[2]))
    r148 = (13.7 * y[1265] * y[143] * y[5]) / (1 + (y[1265] * y[143] * y[5]))
    r748 = (13.7 * y[1490] * y[1] * y[143] * y[1566]) / (1 + (y[1490] * y[1] * y[143] * y[1566]))
    return (0) - (r147 + r148 + r748)
 
def C00149(t, y):
    r590 = (13.7 * y[1428] * y[144]) / (1 + (y[1428] * y[144]))
    r610 = (13.7 * y[1443] * y[144]) / (1 + (y[1443] * y[144]))
    return (0) - (r590 + r610)
 
def C00150(t, y):
    return (0) - (0)
 
def C00151(t, y):
    return (0) - (0)
 
def C00152(t, y):
    r764 = (13.7 * y[1505] * y[1] * y[48] * y[13]) / (1 + (y[1505] * y[1] * y[48] * y[13]))
    r819 = (13.7 * y[1529] * y[1] * y[48] * y[13]) / (1 + (y[1529] * y[1] * y[48] * y[13]))
    r820 = (13.7 * y[1529] * y[1] * y[48] * y[61] * y[0]) / (1 + (y[1529] * y[1] * y[48] * y[61] * y[0]))
    r822 = (13.7 * y[1529] * y[1] * y[48] * y[13]) / (1 + (y[1529] * y[1] * y[48] * y[13]))
    r823 = (13.7 * y[1529] * y[1] * y[48] * y[61] * y[0]) / (1 + (y[1529] * y[1] * y[48] * y[61] * y[0]))
    return (r764 + r819 + r820 + r822 + r823) - (0)
 
def C00153(t, y):
    r237 = (13.7 * y[1303] * y[2] * y[884] * y[0]) / (1 + (y[1303] * y[2] * y[884] * y[0]))
    r238 = (13.7 * y[1303] * y[2] * y[527] * y[0]) / (1 + (y[1303] * y[2] * y[527] * y[0]))
    r542 = (13.7 * y[1405] * y[573] * y[0]) / (1 + (y[1405] * y[573] * y[0]))
    return (r237 + r238 + r542) - (0)
 
def C00154(t, y):
    return (0) - (0)
 
def C00155(t, y):
    r670 = (13.7 * y[1457] * y[591]) / (1 + (y[1457] * y[591]))
    r177 = (13.7 * y[1273] * y[576] * y[150]) / (1 + (y[1273] * y[576] * y[150]))
    r178 = (13.7 * y[1273] * y[18] * y[150]) / (1 + (y[1273] * y[18] * y[150]))
    r183 = (13.7 * y[1275] * y[646] * y[150]) / (1 + (y[1275] * y[646] * y[150]))
    return (r670) - (r177 + r178 + r183)
 
def C00156(t, y):
    return (0) - (0)
 
def C00157(t, y):
    r507 = (13.7 * y[1401] * y[152] * y[0]) / (1 + (y[1401] * y[152] * y[0]))
    return (0) - (r507)
 
def C00158(t, y):
    return (0) - (0)
 
def C00159(t, y):
    r514 = (13.7 * y[1402] * y[700] * y[0]) / (1 + (y[1402] * y[700] * y[0]))
    r527 = (13.7 * y[1402] * y[921] * y[0]) / (1 + (y[1402] * y[921] * y[0]))
    return (r514 + r527) - (0)
 
def C00160(t, y):
    return (0) - (0)
 
def C00161(t, y):
    r649 = (13.7 * y[1450] * y[680]) / (1 + (y[1450] * y[680]))
    r654 = (13.7 * y[1451] * y[680]) / (1 + (y[1451] * y[680]))
    return (r649 + r654) - (0)
 
def C00162(t, y):
    return (0) - (0)
 
def C00163(t, y):
    r351 = (13.7 * y[1355] * y[1] * y[158]) / (1 + (y[1355] * y[1] * y[158]))
    return (0) - (r351)
 
def C00164(t, y):
    return (0) - (0)
 
def C00165(t, y):
    return (0) - (0)
 
def C00166(t, y):
    r300 = (13.7 * y[1331] * y[76] * y[25]) / (1 + (y[1331] * y[76] * y[25]))
    return (r300) - (0)
 
def C00167(t, y):
    return (0) - (0)
 
def C00168(t, y):
    return (0) - (0)
 
def C00169(t, y):
    r353 = (13.7 * y[1357] * y[1] * y[13] * y[273]) / (1 + (y[1357] * y[1] * y[13] * y[273]))
    r354 = (13.7 * y[1357] * y[1] * y[515]) / (1 + (y[1357] * y[1] * y[515]))
    r356 = (13.7 * y[1357] * y[1] * y[13] * y[273]) / (1 + (y[1357] * y[1] * y[13] * y[273]))
    r357 = (13.7 * y[1357] * y[1] * y[515]) / (1 + (y[1357] * y[1] * y[515]))
    r825 = (13.7 * y[1530] * y[1] * y[61] * y[273] * y[0]) / (1 + (y[1530] * y[1] * y[61] * y[273] * y[0]))
    r826 = (13.7 * y[1530] * y[1] * y[515]) / (1 + (y[1530] * y[1] * y[515]))
    r829 = (13.7 * y[1530] * y[1] * y[273] * y[13]) / (1 + (y[1530] * y[1] * y[273] * y[13]))
    r831 = (13.7 * y[1530] * y[1] * y[61] * y[273] * y[0]) / (1 + (y[1530] * y[1] * y[61] * y[273] * y[0]))
    r832 = (13.7 * y[1530] * y[1] * y[515]) / (1 + (y[1530] * y[1] * y[515]))
    r835 = (13.7 * y[1530] * y[1] * y[273] * y[13]) / (1 + (y[1530] * y[1] * y[273] * y[13]))
    r837 = (13.7 * y[1530] * y[1] * y[61] * y[273] * y[0]) / (1 + (y[1530] * y[1] * y[61] * y[273] * y[0]))
    r838 = (13.7 * y[1530] * y[1] * y[515]) / (1 + (y[1530] * y[1] * y[515]))
    r841 = (13.7 * y[1530] * y[1] * y[273] * y[13]) / (1 + (y[1530] * y[1] * y[273] * y[13]))
    r200 = (13.7 * y[1290] * y[164] * y[48]) / (1 + (y[1290] * y[164] * y[48]))
    r201 = (13.7 * y[1291] * y[164] * y[74]) / (1 + (y[1291] * y[164] * y[74]))
    return (r353 + r354 + r356 + r357 + r825 + r826 + r829 + r831 + r832 + r835 + r837 + r838 + r841) - (r200 + r201)
 
def C00170(t, y):
    r545 = (13.7 * y[1406] * y[165] * y[0]) / (1 + (y[1406] * y[165] * y[0]))
    return (0) - (r545)
 
def C00171(t, y):
    return (0) - (0)
 
def C00172(t, y):
    return (0) - (0)
 
def C00173(t, y):
    r133 = (13.7 * y[1262] * y[168] * y[2]) / (1 + (y[1262] * y[168] * y[2]))
    r219 = (13.7 * y[1296] * y[168] * y[90]) / (1 + (y[1296] * y[168] * y[90]))
    r221 = (13.7 * y[1298] * y[168] * y[493]) / (1 + (y[1298] * y[168] * y[493]))
    r236 = (13.7 * y[1302] * y[168] * y[8]) / (1 + (y[1302] * y[168] * y[8]))
    return (0) - (r133 + r219 + r221 + r236)
 
def C00174(t, y):
    return (0) - (0)
 
def C00175(t, y):
    return (0) - (0)
 
def C00176(t, y):
    return (0) - (0)
 
def C00177(t, y):
    return (0) - (0)
 
def C00178(t, y):
    return (0) - (0)
 
def C00179(t, y):
    return (0) - (0)
 
def C00180(t, y):
    r557 = (13.7 * y[1409] * y[781] * y[0]) / (1 + (y[1409] * y[781] * y[0]))
    return (r557) - (0)
 
def C00181(t, y):
    return (0) - (0)
 
def C00182(t, y):
    return (0) - (0)
 
def C00183(t, y):
    r290 = (13.7 * y[1329] * y[178] * y[25]) / (1 + (y[1329] * y[178] * y[25]))
    r294 = (13.7 * y[1329] * y[178] * y[25]) / (1 + (y[1329] * y[178] * y[25]))
    r762 = (13.7 * y[1503] * y[1] * y[178] * y[1589]) / (1 + (y[1503] * y[1] * y[178] * y[1589]))
    return (0) - (r290 + r294 + r762)
 
def C00184(t, y):
    r76 = (13.7 * y[1246] * y[112] * y[2]) / (1 + (y[1246] * y[112] * y[2]))
    return (r76) - (0)
 
def C00185(t, y):
    return (0) - (0)
 
def C00186(t, y):
    r590 = (13.7 * y[1428] * y[144]) / (1 + (y[1428] * y[144]))
    r45 = (13.7 * y[1238] * y[181] * y[2]) / (1 + (y[1238] * y[181] * y[2]))
    return (r590) - (r45)
 
def C00187(t, y):
    return (0) - (0)
 
def C00188(t, y):
    r642 = (13.7 * y[1448] * y[478] * y[0]) / (1 + (y[1448] * y[478] * y[0]))
    r482 = (13.7 * y[1386] * y[183] * y[1] * y[273] * y[77]) / (1 + (y[1386] * y[183] * y[1] * y[273] * y[77]))
    r650 = (13.7 * y[1451] * y[183]) / (1 + (y[1451] * y[183]))
    r757 = (13.7 * y[1498] * y[1] * y[183] * y[1580]) / (1 + (y[1498] * y[1] * y[183] * y[1580]))
    return (r642) - (r482 + r650 + r757)
 
def C00189(t, y):
    r508 = (13.7 * y[1401] * y[329] * y[0]) / (1 + (y[1401] * y[329] * y[0]))
    r509 = (13.7 * y[1401] * y[667] * y[0] ) / (1 + (y[1401] * y[667] * y[0] ))
    return (r508 + r509) - (0)
 
def C00190(t, y):
    return (0) - (0)
 
def C00191(t, y):
    return (0) - (0)
 
def C00192(t, y):
    return (0) - (0)
 
def C00193(t, y):
    return (0) - (0)
 
def C00194(t, y):
    return (0) - (0)
 
def C00195(t, y):
    return (0) - (0)
 
def C00196(t, y):
    return (0) - (0)
 
def C00197(t, y):
    r322 = (13.7 * y[1343] * y[1] * y[252]) / (1 + (y[1343] * y[1] * y[252]))
    r712 = (13.7 * y[1477] * y[486] * y[426]) / (1 + (y[1477] * y[486] * y[426]))
    r713 = (13.7 * y[1477] * y[428]) / (1 + (y[1477] * y[428]))
    r714 = (13.7 * y[1477] * y[486] * y[426]) / (1 + (y[1477] * y[486] * y[426]))
    r715 = (13.7 * y[1477] * y[428]) / (1 + (y[1477] * y[428]))
    r359 = (13.7 * y[1358] * y[1] * y[192]) / (1 + (y[1358] * y[1] * y[192]))
    return (r322 + r712 + r713 + r714 + r715) - (r359)
 
def C00198(t, y):
    r70 = (13.7 * y[1244] * y[216] * y[2]) / (1 + (y[1244] * y[216] * y[2]))
    r71 = (13.7 * y[1244] * y[216] * y[5] ) / (1 + (y[1244] * y[216] * y[5] ))
    r72 = (13.7 * y[1244] * y[216] * y[2]) / (1 + (y[1244] * y[216] * y[2]))
    r73 = (13.7 * y[1244] * y[216] * y[5] ) / (1 + (y[1244] * y[216] * y[5] ))
    return (r70 + r71 + r72 + r73) - (0)
 
def C00199(t, y):
    r69 = (13.7 * y[1243] * y[324] * y[5]) / (1 + (y[1243] * y[324] * y[5]))
    r694 = (13.7 * y[1472] * y[113]) / (1 + (y[1472] * y[113]))
    r696 = (13.7 * y[1472] * y[113]) / (1 + (y[1472] * y[113]))
    r676 = (13.7 * y[1463] * y[194]) / (1 + (y[1463] * y[194]))
    return (r69 + r694 + r696) - (r676)
 
def C00200(t, y):
    return (0) - (0)
 
def C00201(t, y):
    r372 = (13.7 * y[1367] * y[1] * y[400]) / (1 + (y[1367] * y[1] * y[400]))
    r338 = (13.7 * y[1348] * y[196] * y[21]) / (1 + (y[1348] * y[196] * y[21]))
    r408 = (13.7 * y[1382] * y[196] * y[45]) / (1 + (y[1382] * y[196] * y[45]))
    r413 = (13.7 * y[1382] * y[196]) / (1 + (y[1382] * y[196]))
    r414 = (13.7 * y[1382] * y[196] * y[45]) / (1 + (y[1382] * y[196] * y[45]))
    r419 = (13.7 * y[1382] * y[196]) / (1 + (y[1382] * y[196]))
    r420 = (13.7 * y[1382] * y[196] * y[45]) / (1 + (y[1382] * y[196] * y[45]))
    r425 = (13.7 * y[1382] * y[196]) / (1 + (y[1382] * y[196]))
    r426 = (13.7 * y[1382] * y[196] * y[45]) / (1 + (y[1382] * y[196] * y[45]))
    r431 = (13.7 * y[1382] * y[196]) / (1 + (y[1382] * y[196]))
    r432 = (13.7 * y[1382] * y[196] * y[45]) / (1 + (y[1382] * y[196] * y[45]))
    r437 = (13.7 * y[1382] * y[196]) / (1 + (y[1382] * y[196]))
    r438 = (13.7 * y[1382] * y[196] * y[45]) / (1 + (y[1382] * y[196] * y[45]))
    r443 = (13.7 * y[1382] * y[196]) / (1 + (y[1382] * y[196]))
    return (r372) - (r338 + r408 + r413 + r414 + r419 + r420 + r425 + r426 + r431 + r432 + r437 + r438 + r443)
 
def C00202(t, y):
    return (0) - (0)
 
def C00203(t, y):
    r682 = (13.7 * y[1466] * y[42]) / (1 + (y[1466] * y[42]))
    return (r682) - (0)
 
def C00204(t, y):
    return (0) - (0)
 
def C00205(t, y):
    return (0) - (0)
 
def C00206(t, y):
    r336 = (13.7 * y[1348] * y[127] * y[21]) / (1 + (y[1348] * y[127] * y[21]))
    r370 = (13.7 * y[1366] * y[1] * y[337]) / (1 + (y[1366] * y[1] * y[337]))
    r96 = (13.7 * y[1253] * y[201] * y[322] * y[0]) / (1 + (y[1253] * y[201] * y[322] * y[0]))
    r104 = (13.7 * y[1253] * y[201] * y[322] * y[0]) / (1 + (y[1253] * y[201] * y[322] * y[0]))
    r112 = (13.7 * y[1253] * y[201] * y[322] * y[0]) / (1 + (y[1253] * y[201] * y[322] * y[0]))
    r379 = (13.7 * y[1367] * y[1] * y[201]) / (1 + (y[1367] * y[1] * y[201]))
    return (r336 + r370) - (r96 + r104 + r112 + r379)
 
def C00207(t, y):
    return (0) - (0)
 
def C00208(t, y):
    return (0) - (0)
 
def C00209(t, y):
    return (0) - (0)
 
def C00210(t, y):
    return (0) - (0)
 
def C00211(t, y):
    return (0) - (0)
 
def C00212(t, y):
    return (0) - (0)
 
def C00213(t, y):
    return (0) - (0)
 
def C00214(t, y):
    r314 = (13.7 * y[1337] * y[1] * y[209]) / (1 + (y[1337] * y[1] * y[209]))
    return (0) - (r314)
 
def C00215(t, y):
    return (0) - (0)
 
def C00216(t, y):
    return (0) - (0)
 
def C00217(t, y):
    r548 = (13.7 * y[1407] * y[453] * y[0]) / (1 + (y[1407] * y[453] * y[0]))
    r674 = (13.7 * y[1461] * y[24]) / (1 + (y[1461] * y[24]))
    r790 = (13.7 * y[1514] * y[1] * y[494] * y[212]) / (1 + (y[1514] * y[1] * y[494] * y[212]))
    return (r548 + r674) - (r790)
 
def C00218(t, y):
    return (0) - (0)
 
def C00219(t, y):
    return (0) - (0)
 
def C00220(t, y):
    return (0) - (0)
 
def C00221(t, y):
    r70 = (13.7 * y[1244] * y[216] * y[2]) / (1 + (y[1244] * y[216] * y[2]))
    r71 = (13.7 * y[1244] * y[216] * y[5] ) / (1 + (y[1244] * y[216] * y[5] ))
    r72 = (13.7 * y[1244] * y[216] * y[2]) / (1 + (y[1244] * y[216] * y[2]))
    r73 = (13.7 * y[1244] * y[216] * y[5] ) / (1 + (y[1244] * y[216] * y[5] ))
    r312 = (13.7 * y[1336] * y[1] * y[216]) / (1 + (y[1336] * y[1] * y[216]))
    return (0) - (r70 + r71 + r72 + r73 + r312)
 
def C00222(t, y):
    return (0) - (0)
 
def C00223(t, y):
    return (0) - (0)
 
def C00224(t, y):
    r505 = (13.7 * y[1400] * y[52] * y[0]) / (1 + (y[1400] * y[52] * y[0]))
    return (r505) - (0)
 
def C00225(t, y):
    return (0) - (0)
 
def C00226(t, y):
    r1 = (13.7 * y[1233] * y[221] * y[2] ) / (1 + (y[1233] * y[221] * y[2] ))
    r20 = (13.7 * y[1233] * y[221] * y[2]) / (1 + (y[1233] * y[221] * y[2]))
    return (0) - (r1 + r20)
 
def C00227(t, y):
    r244 = (13.7 * y[1307] * y[23] * y[8]) / (1 + (y[1307] * y[23] * y[8]))
    r350 = (13.7 * y[1355] * y[1] * y[32]) / (1 + (y[1355] * y[1] * y[32]))
    return (r244 + r350) - (0)
 
def C00229(t, y):
    r219 = (13.7 * y[1296] * y[168] * y[90]) / (1 + (y[1296] * y[168] * y[90]))
    r221 = (13.7 * y[1298] * y[168] * y[493]) / (1 + (y[1298] * y[168] * y[493]))
    r222 = (13.7 * y[1298] * y[610] * y[493]) / (1 + (y[1298] * y[610] * y[493]))
    r223 = (13.7 * y[1298] * y[682] * y[493]) / (1 + (y[1298] * y[682] * y[493]))
    r224 = (13.7 * y[1298] * y[714] * y[493]) / (1 + (y[1298] * y[714] * y[493]))
    r225 = (13.7 * y[1298] * y[718] * y[493]) / (1 + (y[1298] * y[718] * y[493]))
    r226 = (13.7 * y[1298] * y[721] * y[493]) / (1 + (y[1298] * y[721] * y[493]))
    r227 = (13.7 * y[1298] * y[724] * y[493]) / (1 + (y[1298] * y[724] * y[493]))
    r228 = (13.7 * y[1298] * y[730] * y[493]) / (1 + (y[1298] * y[730] * y[493]))
    r229 = (13.7 * y[1298] * y[733] * y[493]) / (1 + (y[1298] * y[733] * y[493]))
    r230 = (13.7 * y[1298] * y[859] * y[493]) / (1 + (y[1298] * y[859] * y[493]))
    r231 = (13.7 * y[1298] * y[873] * y[493]) / (1 + (y[1298] * y[873] * y[493]))
    r236 = (13.7 * y[1302] * y[168] * y[8]) / (1 + (y[1302] * y[168] * y[8]))
    r487 = (13.7 * y[1390] * y[9] * y[596]) / (1 + (y[1390] * y[9] * y[596]))
    r240 = (13.7 * y[1305] * y[80] * y[223]) / (1 + (y[1305] * y[80] * y[223]))
    return (r219 + r221 + r222 + r223 + r224 + r225 + r226 + r227 + r228 + r229 + r230 + r231 + r236 + r487) - (r240)
 
def C00230(t, y):
    return (0) - (0)
 
def C00231(t, y):
    r202 = (13.7 * y[1292] * y[698] * y[114]) / (1 + (y[1292] * y[698] * y[114]))
    r203 = (13.7 * y[1292] * y[82] * y[114]) / (1 + (y[1292] * y[82] * y[114]))
    r204 = (13.7 * y[1292] * y[697] * y[114]) / (1 + (y[1292] * y[697] * y[114]))
    r676 = (13.7 * y[1463] * y[194]) / (1 + (y[1463] * y[194]))
    r206 = (13.7 * y[1292] * y[225] * y[65]) / (1 + (y[1292] * y[225] * y[65]))
    return (r202 + r203 + r204 + r676) - (r206)
 
def C00232(t, y):
    return (0) - (0)
 
def C00233(t, y):
    r81 = (13.7 * y[1247] * y[642] * y[2]) / (1 + (y[1247] * y[642] * y[2]))
    r289 = (13.7 * y[1329] * y[119] * y[25]) / (1 + (y[1329] * y[119] * y[25]))
    r293 = (13.7 * y[1329] * y[119] * y[25]) / (1 + (y[1329] * y[119] * y[25]))
    r79 = (13.7 * y[1247] * y[227] * y[10]) / (1 + (y[1247] * y[227] * y[10]))
    return (r81 + r289 + r293) - (r79)
 
def C00234(t, y):
    r808 = (13.7 * y[1524] * y[98] * y[55] * y[1]) / (1 + (y[1524] * y[98] * y[55] * y[1]))
    r195 = (13.7 * y[1286] * y[228] * y[605]) / (1 + (y[1286] * y[228] * y[605]))
    r197 = (13.7 * y[1287] * y[228] * y[659]) / (1 + (y[1287] * y[228] * y[659]))
    r198 = (13.7 * y[1288] * y[542] * y[228]) / (1 + (y[1288] * y[542] * y[228]))
    return (r808) - (r195 + r197 + r198)
 
def C00235(t, y):
    r710 = (13.7 * y[1475] * y[125]) / (1 + (y[1475] * y[125]))
    r284 = (13.7 * y[1324] * y[229] * y[852]) / (1 + (y[1324] * y[229] * y[852]))
    return (r710) - (r284)
 
def C00236(t, y):
    r359 = (13.7 * y[1358] * y[1] * y[192]) / (1 + (y[1358] * y[1] * y[192]))
    return (r359) - (0)
 
def C00237(t, y):
    return (0) - (0)
 
def C00238(t, y):
    return (0) - (0)
 
def C00239(t, y):
    r368 = (13.7 * y[1365] * y[1] * y[233]) / (1 + (y[1365] * y[1] * y[233]))
    return (0) - (r368)
 
def C00240(t, y):
    r186 = (13.7 * y[1277] * y[18] * y[234]) / (1 + (y[1277] * y[18] * y[234]))
    return (0) - (r186)
 
def C00241(t, y):
    r568 = (13.7 * y[1414] * y[756] * y[0]) / (1 + (y[1414] * y[756] * y[0]))
    r549 = (13.7 * y[1407] * y[235] * y[0]) / (1 + (y[1407] * y[235] * y[0]))
    r558 = (13.7 * y[1409] * y[235] * y[0]) / (1 + (y[1409] * y[235] * y[0]))
    r561 = (13.7 * y[1410] * y[235] * y[0]) / (1 + (y[1410] * y[235] * y[0]))
    return (r568) - (r549 + r558 + r561)
 
def C00242(t, y):
    r261 = (13.7 * y[1315] * y[139] * y[12]) / (1 + (y[1315] * y[139] * y[12]))
    r265 = (13.7 * y[1317] * y[139] * y[12]) / (1 + (y[1317] * y[139] * y[12]))
    r578 = (13.7 * y[1420] * y[236] * y[0]) / (1 + (y[1420] * y[236] * y[0]))
    return (r261 + r265) - (r578)
 
def C00243(t, y):
    return (0) - (0)
 
def C00244(t, y):
    return (0) - (0)
 
def C00245(t, y):
    r593 = (13.7 * y[1429] * y[412]) / (1 + (y[1429] * y[412]))
    return (r593) - (0)
 
def C00246(t, y):
    return (0) - (0)
 
def C00247(t, y):
    return (0) - (0)
 
def C00248(t, y):
    r167 = (13.7 * y[1269] * y[421] * y[2]) / (1 + (y[1269] * y[421] * y[2]))
    return (r167) - (0)
 
def C00249(t, y):
    return (0) - (0)
 
def C00250(t, y):
    return (0) - (0)
 
def C00251(t, y):
    r644 = (13.7 * y[1449] * y[502]) / (1 + (y[1449] * y[502]))
    r720 = (13.7 * y[1481] * y[245]) / (1 + (y[1481] * y[245]))
    return (r644) - (r720)
 
def C00252(t, y):
    return (0) - (0)
 
def C00253(t, y):
    r543 = (13.7 * y[1405] * y[738] * y[0]) / (1 + (y[1405] * y[738] * y[0]))
    r806 = (13.7 * y[1523] * y[492] * y[12] * y[7] * y[8]) / (1 + (y[1523] * y[492] * y[12] * y[7] * y[8]))
    r807 = (13.7 * y[1523] * y[492] * y[12] * y[7] * y[8]) / (1 + (y[1523] * y[492] * y[12] * y[7] * y[8]))
    return (r543 + r806 + r807) - (0)
 
def C00254(t, y):
    r720 = (13.7 * y[1481] * y[245]) / (1 + (y[1481] * y[245]))
    r131 = (13.7 * y[1260] * y[248] * y[2]) / (1 + (y[1260] * y[248] * y[2]))
    return (r720) - (r131)
 
def C00255(t, y):
    r286 = (13.7 * y[1326] * y[636]) / (1 + (y[1326] * y[636]))
    r320 = (13.7 * y[1341] * y[1] * y[249]) / (1 + (y[1341] * y[1] * y[249]))
    return (r286) - (r320)
 
def C00256(t, y):
    r48 = (13.7 * y[1239] * y[250] * y[2]) / (1 + (y[1239] * y[250] * y[2]))
    return (0) - (r48)
 
def C00257(t, y):
    r303 = (13.7 * y[1333] * y[1] * y[251]) / (1 + (y[1333] * y[1] * y[251]))
    return (0) - (r303)
 
def C00258(t, y):
    r322 = (13.7 * y[1343] * y[1] * y[252]) / (1 + (y[1343] * y[1] * y[252]))
    return (0) - (r322)
 
def C00259(t, y):
    r693 = (13.7 * y[1471] * y[253]) / (1 + (y[1471] * y[253]))
    return (0) - (r693)
 
def C00261(t, y):
    return (0) - (0)
 
def C00262(t, y):
    r264 = (13.7 * y[1317] * y[126] * y[12]) / (1 + (y[1317] * y[126] * y[12]))
    return (r264) - (0)
 
def C00263(t, y):
    r49 = (13.7 * y[1240] * y[256] * y[2]) / (1 + (y[1240] * y[256] * y[2]))
    r50 = (13.7 * y[1240] * y[256] * y[5]) / (1 + (y[1240] * y[256] * y[5]))
    r51 = (13.7 * y[1240] * y[256] * y[2]) / (1 + (y[1240] * y[256] * y[2]))
    r52 = (13.7 * y[1240] * y[256] * y[5]) / (1 + (y[1240] * y[256] * y[5]))
    r242 = (13.7 * y[1306] * y[88] * y[256]) / (1 + (y[1306] * y[88] * y[256]))
    r243 = (13.7 * y[1306] * y[88] * y[256]) / (1 + (y[1306] * y[88] * y[256]))
    r327 = (13.7 * y[1346] * y[1] * y[256]) / (1 + (y[1346] * y[1] * y[256]))
    return (0) - (r49 + r50 + r51 + r52 + r242 + r243 + r327)
 
def C00264(t, y):
    r54 = (13.7 * y[1242] * y[429] * y[2]) / (1 + (y[1242] * y[429] * y[2]))
    return (r54) - (0)
 
def C00265(t, y):
    return (0) - (0)
 
def C00266(t, y):
    r601 = (13.7 * y[1436] * y[672]) / (1 + (y[1436] * y[672]))
    return (r601) - (0)
 
def C00267(t, y):
    r530 = (13.7 * y[1403] * y[86] * y[0]) / (1 + (y[1403] * y[86] * y[0]))
    r535 = (13.7 * y[1403] * y[914] * y[0]) / (1 + (y[1403] * y[914] * y[0]))
    r313 = (13.7 * y[1336] * y[1] * y[260]) / (1 + (y[1336] * y[1] * y[260]))
    return (r530 + r535) - (r313)
 
def C00268(t, y):
    return (0) - (0)
 
def C00269(t, y):
    r407 = (13.7 * y[1381] * y[60] * y[392]) / (1 + (y[1381] * y[60] * y[392]))
    r486 = (13.7 * y[1389] * y[262] * y[90]) / (1 + (y[1389] * y[262] * y[90]))
    return (r407) - (r486)
 
def C00270(t, y):
    return (0) - (0)
 
def C00272(t, y):
    r157 = (13.7 * y[1266] * y[264] * y[5]) / (1 + (y[1266] * y[264] * y[5]))
    return (0) - (r157)
 
def C00273(t, y):
    return (0) - (0)
 
def C00275(t, y):
    return (0) - (0)
 
def C00279(t, y):
    r203 = (13.7 * y[1292] * y[82] * y[114]) / (1 + (y[1292] * y[82] * y[114]))
    r204 = (13.7 * y[1292] * y[697] * y[114]) / (1 + (y[1292] * y[697] * y[114]))
    return (r203 + r204) - (0)
 
def C00280(t, y):
    return (0) - (0)
 
def C00282(t, y):
    return (0) - (0)
 
def C00283(t, y):
    r278 = (13.7 * y[1322] * y[469] * y[270]) / (1 + (y[1322] * y[469] * y[270]))
    r281 = (13.7 * y[1322] * y[471] * y[270]) / (1 + (y[1322] * y[471] * y[270]))
    return (0) - (r278 + r281)
 
def C00284(t, y):
    return (0) - (0)
 
def C00286(t, y):
    r380 = (13.7 * y[1367] * y[1] * y[338]) / (1 + (y[1367] * y[1] * y[338]))
    r121 = (13.7 * y[1254] * y[272] * y[322] * y[0]) / (1 + (y[1254] * y[272] * y[322] * y[0]))
    r337 = (13.7 * y[1348] * y[272] * y[21]) / (1 + (y[1348] * y[272] * y[21]))
    r446 = (13.7 * y[1383] * y[272] * y[38]) / (1 + (y[1383] * y[272] * y[38]))
    r452 = (13.7 * y[1383] * y[272] * y[38]) / (1 + (y[1383] * y[272] * y[38]))
    r457 = (13.7 * y[1383] * y[272] * y[38]) / (1 + (y[1383] * y[272] * y[38]))
    r458 = (13.7 * y[1383] * y[272] * y[38]) / (1 + (y[1383] * y[272] * y[38]))
    r464 = (13.7 * y[1383] * y[272] * y[38]) / (1 + (y[1383] * y[272] * y[38]))
    r470 = (13.7 * y[1383] * y[272] * y[38]) / (1 + (y[1383] * y[272] * y[38]))
    r476 = (13.7 * y[1383] * y[272] * y[38]) / (1 + (y[1383] * y[272] * y[38]))
    return (r380) - (r121 + r337 + r446 + r452 + r457 + r458 + r464 + r470 + r476)
 
def C00288(t, y):
    r353 = (13.7 * y[1357] * y[1] * y[13] * y[273]) / (1 + (y[1357] * y[1] * y[13] * y[273]))
    r355 = (13.7 * y[1357] * y[13] * y[273]) / (1 + (y[1357] * y[13] * y[273]))
    r356 = (13.7 * y[1357] * y[1] * y[13] * y[273]) / (1 + (y[1357] * y[1] * y[13] * y[273]))
    r358 = (13.7 * y[1357] * y[13] * y[273]) / (1 + (y[1357] * y[13] * y[273]))
    r482 = (13.7 * y[1386] * y[183] * y[1] * y[273] * y[77]) / (1 + (y[1386] * y[183] * y[1] * y[273] * y[77]))
    r794 = (13.7 * y[1518] * y[1] * y[763] * y[273]) / (1 + (y[1518] * y[1] * y[763] * y[273]))
    r801 = (13.7 * y[1520] * y[1] * y[585] * y[273]) / (1 + (y[1520] * y[1] * y[585] * y[273]))
    r825 = (13.7 * y[1530] * y[1] * y[61] * y[273] * y[0]) / (1 + (y[1530] * y[1] * y[61] * y[273] * y[0]))
    r827 = (13.7 * y[1530] * y[1] * y[273]) / (1 + (y[1530] * y[1] * y[273]))
    r829 = (13.7 * y[1530] * y[1] * y[273] * y[13]) / (1 + (y[1530] * y[1] * y[273] * y[13]))
    r831 = (13.7 * y[1530] * y[1] * y[61] * y[273] * y[0]) / (1 + (y[1530] * y[1] * y[61] * y[273] * y[0]))
    r833 = (13.7 * y[1530] * y[1] * y[273]) / (1 + (y[1530] * y[1] * y[273]))
    r835 = (13.7 * y[1530] * y[1] * y[273] * y[13]) / (1 + (y[1530] * y[1] * y[273] * y[13]))
    r837 = (13.7 * y[1530] * y[1] * y[61] * y[273] * y[0]) / (1 + (y[1530] * y[1] * y[61] * y[273] * y[0]))
    r839 = (13.7 * y[1530] * y[1] * y[273]) / (1 + (y[1530] * y[1] * y[273]))
    r841 = (13.7 * y[1530] * y[1] * y[273] * y[13]) / (1 + (y[1530] * y[1] * y[273] * y[13]))
    r842 = (13.7 * y[1531] * y[1] * y[23] * y[273]) / (1 + (y[1531] * y[1] * y[23] * y[273]))
    r843 = (13.7 * y[1532] * y[1] * y[23] * y[273]) / (1 + (y[1532] * y[1] * y[23] * y[273]))
    r844 = (13.7 * y[1532] * y[1] * y[23] * y[273]) / (1 + (y[1532] * y[1] * y[23] * y[273]))
    return (0) - (r353 + r355 + r356 + r358 + r482 + r794 + r801 + r825 + r827 + r829 + r831 + r833 + r835 + r837 + r839 + r841 + r842 + r843 + r844)
 
def C00290(t, y):
    return (0) - (0)
 
def C00291(t, y):
    return (0) - (0)
 
def C00292(t, y):
    return (0) - (0)
 
def C00294(t, y):
    return (0) - (0)
 
def C00295(t, y):
    r132 = (13.7 * y[1261] * y[316] * y[2]) / (1 + (y[1261] * y[316] * y[2]))
    r256 = (13.7 * y[1312] * y[479] * y[12]) / (1 + (y[1312] * y[479] * y[12]))
    return (r132 + r256) - (0)
 
def C00296(t, y):
    return (0) - (0)
 
def C00297(t, y):
    return (0) - (0)
 
def C00298(t, y):
    return (0) - (0)
 
def C00299(t, y):
    r340 = (13.7 * y[1349] * y[1] * y[282]) / (1 + (y[1349] * y[1] * y[282]))
    r342 = (13.7 * y[1349] * y[43] * y[282]) / (1 + (y[1349] * y[43] * y[282]))
    r541 = (13.7 * y[1405] * y[282] * y[0]) / (1 + (y[1405] * y[282] * y[0]))
    return (0) - (r340 + r342 + r541)
 
def C00300(t, y):
    return (0) - (0)
 
def C00301(t, y):
    r496 = (13.7 * y[1395] * y[903] * y[0]) / (1 + (y[1395] * y[903] * y[0]))
    r497 = (13.7 * y[1395] * y[883] * y[0]) / (1 + (y[1395] * y[883] * y[0]))
    return (r496 + r497) - (0)
 
def C00302(t, y):
    return (0) - (0)
 
def C00303(t, y):
    return (0) - (0)
 
def C00304(t, y):
    return (0) - (0)
 
def C00305(t, y):
    return (0) - (0)
 
def C00306(t, y):
    return (0) - (0)
 
def C00307(t, y):
    return (0) - (0)
 
def C00308(t, y):
    return (0) - (0)
 
def C00309(t, y):
    return (0) - (0)
 
def C00310(t, y):
    return (0) - (0)
 
def C00311(t, y):
    return (0) - (0)
 
def C00312(t, y):
    return (0) - (0)
 
def C00313(t, y):
    return (0) - (0)
 
def C00314(t, y):
    return (0) - (0)
 
def C00315(t, y):
    return (0) - (0)
 
def C00317(t, y):
    return (0) - (0)
 
def C00318(t, y):
    return (0) - (0)
 
def C00319(t, y):
    return (0) - (0)
 
def C00320(t, y):
    r280 = (13.7 * y[1322] * y[469] * y[302] * y[321] * y[77]) / (1 + (y[1322] * y[469] * y[302] * y[321] * y[77]))
    return (0) - (r280)
 
def C00322(t, y):
    return (0) - (0)
 
def C00323(t, y):
    return (0) - (0)
 
def C00324(t, y):
    return (0) - (0)
 
def C00325(t, y):
    return (0) - (0)
 
def C00326(t, y):
    return (0) - (0)
 
def C00327(t, y):
    r201 = (13.7 * y[1291] * y[164] * y[74]) / (1 + (y[1291] * y[164] * y[74]))
    r567 = (13.7 * y[1414] * y[59] * y[0]) / (1 + (y[1414] * y[59] * y[0]))
    r810 = (13.7 * y[1526] * y[1] * y[308] * y[48]) / (1 + (y[1526] * y[1] * y[308] * y[48]))
    return (r201 + r567) - (r810)
 
def C00328(t, y):
    return (0) - (0)
 
def C00329(t, y):
    return (0) - (0)
 
def C00330(t, y):
    return (0) - (0)
 
def C00331(t, y):
    return (0) - (0)
 
def C00332(t, y):
    r55 = (13.7 * y[1242] * y[484] * y[2]) / (1 + (y[1242] * y[484] * y[2]))
    r247 = (13.7 * y[1309] * y[23]) / (1 + (y[1309] * y[23]))
    r250 = (13.7 * y[1310] * y[335] * y[9]) / (1 + (y[1310] * y[335] * y[9]))
    return (r55 + r247 + r250) - (0)
 
def C00333(t, y):
    return (0) - (0)
 
def C00334(t, y):
    r591 = (13.7 * y[1429] * y[24]) / (1 + (y[1429] * y[24]))
    return (r591) - (0)
 
def C00337(t, y):
    r132 = (13.7 * y[1261] * y[316] * y[2]) / (1 + (y[1261] * y[316] * y[2]))
    r563 = (13.7 * y[1411] * y[316] * y[0]) / (1 + (y[1411] * y[316] * y[0]))
    return (0) - (r132 + r563)
 
def C00338(t, y):
    return (0) - (0)
 
def C00339(t, y):
    return (0) - (0)
 
def C00340(t, y):
    return (0) - (0)
 
def C00341(t, y):
    return (0) - (0)
 
def C00342(t, y):
    r95 = (13.7 * y[1253] * y[623] * y[322] * y[0]) / (1 + (y[1253] * y[623] * y[322] * y[0]))
    r96 = (13.7 * y[1253] * y[201] * y[322] * y[0]) / (1 + (y[1253] * y[201] * y[322] * y[0]))
    r97 = (13.7 * y[1253] * y[510] * y[322] * y[0]) / (1 + (y[1253] * y[510] * y[322] * y[0]))
    r98 = (13.7 * y[1253] * y[338] * y[322] * y[0]) / (1 + (y[1253] * y[338] * y[322] * y[0]))
    r99 = (13.7 * y[1253] * y[447] * y[322] * y[0]) / (1 + (y[1253] * y[447] * y[322] * y[0]))
    r102 = (13.7 * y[1253] * y[897] * y[322] * y[0]) / (1 + (y[1253] * y[897] * y[322] * y[0]))
    r103 = (13.7 * y[1253] * y[623] * y[322] * y[0]) / (1 + (y[1253] * y[623] * y[322] * y[0]))
    r104 = (13.7 * y[1253] * y[201] * y[322] * y[0]) / (1 + (y[1253] * y[201] * y[322] * y[0]))
    r105 = (13.7 * y[1253] * y[510] * y[322] * y[0]) / (1 + (y[1253] * y[510] * y[322] * y[0]))
    r106 = (13.7 * y[1253] * y[338] * y[322] * y[0]) / (1 + (y[1253] * y[338] * y[322] * y[0]))
    r107 = (13.7 * y[1253] * y[447] * y[322] * y[0]) / (1 + (y[1253] * y[447] * y[322] * y[0]))
    r110 = (13.7 * y[1253] * y[897] * y[322] * y[0]) / (1 + (y[1253] * y[897] * y[322] * y[0]))
    r111 = (13.7 * y[1253] * y[623] * y[322] * y[0]) / (1 + (y[1253] * y[623] * y[322] * y[0]))
    r112 = (13.7 * y[1253] * y[201] * y[322] * y[0]) / (1 + (y[1253] * y[201] * y[322] * y[0]))
    r113 = (13.7 * y[1253] * y[510] * y[322] * y[0]) / (1 + (y[1253] * y[510] * y[322] * y[0]))
    r114 = (13.7 * y[1253] * y[338] * y[322] * y[0]) / (1 + (y[1253] * y[338] * y[322] * y[0]))
    r115 = (13.7 * y[1253] * y[447] * y[322] * y[0]) / (1 + (y[1253] * y[447] * y[322] * y[0]))
    r118 = (13.7 * y[1253] * y[897] * y[322] * y[0]) / (1 + (y[1253] * y[897] * y[322] * y[0]))
    r119 = (13.7 * y[1254] * y[438] * y[322] * y[0]) / (1 + (y[1254] * y[438] * y[322] * y[0]))
    r120 = (13.7 * y[1254] * y[127] * y[322] * y[0]) / (1 + (y[1254] * y[127] * y[322] * y[0]))
    r121 = (13.7 * y[1254] * y[272] * y[322] * y[0]) / (1 + (y[1254] * y[272] * y[322] * y[0]))
    r122 = (13.7 * y[1254] * y[402] * y[322] * y[0]) / (1 + (y[1254] * y[402] * y[322] * y[0]))
    r123 = (13.7 * y[1254] * y[404] * y[322] * y[0]) / (1 + (y[1254] * y[404] * y[322] * y[0]))
    r172 = (13.7 * y[1271] * y[567] * y[322] * y[0]) / (1 + (y[1271] * y[567] * y[322] * y[0]))
    r173 = (13.7 * y[1271] * y[70] * y[322] * y[0]) / (1 + (y[1271] * y[70] * y[322] * y[0]))
    r174 = (13.7 * y[1271] * y[567] * y[322] * y[0]) / (1 + (y[1271] * y[567] * y[322] * y[0]))
    r175 = (13.7 * y[1271] * y[70] * y[322] * y[0]) / (1 + (y[1271] * y[70] * y[322] * y[0]))
    r176 = (13.7 * y[1272] * y[567] * y[322] * y[0]) / (1 + (y[1272] * y[567] * y[322] * y[0]))
    r129 = (13.7 * y[1259] * y[784] * y[321]) / (1 + (y[1259] * y[784] * y[321]))
    r130 = (13.7 * y[1259] * y[784] * y[321]) / (1 + (y[1259] * y[784] * y[321]))
    r168 = (13.7 * y[1270] * y[321] * y[5]) / (1 + (y[1270] * y[321] * y[5]))
    r280 = (13.7 * y[1322] * y[469] * y[302] * y[321] * y[77]) / (1 + (y[1322] * y[469] * y[302] * y[321] * y[77]))
    return (r95 + r96 + r97 + r98 + r99 + r102 + r103 + r104 + r105 + r106 + r107 + r110 + r111 + r112 + r113 + r114 + r115 + r118 + r119 + r120 + r121 + r122 + r123 + r172 + r173 + r174 + r175 + r176) - (r129 + r130 + r168 + r280)
 
def C00343(t, y):
    r129 = (13.7 * y[1259] * y[784] * y[321]) / (1 + (y[1259] * y[784] * y[321]))
    r130 = (13.7 * y[1259] * y[784] * y[321]) / (1 + (y[1259] * y[784] * y[321]))
    r168 = (13.7 * y[1270] * y[321] * y[5]) / (1 + (y[1270] * y[321] * y[5]))
    r280 = (13.7 * y[1322] * y[469] * y[302] * y[321] * y[77]) / (1 + (y[1322] * y[469] * y[302] * y[321] * y[77]))
    r95 = (13.7 * y[1253] * y[623] * y[322] * y[0]) / (1 + (y[1253] * y[623] * y[322] * y[0]))
    r96 = (13.7 * y[1253] * y[201] * y[322] * y[0]) / (1 + (y[1253] * y[201] * y[322] * y[0]))
    r97 = (13.7 * y[1253] * y[510] * y[322] * y[0]) / (1 + (y[1253] * y[510] * y[322] * y[0]))
    r98 = (13.7 * y[1253] * y[338] * y[322] * y[0]) / (1 + (y[1253] * y[338] * y[322] * y[0]))
    r99 = (13.7 * y[1253] * y[447] * y[322] * y[0]) / (1 + (y[1253] * y[447] * y[322] * y[0]))
    r102 = (13.7 * y[1253] * y[897] * y[322] * y[0]) / (1 + (y[1253] * y[897] * y[322] * y[0]))
    r103 = (13.7 * y[1253] * y[623] * y[322] * y[0]) / (1 + (y[1253] * y[623] * y[322] * y[0]))
    r104 = (13.7 * y[1253] * y[201] * y[322] * y[0]) / (1 + (y[1253] * y[201] * y[322] * y[0]))
    r105 = (13.7 * y[1253] * y[510] * y[322] * y[0]) / (1 + (y[1253] * y[510] * y[322] * y[0]))
    r106 = (13.7 * y[1253] * y[338] * y[322] * y[0]) / (1 + (y[1253] * y[338] * y[322] * y[0]))
    r107 = (13.7 * y[1253] * y[447] * y[322] * y[0]) / (1 + (y[1253] * y[447] * y[322] * y[0]))
    r110 = (13.7 * y[1253] * y[897] * y[322] * y[0]) / (1 + (y[1253] * y[897] * y[322] * y[0]))
    r111 = (13.7 * y[1253] * y[623] * y[322] * y[0]) / (1 + (y[1253] * y[623] * y[322] * y[0]))
    r112 = (13.7 * y[1253] * y[201] * y[322] * y[0]) / (1 + (y[1253] * y[201] * y[322] * y[0]))
    r113 = (13.7 * y[1253] * y[510] * y[322] * y[0]) / (1 + (y[1253] * y[510] * y[322] * y[0]))
    r114 = (13.7 * y[1253] * y[338] * y[322] * y[0]) / (1 + (y[1253] * y[338] * y[322] * y[0]))
    r115 = (13.7 * y[1253] * y[447] * y[322] * y[0]) / (1 + (y[1253] * y[447] * y[322] * y[0]))
    r118 = (13.7 * y[1253] * y[897] * y[322] * y[0]) / (1 + (y[1253] * y[897] * y[322] * y[0]))
    r119 = (13.7 * y[1254] * y[438] * y[322] * y[0]) / (1 + (y[1254] * y[438] * y[322] * y[0]))
    r120 = (13.7 * y[1254] * y[127] * y[322] * y[0]) / (1 + (y[1254] * y[127] * y[322] * y[0]))
    r121 = (13.7 * y[1254] * y[272] * y[322] * y[0]) / (1 + (y[1254] * y[272] * y[322] * y[0]))
    r122 = (13.7 * y[1254] * y[402] * y[322] * y[0]) / (1 + (y[1254] * y[402] * y[322] * y[0]))
    r123 = (13.7 * y[1254] * y[404] * y[322] * y[0]) / (1 + (y[1254] * y[404] * y[322] * y[0]))
    r172 = (13.7 * y[1271] * y[567] * y[322] * y[0]) / (1 + (y[1271] * y[567] * y[322] * y[0]))
    r173 = (13.7 * y[1271] * y[70] * y[322] * y[0]) / (1 + (y[1271] * y[70] * y[322] * y[0]))
    r174 = (13.7 * y[1271] * y[567] * y[322] * y[0]) / (1 + (y[1271] * y[567] * y[322] * y[0]))
    r175 = (13.7 * y[1271] * y[70] * y[322] * y[0]) / (1 + (y[1271] * y[70] * y[322] * y[0]))
    r176 = (13.7 * y[1272] * y[567] * y[322] * y[0]) / (1 + (y[1272] * y[567] * y[322] * y[0]))
    return (r129 + r130 + r168 + r280) - (r95 + r96 + r97 + r98 + r99 + r102 + r103 + r104 + r105 + r106 + r107 + r110 + r111 + r112 + r113 + r114 + r115 + r118 + r119 + r120 + r121 + r122 + r123 + r172 + r173 + r174 + r175 + r176)
 
def C00344(t, y):
    r500 = (13.7 * y[1398] * y[607] * y[0] ) / (1 + (y[1398] * y[607] * y[0] ))
    return (r500) - (0)
 
def C00345(t, y):
    r303 = (13.7 * y[1333] * y[1] * y[251]) / (1 + (y[1333] * y[1] * y[251]))
    r69 = (13.7 * y[1243] * y[324] * y[5]) / (1 + (y[1243] * y[324] * y[5]))
    return (r303) - (r69)
 
def C00346(t, y):
    return (0) - (0)
 
def C00347(t, y):
    return (0) - (0)
 
def C00348(t, y):
    return (0) - (0)
 
def C00349(t, y):
    return (0) - (0)
 
def C00350(t, y):
    r508 = (13.7 * y[1401] * y[329] * y[0]) / (1 + (y[1401] * y[329] * y[0]))
    return (0) - (r508)
 
def C00351(t, y):
    return (0) - (0)
 
def C00352(t, y):
    r288 = (13.7 * y[1328] * y[61] * y[82]) / (1 + (y[1328] * y[61] * y[82]))
    r711 = (13.7 * y[1476] * y[759]) / (1 + (y[1476] * y[759]))
    return (r288 + r711) - (0)
 
def C00353(t, y):
    return (0) - (0)
 
def C00354(t, y):
    return (0) - (0)
 
def C00355(t, y):
    return (0) - (0)
 
def C00356(t, y):
    r250 = (13.7 * y[1310] * y[335] * y[9]) / (1 + (y[1310] * y[335] * y[9]))
    return (0) - (r250)
 
def C00357(t, y):
    return (0) - (0)
 
def C00360(t, y):
    r370 = (13.7 * y[1366] * y[1] * y[337]) / (1 + (y[1366] * y[1] * y[337]))
    return (0) - (r370)
 
def C00361(t, y):
    r337 = (13.7 * y[1348] * y[272] * y[21]) / (1 + (y[1348] * y[272] * y[21]))
    r391 = (13.7 * y[1369] * y[1] * y[339]) / (1 + (y[1369] * y[1] * y[339]))
    r98 = (13.7 * y[1253] * y[338] * y[322] * y[0]) / (1 + (y[1253] * y[338] * y[322] * y[0]))
    r106 = (13.7 * y[1253] * y[338] * y[322] * y[0]) / (1 + (y[1253] * y[338] * y[322] * y[0]))
    r114 = (13.7 * y[1253] * y[338] * y[322] * y[0]) / (1 + (y[1253] * y[338] * y[322] * y[0]))
    r380 = (13.7 * y[1367] * y[1] * y[338]) / (1 + (y[1367] * y[1] * y[338]))
    return (r337 + r391) - (r98 + r106 + r114 + r380)
 
def C00362(t, y):
    r391 = (13.7 * y[1369] * y[1] * y[339]) / (1 + (y[1369] * y[1] * y[339]))
    return (0) - (r391)
 
def C00363(t, y):
    r393 = (13.7 * y[1370] * y[1] * y[341]) / (1 + (y[1370] * y[1] * y[341]))
    r381 = (13.7 * y[1367] * y[1] * y[340] ) / (1 + (y[1367] * y[1] * y[340] ))
    return (r393) - (r381)
 
def C00364(t, y):
    r191 = (13.7 * y[1283] * y[342] * y[138]) / (1 + (y[1283] * y[342] * y[138]))
    r314 = (13.7 * y[1337] * y[1] * y[209]) / (1 + (y[1337] * y[1] * y[209]))
    r393 = (13.7 * y[1370] * y[1] * y[341]) / (1 + (y[1370] * y[1] * y[341]))
    return (r191 + r314) - (r393)
 
def C00365(t, y):
    r315 = (13.7 * y[1337] * y[1] * y[417]) / (1 + (y[1337] * y[1] * y[417]))
    r191 = (13.7 * y[1283] * y[342] * y[138]) / (1 + (y[1283] * y[342] * y[138]))
    r394 = (13.7 * y[1370] * y[1] * y[342]) / (1 + (y[1370] * y[1] * y[342]))
    return (r315) - (r191 + r394)
 
def C00366(t, y):
    return (0) - (0)
 
def C00367(t, y):
    return (0) - (0)
 
def C00369(t, y):
    return (0) - (0)
 
def C00370(t, y):
    return (0) - (0)
 
def C00371(t, y):
    return (0) - (0)
 
def C00372(t, y):
    return (0) - (0)
 
def C00373(t, y):
    return (0) - (0)
 
def C00374(t, y):
    return (0) - (0)
 
def C00375(t, y):
    return (0) - (0)
 
def C00376(t, y):
    r3 = (13.7 * y[1233] * y[406] * y[2]) / (1 + (y[1233] * y[406] * y[2]))
    r22 = (13.7 * y[1233] * y[406] * y[2]) / (1 + (y[1233] * y[406] * y[2]))
    return (r3 + r22) - (0)
 
def C00377(t, y):
    return (0) - (0)
 
def C00378(t, y):
    r397 = (13.7 * y[1372] * y[1] * y[354]) / (1 + (y[1372] * y[1] * y[354]))
    r580 = (13.7 * y[1422] * y[354] * y[0]) / (1 + (y[1422] * y[354] * y[0]))
    return (0) - (r397 + r580)
 
def C00379(t, y):
    return (0) - (0)
 
def C00380(t, y):
    return (0) - (0)
 
def C00381(t, y):
    return (0) - (0)
 
def C00382(t, y):
    return (0) - (0)
 
def C00383(t, y):
    return (0) - (0)
 
def C00384(t, y):
    return (0) - (0)
 
def C00385(t, y):
    r260 = (13.7 * y[1315] * y[432] * y[12]) / (1 + (y[1315] * y[432] * y[12]))
    r266 = (13.7 * y[1317] * y[432] * y[12]) / (1 + (y[1317] * y[432] * y[12]))
    r578 = (13.7 * y[1420] * y[236] * y[0]) / (1 + (y[1420] * y[236] * y[0]))
    return (r260 + r266 + r578) - (0)
 
def C00386(t, y):
    return (0) - (0)
 
def C00387(t, y):
    return (0) - (0)
 
def C00388(t, y):
    return (0) - (0)
 
def C00389(t, y):
    return (0) - (0)
 
def C00390(t, y):
    return (0) - (0)
 
def C00391(t, y):
    return (0) - (0)
 
def C00392(t, y):
    return (0) - (0)
 
def C00393(t, y):
    return (0) - (0)
 
def C00394(t, y):
    return (0) - (0)
 
def C00395(t, y):
    return (0) - (0)
 
def C00396(t, y):
    return (0) - (0)
 
def C00397(t, y):
    return (0) - (0)
 
def C00398(t, y):
    return (0) - (0)
 
def C00399(t, y):
    return (0) - (0)
 
def C00400(t, y):
    return (0) - (0)
 
def C00401(t, y):
    return (0) - (0)
 
def C00402(t, y):
    return (0) - (0)
 
def C00403(t, y):
    return (0) - (0)
 
def C00404(t, y):
    r364 = (13.7 * y[1362] * y[1] * y[380]) / (1 + (y[1362] * y[1] * y[380]))
    r364 = (13.7 * y[1362] * y[1] * y[380]) / (1 + (y[1362] * y[1] * y[380]))
    return (r364) - (r364)
 
def C00405(t, y):
    return (0) - (0)
 
def C00406(t, y):
    return (0) - (0)
 
def C00407(t, y):
    r291 = (13.7 * y[1329] * y[383] * y[25]) / (1 + (y[1329] * y[383] * y[25]))
    r295 = (13.7 * y[1329] * y[383] * y[25]) / (1 + (y[1329] * y[383] * y[25]))
    r759 = (13.7 * y[1500] * y[1] * y[383] * y[1583]) / (1 + (y[1500] * y[1] * y[383] * y[1583]))
    return (0) - (r291 + r295 + r759)
 
def C00408(t, y):
    return (0) - (0)
 
def C00409(t, y):
    return (0) - (0)
 
def C00410(t, y):
    return (0) - (0)
 
def C00411(t, y):
    return (0) - (0)
 
def C00412(t, y):
    return (0) - (0)
 
def C00413(t, y):
    return (0) - (0)
 
def C00414(t, y):
    return (0) - (0)
 
def C00415(t, y):
    r151 = (13.7 * y[1266] * y[98] * y[5]) / (1 + (y[1266] * y[98] * y[5]))
    r152 = (13.7 * y[1266] * y[98] * y[2]) / (1 + (y[1266] * y[98] * y[2]))
    r191 = (13.7 * y[1283] * y[342] * y[138]) / (1 + (y[1283] * y[342] * y[138]))
    r155 = (13.7 * y[1266] * y[391] * y[2]) / (1 + (y[1266] * y[391] * y[2]))
    r156 = (13.7 * y[1266] * y[391] * y[5]) / (1 + (y[1266] * y[391] * y[5]))
    return (r151 + r152 + r191) - (r155 + r156)
 
def C00416(t, y):
    r302 = (13.7 * y[1332] * y[1] * y[430]) / (1 + (y[1332] * y[1] * y[430]))
    r507 = (13.7 * y[1401] * y[152] * y[0]) / (1 + (y[1401] * y[152] * y[0]))
    r508 = (13.7 * y[1401] * y[329] * y[0]) / (1 + (y[1401] * y[329] * y[0]))
    r407 = (13.7 * y[1381] * y[60] * y[392]) / (1 + (y[1381] * y[60] * y[392]))
    return (r302 + r507 + r508) - (r407)
 
def C00418(t, y):
    r89 = (13.7 * y[1249] * y[393] * y[9] * y[2]) / (1 + (y[1249] * y[393] * y[9] * y[2]))
    r18 = (13.7 * y[1233] * y[393] * y[2]) / (1 + (y[1233] * y[393] * y[2]))
    r37 = (13.7 * y[1233] * y[393] * y[2]) / (1 + (y[1233] * y[393] * y[2]))
    r89 = (13.7 * y[1249] * y[393] * y[9] * y[2]) / (1 + (y[1249] * y[393] * y[9] * y[2]))
    r326 = (13.7 * y[1345] * y[1] * y[393]) / (1 + (y[1345] * y[1] * y[393]))
    return (r89) - (r18 + r37 + r89 + r326)
 
def C00424(t, y):
    r77 = (13.7 * y[1246] * y[394] * y[2]) / (1 + (y[1246] * y[394] * y[2]))
    return (0) - (r77)
 
def C00437(t, y):
    r239 = (13.7 * y[1304] * y[395] * y[24]) / (1 + (y[1304] * y[395] * y[24]))
    r287 = (13.7 * y[1327] * y[395] * y[25]) / (1 + (y[1327] * y[395] * y[25]))
    return (0) - (r239 + r287)
 
def C00438(t, y):
    r200 = (13.7 * y[1290] * y[164] * y[48]) / (1 + (y[1290] * y[164] * y[48]))
    r563 = (13.7 * y[1411] * y[316] * y[0]) / (1 + (y[1411] * y[316] * y[0]))
    return (r200 + r563) - (0)
 
def C00441(t, y):
    r49 = (13.7 * y[1240] * y[256] * y[2]) / (1 + (y[1240] * y[256] * y[2]))
    r50 = (13.7 * y[1240] * y[256] * y[5]) / (1 + (y[1240] * y[256] * y[5]))
    r51 = (13.7 * y[1240] * y[256] * y[2]) / (1 + (y[1240] * y[256] * y[2]))
    r52 = (13.7 * y[1240] * y[256] * y[5]) / (1 + (y[1240] * y[256] * y[5]))
    r126 = (13.7 * y[1256] * y[397] * y[8] * y[5]) / (1 + (y[1256] * y[397] * y[8] * y[5]))
    r669 = (13.7 * y[1456] * y[397] * y[21]) / (1 + (y[1456] * y[397] * y[21]))
    return (r49 + r50 + r51 + r52) - (r126 + r669)
 
def C00445(t, y):
    r792 = (13.7 * y[1516] * y[1] * y[588] * y[77]) / (1 + (y[1516] * y[1] * y[588] * y[77]))
    r196 = (13.7 * y[1286] * y[605] * y[398] * y[0]) / (1 + (y[1286] * y[605] * y[398] * y[0]))
    return (r792) - (r196)
 
def C00446(t, y):
    r347 = (13.7 * y[1352] * y[1] * y[470]) / (1 + (y[1352] * y[1] * y[470]))
    r400 = (13.7 * y[1375] * y[28] * y[399]) / (1 + (y[1375] * y[28] * y[399]))
    return (r347) - (r400)
 
def C00454(t, y):
    r338 = (13.7 * y[1348] * y[196] * y[21]) / (1 + (y[1348] * y[196] * y[21]))
    r372 = (13.7 * y[1367] * y[1] * y[400]) / (1 + (y[1367] * y[1] * y[400]))
    return (r338) - (r372)
 
def C00455(t, y):
    r845 = (13.7 * y[1533] * y[2] * y[38] * y[1597]) / (1 + (y[1533] * y[2] * y[38] * y[1597]))
    r402 = (13.7 * y[1376] * y[1] * y[401]) / (1 + (y[1376] * y[1] * y[401]))
    return (r845) - (r402)
 
def C00458(t, y):
    r382 = (13.7 * y[1367] * y[1] * y[447]) / (1 + (y[1367] * y[1] * y[447]))
    r122 = (13.7 * y[1254] * y[402] * y[322] * y[0]) / (1 + (y[1254] * y[402] * y[322] * y[0]))
    r447 = (13.7 * y[1383] * y[402] * y[38]) / (1 + (y[1383] * y[402] * y[38]))
    r453 = (13.7 * y[1383] * y[402] * y[38]) / (1 + (y[1383] * y[402] * y[38]))
    r459 = (13.7 * y[1383] * y[402] * y[38]) / (1 + (y[1383] * y[402] * y[38]))
    r465 = (13.7 * y[1383] * y[402] * y[38]) / (1 + (y[1383] * y[402] * y[38]))
    r471 = (13.7 * y[1383] * y[402] * y[38]) / (1 + (y[1383] * y[402] * y[38]))
    r477 = (13.7 * y[1383] * y[402] * y[38]) / (1 + (y[1383] * y[402] * y[38]))
    return (r382) - (r122 + r447 + r453 + r459 + r465 + r471 + r477)
 
def C00459(t, y):
    r381 = (13.7 * y[1367] * y[1] * y[340] ) / (1 + (y[1367] * y[1] * y[340] ))
    r405 = (13.7 * y[1379] * y[403] * y[100]) / (1 + (y[1379] * y[403] * y[100]))
    r448 = (13.7 * y[1383] * y[403] * y[38]) / (1 + (y[1383] * y[403] * y[38]))
    r454 = (13.7 * y[1383] * y[403] * y[38]) / (1 + (y[1383] * y[403] * y[38]))
    r460 = (13.7 * y[1383] * y[403] * y[38]) / (1 + (y[1383] * y[403] * y[38]))
    r466 = (13.7 * y[1383] * y[403] * y[38]) / (1 + (y[1383] * y[403] * y[38]))
    r472 = (13.7 * y[1383] * y[403] * y[38]) / (1 + (y[1383] * y[403] * y[38]))
    r478 = (13.7 * y[1383] * y[403] * y[38]) / (1 + (y[1383] * y[403] * y[38]))
    return (r381) - (r405 + r448 + r454 + r460 + r466 + r472 + r478)
 
def C00460(t, y):
    r383 = (13.7 * y[1367] * y[1] * y[510]) / (1 + (y[1367] * y[1] * y[510]))
    r123 = (13.7 * y[1254] * y[404] * y[322] * y[0]) / (1 + (y[1254] * y[404] * y[322] * y[0]))
    return (r383) - (r123)
 
def C00469(t, y):
    r2 = (13.7 * y[1233] * y[405] * y[2] ) / (1 + (y[1233] * y[405] * y[2] ))
    r21 = (13.7 * y[1233] * y[405] * y[2] ) / (1 + (y[1233] * y[405] * y[2] ))
    return (0) - (r2 + r21)
 
def C00473(t, y):
    r3 = (13.7 * y[1233] * y[406] * y[2]) / (1 + (y[1233] * y[406] * y[2]))
    r22 = (13.7 * y[1233] * y[406] * y[2]) / (1 + (y[1233] * y[406] * y[2]))
    return (0) - (r3 + r22)
 
def C00475(t, y):
    r339 = (13.7 * y[1349] * y[1] * y[407] ) / (1 + (y[1349] * y[1] * y[407] ))
    r341 = (13.7 * y[1349] * y[43] * y[407]) / (1 + (y[1349] * y[43] * y[407]))
    return (0) - (r339 + r341)
 
def C00492(t, y):
    r517 = (13.7 * y[1402] * y[517] * y[0]) / (1 + (y[1402] * y[517] * y[0]))
    r511 = (13.7 * y[1402] * y[408] * y[0]) / (1 + (y[1402] * y[408] * y[0]))
    r531 = (13.7 * y[1403] * y[408] * y[0]) / (1 + (y[1403] * y[408] * y[0]))
    return (r517) - (r511 + r531)
 
def C00493(t, y):
    r348 = (13.7 * y[1353] * y[1] * y[409]) / (1 + (y[1353] * y[1] * y[409]))
    return (0) - (r348)
 
def C00499(t, y):
    r564 = (13.7 * y[1412] * y[538] * y[0] ) / (1 + (y[1412] * y[538] * y[0] ))
    return (r564) - (0)
 
def C00504(t, y):
    r153 = (13.7 * y[1266] * y[98] * y[2]) / (1 + (y[1266] * y[98] * y[2]))
    r154 = (13.7 * y[1266] * y[98] * y[5]) / (1 + (y[1266] * y[98] * y[5]))
    r155 = (13.7 * y[1266] * y[391] * y[2]) / (1 + (y[1266] * y[391] * y[2]))
    r156 = (13.7 * y[1266] * y[391] * y[5]) / (1 + (y[1266] * y[391] * y[5]))
    return (r153 + r154 + r155 + r156) - (0)
 
def C00506(t, y):
    r593 = (13.7 * y[1429] * y[412]) / (1 + (y[1429] * y[412]))
    return (0) - (r593)
 
def C00508(t, y):
    r692 = (13.7 * y[1471] * y[545]) / (1 + (y[1471] * y[545]))
    r693 = (13.7 * y[1471] * y[253]) / (1 + (y[1471] * y[253]))
    return (r692 + r693) - (0)
 
def C00511(t, y):
    r556 = (13.7 * y[1409] * y[414] * y[13]) / (1 + (y[1409] * y[414] * y[13]))
    return (0) - (r556)
 
def C00519(t, y):
    r594 = (13.7 * y[1429] * y[425]) / (1 + (y[1429] * y[425]))
    return (r594) - (0)
 
def C00522(t, y):
    r40 = (13.7 * y[1235] * y[416] * y[5]) / (1 + (y[1235] * y[416] * y[5]))
    return (0) - (r40)
 
def C00526(t, y):
    r315 = (13.7 * y[1337] * y[1] * y[417]) / (1 + (y[1337] * y[1] * y[417]))
    return (0) - (r315)
 
def C00546(t, y):
    r77 = (13.7 * y[1246] * y[394] * y[2]) / (1 + (y[1246] * y[394] * y[2]))
    return (r77) - (0)
 
def C00568(t, y):
    r272 = (13.7 * y[1319] * y[668] * y[419]) / (1 + (y[1319] * y[668] * y[419]))
    r273 = (13.7 * y[1319] * y[506] * y[419]) / (1 + (y[1319] * y[506] * y[419]))
    return (0) - (r272 + r273)
 
def C00576(t, y):
    r13 = (13.7 * y[1233] * y[111] * y[2]) / (1 + (y[1233] * y[111] * y[2]))
    r14 = (13.7 * y[1233] * y[111] * y[5]) / (1 + (y[1233] * y[111] * y[5]))
    r32 = (13.7 * y[1233] * y[111] * y[2]) / (1 + (y[1233] * y[111] * y[2]))
    r33 = (13.7 * y[1233] * y[111] * y[5]) / (1 + (y[1233] * y[111] * y[5]))
    return (r13 + r14 + r32 + r33) - (0)
 
def C00579(t, y):
    r167 = (13.7 * y[1269] * y[421] * y[2]) / (1 + (y[1269] * y[421] * y[2]))
    return (0) - (r167)
 
def C00583(t, y):
    r78 = (13.7 * y[1246] * y[422] * y[2]) / (1 + (y[1246] * y[422] * y[2]))
    return (0) - (r78)
 
def C00585(t, y):
    r501 = (13.7 * y[1399] * y[488] * y[0]) / (1 + (y[1399] * y[488] * y[0]))
    r502 = (13.7 * y[1399] * y[488] * y[0]) / (1 + (y[1399] * y[488] * y[0]))
    r503 = (13.7 * y[1399] * y[488] * y[0]) / (1 + (y[1399] * y[488] * y[0]))
    r349 = (13.7 * y[1354] * y[1] * y[423]) / (1 + (y[1354] * y[1] * y[423]))
    return (r501 + r502 + r503) - (r349)
 
def C00605(t, y):
    r218 = (13.7 * y[1296] * y[424] * y[90]) / (1 + (y[1296] * y[424] * y[90]))
    return (0) - (r218)
 
def C00606(t, y):
    r594 = (13.7 * y[1429] * y[425]) / (1 + (y[1429] * y[425]))
    return (0) - (r594)
 
def C00615(t, y):
    r317 = (13.7 * y[1338] * y[86] * y[629]) / (1 + (y[1338] * y[86] * y[629]))
    r362 = (13.7 * y[1361] * y[71] * y[426]) / (1 + (y[1361] * y[71] * y[426]))
    r363 = (13.7 * y[1361] * y[71] * y[426]) / (1 + (y[1361] * y[71] * y[426]))
    r712 = (13.7 * y[1477] * y[486] * y[426]) / (1 + (y[1477] * y[486] * y[426]))
    r714 = (13.7 * y[1477] * y[486] * y[426]) / (1 + (y[1477] * y[486] * y[426]))
    return (r317) - (r362 + r363 + r712 + r714)
 
def C00624(t, y):
    r216 = (13.7 * y[1295] * y[23] * y[24]) / (1 + (y[1295] * y[23] * y[24]))
    r239 = (13.7 * y[1304] * y[395] * y[24]) / (1 + (y[1304] * y[395] * y[24]))
    r361 = (13.7 * y[1360] * y[1] * y[427] ) / (1 + (y[1360] * y[1] * y[427] ))
    return (r216 + r239) - (r361)
 
def C00631(t, y):
    r606 = (13.7 * y[1440] * y[428]) / (1 + (y[1440] * y[428]))
    r713 = (13.7 * y[1477] * y[428]) / (1 + (y[1477] * y[428]))
    r715 = (13.7 * y[1477] * y[428]) / (1 + (y[1477] * y[428]))
    return (0) - (r606 + r713 + r715)
 
def C00640(t, y):
    r54 = (13.7 * y[1242] * y[429] * y[2]) / (1 + (y[1242] * y[429] * y[2]))
    return (0) - (r54)
 
def C00641(t, y):
    r302 = (13.7 * y[1332] * y[1] * y[430]) / (1 + (y[1332] * y[1] * y[430]))
    return (0) - (r302)
 
def C00645(t, y):
    r679 = (13.7 * y[1465] * y[42] * y[0]) / (1 + (y[1465] * y[42] * y[0]))
    r680 = (13.7 * y[1465] * y[431] * y[14]) / (1 + (y[1465] * y[431] * y[14]))
    return (r679) - (r680)
 
def C00655(t, y):
    r587 = (13.7 * y[1427] * y[446] * y[0]) / (1 + (y[1427] * y[446] * y[0]))
    r260 = (13.7 * y[1315] * y[432] * y[12]) / (1 + (y[1315] * y[432] * y[12]))
    r266 = (13.7 * y[1317] * y[432] * y[12]) / (1 + (y[1317] * y[432] * y[12]))
    r812 = (13.7 * y[1527] * y[1] * y[432] * y[13]) / (1 + (y[1527] * y[1] * y[432] * y[13]))
    r813 = (13.7 * y[1527] * y[1] * y[432] * y[61] * y[0]) / (1 + (y[1527] * y[1] * y[432] * y[61] * y[0]))
    return (r587) - (r260 + r266 + r812 + r813)
 
def C00663(t, y):
    r716 = (13.7 * y[1478] * y[433]) / (1 + (y[1478] * y[433]))
    r717 = (13.7 * y[1478] * y[433]) / (1 + (y[1478] * y[433]))
    return (0) - (r716 + r717)
 
def C00666(t, y):
    r675 = (13.7 * y[1462] * y[434]) / (1 + (y[1462] * y[434]))
    return (0) - (r675)
 
def C00668(t, y):
    r313 = (13.7 * y[1336] * y[1] * y[260]) / (1 + (y[1336] * y[1] * y[260]))
    r538 = (13.7 * y[1403] * y[920] * y[0]) / (1 + (y[1403] * y[920] * y[0]))
    r698 = (13.7 * y[1473] * y[435]) / (1 + (y[1473] * y[435]))
    r700 = (13.7 * y[1473] * y[435]) / (1 + (y[1473] * y[435]))
    r702 = (13.7 * y[1473] * y[435]) / (1 + (y[1473] * y[435]))
    r703 = (13.7 * y[1473] * y[435]) / (1 + (y[1473] * y[435]))
    r705 = (13.7 * y[1473] * y[435]) / (1 + (y[1473] * y[435]))
    r707 = (13.7 * y[1473] * y[435]) / (1 + (y[1473] * y[435]))
    return (r313 + r538) - (r698 + r700 + r702 + r703 + r705 + r707)
 
def C00671(t, y):
    r291 = (13.7 * y[1329] * y[383] * y[25]) / (1 + (y[1329] * y[383] * y[25]))
    r295 = (13.7 * y[1329] * y[383] * y[25]) / (1 + (y[1329] * y[383] * y[25]))
    r641 = (13.7 * y[1447] * y[749]) / (1 + (y[1447] * y[749]))
    return (r291 + r295 + r641) - (0)
 
def C00673(t, y):
    r306 = (13.7 * y[1335] * y[437] * y[7]) / (1 + (y[1335] * y[437] * y[7]))
    r308 = (13.7 * y[1335] * y[437] * y[7]) / (1 + (y[1335] * y[437] * y[7]))
    r310 = (13.7 * y[1335] * y[437] * y[7]) / (1 + (y[1335] * y[437] * y[7]))
    r602 = (13.7 * y[1437] * y[437]) / (1 + (y[1437] * y[437]))
    return (0) - (r306 + r308 + r310 + r602)
 
def C00677(t, y):
    r119 = (13.7 * y[1254] * y[438] * y[322] * y[0]) / (1 + (y[1254] * y[438] * y[322] * y[0]))
    r444 = (13.7 * y[1383] * y[438] * y[38]) / (1 + (y[1383] * y[438] * y[38]))
    r450 = (13.7 * y[1383] * y[438] * y[38]) / (1 + (y[1383] * y[438] * y[38]))
    r456 = (13.7 * y[1383] * y[438] * y[38]) / (1 + (y[1383] * y[438] * y[38]))
    r462 = (13.7 * y[1383] * y[438] * y[38]) / (1 + (y[1383] * y[438] * y[38]))
    r468 = (13.7 * y[1383] * y[438] * y[38]) / (1 + (y[1383] * y[438] * y[38]))
    r474 = (13.7 * y[1383] * y[438] * y[38]) / (1 + (y[1383] * y[438] * y[38]))
    return (0) - (r119 + r444 + r450 + r456 + r462 + r468 + r474)
 
def C00680(t, y):
    r675 = (13.7 * y[1462] * y[434]) / (1 + (y[1462] * y[434]))
    r595 = (13.7 * y[1430] * y[439]) / (1 + (y[1430] * y[439]))
    r787 = (13.7 * y[1510] * y[1] * y[444] * y[439]) / (1 + (y[1510] * y[1] * y[444] * y[439]))
    return (r675) - (r595 + r787)
 
def C00681(t, y):
    r217 = (13.7 * y[1296] * y[90] * y[39]) / (1 + (y[1296] * y[90] * y[39]))
    r218 = (13.7 * y[1296] * y[424] * y[90]) / (1 + (y[1296] * y[424] * y[90]))
    r219 = (13.7 * y[1296] * y[168] * y[90]) / (1 + (y[1296] * y[168] * y[90]))
    return (r217 + r218 + r219) - (0)
 
def C00685(t, y):
    r221 = (13.7 * y[1298] * y[168] * y[493]) / (1 + (y[1298] * y[168] * y[493]))
    return (r221) - (0)
 
def C00688(t, y):
    r39 = (13.7 * y[1234] * y[582] * y[5]) / (1 + (y[1234] * y[582] * y[5]))
    r677 = (13.7 * y[1464] * y[793]) / (1 + (y[1464] * y[793]))
    return (r39 + r677) - (0)
 
def C00689(t, y):
    r539 = (13.7 * y[1404] * y[0] * y[443] ) / (1 + (y[1404] * y[0] * y[443] ))
    return (0) - (r539)
 
def C00692(t, y):
    r790 = (13.7 * y[1514] * y[1] * y[494] * y[212]) / (1 + (y[1514] * y[1] * y[494] * y[212]))
    r787 = (13.7 * y[1510] * y[1] * y[444] * y[439]) / (1 + (y[1510] * y[1] * y[444] * y[439]))
    return (r790) - (r787)
 
def C00693(t, y):
    r133 = (13.7 * y[1262] * y[168] * y[2]) / (1 + (y[1262] * y[168] * y[2]))
    r619 = (13.7 * y[1446] * y[503]) / (1 + (y[1446] * y[503]))
    r629 = (13.7 * y[1446] * y[503]) / (1 + (y[1446] * y[503]))
    return (r133 + r619 + r629) - (0)
 
def C00700(t, y):
    r587 = (13.7 * y[1427] * y[446] * y[0]) / (1 + (y[1427] * y[446] * y[0]))
    return (0) - (r587)
 
def C00705(t, y):
    r368 = (13.7 * y[1365] * y[1] * y[233]) / (1 + (y[1365] * y[1] * y[233]))
    r99 = (13.7 * y[1253] * y[447] * y[322] * y[0]) / (1 + (y[1253] * y[447] * y[322] * y[0]))
    r107 = (13.7 * y[1253] * y[447] * y[322] * y[0]) / (1 + (y[1253] * y[447] * y[322] * y[0]))
    r115 = (13.7 * y[1253] * y[447] * y[322] * y[0]) / (1 + (y[1253] * y[447] * y[322] * y[0]))
    r382 = (13.7 * y[1367] * y[1] * y[447]) / (1 + (y[1367] * y[1] * y[447]))
    return (r368) - (r99 + r107 + r115 + r382)
 
def C00741(t, y):
    r53 = (13.7 * y[1241] * y[448] * y[3] * y[77]) / (1 + (y[1241] * y[448] * y[3] * y[77]))
    return (0) - (r53)
 
def C00756(t, y):
    r4 = (13.7 * y[1233] * y[449] * y[2]) / (1 + (y[1233] * y[449] * y[2]))
    r23 = (13.7 * y[1233] * y[449] * y[2]) / (1 + (y[1233] * y[449] * y[2]))
    return (0) - (r4 + r23)
 
def C00772(t, y):
    r18 = (13.7 * y[1233] * y[393] * y[2]) / (1 + (y[1233] * y[393] * y[2]))
    r37 = (13.7 * y[1233] * y[393] * y[2]) / (1 + (y[1233] * y[393] * y[2]))
    return (r18 + r37) - (0)
 
def C00794(t, y):
    r515 = (13.7 * y[1402] * y[699] * y[0]) / (1 + (y[1402] * y[699] * y[0]))
    return (r515) - (0)
 
def C00810(t, y):
    r600 = (13.7 * y[1435] * y[750]) / (1 + (y[1435] * y[750]))
    return (r600) - (0)
 
def C00819(t, y):
    r548 = (13.7 * y[1407] * y[453] * y[0]) / (1 + (y[1407] * y[453] * y[0]))
    return (0) - (r548)
 
def C00828(t, y):
    r159 = (13.7 * y[1267] * y[454] * y[77] * y[3]) / (1 + (y[1267] * y[454] * y[77] * y[3]))
    return (0) - (r159)
 
def C00831(t, y):
    r324 = (13.7 * y[1344] * y[1] * y[455]) / (1 + (y[1344] * y[1] * y[455]))
    return (0) - (r324)
 
def C00842(t, y):
    r405 = (13.7 * y[1379] * y[403] * y[100]) / (1 + (y[1379] * y[403] * y[100]))
    r617 = (13.7 * y[1445] * y[456]) / (1 + (y[1445] * y[456]))
    r618 = (13.7 * y[1445] * y[456]) / (1 + (y[1445] * y[456]))
    r683 = (13.7 * y[1466] * y[456]) / (1 + (y[1466] * y[456]))
    return (r405) - (r617 + r618 + r683)
 
def C00857(t, y):
    r401 = (13.7 * y[1376] * y[1] * y[492]) / (1 + (y[1376] * y[1] * y[492]))
    r784 = (13.7 * y[1508] * y[1] * y[457] * y[13]) / (1 + (y[1508] * y[1] * y[457] * y[13]))
    return (r401) - (r784)
 
def C00860(t, y):
    r499 = (13.7 * y[1397] * y[477] * y[0]) / (1 + (y[1397] * y[477] * y[0]))
    r42 = (13.7 * y[1237] * y[458] * y[2] * y[0] ) / (1 + (y[1237] * y[458] * y[2] * y[0] ))
    r44 = (13.7 * y[1237] * y[458] * y[2] ) / (1 + (y[1237] * y[458] * y[2] ))
    return (r499) - (r42 + r44)
 
def C00864(t, y):
    r323 = (13.7 * y[1344] * y[1] * y[459]) / (1 + (y[1344] * y[1] * y[459]))
    return (0) - (r323)
 
def C00868(t, y):
    r488 = (13.7 * y[1391] * y[460] * y[811] * y[1]) / (1 + (y[1391] * y[460] * y[811] * y[1]))
    r718 = (13.7 * y[1479] * y[460]) / (1 + (y[1479] * y[460]))
    return (0) - (r488 + r718)
 
def C00882(t, y):
    r406 = (13.7 * y[1380] * y[1] * y[482]) / (1 + (y[1380] * y[1] * y[482]))
    r319 = (13.7 * y[1340] * y[1] * y[461]) / (1 + (y[1340] * y[1] * y[461]))
    return (r406) - (r319)
 
def C00900(t, y):
    r84 = (13.7 * y[1248] * y[462] * y[4] * y[77]) / (1 + (y[1248] * y[462] * y[4] * y[77]))
    r208 = (13.7 * y[1293] * y[462] * y[10] ) / (1 + (y[1293] * y[462] * y[10] ))
    r211 = (13.7 * y[1293] * y[462] * y[65]) / (1 + (y[1293] * y[462] * y[65]))
    return (0) - (r84 + r208 + r211)
 
def C00921(t, y):
    r272 = (13.7 * y[1319] * y[668] * y[419]) / (1 + (y[1319] * y[668] * y[419]))
    r273 = (13.7 * y[1319] * y[506] * y[419]) / (1 + (y[1319] * y[506] * y[419]))
    return (r272 + r273) - (0)
 
def C00931(t, y):
    r655 = (13.7 * y[1452] * y[464] * y[0]) / (1 + (y[1452] * y[464] * y[0]))
    return (0) - (r655)
 
def C00935(t, y):
    r723 = (13.7 * y[1483] * y[465]) / (1 + (y[1483] * y[465]))
    return (0) - (r723)
 
def C00954(t, y):
    r554 = (13.7 * y[1409] * y[552] * y[0]) / (1 + (y[1409] * y[552] * y[0]))
    return (r554) - (0)
 
def C00957(t, y):
    r47 = (13.7 * y[1238] * y[737] * y[2]) / (1 + (y[1238] * y[737] * y[2]))
    return (r47) - (0)
 
def C00966(t, y):
    r40 = (13.7 * y[1235] * y[416] * y[5]) / (1 + (y[1235] * y[416] * y[5]))
    return (r40) - (0)
 
def C00979(t, y):
    r278 = (13.7 * y[1322] * y[469] * y[270]) / (1 + (y[1322] * y[469] * y[270]))
    r279 = (13.7 * y[1322] * y[469] * y[513]) / (1 + (y[1322] * y[469] * y[513]))
    r280 = (13.7 * y[1322] * y[469] * y[302] * y[321] * y[77]) / (1 + (y[1322] * y[469] * y[302] * y[321] * y[77]))
    return (0) - (r278 + r279 + r280)
 
def C00984(t, y):
    r347 = (13.7 * y[1352] * y[1] * y[470]) / (1 + (y[1352] * y[1] * y[470]))
    return (0) - (r347)
 
def C01005(t, y):
    r281 = (13.7 * y[1322] * y[471] * y[270]) / (1 + (y[1322] * y[471] * y[270]))
    r297 = (13.7 * y[1330] * y[471] * y[25]) / (1 + (y[1330] * y[471] * y[25]))
    return (0) - (r281 + r297)
 
def C01024(t, y):
    r655 = (13.7 * y[1452] * y[464] * y[0]) / (1 + (y[1452] * y[464] * y[0]))
    return (r655) - (0)
 
def C01035(t, y):
    r555 = (13.7 * y[1409] * y[569] * y[0]) / (1 + (y[1409] * y[569] * y[0]))
    return (r555) - (0)
 
def C01050(t, y):
    r142 = (13.7 * y[1263] * y[474] * y[5]) / (1 + (y[1263] * y[474] * y[5]))
    r143 = (13.7 * y[1263] * y[474] * y[2]) / (1 + (y[1263] * y[474] * y[2]))
    r789 = (13.7 * y[1513] * y[1] * y[474] * y[40]) / (1 + (y[1513] * y[1] * y[474] * y[40]))
    return (0) - (r142 + r143 + r789)
 
def C01051(t, y):
    r179 = (13.7 * y[1274] * y[18] * y[475]) / (1 + (y[1274] * y[18] * y[475]))
    r180 = (13.7 * y[1274] * y[18] * y[475]) / (1 + (y[1274] * y[18] * y[475]))
    return (0) - (r179 + r180)
 
def C01081(t, y):
    r275 = (13.7 * y[1321] * y[666] * y[635]) / (1 + (y[1321] * y[666] * y[635]))
    r276 = (13.7 * y[1321] * y[666] * y[867]) / (1 + (y[1321] * y[666] * y[867]))
    r277 = (13.7 * y[1321] * y[666] * y[866]) / (1 + (y[1321] * y[666] * y[866]))
    return (r275 + r276 + r277) - (0)
 
def C01100(t, y):
    r299 = (13.7 * y[1331] * y[477] * y[25]) / (1 + (y[1331] * y[477] * y[25]))
    r499 = (13.7 * y[1397] * y[477] * y[0]) / (1 + (y[1397] * y[477] * y[0]))
    return (0) - (r299 + r499)
 
def C01102(t, y):
    r327 = (13.7 * y[1346] * y[1] * y[256]) / (1 + (y[1346] * y[1] * y[256]))
    r642 = (13.7 * y[1448] * y[478] * y[0]) / (1 + (y[1448] * y[478] * y[0]))
    return (r327) - (r642)
 
def C01103(t, y):
    r256 = (13.7 * y[1312] * y[479] * y[12]) / (1 + (y[1312] * y[479] * y[12]))
    r597 = (13.7 * y[1432] * y[479]) / (1 + (y[1432] * y[479]))
    return (0) - (r256 + r597)
 
def C01107(t, y):
    r326 = (13.7 * y[1345] * y[1] * y[393]) / (1 + (y[1345] * y[1] * y[393]))
    r365 = (13.7 * y[1363] * y[1] * y[480]) / (1 + (y[1363] * y[1] * y[480]))
    return (r326) - (r365)
 
def C01118(t, y):
    r242 = (13.7 * y[1306] * y[88] * y[256]) / (1 + (y[1306] * y[88] * y[256]))
    r243 = (13.7 * y[1306] * y[88] * y[256]) / (1 + (y[1306] * y[88] * y[256]))
    return (r242 + r243) - (0)
 
def C01134(t, y):
    r324 = (13.7 * y[1344] * y[1] * y[455]) / (1 + (y[1344] * y[1] * y[455]))
    r599 = (13.7 * y[1434] * y[638]) / (1 + (y[1434] * y[638]))
    r406 = (13.7 * y[1380] * y[1] * y[482]) / (1 + (y[1380] * y[1] * y[482]))
    return (r324 + r599) - (r406)
 
def C01143(t, y):
    r365 = (13.7 * y[1363] * y[1] * y[480]) / (1 + (y[1363] * y[1] * y[480]))
    r598 = (13.7 * y[1433] * y[1] * y[483]) / (1 + (y[1433] * y[1] * y[483]))
    return (r365) - (r598)
 
def C01144(t, y):
    r55 = (13.7 * y[1242] * y[484] * y[2]) / (1 + (y[1242] * y[484] * y[2]))
    return (0) - (r55)
 
def C01157(t, y):
    r149 = (13.7 * y[1265] * y[485] * y[2]) / (1 + (y[1265] * y[485] * y[2]))
    r150 = (13.7 * y[1265] * y[485] * y[5]) / (1 + (y[1265] * y[485] * y[5]))
    return (0) - (r149 + r150)
 
def C01159(t, y):
    r712 = (13.7 * y[1477] * y[486] * y[426]) / (1 + (y[1477] * y[486] * y[426]))
    r714 = (13.7 * y[1477] * y[486] * y[426]) / (1 + (y[1477] * y[486] * y[426]))
    return (0) - (r712 + r714)
 
def C01165(t, y):
    r128 = (13.7 * y[1258] * y[487] * y[8] * y[5]) / (1 + (y[1258] * y[487] * y[8] * y[5]))
    r128 = (13.7 * y[1258] * y[487] * y[8] * y[5]) / (1 + (y[1258] * y[487] * y[8] * y[5]))
    return (r128) - (r128)
 
def C01167(t, y):
    r349 = (13.7 * y[1354] * y[1] * y[423]) / (1 + (y[1354] * y[1] * y[423]))
    r501 = (13.7 * y[1399] * y[488] * y[0]) / (1 + (y[1399] * y[488] * y[0]))
    r502 = (13.7 * y[1399] * y[488] * y[0]) / (1 + (y[1399] * y[488] * y[0]))
    r503 = (13.7 * y[1399] * y[488] * y[0]) / (1 + (y[1399] * y[488] * y[0]))
    return (r349) - (r501 + r502 + r503)
 
def C01170(t, y):
    r678 = (13.7 * y[1465] * y[42]) / (1 + (y[1465] * y[42]))
    r680 = (13.7 * y[1465] * y[431] * y[14]) / (1 + (y[1465] * y[431] * y[14]))
    return (r678 + r680) - (0)
 
def C01172(t, y):
    r312 = (13.7 * y[1336] * y[1] * y[216]) / (1 + (y[1336] * y[1] * y[216]))
    r700 = (13.7 * y[1473] * y[435]) / (1 + (y[1473] * y[435]))
    r705 = (13.7 * y[1473] * y[435]) / (1 + (y[1473] * y[435]))
    r716 = (13.7 * y[1478] * y[433]) / (1 + (y[1478] * y[433]))
    r75 = (13.7 * y[1245] * y[490] * y[5]) / (1 + (y[1245] * y[490] * y[5]))
    r701 = (13.7 * y[1473] * y[490]) / (1 + (y[1473] * y[490]))
    r706 = (13.7 * y[1473] * y[490]) / (1 + (y[1473] * y[490]))
    return (r312 + r700 + r705 + r716) - (r75 + r701 + r706)
 
def C01179(t, y):
    r131 = (13.7 * y[1260] * y[248] * y[2]) / (1 + (y[1260] * y[248] * y[2]))
    r301 = (13.7 * y[1331] * y[79] * y[25]) / (1 + (y[1331] * y[79] * y[25]))
    return (r131 + r301) - (0)
 
def C01185(t, y):
    r401 = (13.7 * y[1376] * y[1] * y[492]) / (1 + (y[1376] * y[1] * y[492]))
    r806 = (13.7 * y[1523] * y[492] * y[12] * y[7] * y[8]) / (1 + (y[1523] * y[492] * y[12] * y[7] * y[8]))
    r807 = (13.7 * y[1523] * y[492] * y[12] * y[7] * y[8]) / (1 + (y[1523] * y[492] * y[12] * y[7] * y[8]))
    return (0) - (r401 + r806 + r807)
 
def C01209(t, y):
    r240 = (13.7 * y[1305] * y[80] * y[223]) / (1 + (y[1305] * y[80] * y[223]))
    r221 = (13.7 * y[1298] * y[168] * y[493]) / (1 + (y[1298] * y[168] * y[493]))
    r222 = (13.7 * y[1298] * y[610] * y[493]) / (1 + (y[1298] * y[610] * y[493]))
    r223 = (13.7 * y[1298] * y[682] * y[493]) / (1 + (y[1298] * y[682] * y[493]))
    r224 = (13.7 * y[1298] * y[714] * y[493]) / (1 + (y[1298] * y[714] * y[493]))
    r225 = (13.7 * y[1298] * y[718] * y[493]) / (1 + (y[1298] * y[718] * y[493]))
    r226 = (13.7 * y[1298] * y[721] * y[493]) / (1 + (y[1298] * y[721] * y[493]))
    r227 = (13.7 * y[1298] * y[724] * y[493]) / (1 + (y[1298] * y[724] * y[493]))
    r228 = (13.7 * y[1298] * y[730] * y[493]) / (1 + (y[1298] * y[730] * y[493]))
    r229 = (13.7 * y[1298] * y[733] * y[493]) / (1 + (y[1298] * y[733] * y[493]))
    r230 = (13.7 * y[1298] * y[859] * y[493]) / (1 + (y[1298] * y[859] * y[493]))
    r231 = (13.7 * y[1298] * y[873] * y[493]) / (1 + (y[1298] * y[873] * y[493]))
    r232 = (13.7 * y[1299] * y[23] * y[493]) / (1 + (y[1299] * y[23] * y[493]))
    return (r240) - (r221 + r222 + r223 + r224 + r225 + r226 + r227 + r228 + r229 + r230 + r231 + r232)
 
def C01212(t, y):
    r789 = (13.7 * y[1513] * y[1] * y[474] * y[40]) / (1 + (y[1513] * y[1] * y[474] * y[40]))
    r790 = (13.7 * y[1514] * y[1] * y[494] * y[212]) / (1 + (y[1514] * y[1] * y[494] * y[212]))
    return (r789) - (r790)
 
def C01217(t, y):
    r194 = (13.7 * y[1285] * y[62] * y[495]) / (1 + (y[1285] * y[62] * y[495]))
    return (0) - (r194)
 
def C01235(t, y):
    r513 = (13.7 * y[1402] * y[496] * y[0]) / (1 + (y[1402] * y[496] * y[0]))
    return (0) - (r513)
 
def C01236(t, y):
    r74 = (13.7 * y[1245] * y[89] * y[5]) / (1 + (y[1245] * y[89] * y[5]))
    r75 = (13.7 * y[1245] * y[490] * y[5]) / (1 + (y[1245] * y[490] * y[5]))
    return (r74 + r75) - (0)
 
def C01250(t, y):
    r287 = (13.7 * y[1327] * y[395] * y[25]) / (1 + (y[1327] * y[395] * y[25]))
    r127 = (13.7 * y[1257] * y[498] * y[8] * y[5]) / (1 + (y[1257] * y[498] * y[8] * y[5]))
    return (r287) - (r127)
 
def C01260(t, y):
    r585 = (13.7 * y[1426] * y[499] * y[0]) / (1 + (y[1426] * y[499] * y[0]))
    return (0) - (r585)
 
def C01267(t, y):
    r299 = (13.7 * y[1331] * y[477] * y[25]) / (1 + (y[1331] * y[477] * y[25]))
    r609 = (13.7 * y[1442] * y[658]) / (1 + (y[1442] * y[658]))
    return (r299 + r609) - (0)
 
def C01268(t, y):
    r41 = (13.7 * y[1236] * y[645] * y[5]) / (1 + (y[1236] * y[645] * y[5]))
    r577 = (13.7 * y[1419] * y[507] * y[0]) / (1 + (y[1419] * y[507] * y[0]))
    return (r41 + r577) - (0)
 
def C01269(t, y):
    r274 = (13.7 * y[1320] * y[71] * y[577]) / (1 + (y[1320] * y[71] * y[577]))
    r644 = (13.7 * y[1449] * y[502]) / (1 + (y[1449] * y[502]))
    return (r274) - (r644)
 
def C01271(t, y):
    r619 = (13.7 * y[1446] * y[503]) / (1 + (y[1446] * y[503]))
    r629 = (13.7 * y[1446] * y[503]) / (1 + (y[1446] * y[503]))
    return (0) - (r619 + r629)
 
def C01279(t, y):
    r580 = (13.7 * y[1422] * y[354] * y[0]) / (1 + (y[1422] * y[354] * y[0]))
    r581 = (13.7 * y[1422] * y[869] * y[0]) / (1 + (y[1422] * y[869] * y[0]))
    r344 = (13.7 * y[1350] * y[1] * y[504]) / (1 + (y[1350] * y[1] * y[504]))
    r345 = (13.7 * y[1350] * y[1] * y[504]) / (1 + (y[1350] * y[1] * y[504]))
    return (r580 + r581) - (r344 + r345)
 
def C01290(t, y):
    r516 = (13.7 * y[1402] * y[664] * y[0]) / (1 + (y[1402] * y[664] * y[0]))
    return (r516) - (0)
 
def C01300(t, y):
    r601 = (13.7 * y[1436] * y[672]) / (1 + (y[1436] * y[672]))
    r273 = (13.7 * y[1319] * y[506] * y[419]) / (1 + (y[1319] * y[506] * y[419]))
    r398 = (13.7 * y[1373] * y[1] * y[506]) / (1 + (y[1373] * y[1] * y[506]))
    return (r601) - (r273 + r398)
 
def C01304(t, y):
    r576 = (13.7 * y[1418] * y[43] * y[0]) / (1 + (y[1418] * y[43] * y[0]))
    r577 = (13.7 * y[1419] * y[507] * y[0]) / (1 + (y[1419] * y[507] * y[0]))
    return (r576) - (r577)
 
def C01344(t, y):
    r384 = (13.7 * y[1367] * y[1] * y[508]) / (1 + (y[1367] * y[1] * y[508]))
    return (0) - (r384)
 
def C01345(t, y):
    r384 = (13.7 * y[1367] * y[1] * y[508]) / (1 + (y[1367] * y[1] * y[508]))
    r588 = (13.7 * y[1427] * y[509] * y[0]) / (1 + (y[1427] * y[509] * y[0]))
    return (r384) - (r588)
 
def C01346(t, y):
    r394 = (13.7 * y[1370] * y[1] * y[342]) / (1 + (y[1370] * y[1] * y[342]))
    r97 = (13.7 * y[1253] * y[510] * y[322] * y[0]) / (1 + (y[1253] * y[510] * y[322] * y[0]))
    r105 = (13.7 * y[1253] * y[510] * y[322] * y[0]) / (1 + (y[1253] * y[510] * y[322] * y[0]))
    r113 = (13.7 * y[1253] * y[510] * y[322] * y[0]) / (1 + (y[1253] * y[510] * y[322] * y[0]))
    r383 = (13.7 * y[1367] * y[1] * y[510]) / (1 + (y[1367] * y[1] * y[510]))
    return (r394) - (r97 + r105 + r113 + r383)
 
def C01412(t, y):
    r125 = (13.7 * y[1255] * y[511] * y[9] * y[2]) / (1 + (y[1255] * y[511] * y[9] * y[2]))
    return (0) - (r125)
 
def C01450(t, y):
    r16 = (13.7 * y[1233] * y[516] * y[2]) / (1 + (y[1233] * y[516] * y[2]))
    r35 = (13.7 * y[1233] * y[516] * y[2]) / (1 + (y[1233] * y[516] * y[2]))
    return (r16 + r35) - (0)
 
def C01528(t, y):
    r170 = (13.7 * y[1270] * y[513] * y[5] * y[0]) / (1 + (y[1270] * y[513] * y[5] * y[0]))
    r279 = (13.7 * y[1322] * y[469] * y[513]) / (1 + (y[1322] * y[469] * y[513]))
    return (0) - (r170 + r279)
 
def C01545(t, y):
    r4 = (13.7 * y[1233] * y[449] * y[2]) / (1 + (y[1233] * y[449] * y[2]))
    r23 = (13.7 * y[1233] * y[449] * y[2]) / (1 + (y[1233] * y[449] * y[2]))
    return (r4 + r23) - (0)
 
def C01563(t, y):
    r355 = (13.7 * y[1357] * y[13] * y[273]) / (1 + (y[1357] * y[13] * y[273]))
    r358 = (13.7 * y[1357] * y[13] * y[273]) / (1 + (y[1357] * y[13] * y[273]))
    r828 = (13.7 * y[1530] * y[13] * y[891]) / (1 + (y[1530] * y[13] * y[891]))
    r834 = (13.7 * y[1530] * y[13] * y[891]) / (1 + (y[1530] * y[13] * y[891]))
    r840 = (13.7 * y[1530] * y[13] * y[891]) / (1 + (y[1530] * y[13] * y[891]))
    r354 = (13.7 * y[1357] * y[1] * y[515]) / (1 + (y[1357] * y[1] * y[515]))
    r357 = (13.7 * y[1357] * y[1] * y[515]) / (1 + (y[1357] * y[1] * y[515]))
    r826 = (13.7 * y[1530] * y[1] * y[515]) / (1 + (y[1530] * y[1] * y[515]))
    r832 = (13.7 * y[1530] * y[1] * y[515]) / (1 + (y[1530] * y[1] * y[515]))
    r838 = (13.7 * y[1530] * y[1] * y[515]) / (1 + (y[1530] * y[1] * y[515]))
    return (r355 + r358 + r828 + r834 + r840) - (r354 + r357 + r826 + r832 + r838)
 
def C01612(t, y):
    r16 = (13.7 * y[1233] * y[516] * y[2]) / (1 + (y[1233] * y[516] * y[2]))
    r35 = (13.7 * y[1233] * y[516] * y[2]) / (1 + (y[1233] * y[516] * y[2]))
    return (0) - (r16 + r35)
 
def C01613(t, y):
    r517 = (13.7 * y[1402] * y[517] * y[0]) / (1 + (y[1402] * y[517] * y[0]))
    r532 = (13.7 * y[1403] * y[517] * y[0]) / (1 + (y[1403] * y[517] * y[0]))
    return (0) - (r517 + r532)
 
def C01628(t, y):
    r160 = (13.7 * y[1267] * y[518] * y[3] * y[77]) / (1 + (y[1267] * y[518] * y[3] * y[77]))
    return (0) - (r160)
 
def C01638(t, y):
    r729 = (13.7 * y[1487] * y[519] * y[48] * y[1]) / (1 + (y[1487] * y[519] * y[48] * y[1]))
    return (0) - (r729)
 
def C01641(t, y):
    r750 = (13.7 * y[1492] * y[520] * y[24] * y[1]) / (1 + (y[1492] * y[520] * y[24] * y[1]))
    return (0) - (r750)
 
def C01659(t, y):
    r556 = (13.7 * y[1409] * y[414] * y[13]) / (1 + (y[1409] * y[414] * y[13]))
    return (r556) - (0)
 
def C01769(t, y):
    r53 = (13.7 * y[1241] * y[448] * y[3] * y[77]) / (1 + (y[1241] * y[448] * y[3] * y[77]))
    return (r53) - (0)
 
def C01801(t, y):
    r306 = (13.7 * y[1335] * y[437] * y[7]) / (1 + (y[1335] * y[437] * y[7]))
    r308 = (13.7 * y[1335] * y[437] * y[7]) / (1 + (y[1335] * y[437] * y[7]))
    r310 = (13.7 * y[1335] * y[437] * y[7]) / (1 + (y[1335] * y[437] * y[7]))
    return (r306 + r308 + r310) - (0)
 
def C01879(t, y):
    r565 = (13.7 * y[1413] * y[1] * y[524] * y[0]) / (1 + (y[1413] * y[1] * y[524] * y[0]))
    r566 = (13.7 * y[1413] * y[1] * y[524] * y[0]) / (1 + (y[1413] * y[1] * y[524] * y[0]))
    return (0) - (r565 + r566)
 
def C01929(t, y):
    r44 = (13.7 * y[1237] * y[458] * y[2] ) / (1 + (y[1237] * y[458] * y[2] ))
    r43 = (13.7 * y[1237] * y[525] * y[0] * y[2]) / (1 + (y[1237] * y[525] * y[0] * y[2]))
    return (r44) - (r43)
 
def C01977(t, y):
    r188 = (13.7 * y[1280] * y[18] * y[526]) / (1 + (y[1280] * y[18] * y[526]))
    r190 = (13.7 * y[1282] * y[18] * y[526]) / (1 + (y[1282] * y[18] * y[526]))
    return (0) - (r188 + r190)
 
def C01997(t, y):
    r238 = (13.7 * y[1303] * y[2] * y[527] * y[0]) / (1 + (y[1303] * y[2] * y[527] * y[0]))
    return (0) - (r238)
 
def C02051(t, y):
    r165 = (13.7 * y[1269] * y[563] * y[2]) / (1 + (y[1269] * y[563] * y[2]))
    r767 = (13.7 * y[1507] * y[1] * y[822] * y[1591]) / (1 + (y[1507] * y[1] * y[822] * y[1591]))
    r773 = (13.7 * y[1507] * y[1] * y[822] * y[1591]) / (1 + (y[1507] * y[1] * y[822] * y[1591]))
    r779 = (13.7 * y[1507] * y[1] * y[822] * y[1591]) / (1 + (y[1507] * y[1] * y[822] * y[1591]))
    return (r165 + r767 + r773 + r779) - (0)
 
def C02059(t, y):
    r161 = (13.7 * y[1267] * y[529] * y[3] * y[77]) / (1 + (y[1267] * y[529] * y[3] * y[77]))
    return (0) - (r161)
 
def C02090(t, y):
    r101 = (13.7 * y[1253] * y[623] * y[575] * y[0]) / (1 + (y[1253] * y[623] * y[575] * y[0]))
    r109 = (13.7 * y[1253] * y[623] * y[575] * y[0]) / (1 + (y[1253] * y[623] * y[575] * y[0]))
    r117 = (13.7 * y[1253] * y[623] * y[575] * y[0]) / (1 + (y[1253] * y[623] * y[575] * y[0]))
    return (r101 + r109 + r117) - (0)
 
def C02097(t, y):
    r683 = (13.7 * y[1466] * y[456]) / (1 + (y[1466] * y[456]))
    return (r683) - (0)
 
def C02133(t, y):
    r236 = (13.7 * y[1302] * y[168] * y[8]) / (1 + (y[1302] * y[168] * y[8]))
    return (r236) - (0)
 
def C02188(t, y):
    r237 = (13.7 * y[1303] * y[2] * y[884] * y[0]) / (1 + (y[1303] * y[2] * y[884] * y[0]))
    return (r237) - (0)
 
def C02218(t, y):
    r646 = (13.7 * y[1450] * y[62]) / (1 + (y[1450] * y[62]))
    r648 = (13.7 * y[1450] * y[534]) / (1 + (y[1450] * y[534]))
    return (r646) - (r648)
 
def C02232(t, y):
    r63 = (13.7 * y[1242] * y[800] * y[2]) / (1 + (y[1242] * y[800] * y[2]))
    return (r63) - (0)
 
def C02336(t, y):
    r530 = (13.7 * y[1403] * y[86] * y[0]) / (1 + (y[1403] * y[86] * y[0]))
    r535 = (13.7 * y[1403] * y[914] * y[0]) / (1 + (y[1403] * y[914] * y[0]))
    r538 = (13.7 * y[1403] * y[920] * y[0]) / (1 + (y[1403] * y[920] * y[0]))
    r330 = (13.7 * y[1347] * y[1] * y[536]) / (1 + (y[1347] * y[1] * y[536]))
    return (r530 + r535 + r538) - (r330)
 
def C02342(t, y):
    r489 = (13.7 * y[1392] * y[94] * y[537]) / (1 + (y[1392] * y[94] * y[537]))
    return (0) - (r489)
 
def C02350(t, y):
    r564 = (13.7 * y[1412] * y[538] * y[0] ) / (1 + (y[1412] * y[538] * y[0] ))
    return (0) - (r564)
 
def C02356(t, y):
    r292 = (13.7 * y[1329] * y[539] * y[25]) / (1 + (y[1329] * y[539] * y[25]))
    r296 = (13.7 * y[1329] * y[539] * y[25]) / (1 + (y[1329] * y[539] * y[25]))
    return (0) - (r292 + r296)
 
def C02380(t, y):
    r267 = (13.7 * y[1317] * y[540] * y[115]) / (1 + (y[1317] * y[540] * y[115]))
    return (0) - (r267)
 
def C02415(t, y):
    r238 = (13.7 * y[1303] * y[2] * y[527] * y[0]) / (1 + (y[1303] * y[2] * y[527] * y[0]))
    return (r238) - (0)
 
def C02430(t, y):
    r725 = (13.7 * y[1485] * y[1] * y[70] * y[1542]) / (1 + (y[1485] * y[1] * y[70] * y[1542]))
    r198 = (13.7 * y[1288] * y[542] * y[228]) / (1 + (y[1288] * y[542] * y[228]))
    return (r725) - (r198)
 
def C02463(t, y):
    r179 = (13.7 * y[1274] * y[18] * y[475]) / (1 + (y[1274] * y[18] * y[475]))
    r181 = (13.7 * y[1274] * y[18] * y[803]) / (1 + (y[1274] * y[18] * y[803]))
    return (r179 + r181) - (0)
 
def C02469(t, y):
    r182 = (13.7 * y[1274] * y[18] * y[544]) / (1 + (y[1274] * y[18] * y[544]))
    return (0) - (r182)
 
def C02479(t, y):
    r692 = (13.7 * y[1471] * y[545]) / (1 + (y[1471] * y[545]))
    return (0) - (r692)
 
def C02501(t, y):
    r708 = (13.7 * y[1474] * y[546]) / (1 + (y[1474] * y[546]))
    return (0) - (r708)
 
def C02504(t, y):
    r613 = (13.7 * y[1444] * y[642]) / (1 + (y[1444] * y[642]))
    r616 = (13.7 * y[1444] * y[642]) / (1 + (y[1444] * y[642]))
    r611 = (13.7 * y[1444] * y[547]) / (1 + (y[1444] * y[547]))
    r614 = (13.7 * y[1444] * y[547]) / (1 + (y[1444] * y[547]))
    return (r613 + r616) - (r611 + r614)
 
def C02505(t, y):
    r553 = (13.7 * y[1409] * y[548] * y[0]) / (1 + (y[1409] * y[548] * y[0]))
    return (0) - (r553)
 
def C02583(t, y):
    r189 = (13.7 * y[1281] * y[549] * y[18]) / (1 + (y[1281] * y[549] * y[18]))
    return (0) - (r189)
 
def C02631(t, y):
    r611 = (13.7 * y[1444] * y[547]) / (1 + (y[1444] * y[547]))
    r612 = (13.7 * y[1444] * y[642]) / (1 + (y[1444] * y[642]))
    r614 = (13.7 * y[1444] * y[547]) / (1 + (y[1444] * y[547]))
    r615 = (13.7 * y[1444] * y[642]) / (1 + (y[1444] * y[642]))
    return (r611 + r612 + r614 + r615) - (0)
 
def C02686(t, y):
    r518 = (13.7 * y[1402] * y[757] * y[0] ) / (1 + (y[1402] * y[757] * y[0] ))
    return (r518) - (0)
 
def C02693(t, y):
    r554 = (13.7 * y[1409] * y[552] * y[0]) / (1 + (y[1409] * y[552] * y[0]))
    return (0) - (r554)
 
def C02713(t, y):
    r550 = (13.7 * y[1408] * y[566] * y[0]) / (1 + (y[1408] * y[566] * y[0]))
    return (r550) - (0)
 
def C02730(t, y):
    r608 = (13.7 * y[1441] * y[554] * y[0]) / (1 + (y[1441] * y[554] * y[0]))
    r763 = (13.7 * y[1504] * y[1] * y[554] * y[9]) / (1 + (y[1504] * y[1] * y[554] * y[9]))
    return (0) - (r608 + r763)
 
def C02739(t, y):
    r259 = (13.7 * y[1314] * y[555] * y[12]) / (1 + (y[1314] * y[555] * y[12]))
    r584 = (13.7 * y[1425] * y[555] * y[0]) / (1 + (y[1425] * y[555] * y[0]))
    return (0) - (r259 + r584)
 
def C02741(t, y):
    r584 = (13.7 * y[1425] * y[555] * y[0]) / (1 + (y[1425] * y[555] * y[0]))
    r575 = (13.7 * y[1417] * y[556] * y[0]) / (1 + (y[1417] * y[556] * y[0]))
    return (r584) - (r575)
 
def C02743(t, y):
    r192 = (13.7 * y[1284] * y[627] * y[557]) / (1 + (y[1284] * y[627] * y[557]))
    r492 = (13.7 * y[1393] * y[94] * y[557]) / (1 + (y[1393] * y[94] * y[557]))
    r493 = (13.7 * y[1393] * y[811] * y[557]) / (1 + (y[1393] * y[811] * y[557]))
    return (0) - (r192 + r492 + r493)
 
def C02764(t, y):
    r718 = (13.7 * y[1479] * y[460]) / (1 + (y[1479] * y[460]))
    return (r718) - (0)
 
def C02876(t, y):
    r245 = (13.7 * y[1307] * y[97] * y[8]) / (1 + (y[1307] * y[97] * y[8]))
    r351 = (13.7 * y[1355] * y[1] * y[158]) / (1 + (y[1355] * y[1] * y[158]))
    return (r245 + r351) - (0)
 
def C02909(t, y):
    r10 = (13.7 * y[1233] * y[560] * y[2]) / (1 + (y[1233] * y[560] * y[2]))
    r29 = (13.7 * y[1233] * y[560] * y[2]) / (1 + (y[1233] * y[560] * y[2]))
    return (0) - (r10 + r29)
 
def C02953(t, y):
    r157 = (13.7 * y[1266] * y[264] * y[5]) / (1 + (y[1266] * y[264] * y[5]))
    return (r157) - (0)
 
def C02962(t, y):
    r695 = (13.7 * y[1472] * y[562]) / (1 + (y[1472] * y[562]))
    r697 = (13.7 * y[1472] * y[562]) / (1 + (y[1472] * y[562]))
    return (0) - (r695 + r697)
 
def C02972(t, y):
    r165 = (13.7 * y[1269] * y[563] * y[2]) / (1 + (y[1269] * y[563] * y[2]))
    return (0) - (r165)
 
def C02984(t, y):
    r729 = (13.7 * y[1487] * y[519] * y[48] * y[1]) / (1 + (y[1487] * y[519] * y[48] * y[1]))
    return (r729) - (0)
 
def C02987(t, y):
    r750 = (13.7 * y[1492] * y[520] * y[24] * y[1]) / (1 + (y[1492] * y[520] * y[24] * y[1]))
    return (r750) - (0)
 
def C02999(t, y):
    r550 = (13.7 * y[1408] * y[566] * y[0]) / (1 + (y[1408] * y[566] * y[0]))
    return (0) - (r550)
 
def C03023(t, y):
    r172 = (13.7 * y[1271] * y[567] * y[322] * y[0]) / (1 + (y[1271] * y[567] * y[322] * y[0]))
    r174 = (13.7 * y[1271] * y[567] * y[322] * y[0]) / (1 + (y[1271] * y[567] * y[322] * y[0]))
    r176 = (13.7 * y[1272] * y[567] * y[322] * y[0]) / (1 + (y[1272] * y[567] * y[322] * y[0]))
    return (0) - (r172 + r174 + r176)
 
def C03028(t, y):
    r371 = (13.7 * y[1366] * y[65] * y[7]) / (1 + (y[1366] * y[65] * y[7]))
    return (r371) - (0)
 
def C03078(t, y):
    r555 = (13.7 * y[1409] * y[569] * y[0]) / (1 + (y[1409] * y[569] * y[0]))
    return (0) - (r555)
 
def C03082(t, y):
    r126 = (13.7 * y[1256] * y[397] * y[8] * y[5]) / (1 + (y[1256] * y[397] * y[8] * y[5]))
    r360 = (13.7 * y[1359] * y[1] * y[48]) / (1 + (y[1359] * y[1] * y[48]))
    return (r126 + r360) - (0)
 
def C03089(t, y):
    r545 = (13.7 * y[1406] * y[165] * y[0]) / (1 + (y[1406] * y[165] * y[0]))
    return (r545) - (0)
 
def C03090(t, y):
    r258 = (13.7 * y[1313] * y[572] * y[12] * y[24]) / (1 + (y[1313] * y[572] * y[12] * y[24]))
    r793 = (13.7 * y[1517] * y[1] * y[572] * y[36]) / (1 + (y[1517] * y[1] * y[572] * y[36]))
    return (0) - (r258 + r793)
 
def C03150(t, y):
    r542 = (13.7 * y[1405] * y[573] * y[0]) / (1 + (y[1405] * y[573] * y[0]))
    return (0) - (r542)
 
def C03160(t, y):
    r763 = (13.7 * y[1504] * y[1] * y[554] * y[9]) / (1 + (y[1504] * y[1] * y[554] * y[9]))
    r603 = (13.7 * y[1438] * y[574]) / (1 + (y[1438] * y[574]))
    r604 = (13.7 * y[1438] * y[574]) / (1 + (y[1438] * y[574]))
    return (r763) - (r603 + r604)
 
def C03170(t, y):
    r101 = (13.7 * y[1253] * y[623] * y[575] * y[0]) / (1 + (y[1253] * y[623] * y[575] * y[0]))
    r109 = (13.7 * y[1253] * y[623] * y[575] * y[0]) / (1 + (y[1253] * y[623] * y[575] * y[0]))
    r117 = (13.7 * y[1253] * y[623] * y[575] * y[0]) / (1 + (y[1253] * y[623] * y[575] * y[0]))
    return (0) - (r101 + r109 + r117)
 
def C03172(t, y):
    r177 = (13.7 * y[1273] * y[576] * y[150]) / (1 + (y[1273] * y[576] * y[150]))
    return (0) - (r177)
 
def C03175(t, y):
    r348 = (13.7 * y[1353] * y[1] * y[409]) / (1 + (y[1353] * y[1] * y[409]))
    r274 = (13.7 * y[1320] * y[71] * y[577]) / (1 + (y[1320] * y[71] * y[577]))
    return (r348) - (r274)
 
def C03232(t, y):
    r297 = (13.7 * y[1330] * y[471] * y[25]) / (1 + (y[1330] * y[471] * y[25]))
    return (r297) - (0)
 
def C03287(t, y):
    r352 = (13.7 * y[1356] * y[1] * y[24]) / (1 + (y[1356] * y[1] * y[24]))
    return (r352) - (0)
 
def C03294(t, y):
    r198 = (13.7 * y[1288] * y[542] * y[228]) / (1 + (y[1288] * y[542] * y[228]))
    return (r198) - (0)
 
def C03313(t, y):
    r161 = (13.7 * y[1267] * y[529] * y[3] * y[77]) / (1 + (y[1267] * y[529] * y[3] * y[77]))
    return (r161) - (0)
 
def C03319(t, y):
    r39 = (13.7 * y[1234] * y[582] * y[5]) / (1 + (y[1234] * y[582] * y[5]))
    return (0) - (r39)
 
def C03344(t, y):
    r56 = (13.7 * y[1242] * y[641] * y[2] ) / (1 + (y[1242] * y[641] * y[2] ))
    r248 = (13.7 * y[1309] * y[97] * y[23]) / (1 + (y[1309] * y[97] * y[23]))
    return (r56 + r248) - (0)
 
def C03356(t, y):
    r607 = (13.7 * y[1440] * y[584]) / (1 + (y[1440] * y[584]))
    return (0) - (r607)
 
def C03373(t, y):
    r596 = (13.7 * y[1431] * y[665]) / (1 + (y[1431] * y[665]))
    r791 = (13.7 * y[1515] * y[1] * y[656]) / (1 + (y[1515] * y[1] * y[656]))
    r801 = (13.7 * y[1520] * y[1] * y[585] * y[273]) / (1 + (y[1520] * y[1] * y[585] * y[273]))
    return (r596 + r791) - (r801)
 
def C03406(t, y):
    r810 = (13.7 * y[1526] * y[1] * y[308] * y[48]) / (1 + (y[1526] * y[1] * y[308] * y[48]))
    r656 = (13.7 * y[1453] * y[586]) / (1 + (y[1453] * y[586]))
    return (r810) - (r656)
 
def C03453(t, y):
    r708 = (13.7 * y[1474] * y[546]) / (1 + (y[1474] * y[546]))
    return (r708) - (0)
 
def C03479(t, y):
    r792 = (13.7 * y[1516] * y[1] * y[588] * y[77]) / (1 + (y[1516] * y[1] * y[588] * y[77]))
    return (0) - (r792)
 
def C03492(t, y):
    r323 = (13.7 * y[1344] * y[1] * y[459]) / (1 + (y[1344] * y[1] * y[459]))
    r241 = (13.7 * y[1511] * y[60] * y[589] * y[94]) / (1 + (y[1511] * y[60] * y[589] * y[94]))
    return (r323) - (r241)
 
def C03523(t, y):
    r498 = (13.7 * y[1396] * y[606] * y[0]) / (1 + (y[1396] * y[606] * y[0]))
    return (r498) - (0)
 
def C03539(t, y):
    r544 = (13.7 * y[1406] * y[20] * y[0] ) / (1 + (y[1406] * y[20] * y[0] ))
    r670 = (13.7 * y[1457] * y[591]) / (1 + (y[1457] * y[591]))
    return (r544) - (r670)
 
def C03617(t, y):
    r560 = (13.7 * y[1410] * y[628] * y[0] ) / (1 + (y[1410] * y[628] * y[0] ))
    r562 = (13.7 * y[1410] * y[628] * y[0] ) / (1 + (y[1410] * y[628] * y[0] ))
    return (r560 + r562) - (0)
 
def C03620(t, y):
    r551 = (13.7 * y[1409] * y[593] * y[0]) / (1 + (y[1409] * y[593] * y[0]))
    return (0) - (r551)
 
def C03633(t, y):
    r686 = (13.7 * y[1468] * y[601]) / (1 + (y[1468] * y[601]))
    r687 = (13.7 * y[1468] * y[601]) / (1 + (y[1468] * y[601]))
    r688 = (13.7 * y[1468] * y[601]) / (1 + (y[1468] * y[601]))
    return (r686 + r687 + r688) - (0)
 
def C03657(t, y):
    r603 = (13.7 * y[1438] * y[574]) / (1 + (y[1438] * y[574]))
    return (r603) - (0)
 
def C03688(t, y):
    r487 = (13.7 * y[1390] * y[9] * y[596]) / (1 + (y[1390] * y[9] * y[596]))
    return (0) - (r487)
 
def C03692(t, y):
    r519 = (13.7 * y[1402] * y[752] * y[0]) / (1 + (y[1402] * y[752] * y[0]))
    return (r519) - (0)
 
def C03723(t, y):
    r95 = (13.7 * y[1253] * y[623] * y[322] * y[0]) / (1 + (y[1253] * y[623] * y[322] * y[0]))
    r100 = (13.7 * y[1253] * y[623] * y[847] * y[0]) / (1 + (y[1253] * y[623] * y[847] * y[0]))
    r101 = (13.7 * y[1253] * y[623] * y[575] * y[0]) / (1 + (y[1253] * y[623] * y[575] * y[0]))
    r103 = (13.7 * y[1253] * y[623] * y[322] * y[0]) / (1 + (y[1253] * y[623] * y[322] * y[0]))
    r108 = (13.7 * y[1253] * y[623] * y[847] * y[0]) / (1 + (y[1253] * y[623] * y[847] * y[0]))
    r109 = (13.7 * y[1253] * y[623] * y[575] * y[0]) / (1 + (y[1253] * y[623] * y[575] * y[0]))
    r111 = (13.7 * y[1253] * y[623] * y[322] * y[0]) / (1 + (y[1253] * y[623] * y[322] * y[0]))
    r116 = (13.7 * y[1253] * y[623] * y[847] * y[0]) / (1 + (y[1253] * y[623] * y[847] * y[0]))
    r117 = (13.7 * y[1253] * y[623] * y[575] * y[0]) / (1 + (y[1253] * y[623] * y[575] * y[0]))
    return (r95 + r100 + r101 + r103 + r108 + r109 + r111 + r116 + r117) - (0)
 
def C03733(t, y):
    r722 = (13.7 * y[1483] * y[51]) / (1 + (y[1483] * y[51]))
    return (r722) - (0)
 
def C03794(t, y):
    r809 = (13.7 * y[1525] * y[43] * y[126] * y[48]) / (1 + (y[1525] * y[43] * y[126] * y[48]))
    r666 = (13.7 * y[1455] * y[600]) / (1 + (y[1455] * y[600]))
    return (r809) - (r666)
 
def C03798(t, y):
    r686 = (13.7 * y[1468] * y[601]) / (1 + (y[1468] * y[601]))
    r687 = (13.7 * y[1468] * y[601]) / (1 + (y[1468] * y[601]))
    r688 = (13.7 * y[1468] * y[601]) / (1 + (y[1468] * y[601]))
    return (0) - (r686 + r687 + r688)
 
def C03800(t, y):
    r192 = (13.7 * y[1284] * y[627] * y[557]) / (1 + (y[1284] * y[627] * y[557]))
    return (r192) - (0)
 
def C03802(t, y):
    r119 = (13.7 * y[1254] * y[438] * y[322] * y[0]) / (1 + (y[1254] * y[438] * y[322] * y[0]))
    return (r119) - (0)
 
def C03803(t, y):
    r235 = (13.7 * y[1301] * y[23] * y[604]) / (1 + (y[1301] * y[23] * y[604]))
    return (0) - (r235)
 
def C03838(t, y):
    r793 = (13.7 * y[1517] * y[1] * y[572] * y[36]) / (1 + (y[1517] * y[1] * y[572] * y[36]))
    r195 = (13.7 * y[1286] * y[228] * y[605]) / (1 + (y[1286] * y[228] * y[605]))
    r196 = (13.7 * y[1286] * y[605] * y[398] * y[0]) / (1 + (y[1286] * y[605] * y[398] * y[0]))
    return (r793) - (r195 + r196)
 
def C03880(t, y):
    r498 = (13.7 * y[1396] * y[606] * y[0]) / (1 + (y[1396] * y[606] * y[0]))
    return (0) - (r498)
 
def C03892(t, y):
    r486 = (13.7 * y[1389] * y[262] * y[90]) / (1 + (y[1389] * y[262] * y[90]))
    r500 = (13.7 * y[1398] * y[607] * y[0] ) / (1 + (y[1398] * y[607] * y[0] ))
    return (r486) - (r500)
 
def C03895(t, y):
    r172 = (13.7 * y[1271] * y[567] * y[322] * y[0]) / (1 + (y[1271] * y[567] * y[322] * y[0]))
    r174 = (13.7 * y[1271] * y[567] * y[322] * y[0]) / (1 + (y[1271] * y[567] * y[322] * y[0]))
    return (r172 + r174) - (0)
 
def C03912(t, y):
    r147 = (13.7 * y[1265] * y[143] * y[2]) / (1 + (y[1265] * y[143] * y[2]))
    r148 = (13.7 * y[1265] * y[143] * y[5]) / (1 + (y[1265] * y[143] * y[5]))
    return (r147 + r148) - (0)
 
def C03939(t, y):
    r222 = (13.7 * y[1298] * y[610] * y[493]) / (1 + (y[1298] * y[610] * y[493]))
    return (0) - (r222)
 
def C03972(t, y):
    r93 = (13.7 * y[1252] * y[611] * y[2] * y[0]) / (1 + (y[1252] * y[611] * y[2] * y[0]))
    r94 = (13.7 * y[1252] * y[611] * y[5] * y[0]) / (1 + (y[1252] * y[611] * y[5] * y[0]))
    r246 = (13.7 * y[1308] * y[611] * y[23] * y[0]) / (1 + (y[1308] * y[611] * y[23] * y[0]))
    return (0) - (r93 + r94 + r246)
 
def C04039(t, y):
    r84 = (13.7 * y[1248] * y[462] * y[4] * y[77]) / (1 + (y[1248] * y[462] * y[4] * y[77]))
    r639 = (13.7 * y[1447] * y[612]) / (1 + (y[1447] * y[612]))
    return (r84) - (r639)
 
def C04051(t, y):
    r263 = (13.7 * y[1316] * y[659] * y[12]) / (1 + (y[1316] * y[659] * y[12]))
    return (r263) - (0)
 
def C04079(t, y):
    r325 = (13.7 * y[1344] * y[1] * y[614]) / (1 + (y[1344] * y[1] * y[614]))
    return (0) - (r325)
 
def C04088(t, y):
    r141 = (13.7 * y[1262] * y[818] * y[3] * y[77]) / (1 + (y[1262] * y[818] * y[3] * y[77]))
    return (r141) - (0)
 
def C04133(t, y):
    r127 = (13.7 * y[1257] * y[498] * y[8] * y[5]) / (1 + (y[1257] * y[498] * y[8] * y[5]))
    r361 = (13.7 * y[1360] * y[1] * y[427] ) / (1 + (y[1360] * y[1] * y[427] ))
    return (r127 + r361) - (0)
 
def C04144(t, y):
    r183 = (13.7 * y[1275] * y[646] * y[150]) / (1 + (y[1275] * y[646] * y[150]))
    r184 = (13.7 * y[1275] * y[712] * y[646]) / (1 + (y[1275] * y[712] * y[646]))
    return (r183 + r184) - (0)
 
def C04153(t, y):
    r186 = (13.7 * y[1277] * y[18] * y[234]) / (1 + (y[1277] * y[18] * y[234]))
    return (r186) - (0)
 
def C04157(t, y):
    r188 = (13.7 * y[1280] * y[18] * y[526]) / (1 + (y[1280] * y[18] * y[526]))
    return (r188) - (0)
 
def C04160(t, y):
    r190 = (13.7 * y[1282] * y[18] * y[526]) / (1 + (y[1282] * y[18] * y[526]))
    return (r190) - (0)
 
def C04161(t, y):
    r489 = (13.7 * y[1392] * y[94] * y[537]) / (1 + (y[1392] * y[94] * y[537]))
    return (r489) - (0)
 
def C04181(t, y):
    r85 = (13.7 * y[1248] * y[631] * y[5]) / (1 + (y[1248] * y[631] * y[5]))
    r88 = (13.7 * y[1248] * y[750]) / (1 + (y[1248] * y[750]))
    return (r85 + r88) - (0)
 
def C04232(t, y):
    r95 = (13.7 * y[1253] * y[623] * y[322] * y[0]) / (1 + (y[1253] * y[623] * y[322] * y[0]))
    r100 = (13.7 * y[1253] * y[623] * y[847] * y[0]) / (1 + (y[1253] * y[623] * y[847] * y[0]))
    r101 = (13.7 * y[1253] * y[623] * y[575] * y[0]) / (1 + (y[1253] * y[623] * y[575] * y[0]))
    r103 = (13.7 * y[1253] * y[623] * y[322] * y[0]) / (1 + (y[1253] * y[623] * y[322] * y[0]))
    r108 = (13.7 * y[1253] * y[623] * y[847] * y[0]) / (1 + (y[1253] * y[623] * y[847] * y[0]))
    r109 = (13.7 * y[1253] * y[623] * y[575] * y[0]) / (1 + (y[1253] * y[623] * y[575] * y[0]))
    r111 = (13.7 * y[1253] * y[623] * y[322] * y[0]) / (1 + (y[1253] * y[623] * y[322] * y[0]))
    r116 = (13.7 * y[1253] * y[623] * y[847] * y[0]) / (1 + (y[1253] * y[623] * y[847] * y[0]))
    r117 = (13.7 * y[1253] * y[623] * y[575] * y[0]) / (1 + (y[1253] * y[623] * y[575] * y[0]))
    return (0) - (r95 + r100 + r101 + r103 + r108 + r109 + r111 + r116 + r117)
 
def C04236(t, y):
    r79 = (13.7 * y[1247] * y[227] * y[10]) / (1 + (y[1247] * y[227] * y[10]))
    r80 = (13.7 * y[1247] * y[642] * y[2]) / (1 + (y[1247] * y[642] * y[2]))
    return (r79 + r80) - (0)
 
def C04242(t, y):
    r316 = (13.7 * y[1337] * y[791] * y[1]) / (1 + (y[1337] * y[791] * y[1]))
    return (r316) - (0)
 
def C04246(t, y):
    r134 = (13.7 * y[1262] * y[714] * y[2]) / (1 + (y[1262] * y[714] * y[2]))
    r620 = (13.7 * y[1446] * y[651]) / (1 + (y[1446] * y[651]))
    r630 = (13.7 * y[1446] * y[651]) / (1 + (y[1446] * y[651]))
    return (r134 + r620 + r630) - (0)
 
def C04250(t, y):
    r192 = (13.7 * y[1284] * y[627] * y[557]) / (1 + (y[1284] * y[627] * y[557]))
    return (0) - (r192)
 
def C04258(t, y):
    r560 = (13.7 * y[1410] * y[628] * y[0] ) / (1 + (y[1410] * y[628] * y[0] ))
    r562 = (13.7 * y[1410] * y[628] * y[0] ) / (1 + (y[1410] * y[628] * y[0] ))
    return (0) - (r560 + r562)
 
def C04261(t, y):
    r362 = (13.7 * y[1361] * y[71] * y[426]) / (1 + (y[1361] * y[71] * y[426]))
    r363 = (13.7 * y[1361] * y[71] * y[426]) / (1 + (y[1361] * y[71] * y[426]))
    r317 = (13.7 * y[1338] * y[86] * y[629]) / (1 + (y[1338] * y[86] * y[629]))
    return (r362 + r363) - (r317)
 
def C04262(t, y):
    r712 = (13.7 * y[1477] * y[486] * y[426]) / (1 + (y[1477] * y[486] * y[426]))
    r714 = (13.7 * y[1477] * y[486] * y[426]) / (1 + (y[1477] * y[486] * y[426]))
    return (r712 + r714) - (0)
 
def C04272(t, y):
    r83 = (13.7 * y[1248] * y[631] * y[5]) / (1 + (y[1248] * y[631] * y[5]))
    r85 = (13.7 * y[1248] * y[631] * y[5]) / (1 + (y[1248] * y[631] * y[5]))
    r640 = (13.7 * y[1447] * y[631]) / (1 + (y[1447] * y[631]))
    return (0) - (r83 + r85 + r640)
 
def C04281(t, y):
    r149 = (13.7 * y[1265] * y[485] * y[2]) / (1 + (y[1265] * y[485] * y[2]))
    r150 = (13.7 * y[1265] * y[485] * y[5]) / (1 + (y[1265] * y[485] * y[5]))
    return (r149 + r150) - (0)
 
def C04294(t, y):
    r580 = (13.7 * y[1422] * y[354] * y[0]) / (1 + (y[1422] * y[354] * y[0]))
    r346 = (13.7 * y[1351] * y[1] * y[633]) / (1 + (y[1351] * y[1] * y[633]))
    return (r580) - (r346)
 
def C04309(t, y):
    r607 = (13.7 * y[1440] * y[584]) / (1 + (y[1440] * y[584]))
    return (r607) - (0)
 
def C04327(t, y):
    r346 = (13.7 * y[1351] * y[1] * y[633]) / (1 + (y[1351] * y[1] * y[633]))
    r275 = (13.7 * y[1321] * y[666] * y[635]) / (1 + (y[1321] * y[666] * y[635]))
    return (r346) - (r275)
 
def C04332(t, y):
    r285 = (13.7 * y[1325] * y[662] * y[805]) / (1 + (y[1325] * y[662] * y[805]))
    r286 = (13.7 * y[1326] * y[636]) / (1 + (y[1326] * y[636]))
    return (r285) - (r286)
 
def C04341(t, y):
    r235 = (13.7 * y[1301] * y[23] * y[604]) / (1 + (y[1301] * y[23] * y[604]))
    return (r235) - (0)
 
def C04352(t, y):
    r241 = (13.7 * y[1511] * y[60] * y[589] * y[94]) / (1 + (y[1511] * y[60] * y[589] * y[94]))
    r325 = (13.7 * y[1344] * y[1] * y[614]) / (1 + (y[1344] * y[1] * y[614]))
    r599 = (13.7 * y[1434] * y[638]) / (1 + (y[1434] * y[638]))
    return (r241 + r325) - (r599)
 
def C04376(t, y):
    r195 = (13.7 * y[1286] * y[228] * y[605]) / (1 + (y[1286] * y[228] * y[605]))
    r196 = (13.7 * y[1286] * y[605] * y[398] * y[0]) / (1 + (y[1286] * y[605] * y[398] * y[0]))
    r815 = (13.7 * y[1528] * y[1] * y[639] * y[61] * y[0]) / (1 + (y[1528] * y[1] * y[639] * y[61] * y[0]))
    r816 = (13.7 * y[1528] * y[1] * y[639] * y[61] * y[0]) / (1 + (y[1528] * y[1] * y[639] * y[61] * y[0]))
    r817 = (13.7 * y[1528] * y[1] * y[639] * y[61] * y[0]) / (1 + (y[1528] * y[1] * y[639] * y[61] * y[0]))
    return (r195 + r196) - (r815 + r816 + r817)
 
def C04377(t, y):
    r194 = (13.7 * y[1285] * y[62] * y[495]) / (1 + (y[1285] * y[62] * y[495]))
    return (r194) - (0)
 
def C04405(t, y):
    r56 = (13.7 * y[1242] * y[641] * y[2] ) / (1 + (y[1242] * y[641] * y[2] ))
    return (0) - (r56)
 
def C04411(t, y):
    r80 = (13.7 * y[1247] * y[642] * y[2]) / (1 + (y[1247] * y[642] * y[2]))
    r81 = (13.7 * y[1247] * y[642] * y[2]) / (1 + (y[1247] * y[642] * y[2]))
    r612 = (13.7 * y[1444] * y[642]) / (1 + (y[1444] * y[642]))
    r613 = (13.7 * y[1444] * y[642]) / (1 + (y[1444] * y[642]))
    r615 = (13.7 * y[1444] * y[642]) / (1 + (y[1444] * y[642]))
    r616 = (13.7 * y[1444] * y[642]) / (1 + (y[1444] * y[642]))
    return (0) - (r80 + r81 + r612 + r613 + r615 + r616)
 
def C04419(t, y):
    r794 = (13.7 * y[1518] * y[1] * y[763] * y[273]) / (1 + (y[1518] * y[1] * y[763] * y[273]))
    r199 = (13.7 * y[1289] * y[23] * y[643]) / (1 + (y[1289] * y[23] * y[643]))
    return (r794) - (r199)
 
def C04432(t, y):
    r284 = (13.7 * y[1324] * y[229] * y[852]) / (1 + (y[1324] * y[229] * y[852]))
    return (r284) - (0)
 
def C04454(t, y):
    r41 = (13.7 * y[1236] * y[645] * y[5]) / (1 + (y[1236] * y[645] * y[5]))
    return (0) - (r41)
 
def C04489(t, y):
    r183 = (13.7 * y[1275] * y[646] * y[150]) / (1 + (y[1275] * y[646] * y[150]))
    r184 = (13.7 * y[1275] * y[712] * y[646]) / (1 + (y[1275] * y[712] * y[646]))
    return (0) - (r183 + r184)
 
def C04494(t, y):
    r399 = (13.7 * y[1374] * y[1] * y[43]) / (1 + (y[1374] * y[1] * y[43]))
    return (r399) - (0)
 
def C04501(t, y):
    r220 = (13.7 * y[1297] * y[23] * y[759]) / (1 + (y[1297] * y[23] * y[759]))
    r404 = (13.7 * y[1378] * y[72] * y[648]) / (1 + (y[1378] * y[72] * y[648]))
    return (r220) - (r404)
 
def C04556(t, y):
    r344 = (13.7 * y[1350] * y[1] * y[504]) / (1 + (y[1350] * y[1] * y[504]))
    r345 = (13.7 * y[1350] * y[1] * y[504]) / (1 + (y[1350] * y[1] * y[504]))
    r388 = (13.7 * y[1368] * y[1] * y[649]) / (1 + (y[1368] * y[1] * y[649]))
    r389 = (13.7 * y[1368] * y[1] * y[649]) / (1 + (y[1368] * y[1] * y[649]))
    return (r344 + r345) - (r388 + r389)
 
def C04574(t, y):
    r583 = (13.7 * y[1424] * y[650] * y[0]) / (1 + (y[1424] * y[650] * y[0]))
    return (0) - (r583)
 
def C04618(t, y):
    r620 = (13.7 * y[1446] * y[651]) / (1 + (y[1446] * y[651]))
    r630 = (13.7 * y[1446] * y[651]) / (1 + (y[1446] * y[651]))
    return (0) - (r620 + r630)
 
def C04619(t, y):
    r621 = (13.7 * y[1446] * y[652]) / (1 + (y[1446] * y[652]))
    r631 = (13.7 * y[1446] * y[652]) / (1 + (y[1446] * y[652]))
    return (0) - (r621 + r631)
 
def C04620(t, y):
    r622 = (13.7 * y[1446] * y[653]) / (1 + (y[1446] * y[653]))
    r632 = (13.7 * y[1446] * y[653]) / (1 + (y[1446] * y[653]))
    return (0) - (r622 + r632)
 
def C04631(t, y):
    r142 = (13.7 * y[1263] * y[474] * y[5]) / (1 + (y[1263] * y[474] * y[5]))
    r143 = (13.7 * y[1263] * y[474] * y[2]) / (1 + (y[1263] * y[474] * y[2]))
    return (r142 + r143) - (0)
 
def C04633(t, y):
    r623 = (13.7 * y[1446] * y[655]) / (1 + (y[1446] * y[655]))
    r633 = (13.7 * y[1446] * y[655]) / (1 + (y[1446] * y[655]))
    return (0) - (r623 + r633)
 
def C04640(t, y):
    r815 = (13.7 * y[1528] * y[1] * y[639] * y[61] * y[0]) / (1 + (y[1528] * y[1] * y[639] * y[61] * y[0]))
    r816 = (13.7 * y[1528] * y[1] * y[639] * y[61] * y[0]) / (1 + (y[1528] * y[1] * y[639] * y[61] * y[0]))
    r817 = (13.7 * y[1528] * y[1] * y[639] * y[61] * y[0]) / (1 + (y[1528] * y[1] * y[639] * y[61] * y[0]))
    r791 = (13.7 * y[1515] * y[1] * y[656]) / (1 + (y[1515] * y[1] * y[656]))
    return (r815 + r816 + r817) - (r791)
 
def C04646(t, y):
    r267 = (13.7 * y[1317] * y[540] * y[115]) / (1 + (y[1317] * y[540] * y[115]))
    r589 = (13.7 * y[1427] * y[840] * y[0]) / (1 + (y[1427] * y[840] * y[0]))
    return (r267 + r589) - (0)
 
def C04666(t, y):
    r658 = (13.7 * y[1454] * y[678] * y[61]) / (1 + (y[1454] * y[678] * y[61]))
    r659 = (13.7 * y[1454] * y[678] * y[13]) / (1 + (y[1454] * y[678] * y[13]))
    r661 = (13.7 * y[1454] * y[678] * y[61]) / (1 + (y[1454] * y[678] * y[61]))
    r662 = (13.7 * y[1454] * y[678] * y[13]) / (1 + (y[1454] * y[678] * y[13]))
    r664 = (13.7 * y[1454] * y[678] * y[61]) / (1 + (y[1454] * y[678] * y[61]))
    r665 = (13.7 * y[1454] * y[678] * y[13]) / (1 + (y[1454] * y[678] * y[13]))
    r609 = (13.7 * y[1442] * y[658]) / (1 + (y[1442] * y[658]))
    return (r658 + r659 + r661 + r662 + r664 + r665) - (r609)
 
def C04677(t, y):
    r658 = (13.7 * y[1454] * y[678] * y[61]) / (1 + (y[1454] * y[678] * y[61]))
    r659 = (13.7 * y[1454] * y[678] * y[13]) / (1 + (y[1454] * y[678] * y[13]))
    r661 = (13.7 * y[1454] * y[678] * y[61]) / (1 + (y[1454] * y[678] * y[61]))
    r662 = (13.7 * y[1454] * y[678] * y[13]) / (1 + (y[1454] * y[678] * y[13]))
    r664 = (13.7 * y[1454] * y[678] * y[61]) / (1 + (y[1454] * y[678] * y[61]))
    r665 = (13.7 * y[1454] * y[678] * y[13]) / (1 + (y[1454] * y[678] * y[13]))
    r667 = (13.7 * y[1455] * y[669]) / (1 + (y[1455] * y[669]))
    r197 = (13.7 * y[1287] * y[228] * y[659]) / (1 + (y[1287] * y[228] * y[659]))
    r263 = (13.7 * y[1316] * y[659] * y[12]) / (1 + (y[1316] * y[659] * y[12]))
    return (r658 + r659 + r661 + r662 + r664 + r665 + r667) - (r197 + r263)
 
def C04688(t, y):
    r624 = (13.7 * y[1446] * y[660]) / (1 + (y[1446] * y[660]))
    r634 = (13.7 * y[1446] * y[660]) / (1 + (y[1446] * y[660]))
    return (0) - (r624 + r634)
 
def C04702(t, y):
    r785 = (13.7 * y[1509] * y[1] * y[740] * y[1593]) / (1 + (y[1509] * y[1] * y[740] * y[1593]))
    r484 = (13.7 * y[1388] * y[661] * y[853]) / (1 + (y[1388] * y[661] * y[853]))
    return (r785) - (r484)
 
def C04732(t, y):
    r286 = (13.7 * y[1326] * y[636]) / (1 + (y[1326] * y[636]))
    r285 = (13.7 * y[1325] * y[662] * y[805]) / (1 + (y[1325] * y[662] * y[805]))
    return (r286) - (r285)
 
def C04734(t, y):
    r197 = (13.7 * y[1287] * y[228] * y[659]) / (1 + (y[1287] * y[228] * y[659]))
    r569 = (13.7 * y[1415] * y[126] * y[0]) / (1 + (y[1415] * y[126] * y[0]))
    return (r197 + r569) - (0)
 
def C04737(t, y):
    r516 = (13.7 * y[1402] * y[664] * y[0]) / (1 + (y[1402] * y[664] * y[0]))
    return (0) - (r516)
 
def C04751(t, y):
    r719 = (13.7 * y[1480] * y[809]) / (1 + (y[1480] * y[809]))
    r596 = (13.7 * y[1431] * y[665]) / (1 + (y[1431] * y[665]))
    r788 = (13.7 * y[1512] * y[1] * y[665] * y[48]) / (1 + (y[1512] * y[1] * y[665] * y[48]))
    return (r719) - (r596 + r788)
 
def C04752(t, y):
    r388 = (13.7 * y[1368] * y[1] * y[649]) / (1 + (y[1368] * y[1] * y[649]))
    r389 = (13.7 * y[1368] * y[1] * y[649]) / (1 + (y[1368] * y[1] * y[649]))
    r275 = (13.7 * y[1321] * y[666] * y[635]) / (1 + (y[1321] * y[666] * y[635]))
    r276 = (13.7 * y[1321] * y[666] * y[867]) / (1 + (y[1321] * y[666] * y[867]))
    r277 = (13.7 * y[1321] * y[666] * y[866]) / (1 + (y[1321] * y[666] * y[866]))
    return (r388 + r389) - (r275 + r276 + r277)
 
def C04756(t, y):
    r509 = (13.7 * y[1401] * y[667] * y[0] ) / (1 + (y[1401] * y[667] * y[0] ))
    return (0) - (r509)
 
def C04807(t, y):
    r398 = (13.7 * y[1373] * y[1] * y[506]) / (1 + (y[1373] * y[1] * y[506]))
    r272 = (13.7 * y[1319] * y[668] * y[419]) / (1 + (y[1319] * y[668] * y[419]))
    return (r398) - (r272)
 
def C04823(t, y):
    r788 = (13.7 * y[1512] * y[1] * y[665] * y[48]) / (1 + (y[1512] * y[1] * y[665] * y[48]))
    r667 = (13.7 * y[1455] * y[669]) / (1 + (y[1455] * y[669]))
    return (r788) - (r667)
 
def C04851(t, y):
    r484 = (13.7 * y[1388] * y[661] * y[853]) / (1 + (y[1388] * y[661] * y[853]))
    r251 = (13.7 * y[1311] * y[670] * y[42]) / (1 + (y[1311] * y[670] * y[42]))
    return (r484) - (r251)
 
def C04856(t, y):
    r684 = (13.7 * y[1467] * y[878]) / (1 + (y[1467] * y[878]))
    return (r684) - (0)
 
def C04874(t, y):
    r601 = (13.7 * y[1436] * y[672]) / (1 + (y[1436] * y[672]))
    return (0) - (r601)
 
def C04877(t, y):
    r787 = (13.7 * y[1510] * y[1] * y[444] * y[439]) / (1 + (y[1510] * y[1] * y[444] * y[439]))
    r786 = (13.7 * y[1509] * y[1] * y[673] * y[1593]) / (1 + (y[1509] * y[1] * y[673] * y[1593]))
    return (r787) - (r786)
 
def C04882(t, y):
    r786 = (13.7 * y[1509] * y[1] * y[673] * y[1593]) / (1 + (y[1509] * y[1] * y[673] * y[1593]))
    r485 = (13.7 * y[1388] * y[674] * y[853]) / (1 + (y[1388] * y[674] * y[853]))
    return (r786) - (r485)
 
def C04895(t, y):
    r570 = (13.7 * y[1416] * y[43] * y[0]) / (1 + (y[1416] * y[43] * y[0]))
    r572 = (13.7 * y[1416] * y[675] * y[0]) / (1 + (y[1416] * y[675] * y[0]))
    return (r570) - (r572)
 
def C04896(t, y):
    r575 = (13.7 * y[1417] * y[556] * y[0]) / (1 + (y[1417] * y[556] * y[0]))
    r691 = (13.7 * y[1470] * y[676]) / (1 + (y[1470] * y[676]))
    return (r575) - (r691)
 
def C04899(t, y):
    r685 = (13.7 * y[1467] * y[879]) / (1 + (y[1467] * y[879]))
    return (r685) - (0)
 
def C04916(t, y):
    r691 = (13.7 * y[1470] * y[676]) / (1 + (y[1470] * y[676]))
    r658 = (13.7 * y[1454] * y[678] * y[61]) / (1 + (y[1454] * y[678] * y[61]))
    r659 = (13.7 * y[1454] * y[678] * y[13]) / (1 + (y[1454] * y[678] * y[13]))
    r661 = (13.7 * y[1454] * y[678] * y[61]) / (1 + (y[1454] * y[678] * y[61]))
    r662 = (13.7 * y[1454] * y[678] * y[13]) / (1 + (y[1454] * y[678] * y[13]))
    r664 = (13.7 * y[1454] * y[678] * y[61]) / (1 + (y[1454] * y[678] * y[61]))
    r665 = (13.7 * y[1454] * y[678] * y[13]) / (1 + (y[1454] * y[678] * y[13]))
    return (r691) - (r658 + r659 + r661 + r662 + r664 + r665)
 
def C05125(t, y):
    r210 = (13.7 * y[1293] * y[21] * y[65]) / (1 + (y[1293] * y[21] * y[65]))
    r211 = (13.7 * y[1293] * y[462] * y[65]) / (1 + (y[1293] * y[462] * y[65]))
    r212 = (13.7 * y[1293] * y[750] * y[65]) / (1 + (y[1293] * y[750] * y[65]))
    r213 = (13.7 * y[1293] * y[106] * y[679]) / (1 + (y[1293] * y[106] * y[679]))
    return (r210 + r211 + r212) - (r213)
 
def C05167(t, y):
    r649 = (13.7 * y[1450] * y[680]) / (1 + (y[1450] * y[680]))
    r654 = (13.7 * y[1451] * y[680]) / (1 + (y[1451] * y[680]))
    return (0) - (r649 + r654)
 
def C05198(t, y):
    r605 = (13.7 * y[1439] * y[43] * y[18] * y[29]) / (1 + (y[1439] * y[43] * y[18] * y[29]))
    r546 = (13.7 * y[1406] * y[681] * y[0] ) / (1 + (y[1406] * y[681] * y[0] ))
    return (r605) - (r546)
 
def C05223(t, y):
    r135 = (13.7 * y[1262] * y[682] * y[2]) / (1 + (y[1262] * y[682] * y[2]))
    r223 = (13.7 * y[1298] * y[682] * y[493]) / (1 + (y[1298] * y[682] * y[493]))
    return (0) - (r135 + r223)
 
def C05235(t, y):
    r78 = (13.7 * y[1246] * y[422] * y[2]) / (1 + (y[1246] * y[422] * y[2]))
    return (r78) - (0)
 
def C05258(t, y):
    r57 = (13.7 * y[1242] * y[684] * y[2]) / (1 + (y[1242] * y[684] * y[2]))
    return (0) - (r57)
 
def C05259(t, y):
    r57 = (13.7 * y[1242] * y[684] * y[2]) / (1 + (y[1242] * y[684] * y[2]))
    return (r57) - (0)
 
def C05260(t, y):
    r58 = (13.7 * y[1242] * y[686] * y[2]) / (1 + (y[1242] * y[686] * y[2]))
    return (0) - (r58)
 
def C05261(t, y):
    r58 = (13.7 * y[1242] * y[686] * y[2]) / (1 + (y[1242] * y[686] * y[2]))
    return (r58) - (0)
 
def C05262(t, y):
    r59 = (13.7 * y[1242] * y[688] * y[2]) / (1 + (y[1242] * y[688] * y[2]))
    return (0) - (r59)
 
def C05263(t, y):
    r59 = (13.7 * y[1242] * y[688] * y[2]) / (1 + (y[1242] * y[688] * y[2]))
    return (r59) - (0)
 
def C05264(t, y):
    r60 = (13.7 * y[1242] * y[690] * y[2]) / (1 + (y[1242] * y[690] * y[2]))
    return (0) - (r60)
 
def C05265(t, y):
    r60 = (13.7 * y[1242] * y[690] * y[2]) / (1 + (y[1242] * y[690] * y[2]))
    return (r60) - (0)
 
def C05266(t, y):
    r61 = (13.7 * y[1242] * y[692] * y[2]) / (1 + (y[1242] * y[692] * y[2]))
    return (0) - (r61)
 
def C05267(t, y):
    r61 = (13.7 * y[1242] * y[692] * y[2]) / (1 + (y[1242] * y[692] * y[2]))
    return (r61) - (0)
 
def C05268(t, y):
    r62 = (13.7 * y[1242] * y[694] * y[2]) / (1 + (y[1242] * y[694] * y[2]))
    return (0) - (r62)
 
def C05269(t, y):
    r62 = (13.7 * y[1242] * y[694] * y[2]) / (1 + (y[1242] * y[694] * y[2]))
    r249 = (13.7 * y[1309] * y[23] * y[132]) / (1 + (y[1309] * y[23] * y[132]))
    return (r62 + r249) - (0)
 
def C05335(t, y):
    r184 = (13.7 * y[1275] * y[712] * y[646]) / (1 + (y[1275] * y[712] * y[646]))
    r283 = (13.7 * y[1323] * y[1] * y[696] * y[0]) / (1 + (y[1323] * y[1] * y[696] * y[0]))
    r726 = (13.7 * y[1485] * y[1] * y[696] * y[1542]) / (1 + (y[1485] * y[1] * y[696] * y[1542]))
    return (r184) - (r283 + r726)
 
def C05345(t, y):
    r329 = (13.7 * y[1347] * y[1] * y[92]) / (1 + (y[1347] * y[1] * y[92]))
    r330 = (13.7 * y[1347] * y[1] * y[536]) / (1 + (y[1347] * y[1] * y[536]))
    r698 = (13.7 * y[1473] * y[435]) / (1 + (y[1473] * y[435]))
    r701 = (13.7 * y[1473] * y[490]) / (1 + (y[1473] * y[490]))
    r703 = (13.7 * y[1473] * y[435]) / (1 + (y[1473] * y[435]))
    r706 = (13.7 * y[1473] * y[490]) / (1 + (y[1473] * y[490]))
    r204 = (13.7 * y[1292] * y[697] * y[114]) / (1 + (y[1292] * y[697] * y[114]))
    return (r329 + r330 + r698 + r701 + r703 + r706) - (r204)
 
def C05382(t, y):
    r205 = (13.7 * y[1292] * y[794] * y[113]) / (1 + (y[1292] * y[794] * y[113]))
    r202 = (13.7 * y[1292] * y[698] * y[114]) / (1 + (y[1292] * y[698] * y[114]))
    r207 = (13.7 * y[1292] * y[698] * y[65]) / (1 + (y[1292] * y[698] * y[65]))
    return (r205) - (r202 + r207)
 
def C05399(t, y):
    r515 = (13.7 * y[1402] * y[699] * y[0]) / (1 + (y[1402] * y[699] * y[0]))
    return (0) - (r515)
 
def C05400(t, y):
    r514 = (13.7 * y[1402] * y[700] * y[0]) / (1 + (y[1402] * y[700] * y[0]))
    return (0) - (r514)
 
def C05401(t, y):
    r512 = (13.7 * y[1402] * y[701] * y[0]) / (1 + (y[1402] * y[701] * y[0]))
    return (0) - (r512)
 
def C05402(t, y):
    r520 = (13.7 * y[1402] * y[703] * y[0]) / (1 + (y[1402] * y[703] * y[0]))
    r531 = (13.7 * y[1403] * y[408] * y[0]) / (1 + (y[1403] * y[408] * y[0]))
    r510 = (13.7 * y[1402] * y[702] * y[0]) / (1 + (y[1402] * y[702] * y[0]))
    return (r520 + r531) - (r510)
 
def C05404(t, y):
    r532 = (13.7 * y[1403] * y[517] * y[0]) / (1 + (y[1403] * y[517] * y[0]))
    r520 = (13.7 * y[1402] * y[703] * y[0]) / (1 + (y[1402] * y[703] * y[0]))
    return (r532) - (r520)
 
def C05444(t, y):
    r5 = (13.7 * y[1233] * y[704] * y[2]) / (1 + (y[1233] * y[704] * y[2]))
    r24 = (13.7 * y[1233] * y[704] * y[2]) / (1 + (y[1233] * y[704] * y[2]))
    return (0) - (r5 + r24)
 
def C05445(t, y):
    r5 = (13.7 * y[1233] * y[704] * y[2]) / (1 + (y[1233] * y[704] * y[2]))
    r24 = (13.7 * y[1233] * y[704] * y[2]) / (1 + (y[1233] * y[704] * y[2]))
    return (r5 + r24) - (0)
 
def C05526(t, y):
    r169 = (13.7 * y[1270] * y[94] * y[50] * y[5]) / (1 + (y[1270] * y[94] * y[50] * y[5]))
    return (r169) - (0)
 
def C05539(t, y):
    r246 = (13.7 * y[1308] * y[611] * y[23] * y[0]) / (1 + (y[1308] * y[611] * y[23] * y[0]))
    return (r246) - (0)
 
def C05576(t, y):
    r6 = (13.7 * y[1233] * y[708] * y[2]) / (1 + (y[1233] * y[708] * y[2]))
    r25 = (13.7 * y[1233] * y[708] * y[2]) / (1 + (y[1233] * y[708] * y[2]))
    return (0) - (r6 + r25)
 
def C05577(t, y):
    r6 = (13.7 * y[1233] * y[708] * y[2]) / (1 + (y[1233] * y[708] * y[2]))
    r25 = (13.7 * y[1233] * y[708] * y[2]) / (1 + (y[1233] * y[708] * y[2]))
    return (r6 + r25) - (0)
 
def C05684(t, y):
    r170 = (13.7 * y[1270] * y[513] * y[5] * y[0]) / (1 + (y[1270] * y[513] * y[5] * y[0]))
    return (r170) - (0)
 
def C05688(t, y):
    r279 = (13.7 * y[1322] * y[469] * y[513]) / (1 + (y[1322] * y[469] * y[513]))
    return (r279) - (0)
 
def C05698(t, y):
    r184 = (13.7 * y[1275] * y[712] * y[646]) / (1 + (y[1275] * y[712] * y[646]))
    return (0) - (r184)
 
def C05744(t, y):
    r222 = (13.7 * y[1298] * y[610] * y[493]) / (1 + (y[1298] * y[610] * y[493]))
    r232 = (13.7 * y[1299] * y[23] * y[493]) / (1 + (y[1299] * y[23] * y[493]))
    return (r222 + r232) - (0)
 
def C05745(t, y):
    r134 = (13.7 * y[1262] * y[714] * y[2]) / (1 + (y[1262] * y[714] * y[2]))
    r224 = (13.7 * y[1298] * y[714] * y[493]) / (1 + (y[1298] * y[714] * y[493]))
    return (0) - (r134 + r224)
 
def C05746(t, y):
    r224 = (13.7 * y[1298] * y[714] * y[493]) / (1 + (y[1298] * y[714] * y[493]))
    return (r224) - (0)
 
def C05747(t, y):
    r625 = (13.7 * y[1446] * y[716]) / (1 + (y[1446] * y[716]))
    r635 = (13.7 * y[1446] * y[716]) / (1 + (y[1446] * y[716]))
    return (0) - (r625 + r635)
 
def C05748(t, y):
    r136 = (13.7 * y[1262] * y[718] * y[2]) / (1 + (y[1262] * y[718] * y[2]))
    r625 = (13.7 * y[1446] * y[716]) / (1 + (y[1446] * y[716]))
    r635 = (13.7 * y[1446] * y[716]) / (1 + (y[1446] * y[716]))
    return (r136 + r625 + r635) - (0)
 
def C05749(t, y):
    r136 = (13.7 * y[1262] * y[718] * y[2]) / (1 + (y[1262] * y[718] * y[2]))
    r225 = (13.7 * y[1298] * y[718] * y[493]) / (1 + (y[1298] * y[718] * y[493]))
    return (0) - (r136 + r225)
 
def C05750(t, y):
    r225 = (13.7 * y[1298] * y[718] * y[493]) / (1 + (y[1298] * y[718] * y[493]))
    return (r225) - (0)
 
def C05751(t, y):
    r137 = (13.7 * y[1262] * y[721] * y[2]) / (1 + (y[1262] * y[721] * y[2]))
    r622 = (13.7 * y[1446] * y[653]) / (1 + (y[1446] * y[653]))
    r632 = (13.7 * y[1446] * y[653]) / (1 + (y[1446] * y[653]))
    return (r137 + r622 + r632) - (0)
 
def C05752(t, y):
    r137 = (13.7 * y[1262] * y[721] * y[2]) / (1 + (y[1262] * y[721] * y[2]))
    r226 = (13.7 * y[1298] * y[721] * y[493]) / (1 + (y[1298] * y[721] * y[493]))
    return (0) - (r137 + r226)
 
def C05753(t, y):
    r226 = (13.7 * y[1298] * y[721] * y[493]) / (1 + (y[1298] * y[721] * y[493]))
    return (r226) - (0)
 
def C05754(t, y):
    r138 = (13.7 * y[1262] * y[724] * y[2]) / (1 + (y[1262] * y[724] * y[2]))
    r621 = (13.7 * y[1446] * y[652]) / (1 + (y[1446] * y[652]))
    r631 = (13.7 * y[1446] * y[652]) / (1 + (y[1446] * y[652]))
    return (r138 + r621 + r631) - (0)
 
def C05755(t, y):
    r138 = (13.7 * y[1262] * y[724] * y[2]) / (1 + (y[1262] * y[724] * y[2]))
    r227 = (13.7 * y[1298] * y[724] * y[493]) / (1 + (y[1298] * y[724] * y[493]))
    return (0) - (r138 + r227)
 
def C05756(t, y):
    r227 = (13.7 * y[1298] * y[724] * y[493]) / (1 + (y[1298] * y[724] * y[493]))
    return (r227) - (0)
 
def C05757(t, y):
    r626 = (13.7 * y[1446] * y[726]) / (1 + (y[1446] * y[726]))
    r636 = (13.7 * y[1446] * y[726]) / (1 + (y[1446] * y[726]))
    return (0) - (r626 + r636)
 
def C05758(t, y):
    r135 = (13.7 * y[1262] * y[682] * y[2]) / (1 + (y[1262] * y[682] * y[2]))
    r626 = (13.7 * y[1446] * y[726]) / (1 + (y[1446] * y[726]))
    r636 = (13.7 * y[1446] * y[726]) / (1 + (y[1446] * y[726]))
    return (r135 + r626 + r636) - (0)
 
def C05759(t, y):
    r223 = (13.7 * y[1298] * y[682] * y[493]) / (1 + (y[1298] * y[682] * y[493]))
    return (r223) - (0)
 
def C05760(t, y):
    r139 = (13.7 * y[1262] * y[730] * y[2]) / (1 + (y[1262] * y[730] * y[2]))
    r624 = (13.7 * y[1446] * y[660]) / (1 + (y[1446] * y[660]))
    r634 = (13.7 * y[1446] * y[660]) / (1 + (y[1446] * y[660]))
    return (r139 + r624 + r634) - (0)
 
def C05761(t, y):
    r139 = (13.7 * y[1262] * y[730] * y[2]) / (1 + (y[1262] * y[730] * y[2]))
    r228 = (13.7 * y[1298] * y[730] * y[493]) / (1 + (y[1298] * y[730] * y[493]))
    return (0) - (r139 + r228)
 
def C05762(t, y):
    r228 = (13.7 * y[1298] * y[730] * y[493]) / (1 + (y[1298] * y[730] * y[493]))
    return (r228) - (0)
 
def C05763(t, y):
    r140 = (13.7 * y[1262] * y[733] * y[2] ) / (1 + (y[1262] * y[733] * y[2] ))
    r623 = (13.7 * y[1446] * y[655]) / (1 + (y[1446] * y[655]))
    r633 = (13.7 * y[1446] * y[655]) / (1 + (y[1446] * y[655]))
    return (r140 + r623 + r633) - (0)
 
def C05764(t, y):
    r140 = (13.7 * y[1262] * y[733] * y[2] ) / (1 + (y[1262] * y[733] * y[2] ))
    r229 = (13.7 * y[1298] * y[733] * y[493]) / (1 + (y[1298] * y[733] * y[493]))
    return (0) - (r140 + r229)
 
def C05778(t, y):
    r182 = (13.7 * y[1274] * y[18] * y[544]) / (1 + (y[1274] * y[18] * y[544]))
    return (r182) - (0)
 
def C05817(t, y):
    r608 = (13.7 * y[1441] * y[554] * y[0]) / (1 + (y[1441] * y[554] * y[0]))
    return (r608) - (0)
 
def C05819(t, y):
    r159 = (13.7 * y[1267] * y[454] * y[77] * y[3]) / (1 + (y[1267] * y[454] * y[77] * y[3]))
    r185 = (13.7 * y[1276] * y[862] * y[18]) / (1 + (y[1276] * y[862] * y[18]))
    return (r159 + r185) - (0)
 
def C05823(t, y):
    r47 = (13.7 * y[1238] * y[737] * y[2]) / (1 + (y[1238] * y[737] * y[2]))
    return (0) - (r47)
 
def C05841(t, y):
    r543 = (13.7 * y[1405] * y[738] * y[0]) / (1 + (y[1405] * y[738] * y[0]))
    return (0) - (r543)
 
def C05850(t, y):
    r160 = (13.7 * y[1267] * y[518] * y[3] * y[77]) / (1 + (y[1267] * y[518] * y[3] * y[77]))
    return (r160) - (0)
 
def C05892(t, y):
    r785 = (13.7 * y[1509] * y[1] * y[740] * y[1593]) / (1 + (y[1509] * y[1] * y[740] * y[1593]))
    return (0) - (r785)
 
def C05893(t, y):
    r251 = (13.7 * y[1311] * y[670] * y[42]) / (1 + (y[1311] * y[670] * y[42]))
    return (r251) - (0)
 
def C05897(t, y):
    r485 = (13.7 * y[1388] * y[674] * y[853]) / (1 + (y[1388] * y[674] * y[853]))
    r253 = (13.7 * y[1311] * y[742] * y[42]) / (1 + (y[1311] * y[742] * y[42]))
    return (r485) - (r253)
 
def C05898(t, y):
    r253 = (13.7 * y[1311] * y[742] * y[42]) / (1 + (y[1311] * y[742] * y[42]))
    return (r253) - (0)
 
def C05921(t, y):
    r796 = (13.7 * y[1519] * y[1] * y[1596]) / (1 + (y[1519] * y[1] * y[1596]))
    r799 = (13.7 * y[1519] * y[1] * y[116]) / (1 + (y[1519] * y[1] * y[116]))
    r797 = (13.7 * y[1519] * y[744] * y[762]) / (1 + (y[1519] * y[744] * y[762]))
    r800 = (13.7 * y[1519] * y[744] * y[762]) / (1 + (y[1519] * y[744] * y[762]))
    return (r796 + r799) - (r797 + r800)
 
def C05922(t, y):
    r571 = (13.7 * y[1416] * y[43] * y[0]) / (1 + (y[1416] * y[43] * y[0]))
    r573 = (13.7 * y[1416] * y[745] * y[0]) / (1 + (y[1416] * y[745] * y[0]))
    return (r571) - (r573)
 
def C05923(t, y):
    r573 = (13.7 * y[1416] * y[745] * y[0]) / (1 + (y[1416] * y[745] * y[0]))
    r574 = (13.7 * y[1416] * y[746]) / (1 + (y[1416] * y[746]))
    return (r573) - (r574)
 
def C05984(t, y):
    r46 = (13.7 * y[1238] * y[747] * y[2] ) / (1 + (y[1238] * y[747] * y[2] ))
    return (0) - (r46)
 
def C06006(t, y):
    r213 = (13.7 * y[1293] * y[106] * y[679]) / (1 + (y[1293] * y[106] * y[679]))
    r214 = (13.7 * y[1293] * y[21] * y[106]) / (1 + (y[1293] * y[21] * y[106]))
    r87 = (13.7 * y[1248] * y[748]) / (1 + (y[1248] * y[748]))
    return (r213 + r214) - (r87)
 
def C06007(t, y):
    r86 = (13.7 * y[1248] * y[749] * y[5]) / (1 + (y[1248] * y[749] * y[5]))
    r641 = (13.7 * y[1447] * y[749]) / (1 + (y[1447] * y[749]))
    return (0) - (r86 + r641)
 
def C06010(t, y):
    r83 = (13.7 * y[1248] * y[631] * y[5]) / (1 + (y[1248] * y[631] * y[5]))
    r88 = (13.7 * y[1248] * y[750]) / (1 + (y[1248] * y[750]))
    r209 = (13.7 * y[1293] * y[750] * y[10]) / (1 + (y[1293] * y[750] * y[10]))
    r212 = (13.7 * y[1293] * y[750] * y[65]) / (1 + (y[1293] * y[750] * y[65]))
    r600 = (13.7 * y[1435] * y[750]) / (1 + (y[1435] * y[750]))
    return (r83) - (r88 + r209 + r212 + r600)
 
def C06032(t, y):
    r82 = (13.7 * y[1247] * y[106] * y[10] * y[3] * y[77]) / (1 + (y[1247] * y[106] * y[10] * y[3] * y[77]))
    return (r82) - (0)
 
def C06037(t, y):
    r519 = (13.7 * y[1402] * y[752] * y[0]) / (1 + (y[1402] * y[752] * y[0]))
    return (0) - (r519)
 
def C06054(t, y):
    r298 = (13.7 * y[1330] * y[754] * y[25]) / (1 + (y[1330] * y[754] * y[25]))
    return (r298) - (0)
 
def C06055(t, y):
    r298 = (13.7 * y[1330] * y[754] * y[25]) / (1 + (y[1330] * y[754] * y[25]))
    r643 = (13.7 * y[1448] * y[754] * y[0]) / (1 + (y[1448] * y[754] * y[0]))
    return (0) - (r298 + r643)
 
def C06056(t, y):
    r643 = (13.7 * y[1448] * y[754] * y[0]) / (1 + (y[1448] * y[754] * y[0]))
    return (r643) - (0)
 
def C06060(t, y):
    r568 = (13.7 * y[1414] * y[756] * y[0]) / (1 + (y[1414] * y[756] * y[0]))
    return (0) - (r568)
 
def C06126(t, y):
    r518 = (13.7 * y[1402] * y[757] * y[0] ) / (1 + (y[1402] * y[757] * y[0] ))
    return (0) - (r518)
 
def C06148(t, y):
    r572 = (13.7 * y[1416] * y[675] * y[0]) / (1 + (y[1416] * y[675] * y[0]))
    r574 = (13.7 * y[1416] * y[746]) / (1 + (y[1416] * y[746]))
    return (r572 + r574) - (0)
 
def C06156(t, y):
    r220 = (13.7 * y[1297] * y[23] * y[759]) / (1 + (y[1297] * y[23] * y[759]))
    r711 = (13.7 * y[1476] * y[759]) / (1 + (y[1476] * y[759]))
    return (0) - (r220 + r711)
 
def C06196(t, y):
    r588 = (13.7 * y[1427] * y[509] * y[0]) / (1 + (y[1427] * y[509] * y[0]))
    return (r588) - (0)
 
def C06244(t, y):
    r552 = (13.7 * y[1409] * y[761] * y[0]) / (1 + (y[1409] * y[761] * y[0]))
    return (0) - (r552)
 
def C06249(t, y):
    r797 = (13.7 * y[1519] * y[744] * y[762]) / (1 + (y[1519] * y[744] * y[762]))
    r800 = (13.7 * y[1519] * y[744] * y[762]) / (1 + (y[1519] * y[744] * y[762]))
    return (0) - (r797 + r800)
 
def C06250(t, y):
    r199 = (13.7 * y[1289] * y[23] * y[643]) / (1 + (y[1289] * y[23] * y[643]))
    r797 = (13.7 * y[1519] * y[744] * y[762]) / (1 + (y[1519] * y[744] * y[762]))
    r800 = (13.7 * y[1519] * y[744] * y[762]) / (1 + (y[1519] * y[744] * y[762]))
    r794 = (13.7 * y[1518] * y[1] * y[763] * y[273]) / (1 + (y[1518] * y[1] * y[763] * y[273]))
    return (r199 + r797 + r800) - (r794)
 
def C06423(t, y):
    r771 = (13.7 * y[1507] * y[1] * y[764] * y[1592]) / (1 + (y[1507] * y[1] * y[764] * y[1592]))
    r777 = (13.7 * y[1507] * y[1] * y[764] * y[1592]) / (1 + (y[1507] * y[1] * y[764] * y[1592]))
    r783 = (13.7 * y[1507] * y[1] * y[764] * y[1592]) / (1 + (y[1507] * y[1] * y[764] * y[1592]))
    return (0) - (r771 + r777 + r783)
 
def C06611(t, y):
    r7 = (13.7 * y[1233] * y[765] * y[2]) / (1 + (y[1233] * y[765] * y[2]))
    r26 = (13.7 * y[1233] * y[765] * y[2]) / (1 + (y[1233] * y[765] * y[2]))
    return (0) - (r7 + r26)
 
def C06612(t, y):
    r8 = (13.7 * y[1233] * y[766] * y[2]) / (1 + (y[1233] * y[766] * y[2]))
    r27 = (13.7 * y[1233] * y[766] * y[2]) / (1 + (y[1233] * y[766] * y[2]))
    return (0) - (r8 + r27)
 
def C06613(t, y):
    r7 = (13.7 * y[1233] * y[765] * y[2]) / (1 + (y[1233] * y[765] * y[2]))
    r26 = (13.7 * y[1233] * y[765] * y[2]) / (1 + (y[1233] * y[765] * y[2]))
    return (r7 + r26) - (0)
 
def C06697(t, y):
    r129 = (13.7 * y[1259] * y[784] * y[321]) / (1 + (y[1259] * y[784] * y[321]))
    r130 = (13.7 * y[1259] * y[784] * y[321]) / (1 + (y[1259] * y[784] * y[321]))
    return (r129 + r130) - (0)
 
def C06714(t, y):
    r67 = (13.7 * y[1242] * y[769] * y[2]) / (1 + (y[1242] * y[769] * y[2]))
    return (0) - (r67)
 
def C06715(t, y):
    r67 = (13.7 * y[1242] * y[769] * y[2]) / (1 + (y[1242] * y[769] * y[2]))
    return (r67) - (0)
 
def C06899(t, y):
    r19 = (13.7 * y[1233] * y[771] * y[3] * y[77]) / (1 + (y[1233] * y[771] * y[3] * y[77]))
    r38 = (13.7 * y[1233] * y[771] * y[3] * y[77]) / (1 + (y[1233] * y[771] * y[3] * y[77]))
    return (0) - (r19 + r38)
 
def C07086(t, y):
    r553 = (13.7 * y[1409] * y[548] * y[0]) / (1 + (y[1409] * y[548] * y[0]))
    return (r553) - (0)
 
def C07478(t, y):
    r709 = (13.7 * y[1474] * y[773]) / (1 + (y[1474] * y[773]))
    return (0) - (r709)
 
def C07479(t, y):
    r709 = (13.7 * y[1474] * y[773]) / (1 + (y[1474] * y[773]))
    return (r709) - (0)
 
def C07490(t, y):
    r19 = (13.7 * y[1233] * y[771] * y[3] * y[77]) / (1 + (y[1233] * y[771] * y[3] * y[77]))
    r38 = (13.7 * y[1233] * y[771] * y[3] * y[77]) / (1 + (y[1233] * y[771] * y[3] * y[77]))
    return (r19 + r38) - (0)
 
def C07645(t, y):
    r11 = (13.7 * y[1233] * y[776] * y[3] * y[77]) / (1 + (y[1233] * y[776] * y[3] * y[77]))
    r30 = (13.7 * y[1233] * y[776] * y[3] * y[77]) / (1 + (y[1233] * y[776] * y[3] * y[77]))
    return (0) - (r11 + r30)
 
def C07648(t, y):
    r269 = (13.7 * y[1317] * y[777] * y[115]) / (1 + (y[1317] * y[777] * y[115]))
    return (0) - (r269)
 
def C07649(t, y):
    r257 = (13.7 * y[1312] * y[778] * y[115]) / (1 + (y[1312] * y[778] * y[115]))
    return (0) - (r257)
 
def C08353(t, y):
    r721 = (13.7 * y[1482] * y[779]) / (1 + (y[1482] * y[779]))
    return (0) - (r721)
 
def C08492(t, y):
    r15 = (13.7 * y[1233] * y[823] * y[3] * y[77]) / (1 + (y[1233] * y[823] * y[3] * y[77]))
    r34 = (13.7 * y[1233] * y[823] * y[3] * y[77]) / (1 + (y[1233] * y[823] * y[3] * y[77]))
    return (r15 + r34) - (0)
 
def C09815(t, y):
    r557 = (13.7 * y[1409] * y[781] * y[0]) / (1 + (y[1409] * y[781] * y[0]))
    return (0) - (r557)
 
def C11038(t, y):
    r374 = (13.7 * y[1367] * y[782] * y[1]) / (1 + (y[1367] * y[782] * y[1]))
    return (0) - (r374)
 
def C11039(t, y):
    r374 = (13.7 * y[1367] * y[782] * y[1]) / (1 + (y[1367] * y[782] * y[1]))
    r449 = (13.7 * y[1383] * y[783]) / (1 + (y[1383] * y[783]))
    r455 = (13.7 * y[1383] * y[783]) / (1 + (y[1383] * y[783]))
    r461 = (13.7 * y[1383] * y[783]) / (1 + (y[1383] * y[783]))
    r467 = (13.7 * y[1383] * y[783]) / (1 + (y[1383] * y[783]))
    r473 = (13.7 * y[1383] * y[783]) / (1 + (y[1383] * y[783]))
    r479 = (13.7 * y[1383] * y[783]) / (1 + (y[1383] * y[783]))
    return (r374) - (r449 + r455 + r461 + r467 + r473 + r479)
 
def C11215(t, y):
    r129 = (13.7 * y[1259] * y[784] * y[321]) / (1 + (y[1259] * y[784] * y[321]))
    r130 = (13.7 * y[1259] * y[784] * y[321]) / (1 + (y[1259] * y[784] * y[321]))
    return (0) - (r129 + r130)
 
def C11435(t, y):
    r304 = (13.7 * y[1334] * y[785] * y[1]) / (1 + (y[1334] * y[785] * y[1]))
    return (0) - (r304)
 
def C11436(t, y):
    r304 = (13.7 * y[1334] * y[785] * y[1]) / (1 + (y[1334] * y[785] * y[1]))
    return (r304) - (0)
 
def C11437(t, y):
    r215 = (13.7 * y[1294] * y[21] * y[114]) / (1 + (y[1294] * y[21] * y[114]))
    return (r215) - (0)
 
def C11439(t, y):
    r559 = (13.7 * y[1410] * y[788] * y[0]) / (1 + (y[1410] * y[788] * y[0]))
    return (0) - (r559)
 
def C11440(t, y):
    r559 = (13.7 * y[1410] * y[788] * y[0]) / (1 + (y[1410] * y[788] * y[0]))
    return (r559) - (0)
 
def C11475(t, y):
    r192 = (13.7 * y[1284] * y[627] * y[557]) / (1 + (y[1284] * y[627] * y[557]))
    return (r192) - (0)
 
def C11736(t, y):
    r316 = (13.7 * y[1337] * y[791] * y[1]) / (1 + (y[1337] * y[791] * y[1]))
    return (0) - (r316)
 
def C11838(t, y):
    r670 = (13.7 * y[1457] * y[591]) / (1 + (y[1457] * y[591]))
    return (r670) - (0)
 
def C11907(t, y):
    r617 = (13.7 * y[1445] * y[456]) / (1 + (y[1445] * y[456]))
    r618 = (13.7 * y[1445] * y[456]) / (1 + (y[1445] * y[456]))
    r677 = (13.7 * y[1464] * y[793]) / (1 + (y[1464] * y[793]))
    return (r617 + r618) - (r677)
 
def C12214(t, y):
    r205 = (13.7 * y[1292] * y[794] * y[113]) / (1 + (y[1292] * y[794] * y[113]))
    return (0) - (r205)
 
def C12215(t, y):
    r205 = (13.7 * y[1292] * y[794] * y[113]) / (1 + (y[1292] * y[794] * y[113]))
    return (r205) - (0)
 
def C13378(t, y):
    r206 = (13.7 * y[1292] * y[225] * y[65]) / (1 + (y[1292] * y[225] * y[65]))
    r207 = (13.7 * y[1292] * y[698] * y[65]) / (1 + (y[1292] * y[698] * y[65]))
    return (r206 + r207) - (0)
 
def C14089(t, y):
    r9 = (13.7 * y[1233] * y[797] * y[2]) / (1 + (y[1233] * y[797] * y[2]))
    r28 = (13.7 * y[1233] * y[797] * y[2]) / (1 + (y[1233] * y[797] * y[2]))
    return (0) - (r9 + r28)
 
def C14090(t, y):
    r9 = (13.7 * y[1233] * y[797] * y[2]) / (1 + (y[1233] * y[797] * y[2]))
    r28 = (13.7 * y[1233] * y[797] * y[2]) / (1 + (y[1233] * y[797] * y[2]))
    return (r9 + r28) - (0)
 
def C14099(t, y):
    r10 = (13.7 * y[1233] * y[560] * y[2]) / (1 + (y[1233] * y[560] * y[2]))
    r29 = (13.7 * y[1233] * y[560] * y[2]) / (1 + (y[1233] * y[560] * y[2]))
    return (r10 + r29) - (0)
 
def C14145(t, y):
    r63 = (13.7 * y[1242] * y[800] * y[2]) / (1 + (y[1242] * y[800] * y[2]))
    return (0) - (r63)
 
def C14463(t, y):
    r86 = (13.7 * y[1248] * y[749] * y[5]) / (1 + (y[1248] * y[749] * y[5]))
    r87 = (13.7 * y[1248] * y[748]) / (1 + (y[1248] * y[748]))
    return (r86 + r87) - (0)
 
def C15498(t, y):
    r92 = (13.7 * y[1251] * y[3] * y[802] * y[77]) / (1 + (y[1251] * y[3] * y[802] * y[77]))
    return (0) - (r92)
 
def C15527(t, y):
    r180 = (13.7 * y[1274] * y[18] * y[475]) / (1 + (y[1274] * y[18] * y[475]))
    r181 = (13.7 * y[1274] * y[18] * y[803]) / (1 + (y[1274] * y[18] * y[803]))
    return (r180) - (r181)
 
def C15547(t, y):
    r604 = (13.7 * y[1438] * y[574]) / (1 + (y[1438] * y[574]))
    return (r604) - (0)
 
def C15556(t, y):
    r285 = (13.7 * y[1325] * y[662] * y[805]) / (1 + (y[1325] * y[662] * y[805]))
    return (0) - (r285)
 
def C15603(t, y):
    r158 = (13.7 * y[1267] * y[3] * y[77] * y[1536]) / (1 + (y[1267] * y[3] * y[77] * y[1536]))
    r162 = (13.7 * y[1267] * y[4] * y[77] * y[1536]) / (1 + (y[1267] * y[4] * y[77] * y[1536]))
    return (r158 + r162) - (0)
 
def C15647(t, y):
    r509 = (13.7 * y[1401] * y[667] * y[0] ) / (1 + (y[1401] * y[667] * y[0] ))
    return (r509) - (0)
 
def C15653(t, y):
    r176 = (13.7 * y[1272] * y[567] * y[322] * y[0]) / (1 + (y[1272] * y[567] * y[322] * y[0]))
    return (r176) - (0)
 
def C15667(t, y):
    r801 = (13.7 * y[1520] * y[1] * y[585] * y[273]) / (1 + (y[1520] * y[1] * y[585] * y[273]))
    r719 = (13.7 * y[1480] * y[809]) / (1 + (y[1480] * y[809]))
    return (r801) - (r719)
 
def C15811(t, y):
    r488 = (13.7 * y[1391] * y[460] * y[811] * y[1]) / (1 + (y[1391] * y[460] * y[811] * y[1]))
    r490 = (13.7 * y[1392] * y[811] * y[812] * y[29]) / (1 + (y[1392] * y[811] * y[812] * y[29]))
    r493 = (13.7 * y[1393] * y[811] * y[557]) / (1 + (y[1393] * y[811] * y[557]))
    r491 = (13.7 * y[1393] * y[810] * y[94]) / (1 + (y[1393] * y[810] * y[94]))
    return (r488 + r490 + r493) - (r491)
 
def C15812(t, y):
    r491 = (13.7 * y[1393] * y[810] * y[94]) / (1 + (y[1393] * y[810] * y[94]))
    r488 = (13.7 * y[1391] * y[460] * y[811] * y[1]) / (1 + (y[1391] * y[460] * y[811] * y[1]))
    r490 = (13.7 * y[1392] * y[811] * y[812] * y[29]) / (1 + (y[1392] * y[811] * y[812] * y[29]))
    r493 = (13.7 * y[1393] * y[811] * y[557]) / (1 + (y[1393] * y[811] * y[557]))
    return (r491) - (r488 + r490 + r493)
 
def C15813(t, y):
    r490 = (13.7 * y[1392] * y[811] * y[812] * y[29]) / (1 + (y[1392] * y[811] * y[812] * y[29]))
    return (0) - (r490)
 
def C15814(t, y):
    r490 = (13.7 * y[1392] * y[811] * y[812] * y[29]) / (1 + (y[1392] * y[811] * y[812] * y[29]))
    return (r490) - (0)
 
def C15972(t, y):
    r166 = (13.7 * y[1269] * y[815] * y[2]) / (1 + (y[1269] * y[815] * y[2]))
    r768 = (13.7 * y[1507] * y[1] * y[822] * y[1592]) / (1 + (y[1507] * y[1] * y[822] * y[1592]))
    r774 = (13.7 * y[1507] * y[1] * y[822] * y[1592]) / (1 + (y[1507] * y[1] * y[822] * y[1592]))
    r780 = (13.7 * y[1507] * y[1] * y[822] * y[1592]) / (1 + (y[1507] * y[1] * y[822] * y[1592]))
    return (r166 + r768 + r774 + r780) - (0)
 
def C15973(t, y):
    r166 = (13.7 * y[1269] * y[815] * y[2]) / (1 + (y[1269] * y[815] * y[2]))
    return (0) - (r166)
 
def C15999(t, y):
    r173 = (13.7 * y[1271] * y[70] * y[322] * y[0]) / (1 + (y[1271] * y[70] * y[322] * y[0]))
    r175 = (13.7 * y[1271] * y[70] * y[322] * y[0]) / (1 + (y[1271] * y[70] * y[322] * y[0]))
    return (r173 + r175) - (0)
 
def C16219(t, y):
    r229 = (13.7 * y[1298] * y[733] * y[493]) / (1 + (y[1298] * y[733] * y[493]))
    return (r229) - (0)
 
def C16221(t, y):
    r141 = (13.7 * y[1262] * y[818] * y[3] * y[77]) / (1 + (y[1262] * y[818] * y[3] * y[77]))
    return (0) - (r141)
 
def C16237(t, y):
    r164 = (13.7 * y[1269] * y[849] * y[2] ) / (1 + (y[1269] * y[849] * y[2] ))
    r766 = (13.7 * y[1507] * y[1] * y[822] * y[821]) / (1 + (y[1507] * y[1] * y[822] * y[821]))
    r770 = (13.7 * y[1507] * y[820] * y[821]) / (1 + (y[1507] * y[820] * y[821]))
    r772 = (13.7 * y[1507] * y[1] * y[822] * y[821]) / (1 + (y[1507] * y[1] * y[822] * y[821]))
    r776 = (13.7 * y[1507] * y[820] * y[821]) / (1 + (y[1507] * y[820] * y[821]))
    r778 = (13.7 * y[1507] * y[1] * y[822] * y[821]) / (1 + (y[1507] * y[1] * y[822] * y[821]))
    r782 = (13.7 * y[1507] * y[820] * y[821]) / (1 + (y[1507] * y[820] * y[821]))
    return (r164 + r766 + r770 + r772 + r776 + r778 + r782) - (0)
 
def C16238(t, y):
    r769 = (13.7 * y[1507] * y[1] * y[822]) / (1 + (y[1507] * y[1] * y[822]))
    r775 = (13.7 * y[1507] * y[1] * y[822]) / (1 + (y[1507] * y[1] * y[822]))
    r781 = (13.7 * y[1507] * y[1] * y[822]) / (1 + (y[1507] * y[1] * y[822]))
    r770 = (13.7 * y[1507] * y[820] * y[821]) / (1 + (y[1507] * y[820] * y[821]))
    r776 = (13.7 * y[1507] * y[820] * y[821]) / (1 + (y[1507] * y[820] * y[821]))
    r782 = (13.7 * y[1507] * y[820] * y[821]) / (1 + (y[1507] * y[820] * y[821]))
    return (r769 + r775 + r781) - (r770 + r776 + r782)
 
def C16240(t, y):
    r765 = (13.7 * y[1506] * y[1] * y[822] * y[821]) / (1 + (y[1506] * y[1] * y[822] * y[821]))
    r766 = (13.7 * y[1507] * y[1] * y[822] * y[821]) / (1 + (y[1507] * y[1] * y[822] * y[821]))
    r770 = (13.7 * y[1507] * y[820] * y[821]) / (1 + (y[1507] * y[820] * y[821]))
    r772 = (13.7 * y[1507] * y[1] * y[822] * y[821]) / (1 + (y[1507] * y[1] * y[822] * y[821]))
    r776 = (13.7 * y[1507] * y[820] * y[821]) / (1 + (y[1507] * y[820] * y[821]))
    r778 = (13.7 * y[1507] * y[1] * y[822] * y[821]) / (1 + (y[1507] * y[1] * y[822] * y[821]))
    r782 = (13.7 * y[1507] * y[820] * y[821]) / (1 + (y[1507] * y[820] * y[821]))
    return (0) - (r765 + r766 + r770 + r772 + r776 + r778 + r782)
 
def C16241(t, y):
    r765 = (13.7 * y[1506] * y[1] * y[822] * y[821]) / (1 + (y[1506] * y[1] * y[822] * y[821]))
    r766 = (13.7 * y[1507] * y[1] * y[822] * y[821]) / (1 + (y[1507] * y[1] * y[822] * y[821]))
    r767 = (13.7 * y[1507] * y[1] * y[822] * y[1591]) / (1 + (y[1507] * y[1] * y[822] * y[1591]))
    r768 = (13.7 * y[1507] * y[1] * y[822] * y[1592]) / (1 + (y[1507] * y[1] * y[822] * y[1592]))
    r769 = (13.7 * y[1507] * y[1] * y[822]) / (1 + (y[1507] * y[1] * y[822]))
    r772 = (13.7 * y[1507] * y[1] * y[822] * y[821]) / (1 + (y[1507] * y[1] * y[822] * y[821]))
    r773 = (13.7 * y[1507] * y[1] * y[822] * y[1591]) / (1 + (y[1507] * y[1] * y[822] * y[1591]))
    r774 = (13.7 * y[1507] * y[1] * y[822] * y[1592]) / (1 + (y[1507] * y[1] * y[822] * y[1592]))
    r775 = (13.7 * y[1507] * y[1] * y[822]) / (1 + (y[1507] * y[1] * y[822]))
    r778 = (13.7 * y[1507] * y[1] * y[822] * y[821]) / (1 + (y[1507] * y[1] * y[822] * y[821]))
    r779 = (13.7 * y[1507] * y[1] * y[822] * y[1591]) / (1 + (y[1507] * y[1] * y[822] * y[1591]))
    r780 = (13.7 * y[1507] * y[1] * y[822] * y[1592]) / (1 + (y[1507] * y[1] * y[822] * y[1592]))
    r781 = (13.7 * y[1507] * y[1] * y[822]) / (1 + (y[1507] * y[1] * y[822]))
    return (0) - (r765 + r766 + r767 + r768 + r769 + r772 + r773 + r774 + r775 + r778 + r779 + r780 + r781)
 
def C16310(t, y):
    r15 = (13.7 * y[1233] * y[823] * y[3] * y[77]) / (1 + (y[1233] * y[823] * y[3] * y[77]))
    r34 = (13.7 * y[1233] * y[823] * y[3] * y[77]) / (1 + (y[1233] * y[823] * y[3] * y[77]))
    return (0) - (r15 + r34)
 
def C16329(t, y):
    r64 = (13.7 * y[1242] * y[824] * y[2]) / (1 + (y[1242] * y[824] * y[2]))
    return (0) - (r64)
 
def C16330(t, y):
    r64 = (13.7 * y[1242] * y[824] * y[2]) / (1 + (y[1242] * y[824] * y[2]))
    return (r64) - (0)
 
def C16333(t, y):
    r65 = (13.7 * y[1242] * y[826] * y[2]) / (1 + (y[1242] * y[826] * y[2]))
    return (0) - (r65)
 
def C16334(t, y):
    r65 = (13.7 * y[1242] * y[826] * y[2]) / (1 + (y[1242] * y[826] * y[2]))
    return (r65) - (0)
 
def C16337(t, y):
    r66 = (13.7 * y[1242] * y[828] * y[2]) / (1 + (y[1242] * y[828] * y[2]))
    return (0) - (r66)
 
def C16338(t, y):
    r66 = (13.7 * y[1242] * y[828] * y[2]) / (1 + (y[1242] * y[828] * y[2]))
    return (r66) - (0)
 
def C16348(t, y):
    r8 = (13.7 * y[1233] * y[766] * y[2]) / (1 + (y[1233] * y[766] * y[2]))
    r27 = (13.7 * y[1233] * y[766] * y[2]) / (1 + (y[1233] * y[766] * y[2]))
    return (r8 + r27) - (0)
 
def C16469(t, y):
    r68 = (13.7 * y[1242] * y[831] * y[2]) / (1 + (y[1242] * y[831] * y[2]))
    return (0) - (r68)
 
def C16471(t, y):
    r68 = (13.7 * y[1242] * y[831] * y[2]) / (1 + (y[1242] * y[831] * y[2]))
    return (r68) - (0)
 
def C16551(t, y):
    r11 = (13.7 * y[1233] * y[776] * y[3] * y[77]) / (1 + (y[1233] * y[776] * y[3] * y[77]))
    r30 = (13.7 * y[1233] * y[776] * y[3] * y[77]) / (1 + (y[1233] * y[776] * y[3] * y[77]))
    return (r11 + r30) - (0)
 
def C16586(t, y):
    r12 = (13.7 * y[1233] * y[834] * y[2]) / (1 + (y[1233] * y[834] * y[2]))
    r31 = (13.7 * y[1233] * y[834] * y[2]) / (1 + (y[1233] * y[834] * y[2]))
    return (0) - (r12 + r31)
 
def C16587(t, y):
    r12 = (13.7 * y[1233] * y[834] * y[2]) / (1 + (y[1233] * y[834] * y[2]))
    r31 = (13.7 * y[1233] * y[834] * y[2]) / (1 + (y[1233] * y[834] * y[2]))
    return (r12 + r31) - (0)
 
def C16595(t, y):
    r17 = (13.7 * y[1233] * y[836] * y[2]) / (1 + (y[1233] * y[836] * y[2]))
    r36 = (13.7 * y[1233] * y[836] * y[2]) / (1 + (y[1233] * y[836] * y[2]))
    return (0) - (r17 + r36)
 
def C16596(t, y):
    r17 = (13.7 * y[1233] * y[836] * y[2]) / (1 + (y[1233] * y[836] * y[2]))
    r36 = (13.7 * y[1233] * y[836] * y[2]) / (1 + (y[1233] * y[836] * y[2]))
    return (r17 + r36) - (0)
 
def C16614(t, y):
    r268 = (13.7 * y[1317] * y[838] * y[115]) / (1 + (y[1317] * y[838] * y[115]))
    return (0) - (r268)
 
def C16615(t, y):
    r268 = (13.7 * y[1317] * y[838] * y[115]) / (1 + (y[1317] * y[838] * y[115]))
    return (r268) - (0)
 
def C16617(t, y):
    r589 = (13.7 * y[1427] * y[840] * y[0]) / (1 + (y[1427] * y[840] * y[0]))
    return (0) - (r589)
 
def C16618(t, y):
    r814 = (13.7 * y[1527] * y[841] * y[1] * y[61] * y[0]) / (1 + (y[1527] * y[841] * y[1] * y[61] * y[0]))
    return (0) - (r814)
 
def C16619(t, y):
    r269 = (13.7 * y[1317] * y[777] * y[115]) / (1 + (y[1317] * y[777] * y[115]))
    r814 = (13.7 * y[1527] * y[841] * y[1] * y[61] * y[0]) / (1 + (y[1527] * y[841] * y[1] * y[61] * y[0]))
    return (r269 + r814) - (0)
 
def C16633(t, y):
    r343 = (13.7 * y[1349] * y[843] * y[1]) / (1 + (y[1349] * y[843] * y[1]))
    return (0) - (r343)
 
def C16634(t, y):
    r257 = (13.7 * y[1312] * y[778] * y[115]) / (1 + (y[1312] * y[778] * y[115]))
    r343 = (13.7 * y[1349] * y[843] * y[1]) / (1 + (y[1349] * y[843] * y[1]))
    return (r257 + r343) - (0)
 
def C16639(t, y):
    r721 = (13.7 * y[1482] * y[779]) / (1 + (y[1482] * y[779]))
    return (r721) - (0)
 
def C16663(t, y):
    r100 = (13.7 * y[1253] * y[623] * y[847] * y[0]) / (1 + (y[1253] * y[623] * y[847] * y[0]))
    r108 = (13.7 * y[1253] * y[623] * y[847] * y[0]) / (1 + (y[1253] * y[623] * y[847] * y[0]))
    r116 = (13.7 * y[1253] * y[623] * y[847] * y[0]) / (1 + (y[1253] * y[623] * y[847] * y[0]))
    return (r100 + r108 + r116) - (0)
 
def C16664(t, y):
    r100 = (13.7 * y[1253] * y[623] * y[847] * y[0]) / (1 + (y[1253] * y[623] * y[847] * y[0]))
    r108 = (13.7 * y[1253] * y[623] * y[847] * y[0]) / (1 + (y[1253] * y[623] * y[847] * y[0]))
    r116 = (13.7 * y[1253] * y[623] * y[847] * y[0]) / (1 + (y[1253] * y[623] * y[847] * y[0]))
    return (0) - (r100 + r108 + r116)
 
def C16688(t, y):
    r317 = (13.7 * y[1338] * y[86] * y[629]) / (1 + (y[1338] * y[86] * y[629]))
    r533 = (13.7 * y[1403] * y[848] * y[0]) / (1 + (y[1403] * y[848] * y[0]))
    return (r317) - (r533)
 
def C16832(t, y):
    r164 = (13.7 * y[1269] * y[849] * y[2] ) / (1 + (y[1269] * y[849] * y[2] ))
    return (0) - (r164)
 
def C17234(t, y):
    r652 = (13.7 * y[1451] * y[850]) / (1 + (y[1451] * y[850]))
    return (0) - (r652)
 
def C17322(t, y):
    r488 = (13.7 * y[1391] * y[460] * y[811] * y[1]) / (1 + (y[1391] * y[460] * y[811] * y[1]))
    return (r488) - (0)
 
def C17324(t, y):
    r233 = (13.7 * y[1300] * y[881] * y[852]) / (1 + (y[1300] * y[881] * y[852]))
    r234 = (13.7 * y[1300] * y[881] * y[852]) / (1 + (y[1300] * y[881] * y[852]))
    r284 = (13.7 * y[1324] * y[229] * y[852]) / (1 + (y[1324] * y[229] * y[852]))
    r579 = (13.7 * y[1421] * y[852] * y[0]) / (1 + (y[1421] * y[852] * y[0]))
    return (0) - (r233 + r234 + r284 + r579)
 
def C17556(t, y):
    r583 = (13.7 * y[1424] * y[650] * y[0]) / (1 + (y[1424] * y[650] * y[0]))
    r484 = (13.7 * y[1388] * y[661] * y[853]) / (1 + (y[1388] * y[661] * y[853]))
    r485 = (13.7 * y[1388] * y[674] * y[853]) / (1 + (y[1388] * y[674] * y[853]))
    return (r583) - (r484 + r485)
 
def C18094(t, y):
    r723 = (13.7 * y[1483] * y[465]) / (1 + (y[1483] * y[465]))
    return (r723) - (0)
 
def C18096(t, y):
    r695 = (13.7 * y[1472] * y[562]) / (1 + (y[1472] * y[562]))
    r697 = (13.7 * y[1472] * y[562]) / (1 + (y[1472] * y[562]))
    return (r695 + r697) - (0)
 
def C18237(t, y):
    r480 = (13.7 * y[1384] * y[856] * y[43]) / (1 + (y[1384] * y[856] * y[43]))
    return (0) - (r480)
 
def C18239(t, y):
    r671 = (13.7 * y[1458] * y[893] * y[0]) / (1 + (y[1458] * y[893] * y[0]))
    return (r671) - (0)
 
def C19609(t, y):
    r672 = (13.7 * y[1459] * y[900]) / (1 + (y[1459] * y[900]))
    return (r672) - (0)
 
def C19673(t, y):
    r230 = (13.7 * y[1298] * y[859] * y[493]) / (1 + (y[1298] * y[859] * y[493]))
    return (0) - (r230)
 
def C19722(t, y):
    r802 = (13.7 * y[1521] * y[860] * y[46] * y[1]) / (1 + (y[1521] * y[860] * y[46] * y[1]))
    return (0) - (r802)
 
def C19723(t, y):
    r802 = (13.7 * y[1521] * y[860] * y[46] * y[1]) / (1 + (y[1521] * y[860] * y[46] * y[1]))
    return (r802) - (0)
 
def C19847(t, y):
    r185 = (13.7 * y[1276] * y[862] * y[18]) / (1 + (y[1276] * y[862] * y[18]))
    return (0) - (r185)
 
def C19858(t, y):
    r506 = (13.7 * y[1279] * y[18] * y[863]) / (1 + (y[1279] * y[18] * y[863]))
    return (0) - (r506)
 
def C19859(t, y):
    r506 = (13.7 * y[1279] * y[18] * y[863]) / (1 + (y[1279] * y[18] * y[863]))
    return (r506) - (0)
 
def C19871(t, y):
    r480 = (13.7 * y[1384] * y[856] * y[43]) / (1 + (y[1384] * y[856] * y[43]))
    return (r480) - (0)
 
def C20246(t, y):
    r277 = (13.7 * y[1321] * y[666] * y[866]) / (1 + (y[1321] * y[666] * y[866]))
    return (0) - (r277)
 
def C20247(t, y):
    r276 = (13.7 * y[1321] * y[666] * y[867]) / (1 + (y[1321] * y[666] * y[867]))
    return (0) - (r276)
 
def C20258(t, y):
    r93 = (13.7 * y[1252] * y[611] * y[2] * y[0]) / (1 + (y[1252] * y[611] * y[2] * y[0]))
    r94 = (13.7 * y[1252] * y[611] * y[5] * y[0]) / (1 + (y[1252] * y[611] * y[5] * y[0]))
    r669 = (13.7 * y[1456] * y[397] * y[21]) / (1 + (y[1456] * y[397] * y[21]))
    return (r93 + r94 + r669) - (0)
 
def C20267(t, y):
    r581 = (13.7 * y[1422] * y[869] * y[0]) / (1 + (y[1422] * y[869] * y[0]))
    return (0) - (r581)
 
def C20372(t, y):
    r230 = (13.7 * y[1298] * y[859] * y[493]) / (1 + (y[1298] * y[859] * y[493]))
    return (r230) - (0)
 
def C20373(t, y):
    r627 = (13.7 * y[1446] * y[871]) / (1 + (y[1446] * y[871]))
    r637 = (13.7 * y[1446] * y[871]) / (1 + (y[1446] * y[871]))
    return (0) - (r627 + r637)
 
def C20374(t, y):
    r627 = (13.7 * y[1446] * y[871]) / (1 + (y[1446] * y[871]))
    r637 = (13.7 * y[1446] * y[871]) / (1 + (y[1446] * y[871]))
    return (r627 + r637) - (0)
 
def C20375(t, y):
    r231 = (13.7 * y[1298] * y[873] * y[493]) / (1 + (y[1298] * y[873] * y[493]))
    return (0) - (r231)
 
def C20376(t, y):
    r231 = (13.7 * y[1298] * y[873] * y[493]) / (1 + (y[1298] * y[873] * y[493]))
    return (r231) - (0)
 
def C20377(t, y):
    r628 = (13.7 * y[1446] * y[875]) / (1 + (y[1446] * y[875]))
    r638 = (13.7 * y[1446] * y[875]) / (1 + (y[1446] * y[875]))
    return (0) - (r628 + r638)
 
def C20378(t, y):
    r628 = (13.7 * y[1446] * y[875]) / (1 + (y[1446] * y[875]))
    r638 = (13.7 * y[1446] * y[875]) / (1 + (y[1446] * y[875]))
    return (r628 + r638) - (0)
 
def C20451(t, y):
    r579 = (13.7 * y[1421] * y[852] * y[0]) / (1 + (y[1421] * y[852] * y[0]))
    return (r579) - (0)
 
def C20482(t, y):
    r684 = (13.7 * y[1467] * y[878]) / (1 + (y[1467] * y[878]))
    return (0) - (r684)
 
def C20483(t, y):
    r685 = (13.7 * y[1467] * y[879]) / (1 + (y[1467] * y[879]))
    return (0) - (r685)
 
def C20565(t, y):
    r481 = (13.7 * y[1385] * y[1]) / (1 + (y[1385] * y[1]))
    return (r481) - (0)
 
def C20641(t, y):
    r482 = (13.7 * y[1386] * y[183] * y[1] * y[273] * y[77]) / (1 + (y[1386] * y[183] * y[1] * y[273] * y[77]))
    r233 = (13.7 * y[1300] * y[881] * y[852]) / (1 + (y[1300] * y[881] * y[852]))
    r234 = (13.7 * y[1300] * y[881] * y[852]) / (1 + (y[1300] * y[881] * y[852]))
    return (r482) - (r233 + r234)
 
def C20648(t, y):
    r187 = (13.7 * y[1278] * y[18] * y[882]) / (1 + (y[1278] * y[18] * y[882]))
    return (0) - (r187)
 
def C20658(t, y):
    r237 = (13.7 * y[1303] * y[2] * y[884] * y[0]) / (1 + (y[1303] * y[2] * y[884] * y[0]))
    r238 = (13.7 * y[1303] * y[2] * y[527] * y[0]) / (1 + (y[1303] * y[2] * y[527] * y[0]))
    r497 = (13.7 * y[1395] * y[883] * y[0]) / (1 + (y[1395] * y[883] * y[0]))
    return (r237 + r238) - (r497)
 
def C20743(t, y):
    r237 = (13.7 * y[1303] * y[2] * y[884] * y[0]) / (1 + (y[1303] * y[2] * y[884] * y[0]))
    return (0) - (r237)
 
def C20751(t, y):
    r233 = (13.7 * y[1300] * y[881] * y[852]) / (1 + (y[1300] * y[881] * y[852]))
    r234 = (13.7 * y[1300] * y[881] * y[852]) / (1 + (y[1300] * y[881] * y[852]))
    return (r233 + r234) - (0)
 
def C20796(t, y):
    r187 = (13.7 * y[1278] * y[18] * y[882]) / (1 + (y[1278] * y[18] * y[882]))
    return (r187) - (0)
 
def C20858(t, y):
    r189 = (13.7 * y[1281] * y[549] * y[18]) / (1 + (y[1281] * y[549] * y[18]))
    return (r189) - (0)
 
def C20864(t, y):
    r413 = (13.7 * y[1382] * y[196]) / (1 + (y[1382] * y[196]))
    r419 = (13.7 * y[1382] * y[196]) / (1 + (y[1382] * y[196]))
    r425 = (13.7 * y[1382] * y[196]) / (1 + (y[1382] * y[196]))
    return (r413 + r419 + r425) - (0)
 
def C20904(t, y):
    r648 = (13.7 * y[1450] * y[534]) / (1 + (y[1450] * y[534]))
    r647 = (13.7 * y[1450] * y[889] * y[0]) / (1 + (y[1450] * y[889] * y[0]))
    return (r648) - (r647)
 
def C20905(t, y):
    r652 = (13.7 * y[1451] * y[850]) / (1 + (y[1451] * y[850]))
    r651 = (13.7 * y[1451] * y[890] * y[0]) / (1 + (y[1451] * y[890] * y[0]))
    return (r652) - (r651)
 
def C20969(t, y):
    r827 = (13.7 * y[1530] * y[1] * y[273]) / (1 + (y[1530] * y[1] * y[273]))
    r833 = (13.7 * y[1530] * y[1] * y[273]) / (1 + (y[1530] * y[1] * y[273]))
    r839 = (13.7 * y[1530] * y[1] * y[273]) / (1 + (y[1530] * y[1] * y[273]))
    r828 = (13.7 * y[1530] * y[13] * y[891]) / (1 + (y[1530] * y[13] * y[891]))
    r834 = (13.7 * y[1530] * y[13] * y[891]) / (1 + (y[1530] * y[13] * y[891]))
    r840 = (13.7 * y[1530] * y[13] * y[891]) / (1 + (y[1530] * y[13] * y[891]))
    return (r827 + r833 + r839) - (r828 + r834 + r840)
 
def C21031(t, y):
    r431 = (13.7 * y[1382] * y[196]) / (1 + (y[1382] * y[196]))
    r437 = (13.7 * y[1382] * y[196]) / (1 + (y[1382] * y[196]))
    r443 = (13.7 * y[1382] * y[196]) / (1 + (y[1382] * y[196]))
    r449 = (13.7 * y[1383] * y[783]) / (1 + (y[1383] * y[783]))
    r455 = (13.7 * y[1383] * y[783]) / (1 + (y[1383] * y[783]))
    r461 = (13.7 * y[1383] * y[783]) / (1 + (y[1383] * y[783]))
    r467 = (13.7 * y[1383] * y[783]) / (1 + (y[1383] * y[783]))
    r473 = (13.7 * y[1383] * y[783]) / (1 + (y[1383] * y[783]))
    r479 = (13.7 * y[1383] * y[783]) / (1 + (y[1383] * y[783]))
    return (r431 + r437 + r443 + r449 + r455 + r461 + r467 + r473 + r479) - (0)
 
def C21310(t, y):
    r605 = (13.7 * y[1439] * y[43] * y[18] * y[29]) / (1 + (y[1439] * y[43] * y[18] * y[29]))
    r671 = (13.7 * y[1458] * y[893] * y[0]) / (1 + (y[1458] * y[893] * y[0]))
    return (r605) - (r671)
 
def C21440(t, y):
    r492 = (13.7 * y[1393] * y[94] * y[557]) / (1 + (y[1393] * y[94] * y[557]))
    r493 = (13.7 * y[1393] * y[811] * y[557]) / (1 + (y[1393] * y[811] * y[557]))
    return (r492 + r493) - (0)
 
def C21748(t, y):
    r102 = (13.7 * y[1253] * y[897] * y[322] * y[0]) / (1 + (y[1253] * y[897] * y[322] * y[0]))
    r110 = (13.7 * y[1253] * y[897] * y[322] * y[0]) / (1 + (y[1253] * y[897] * y[322] * y[0]))
    r118 = (13.7 * y[1253] * y[897] * y[322] * y[0]) / (1 + (y[1253] * y[897] * y[322] * y[0]))
    r386 = (13.7 * y[1367] * y[1] * y[895]) / (1 + (y[1367] * y[1] * y[895]))
    return (r102 + r110 + r118) - (r386)
 
def C21749(t, y):
    r386 = (13.7 * y[1367] * y[1] * y[895]) / (1 + (y[1367] * y[1] * y[895]))
    return (r386) - (0)
 
def C21750(t, y):
    r102 = (13.7 * y[1253] * y[897] * y[322] * y[0]) / (1 + (y[1253] * y[897] * y[322] * y[0]))
    r110 = (13.7 * y[1253] * y[897] * y[322] * y[0]) / (1 + (y[1253] * y[897] * y[322] * y[0]))
    r118 = (13.7 * y[1253] * y[897] * y[322] * y[0]) / (1 + (y[1253] * y[897] * y[322] * y[0]))
    r387 = (13.7 * y[1367] * y[1] * y[897]) / (1 + (y[1367] * y[1] * y[897]))
    return (0) - (r102 + r110 + r118 + r387)
 
def C21751(t, y):
    r387 = (13.7 * y[1367] * y[1] * y[897]) / (1 + (y[1367] * y[1] * y[897]))
    return (r387) - (0)
 
def C21767(t, y):
    r672 = (13.7 * y[1459] * y[900]) / (1 + (y[1459] * y[900]))
    return (r672) - (0)
 
def C21769(t, y):
    r672 = (13.7 * y[1459] * y[900]) / (1 + (y[1459] * y[900]))
    return (0) - (r672)
 
def C21811(t, y):
    r494 = (13.7 * y[1394] * y[901] * y[0]) / (1 + (y[1394] * y[901] * y[0]))
    r495 = (13.7 * y[1394] * y[901] * y[0]) / (1 + (y[1394] * y[901] * y[0]))
    return (0) - (r494 + r495)
 
def C21812(t, y):
    r494 = (13.7 * y[1394] * y[901] * y[0]) / (1 + (y[1394] * y[901] * y[0]))
    r495 = (13.7 * y[1394] * y[901] * y[0]) / (1 + (y[1394] * y[901] * y[0]))
    return (r494 + r495) - (0)
 
def C22131(t, y):
    r496 = (13.7 * y[1395] * y[903] * y[0]) / (1 + (y[1395] * y[903] * y[0]))
    return (0) - (r496)
 
def C22160(t, y):
    r771 = (13.7 * y[1507] * y[1] * y[764] * y[1592]) / (1 + (y[1507] * y[1] * y[764] * y[1592]))
    r777 = (13.7 * y[1507] * y[1] * y[764] * y[1592]) / (1 + (y[1507] * y[1] * y[764] * y[1592]))
    r783 = (13.7 * y[1507] * y[1] * y[764] * y[1592]) / (1 + (y[1507] * y[1] * y[764] * y[1592]))
    return (r771 + r777 + r783) - (0)
 
def C22288(t, y):
    r546 = (13.7 * y[1406] * y[681] * y[0] ) / (1 + (y[1406] * y[681] * y[0] ))
    return (r546) - (0)
 
def C22395(t, y):
    r668 = (13.7 * y[1455] * y[906]) / (1 + (y[1455] * y[906]))
    return (0) - (r668)
 
def C22441(t, y):
    r668 = (13.7 * y[1455] * y[906]) / (1 + (y[1455] * y[906]))
    r392 = (13.7 * y[1369] * y[907] * y[1]) / (1 + (y[1369] * y[907] * y[1]))
    return (r668) - (r392)
 
def C22442(t, y):
    r392 = (13.7 * y[1369] * y[907] * y[1]) / (1 + (y[1369] * y[907] * y[1]))
    r385 = (13.7 * y[1367] * y[908] * y[1]) / (1 + (y[1367] * y[908] * y[1]))
    return (r392) - (r385)
 
def C22443(t, y):
    r385 = (13.7 * y[1367] * y[908] * y[1]) / (1 + (y[1367] * y[908] * y[1]))
    return (r385) - (0)
 
def G00092(t, y):
    r521 = (13.7 * y[1402] * y[0] * y[911]) / (1 + (y[1402] * y[0] * y[911]))
    return (r521) - (0)
 
def G00093(t, y):
    r521 = (13.7 * y[1402] * y[0] * y[911]) / (1 + (y[1402] * y[0] * y[911]))
    return (0) - (r521)
 
def G00249(t, y):
    r528 = (13.7 * y[1402] * y[913] * y[0]) / (1 + (y[1402] * y[913] * y[0]))
    r522 = (13.7 * y[1402] * y[912] * y[0]) / (1 + (y[1402] * y[912] * y[0]))
    r536 = (13.7 * y[1403] * y[912] * y[0]) / (1 + (y[1403] * y[912] * y[0]))
    return (r528) - (r522 + r536)
 
def G00278(t, y):
    r528 = (13.7 * y[1402] * y[913] * y[0]) / (1 + (y[1402] * y[913] * y[0]))
    r537 = (13.7 * y[1403] * y[913] * y[0]) / (1 + (y[1403] * y[913] * y[0]))
    return (0) - (r528 + r537)
 
def G00370(t, y):
    r522 = (13.7 * y[1402] * y[912] * y[0]) / (1 + (y[1402] * y[912] * y[0]))
    r534 = (13.7 * y[1403] * y[914] * y[0]) / (1 + (y[1403] * y[914] * y[0]))
    r535 = (13.7 * y[1403] * y[914] * y[0]) / (1 + (y[1403] * y[914] * y[0]))
    return (r522) - (r534 + r535)
 
def G00497(t, y):
    r525 = (13.7 * y[1402] * y[915] * y[0]) / (1 + (y[1402] * y[915] * y[0]))
    return (0) - (r525)
 
def G00501(t, y):
    r537 = (13.7 * y[1403] * y[913] * y[0]) / (1 + (y[1403] * y[913] * y[0]))
    r526 = (13.7 * y[1402] * y[916] * y[0]) / (1 + (y[1402] * y[916] * y[0]))
    return (r537) - (r526)
 
def G01275(t, y):
    r526 = (13.7 * y[1402] * y[916] * y[0]) / (1 + (y[1402] * y[916] * y[0]))
    r536 = (13.7 * y[1403] * y[912] * y[0]) / (1 + (y[1403] * y[912] * y[0]))
    r523 = (13.7 * y[1402] * y[917] * y[0]) / (1 + (y[1402] * y[917] * y[0]))
    return (r526 + r536) - (r523)
 
def G09795(t, y):
    r540 = (13.7 * y[1404] * y[0] * y[918] ) / (1 + (y[1404] * y[0] * y[918] ))
    return (0) - (r540)
 
def G10488(t, y):
    r524 = (13.7 * y[1402] * y[919] * y[0]) / (1 + (y[1402] * y[919] * y[0]))
    return (0) - (r524)
 
def G10508(t, y):
    r538 = (13.7 * y[1403] * y[920] * y[0]) / (1 + (y[1403] * y[920] * y[0]))
    return (0) - (r538)
 
def G10529(t, y):
    r527 = (13.7 * y[1402] * y[921] * y[0]) / (1 + (y[1402] * y[921] * y[0]))
    return (0) - (r527)
 
def G10550(t, y):
    r254 = (13.7 * y[1311] * y[923] * y[928]) / (1 + (y[1311] * y[923] * y[928]))
    return (r254) - (0)
 
def G10551(t, y):
    r254 = (13.7 * y[1311] * y[923] * y[928]) / (1 + (y[1311] * y[923] * y[928]))
    return (0) - (r254)
 
def G10552(t, y):
    r252 = (13.7 * y[1311] * y[924] * y[928] ) / (1 + (y[1311] * y[924] * y[928] ))
    return (0) - (r252)
 
def G10553(t, y):
    r252 = (13.7 * y[1311] * y[924] * y[928] ) / (1 + (y[1311] * y[924] * y[928] ))
    return (r252) - (0)
 
def G10555(t, y):
    r255 = (13.7 * y[1311] * y[927] * y[928]) / (1 + (y[1311] * y[927] * y[928]))
    return (r255) - (0)
 
def G10556(t, y):
    r255 = (13.7 * y[1311] * y[927] * y[928]) / (1 + (y[1311] * y[927] * y[928]))
    return (0) - (r255)
 
def G10610(t, y):
    r252 = (13.7 * y[1311] * y[924] * y[928] ) / (1 + (y[1311] * y[924] * y[928] ))
    r254 = (13.7 * y[1311] * y[923] * y[928]) / (1 + (y[1311] * y[923] * y[928]))
    r255 = (13.7 * y[1311] * y[927] * y[928]) / (1 + (y[1311] * y[927] * y[928]))
    return (0) - (r252 + r254 + r255)
 
def G10619(t, y):
    r252 = (13.7 * y[1311] * y[924] * y[928] ) / (1 + (y[1311] * y[924] * y[928] ))
    r254 = (13.7 * y[1311] * y[923] * y[928]) / (1 + (y[1311] * y[923] * y[928]))
    r255 = (13.7 * y[1311] * y[927] * y[928]) / (1 + (y[1311] * y[927] * y[928]))
    return (r252 + r254 + r255) - (0)
 
def G11121(t, y):
    r525 = (13.7 * y[1402] * y[915] * y[0]) / (1 + (y[1402] * y[915] * y[0]))
    return (r525) - (0)
 
def E1_1_1_1_mRNA(t, y):
    mRNA1 = 0.00292 - (0.0093 * y[931])
    peptide1 = (0.278 * y[931]) - (0.00000278 * y[1233])
    return (mRNA1) - (peptide1)
 
def E1_1_1_133_mRNA(t, y):
    mRNA2 = 0.00292 - (0.0093 * y[932])
    peptide2 = (0.278 * y[932]) - (0.00000278 * y[1234])
    return (mRNA2) - (peptide2)
 
def E1_1_1_169_mRNA(t, y):
    mRNA3 = 0.00292 - (0.0093 * y[933])
    peptide3 = (0.278 * y[933]) - (0.00000278 * y[1235])
    return (mRNA3) - (peptide3)
 
def E1_1_1_193_mRNA(t, y):
    mRNA4 = 0.00292 - (0.0093 * y[934])
    peptide4 = (0.278 * y[934]) - (0.00000278 * y[1236])
    return (mRNA4) - (peptide4)
 
def E1_1_1_23_mRNA(t, y):
    mRNA5 = 0.00292 - (0.0093 * y[935])
    peptide5 = (0.278 * y[935]) - (0.00000278 * y[1237])
    return (mRNA5) - (peptide5)
 
def E1_1_1_27_mRNA(t, y):
    mRNA6 = 0.00292 - (0.0093 * y[936])
    peptide6 = (0.278 * y[936]) - (0.00000278 * y[1238])
    return (mRNA6) - (peptide6)
 
def E1_1_1_28_mRNA(t, y):
    mRNA7 = 0.00292 - (0.0093 * y[937])
    peptide7 = (0.278 * y[937]) - (0.00000278 * y[1239])
    return (mRNA7) - (peptide7)
 
def E1_1_1_3_mRNA(t, y):
    mRNA8 = 0.00292 - (0.0093 * y[938])
    peptide8 = (0.278 * y[938]) - (0.00000278 * y[1240])
    return (mRNA8) - (peptide8)
 
def E1_1_1_304_mRNA(t, y):
    mRNA9 = 0.00292 - (0.0093 * y[939])
    peptide9 = (0.278 * y[939]) - (0.00000278 * y[1241])
    return (mRNA9) - (peptide9)
 
def E1_1_1_35_mRNA(t, y):
    mRNA10 = 0.00292 - (0.0093 * y[940])
    peptide10 = (0.278 * y[940]) - (0.00000278 * y[1242])
    return (mRNA10) - (peptide10)
 
def E1_1_1_44_mRNA(t, y):
    mRNA11 = 0.00292 - (0.0093 * y[941])
    peptide11 = (0.278 * y[941]) - (0.00000278 * y[1243])
    return (mRNA11) - (peptide11)
 
def E1_1_1_47_mRNA(t, y):
    mRNA12 = 0.00292 - (0.0093 * y[942])
    peptide12 = (0.278 * y[942]) - (0.00000278 * y[1244])
    return (mRNA12) - (peptide12)
 
def E1_1_1_49_mRNA(t, y):
    mRNA13 = 0.00292 - (0.0093 * y[943])
    peptide13 = (0.278 * y[943]) - (0.00000278 * y[1245])
    return (mRNA13) - (peptide13)
 
def E1_1_1_6_mRNA(t, y):
    mRNA14 = 0.00292 - (0.0093 * y[944])
    peptide14 = (0.278 * y[944]) - (0.00000278 * y[1246])
    return (mRNA14) - (peptide14)
 
def E1_1_1_85_mRNA(t, y):
    mRNA15 = 0.00292 - (0.0093 * y[945])
    peptide15 = (0.278 * y[945]) - (0.00000278 * y[1247])
    return (mRNA15) - (peptide15)
 
def E1_1_1_86_mRNA(t, y):
    mRNA16 = 0.00292 - (0.0093 * y[946])
    peptide16 = (0.278 * y[946]) - (0.00000278 * y[1248])
    return (mRNA16) - (peptide16)
 
def E1_1_1_88_mRNA(t, y):
    mRNA17 = 0.00292 - (0.0093 * y[947])
    peptide17 = (0.278 * y[947]) - (0.00000278 * y[1249])
    return (mRNA17) - (peptide17)
 
def E1_1_1_94_mRNA(t, y):
    mRNA18 = 0.00292 - (0.0093 * y[948])
    peptide18 = (0.278 * y[948]) - (0.00000278 * y[1250])
    return (mRNA18) - (peptide18)
 
def E1_11_1_26_mRNA(t, y):
    mRNA19 = 0.00292 - (0.0093 * y[949])
    peptide19 = (0.278 * y[949]) - (0.00000278 * y[1251])
    return (mRNA19) - (peptide19)
 
def E1_17_1_8_mRNA(t, y):
    mRNA20 = 0.00292 - (0.0093 * y[950])
    peptide20 = (0.278 * y[950]) - (0.00000278 * y[1252])
    return (mRNA20) - (peptide20)
 
def E1_17_4_1_mRNA(t, y):
    mRNA21 = 0.00292 - (0.0093 * y[951])
    peptide21 = (0.278 * y[951]) - (0.00000278 * y[1253])
    return (mRNA21) - (peptide21)
 
def E1_17_4_2_mRNA(t, y):
    mRNA22 = 0.00292 - (0.0093 * y[952])
    peptide22 = (0.278 * y[952]) - (0.00000278 * y[1254])
    return (mRNA22) - (peptide22)
 
def E1_2_1_10_mRNA(t, y):
    mRNA23 = 0.00292 - (0.0093 * y[953])
    peptide23 = (0.278 * y[953]) - (0.00000278 * y[1255])
    return (mRNA23) - (peptide23)
 
def E1_2_1_11_mRNA(t, y):
    mRNA24 = 0.00292 - (0.0093 * y[954])
    peptide24 = (0.278 * y[954]) - (0.00000278 * y[1256])
    return (mRNA24) - (peptide24)
 
def E1_2_1_38_mRNA(t, y):
    mRNA25 = 0.00292 - (0.0093 * y[955])
    peptide25 = (0.278 * y[955]) - (0.00000278 * y[1257])
    return (mRNA25) - (peptide25)
 
def E1_2_1_41_mRNA(t, y):
    mRNA26 = 0.00292 - (0.0093 * y[956])
    peptide26 = (0.278 * y[956]) - (0.00000278 * y[1258])
    return (mRNA26) - (peptide26)
 
def E1_20_4_4_mRNA(t, y):
    mRNA27 = 0.00292 - (0.0093 * y[957])
    peptide27 = (0.278 * y[957]) - (0.00000278 * y[1259])
    return (mRNA27) - (peptide27)
 
def E1_3_1_12_mRNA(t, y):
    mRNA28 = 0.00292 - (0.0093 * y[958])
    peptide28 = (0.278 * y[958]) - (0.00000278 * y[1260])
    return (mRNA28) - (peptide28)
 
def E1_3_1_14_mRNA(t, y):
    mRNA29 = 0.00292 - (0.0093 * y[959])
    peptide29 = (0.278 * y[959]) - (0.00000278 * y[1261])
    return (mRNA29) - (peptide29)
 
def E1_3_1_9_mRNA(t, y):
    mRNA30 = 0.00292 - (0.0093 * y[960])
    peptide30 = (0.278 * y[960]) - (0.00000278 * y[1262])
    return (mRNA30) - (peptide30)
 
def E1_3_1_98_mRNA(t, y):
    mRNA31 = 0.00292 - (0.0093 * y[961])
    peptide31 = (0.278 * y[961]) - (0.00000278 * y[1263])
    return (mRNA31) - (peptide31)
 
def E1_4_1_13_mRNA(t, y):
    mRNA32 = 0.00292 - (0.0093 * y[962])
    peptide32 = (0.278 * y[962]) - (0.00000278 * y[1264])
    return (mRNA32) - (peptide32)
 
def E1_5_1_2_mRNA(t, y):
    mRNA33 = 0.00292 - (0.0093 * y[963])
    peptide33 = (0.278 * y[963]) - (0.00000278 * y[1265])
    return (mRNA33) - (peptide33)
 
def E1_5_1_3_mRNA(t, y):
    mRNA34 = 0.00292 - (0.0093 * y[964])
    peptide34 = (0.278 * y[964]) - (0.00000278 * y[1266])
    return (mRNA34) - (peptide34)
 
def E1_6_5_2_mRNA(t, y):
    mRNA35 = 0.00292 - (0.0093 * y[965])
    peptide35 = (0.278 * y[965]) - (0.00000278 * y[1267])
    return (mRNA35) - (peptide35)
 
def E1_7_1_7_mRNA(t, y):
    mRNA36 = 0.00292 - (0.0093 * y[966])
    peptide36 = (0.278 * y[966]) - (0.00000278 * y[1268])
    return (mRNA36) - (peptide36)
 
def E1_8_1_4_mRNA(t, y):
    mRNA37 = 0.00292 - (0.0093 * y[967])
    peptide37 = (0.278 * y[967]) - (0.00000278 * y[1269])
    return (mRNA37) - (peptide37)
 
def E1_8_1_9_mRNA(t, y):
    mRNA38 = 0.00292 - (0.0093 * y[968])
    peptide38 = (0.278 * y[968]) - (0.00000278 * y[1270])
    return (mRNA38) - (peptide38)
 
def E1_8_4_11_mRNA(t, y):
    mRNA39 = 0.00292 - (0.0093 * y[969])
    peptide39 = (0.278 * y[969]) - (0.00000278 * y[1271])
    return (mRNA39) - (peptide39)
 
def E1_8_4_12_mRNA(t, y):
    mRNA40 = 0.00292 - (0.0093 * y[970])
    peptide40 = (0.278 * y[970]) - (0.00000278 * y[1272])
    return (mRNA40) - (peptide40)
 
def E2_1_1_10_mRNA(t, y):
    mRNA41 = 0.00292 - (0.0093 * y[971])
    peptide41 = (0.278 * y[971]) - (0.00000278 * y[1273])
    return (mRNA41) - (peptide41)
 
def E2_1_1_107_mRNA(t, y):
    mRNA42 = 0.00292 - (0.0093 * y[972])
    peptide42 = (0.278 * y[972]) - (0.00000278 * y[1274])
    return (mRNA42) - (peptide42)
 
def E2_1_1_14_mRNA(t, y):
    mRNA43 = 0.00292 - (0.0093 * y[973])
    peptide43 = (0.278 * y[973]) - (0.00000278 * y[1275])
    return (mRNA43) - (peptide43)
 
def E2_1_1_163_mRNA(t, y):
    mRNA44 = 0.00292 - (0.0093 * y[974])
    peptide44 = (0.278 * y[974]) - (0.00000278 * y[1276])
    return (mRNA44) - (peptide44)
 
def E2_1_1_171_mRNA(t, y):
    mRNA45 = 0.00292 - (0.0093 * y[975])
    peptide45 = (0.278 * y[975]) - (0.00000278 * y[1277])
    return (mRNA45) - (peptide45)
 
def E2_1_1_182_mRNA(t, y):
    mRNA46 = 0.00292 - (0.0093 * y[976])
    peptide46 = (0.278 * y[976]) - (0.00000278 * y[1278])
    return (mRNA46) - (peptide46)
 
def E2_1_1_201_mRNA(t, y):
    mRNA47 = 0.00292 - (0.0093 * y[977])
    peptide47 = (0.278 * y[977]) - (0.00000278 * y[1279])
    return (mRNA47) - (peptide47)
 
def E2_1_1_228_mRNA(t, y):
    mRNA48 = 0.00292 - (0.0093 * y[978])
    peptide48 = (0.278 * y[978]) - (0.00000278 * y[1280])
    return (mRNA48) - (peptide48)
 
def E2_1_1_297_mRNA(t, y):
    mRNA49 = 0.00292 - (0.0093 * y[979])
    peptide49 = (0.278 * y[979]) - (0.00000278 * y[1281])
    return (mRNA49) - (peptide49)
 
def E2_1_1_33_mRNA(t, y):
    mRNA50 = 0.00292 - (0.0093 * y[980])
    peptide50 = (0.278 * y[980]) - (0.00000278 * y[1282])
    return (mRNA50) - (peptide50)
 
def E2_1_1_45_mRNA(t, y):
    mRNA51 = 0.00292 - (0.0093 * y[981])
    peptide51 = (0.278 * y[981]) - (0.00000278 * y[1283])
    return (mRNA51) - (peptide51)
 
def E2_1_1_63_mRNA(t, y):
    mRNA52 = 0.00292 - (0.0093 * y[982])
    peptide52 = (0.278 * y[982]) - (0.00000278 * y[1284])
    return (mRNA52) - (peptide52)
 
def E2_1_2_1_mRNA(t, y):
    mRNA53 = 0.00292 - (0.0093 * y[983])
    peptide53 = (0.278 * y[983]) - (0.00000278 * y[1285])
    return (mRNA53) - (peptide53)
 
def E2_1_2_2_mRNA(t, y):
    mRNA54 = 0.00292 - (0.0093 * y[984])
    peptide54 = (0.278 * y[984]) - (0.00000278 * y[1286])
    return (mRNA54) - (peptide54)
 
def E2_1_2_3_mRNA(t, y):
    mRNA55 = 0.00292 - (0.0093 * y[985])
    peptide55 = (0.278 * y[985]) - (0.00000278 * y[1287])
    return (mRNA55) - (peptide55)
 
def E2_1_2_9_mRNA(t, y):
    mRNA56 = 0.00292 - (0.0093 * y[986])
    peptide56 = (0.278 * y[986]) - (0.00000278 * y[1288])
    return (mRNA56) - (peptide56)
 
def E2_1_3_15_mRNA(t, y):
    mRNA57 = 0.00292 - (0.0093 * y[987])
    peptide57 = (0.278 * y[987]) - (0.00000278 * y[1289])
    return (mRNA57) - (peptide57)
 
def E2_1_3_2_mRNA(t, y):
    mRNA58 = 0.00292 - (0.0093 * y[988])
    peptide58 = (0.278 * y[988]) - (0.00000278 * y[1290])
    return (mRNA58) - (peptide58)
 
def E2_1_3_3_mRNA(t, y):
    mRNA59 = 0.00292 - (0.0093 * y[989])
    peptide59 = (0.278 * y[989]) - (0.00000278 * y[1291])
    return (mRNA59) - (peptide59)
 
def E2_2_1_1_mRNA(t, y):
    mRNA60 = 0.00292 - (0.0093 * y[990])
    peptide60 = (0.278 * y[990]) - (0.00000278 * y[1292])
    return (mRNA60) - (peptide60)
 
def E2_2_1_6_mRNA(t, y):
    mRNA61 = 0.00292 - (0.0093 * y[991])
    peptide61 = (0.278 * y[991]) - (0.00000278 * y[1293])
    return (mRNA61) - (peptide61)
 
def E2_2_1_7_mRNA(t, y):
    mRNA62 = 0.00292 - (0.0093 * y[992])
    peptide62 = (0.278 * y[992]) - (0.00000278 * y[1294])
    return (mRNA62) - (peptide62)
 
def E2_3_1_1_mRNA(t, y):
    mRNA63 = 0.00292 - (0.0093 * y[993])
    peptide63 = (0.278 * y[993]) - (0.00000278 * y[1295])
    return (mRNA63) - (peptide63)
 
def E2_3_1_15_mRNA(t, y):
    mRNA64 = 0.00292 - (0.0093 * y[994])
    peptide64 = (0.278 * y[994]) - (0.00000278 * y[1296])
    return (mRNA64) - (peptide64)
 
def E2_3_1_157_mRNA(t, y):
    mRNA65 = 0.00292 - (0.0093 * y[995])
    peptide65 = (0.278 * y[995]) - (0.00000278 * y[1297])
    return (mRNA65) - (peptide65)
 
def E2_3_1_179_mRNA(t, y):
    mRNA66 = 0.00292 - (0.0093 * y[996])
    peptide66 = (0.278 * y[996]) - (0.00000278 * y[1298])
    return (mRNA66) - (peptide66)
 
def E2_3_1_180_mRNA(t, y):
    mRNA67 = 0.00292 - (0.0093 * y[997])
    peptide67 = (0.278 * y[997]) - (0.00000278 * y[1299])
    return (mRNA67) - (peptide67)
 
def E2_3_1_234_mRNA(t, y):
    mRNA68 = 0.00292 - (0.0093 * y[998])
    peptide68 = (0.278 * y[998]) - (0.00000278 * y[1300])
    return (mRNA68) - (peptide68)
 
def E2_3_1_266_mRNA(t, y):
    mRNA69 = 0.00292 - (0.0093 * y[999])
    peptide69 = (0.278 * y[999]) - (0.00000278 * y[1301])
    return (mRNA69) - (peptide69)
 
def E2_3_1_274_mRNA(t, y):
    mRNA70 = 0.00292 - (0.0093 * y[1000])
    peptide70 = (0.278 * y[1000]) - (0.00000278 * y[1302])
    return (mRNA70) - (peptide70)
 
def E2_3_1_286_mRNA(t, y):
    mRNA71 = 0.00292 - (0.0093 * y[1001])
    peptide71 = (0.278 * y[1001]) - (0.00000278 * y[1303])
    return (mRNA71) - (peptide71)
 
def E2_3_1_35_mRNA(t, y):
    mRNA72 = 0.00292 - (0.0093 * y[1002])
    peptide72 = (0.278 * y[1002]) - (0.00000278 * y[1304])
    return (mRNA72) - (peptide72)
 
def E2_3_1_39_mRNA(t, y):
    mRNA73 = 0.00292 - (0.0093 * y[1003])
    peptide73 = (0.278 * y[1003]) - (0.00000278 * y[1305])
    return (mRNA73) - (peptide73)
 
def E2_3_1_46_mRNA(t, y):
    mRNA74 = 0.00292 - (0.0093 * y[1004])
    peptide74 = (0.278 * y[1004]) - (0.00000278 * y[1306])
    return (mRNA74) - (peptide74)
 
def E2_3_1_8_mRNA(t, y):
    mRNA75 = 0.00292 - (0.0093 * y[1005])
    peptide75 = (0.278 * y[1005]) - (0.00000278 * y[1307])
    return (mRNA75) - (peptide75)
 
def E2_3_1_89_mRNA(t, y):
    mRNA76 = 0.00292 - (0.0093 * y[1006])
    peptide76 = (0.278 * y[1006]) - (0.00000278 * y[1308])
    return (mRNA76) - (peptide76)
 
def E2_3_1_9_mRNA(t, y):
    mRNA77 = 0.00292 - (0.0093 * y[1007])
    peptide77 = (0.278 * y[1007]) - (0.00000278 * y[1309])
    return (mRNA77) - (peptide77)
 
def E2_3_3_10_mRNA(t, y):
    mRNA78 = 0.00292 - (0.0093 * y[1008])
    peptide78 = (0.278 * y[1008]) - (0.00000278 * y[1310])
    return (mRNA78) - (peptide78)
 
def E2_4_1_227_mRNA(t, y):
    mRNA79 = 0.00292 - (0.0093 * y[1009])
    peptide79 = (0.278 * y[1009]) - (0.00000278 * y[1311])
    return (mRNA79) - (peptide79)
 
def E2_4_2_10_mRNA(t, y):
    mRNA80 = 0.00292 - (0.0093 * y[1010])
    peptide80 = (0.278 * y[1010]) - (0.00000278 * y[1312])
    return (mRNA80) - (peptide80)
 
def E2_4_2_14_mRNA(t, y):
    mRNA81 = 0.00292 - (0.0093 * y[1011])
    peptide81 = (0.278 * y[1011]) - (0.00000278 * y[1313])
    return (mRNA81) - (peptide81)
 
def E2_4_2_17_mRNA(t, y):
    mRNA82 = 0.00292 - (0.0093 * y[1012])
    peptide82 = (0.278 * y[1012]) - (0.00000278 * y[1314])
    return (mRNA82) - (peptide82)
 
def E2_4_2_22_mRNA(t, y):
    mRNA83 = 0.00292 - (0.0093 * y[1013])
    peptide83 = (0.278 * y[1013]) - (0.00000278 * y[1315])
    return (mRNA83) - (peptide83)
 
def E2_4_2_7_mRNA(t, y):
    mRNA84 = 0.00292 - (0.0093 * y[1014])
    peptide84 = (0.278 * y[1014]) - (0.00000278 * y[1316])
    return (mRNA84) - (peptide84)
 
def E2_4_2_8_mRNA(t, y):
    mRNA85 = 0.00292 - (0.0093 * y[1015])
    peptide85 = (0.278 * y[1015]) - (0.00000278 * y[1317])
    return (mRNA85) - (peptide85)
 
def E2_4_2_9_mRNA(t, y):
    mRNA86 = 0.00292 - (0.0093 * y[1016])
    peptide86 = (0.278 * y[1016]) - (0.00000278 * y[1318])
    return (mRNA86) - (peptide86)
 
def E2_5_1_15_mRNA(t, y):
    mRNA87 = 0.00292 - (0.0093 * y[1017])
    peptide87 = (0.278 * y[1017]) - (0.00000278 * y[1319])
    return (mRNA87) - (peptide87)
 
def E2_5_1_19_mRNA(t, y):
    mRNA88 = 0.00292 - (0.0093 * y[1018])
    peptide88 = (0.278 * y[1018]) - (0.00000278 * y[1320])
    return (mRNA88) - (peptide88)
 
def E2_5_1_3_mRNA(t, y):
    mRNA89 = 0.00292 - (0.0093 * y[1019])
    peptide89 = (0.278 * y[1019]) - (0.00000278 * y[1321])
    return (mRNA89) - (peptide89)
 
def E2_5_1_47_mRNA(t, y):
    mRNA90 = 0.00292 - (0.0093 * y[1020])
    peptide90 = (0.278 * y[1020]) - (0.00000278 * y[1322])
    return (mRNA90) - (peptide90)
 
def E2_5_1_6_mRNA(t, y):
    mRNA91 = 0.00292 - (0.0093 * y[1021])
    peptide91 = (0.278 * y[1021]) - (0.00000278 * y[1323])
    return (mRNA91) - (peptide91)
 
def E2_5_1_75_mRNA(t, y):
    mRNA92 = 0.00292 - (0.0093 * y[1022])
    peptide92 = (0.278 * y[1022]) - (0.00000278 * y[1324])
    return (mRNA92) - (peptide92)
 
def E2_5_1_78_mRNA(t, y):
    mRNA93 = 0.00292 - (0.0093 * y[1023])
    peptide93 = (0.278 * y[1023]) - (0.00000278 * y[1325])
    return (mRNA93) - (peptide93)
 
def E2_5_1_9_mRNA(t, y):
    mRNA94 = 0.00292 - (0.0093 * y[1024])
    peptide94 = (0.278 * y[1024]) - (0.00000278 * y[1326])
    return (mRNA94) - (peptide94)
 
def E2_6_1_11_mRNA(t, y):
    mRNA95 = 0.00292 - (0.0093 * y[1025])
    peptide95 = (0.278 * y[1025]) - (0.00000278 * y[1327])
    return (mRNA95) - (peptide95)
 
def E2_6_1_16_mRNA(t, y):
    mRNA96 = 0.00292 - (0.0093 * y[1026])
    peptide96 = (0.278 * y[1026]) - (0.00000278 * y[1328])
    return (mRNA96) - (peptide96)
 
def E2_6_1_42_mRNA(t, y):
    mRNA97 = 0.00292 - (0.0093 * y[1027])
    peptide97 = (0.278 * y[1027]) - (0.00000278 * y[1329])
    return (mRNA97) - (peptide97)
 
def E2_6_1_52_mRNA(t, y):
    mRNA98 = 0.00292 - (0.0093 * y[1028])
    peptide98 = (0.278 * y[1028]) - (0.00000278 * y[1330])
    return (mRNA98) - (peptide98)
 
def E2_6_1_9_mRNA(t, y):
    mRNA99 = 0.00292 - (0.0093 * y[1029])
    peptide99 = (0.278 * y[1029]) - (0.00000278 * y[1331])
    return (mRNA99) - (peptide99)
 
def E2_7_1_107_mRNA(t, y):
    mRNA100 = 0.00292 - (0.0093 * y[1030])
    peptide100 = (0.278 * y[1030]) - (0.00000278 * y[1332])
    return (mRNA100) - (peptide100)
 
def E2_7_1_12_mRNA(t, y):
    mRNA101 = 0.00292 - (0.0093 * y[1031])
    peptide101 = (0.278 * y[1031]) - (0.00000278 * y[1333])
    return (mRNA101) - (peptide101)
 
def E2_7_1_148_mRNA(t, y):
    mRNA102 = 0.00292 - (0.0093 * y[1032])
    peptide102 = (0.278 * y[1032]) - (0.00000278 * y[1334])
    return (mRNA102) - (peptide102)
 
def E2_7_1_15_mRNA(t, y):
    mRNA103 = 0.00292 - (0.0093 * y[1033])
    peptide103 = (0.278 * y[1033]) - (0.00000278 * y[1335])
    return (mRNA103) - (peptide103)
 
def E2_7_1_2_mRNA(t, y):
    mRNA104 = 0.00292 - (0.0093 * y[1034])
    peptide104 = (0.278 * y[1034]) - (0.00000278 * y[1336])
    return (mRNA104) - (peptide104)
 
def E2_7_1_21_mRNA(t, y):
    mRNA105 = 0.00292 - (0.0093 * y[1035])
    peptide105 = (0.278 * y[1035]) - (0.00000278 * y[1337])
    return (mRNA105) - (peptide105)
 
def E2_7_1_211_mRNA(t, y):
    mRNA106 = 0.00292 - (0.0093 * y[1036])
    peptide106 = (0.278 * y[1036]) - (0.00000278 * y[1338])
    return (mRNA106) - (peptide106)
 
def E2_7_1_23_mRNA(t, y):
    mRNA107 = 0.00292 - (0.0093 * y[1037])
    peptide107 = (0.278 * y[1037]) - (0.00000278 * y[1339])
    return (mRNA107) - (peptide107)
 
def E2_7_1_24_mRNA(t, y):
    mRNA108 = 0.00292 - (0.0093 * y[1038])
    peptide108 = (0.278 * y[1038]) - (0.00000278 * y[1340])
    return (mRNA108) - (peptide108)
 
def E2_7_1_26_mRNA(t, y):
    mRNA109 = 0.00292 - (0.0093 * y[1039])
    peptide109 = (0.278 * y[1039]) - (0.00000278 * y[1341])
    return (mRNA109) - (peptide109)
 
def E2_7_1_30_mRNA(t, y):
    mRNA110 = 0.00292 - (0.0093 * y[1040])
    peptide110 = (0.278 * y[1040]) - (0.00000278 * y[1342])
    return (mRNA110) - (peptide110)
 
def E2_7_1_31_mRNA(t, y):
    mRNA111 = 0.00292 - (0.0093 * y[1041])
    peptide111 = (0.278 * y[1041]) - (0.00000278 * y[1343])
    return (mRNA111) - (peptide111)
 
def E2_7_1_33_mRNA(t, y):
    mRNA112 = 0.00292 - (0.0093 * y[1042])
    peptide112 = (0.278 * y[1042]) - (0.00000278 * y[1344])
    return (mRNA112) - (peptide112)
 
def E2_7_1_36_mRNA(t, y):
    mRNA113 = 0.00292 - (0.0093 * y[1043])
    peptide113 = (0.278 * y[1043]) - (0.00000278 * y[1345])
    return (mRNA113) - (peptide113)
 
def E2_7_1_39_mRNA(t, y):
    mRNA114 = 0.00292 - (0.0093 * y[1044])
    peptide114 = (0.278 * y[1044]) - (0.00000278 * y[1346])
    return (mRNA114) - (peptide114)
 
def E2_7_1_4_mRNA(t, y):
    mRNA115 = 0.00292 - (0.0093 * y[1045])
    peptide115 = (0.278 * y[1045]) - (0.00000278 * y[1347])
    return (mRNA115) - (peptide115)
 
def E2_7_1_40_mRNA(t, y):
    mRNA116 = 0.00292 - (0.0093 * y[1046])
    peptide116 = (0.278 * y[1046]) - (0.00000278 * y[1348])
    return (mRNA116) - (peptide116)
 
def E2_7_1_48_mRNA(t, y):
    mRNA117 = 0.00292 - (0.0093 * y[1047])
    peptide117 = (0.278 * y[1047]) - (0.00000278 * y[1349])
    return (mRNA117) - (peptide117)
 
def E2_7_1_49_mRNA(t, y):
    mRNA118 = 0.00292 - (0.0093 * y[1048])
    peptide118 = (0.278 * y[1048]) - (0.00000278 * y[1350])
    return (mRNA118) - (peptide118)
 
def E2_7_1_50_mRNA(t, y):
    mRNA119 = 0.00292 - (0.0093 * y[1049])
    peptide119 = (0.278 * y[1049]) - (0.00000278 * y[1351])
    return (mRNA119) - (peptide119)
 
def E2_7_1_6_mRNA(t, y):
    mRNA120 = 0.00292 - (0.0093 * y[1050])
    peptide120 = (0.278 * y[1050]) - (0.00000278 * y[1352])
    return (mRNA120) - (peptide120)
 
def E2_7_1_71_mRNA(t, y):
    mRNA121 = 0.00292 - (0.0093 * y[1051])
    peptide121 = (0.278 * y[1051]) - (0.00000278 * y[1353])
    return (mRNA121) - (peptide121)
 
def E2_7_10_2_mRNA(t, y):
    mRNA122 = 0.00292 - (0.0093 * y[1052])
    peptide122 = (0.278 * y[1052]) - (0.00000278 * y[1354])
    return (mRNA122) - (peptide122)
 
def E2_7_2_1_mRNA(t, y):
    mRNA123 = 0.00292 - (0.0093 * y[1053])
    peptide123 = (0.278 * y[1053]) - (0.00000278 * y[1355])
    return (mRNA123) - (peptide123)
 
def E2_7_2_11_mRNA(t, y):
    mRNA124 = 0.00292 - (0.0093 * y[1054])
    peptide124 = (0.278 * y[1054]) - (0.00000278 * y[1356])
    return (mRNA124) - (peptide124)
 
def E2_7_2_2_mRNA(t, y):
    mRNA125 = 0.00292 - (0.0093 * y[1055])
    peptide125 = (0.278 * y[1055]) - (0.00000278 * y[1357])
    return (mRNA125) - (peptide125)
 
def E2_7_2_3_mRNA(t, y):
    mRNA126 = 0.00292 - (0.0093 * y[1056])
    peptide126 = (0.278 * y[1056]) - (0.00000278 * y[1358])
    return (mRNA126) - (peptide126)
 
def E2_7_2_4_mRNA(t, y):
    mRNA127 = 0.00292 - (0.0093 * y[1057])
    peptide127 = (0.278 * y[1057]) - (0.00000278 * y[1359])
    return (mRNA127) - (peptide127)
 
def E2_7_2_8_mRNA(t, y):
    mRNA128 = 0.00292 - (0.0093 * y[1058])
    peptide128 = (0.278 * y[1058]) - (0.00000278 * y[1360])
    return (mRNA128) - (peptide128)
 
def E2_7_3_9_mRNA(t, y):
    mRNA129 = 0.00292 - (0.0093 * y[1059])
    peptide129 = (0.278 * y[1059]) - (0.00000278 * y[1361])
    return (mRNA129) - (peptide129)
 
def E2_7_4_1_mRNA(t, y):
    mRNA130 = 0.00292 - (0.0093 * y[1060])
    peptide130 = (0.278 * y[1060]) - (0.00000278 * y[1362])
    return (mRNA130) - (peptide130)
 
def E2_7_4_2_mRNA(t, y):
    mRNA131 = 0.00292 - (0.0093 * y[1061])
    peptide131 = (0.278 * y[1061]) - (0.00000278 * y[1363])
    return (mRNA131) - (peptide131)
 
def E2_7_4_22_mRNA(t, y):
    mRNA132 = 0.00292 - (0.0093 * y[1062])
    peptide132 = (0.278 * y[1062]) - (0.00000278 * y[1364])
    return (mRNA132) - (peptide132)
 
def E2_7_4_25_mRNA(t, y):
    mRNA133 = 0.00292 - (0.0093 * y[1063])
    peptide133 = (0.278 * y[1063]) - (0.00000278 * y[1365])
    return (mRNA133) - (peptide133)
 
def E2_7_4_3_mRNA(t, y):
    mRNA134 = 0.00292 - (0.0093 * y[1064])
    peptide134 = (0.278 * y[1064]) - (0.00000278 * y[1366])
    return (mRNA134) - (peptide134)
 
def E2_7_4_6_mRNA(t, y):
    mRNA135 = 0.00292 - (0.0093 * y[1065])
    peptide135 = (0.278 * y[1065]) - (0.00000278 * y[1367])
    return (mRNA135) - (peptide135)
 
def E2_7_4_7_mRNA(t, y):
    mRNA136 = 0.00292 - (0.0093 * y[1066])
    peptide136 = (0.278 * y[1066]) - (0.00000278 * y[1368])
    return (mRNA136) - (peptide136)
 
def E2_7_4_8_mRNA(t, y):
    mRNA137 = 0.00292 - (0.0093 * y[1067])
    peptide137 = (0.278 * y[1067]) - (0.00000278 * y[1369])
    return (mRNA137) - (peptide137)
 
def E2_7_4_9_mRNA(t, y):
    mRNA138 = 0.00292 - (0.0093 * y[1068])
    peptide138 = (0.278 * y[1068]) - (0.00000278 * y[1370])
    return (mRNA138) - (peptide138)
 
def E2_7_6_1_mRNA(t, y):
    mRNA139 = 0.00292 - (0.0093 * y[1069])
    peptide139 = (0.278 * y[1069]) - (0.00000278 * y[1371])
    return (mRNA139) - (peptide139)
 
def E2_7_6_2_mRNA(t, y):
    mRNA140 = 0.00292 - (0.0093 * y[1070])
    peptide140 = (0.278 * y[1070]) - (0.00000278 * y[1372])
    return (mRNA140) - (peptide140)
 
def E2_7_6_3_mRNA(t, y):
    mRNA141 = 0.00292 - (0.0093 * y[1071])
    peptide141 = (0.278 * y[1071]) - (0.00000278 * y[1373])
    return (mRNA141) - (peptide141)
 
def E2_7_6_5_mRNA(t, y):
    mRNA142 = 0.00292 - (0.0093 * y[1072])
    peptide142 = (0.278 * y[1072]) - (0.00000278 * y[1374])
    return (mRNA142) - (peptide142)
 
def E2_7_7_12_mRNA(t, y):
    mRNA143 = 0.00292 - (0.0093 * y[1073])
    peptide143 = (0.278 * y[1073]) - (0.00000278 * y[1375])
    return (mRNA143) - (peptide143)
 
def E2_7_7_18_mRNA(t, y):
    mRNA144 = 0.00292 - (0.0093 * y[1074])
    peptide144 = (0.278 * y[1074]) - (0.00000278 * y[1376])
    return (mRNA144) - (peptide144)
 
def E2_7_7_2_mRNA(t, y):
    mRNA145 = 0.00292 - (0.0093 * y[1075])
    peptide145 = (0.278 * y[1075]) - (0.00000278 * y[1377])
    return (mRNA145) - (peptide145)
 
def E2_7_7_23_mRNA(t, y):
    mRNA146 = 0.00292 - (0.0093 * y[1076])
    peptide146 = (0.278 * y[1076]) - (0.00000278 * y[1378])
    return (mRNA146) - (peptide146)
 
def E2_7_7_24_mRNA(t, y):
    mRNA147 = 0.00292 - (0.0093 * y[1077])
    peptide147 = (0.278 * y[1077]) - (0.00000278 * y[1379])
    return (mRNA147) - (peptide147)
 
def E2_7_7_3_mRNA(t, y):
    mRNA148 = 0.00292 - (0.0093 * y[1078])
    peptide148 = (0.278 * y[1078]) - (0.00000278 * y[1380])
    return (mRNA148) - (peptide148)
 
def E2_7_7_41_mRNA(t, y):
    mRNA149 = 0.00292 - (0.0093 * y[1079])
    peptide149 = (0.278 * y[1079]) - (0.00000278 * y[1381])
    return (mRNA149) - (peptide149)
 
def E2_7_7_6_mRNA(t, y):
    mRNA150 = 0.00292 - (0.0093 * y[1080])
    peptide150 = (0.278 * y[1080]) - (0.00000278 * y[1382])
    return (mRNA150) - (peptide150)
 
def E2_7_7_7_mRNA(t, y):
    mRNA151 = 0.00292 - (0.0093 * y[1081])
    peptide151 = (0.278 * y[1081]) - (0.00000278 * y[1383])
    return (mRNA151) - (peptide151)
 
def E2_7_7_77_mRNA(t, y):
    mRNA152 = 0.00292 - (0.0093 * y[1082])
    peptide152 = (0.278 * y[1082]) - (0.00000278 * y[1384])
    return (mRNA152) - (peptide152)
 
def E2_7_7_85_mRNA(t, y):
    mRNA153 = 0.00292 - (0.0093 * y[1083])
    peptide153 = (0.278 * y[1083]) - (0.00000278 * y[1385])
    return (mRNA153) - (peptide153)
 
def E2_7_7_87_mRNA(t, y):
    mRNA154 = 0.00292 - (0.0093 * y[1084])
    peptide154 = (0.278 * y[1084]) - (0.00000278 * y[1386])
    return (mRNA154) - (peptide154)
 
def E2_7_7_9_mRNA(t, y):
    mRNA155 = 0.00292 - (0.0093 * y[1085])
    peptide155 = (0.278 * y[1085]) - (0.00000278 * y[1387])
    return (mRNA155) - (peptide155)
 
def E2_7_8_13_mRNA(t, y):
    mRNA156 = 0.00292 - (0.0093 * y[1086])
    peptide156 = (0.278 * y[1086]) - (0.00000278 * y[1388])
    return (mRNA156) - (peptide156)
 
def E2_7_8_5_mRNA(t, y):
    mRNA157 = 0.00292 - (0.0093 * y[1087])
    peptide157 = (0.278 * y[1087]) - (0.00000278 * y[1389])
    return (mRNA157) - (peptide157)
 
def E2_7_8_7_mRNA(t, y):
    mRNA158 = 0.00292 - (0.0093 * y[1088])
    peptide158 = (0.278 * y[1088]) - (0.00000278 * y[1390])
    return (mRNA158) - (peptide158)
 
def E2_8_1_13_mRNA(t, y):
    mRNA159 = 0.00292 - (0.0093 * y[1089])
    peptide159 = (0.278 * y[1089]) - (0.00000278 * y[1391])
    return (mRNA159) - (peptide159)
 
def E2_8_1_4_mRNA(t, y):
    mRNA160 = 0.00292 - (0.0093 * y[1090])
    peptide160 = (0.278 * y[1090]) - (0.00000278 * y[1392])
    return (mRNA160) - (peptide160)
 
def E2_8_1_7_mRNA(t, y):
    mRNA161 = 0.00292 - (0.0093 * y[1091])
    peptide161 = (0.278 * y[1091]) - (0.00000278 * y[1393])
    return (mRNA161) - (peptide161)
 
def E3_1_1_103_mRNA(t, y):
    mRNA162 = 0.00292 - (0.0093 * y[1092])
    peptide162 = (0.278 * y[1092]) - (0.00000278 * y[1394])
    return (mRNA162) - (peptide162)
 
def E3_1_1_106_mRNA(t, y):
    mRNA163 = 0.00292 - (0.0093 * y[1093])
    peptide163 = (0.278 * y[1093]) - (0.00000278 * y[1395])
    return (mRNA163) - (peptide163)
 
def E3_1_1_29_mRNA(t, y):
    mRNA164 = 0.00292 - (0.0093 * y[1094])
    peptide164 = (0.278 * y[1094]) - (0.00000278 * y[1396])
    return (mRNA164) - (peptide164)
 
def E3_1_3_15_mRNA(t, y):
    mRNA165 = 0.00292 - (0.0093 * y[1095])
    peptide165 = (0.278 * y[1095]) - (0.00000278 * y[1397])
    return (mRNA165) - (peptide165)
 
def E3_1_3_27_mRNA(t, y):
    mRNA166 = 0.00292 - (0.0093 * y[1096])
    peptide166 = (0.278 * y[1096]) - (0.00000278 * y[1398])
    return (mRNA166) - (peptide166)
 
def E3_1_3_48_mRNA(t, y):
    mRNA167 = 0.00292 - (0.0093 * y[1097])
    peptide167 = (0.278 * y[1097]) - (0.00000278 * y[1399])
    return (mRNA167) - (peptide167)
 
def E3_1_3_7_mRNA(t, y):
    mRNA168 = 0.00292 - (0.0093 * y[1098])
    peptide168 = (0.278 * y[1098]) - (0.00000278 * y[1400])
    return (mRNA168) - (peptide168)
 
def E3_1_4_4_mRNA(t, y):
    mRNA169 = 0.00292 - (0.0093 * y[1099])
    peptide169 = (0.278 * y[1099]) - (0.00000278 * y[1401])
    return (mRNA169) - (peptide169)
 
def E3_2_1_22_mRNA(t, y):
    mRNA170 = 0.00292 - (0.0093 * y[1100])
    peptide170 = (0.278 * y[1100]) - (0.00000278 * y[1402])
    return (mRNA170) - (peptide170)
 
def E3_2_1_26_mRNA(t, y):
    mRNA171 = 0.00292 - (0.0093 * y[1101])
    peptide171 = (0.278 * y[1101]) - (0.00000278 * y[1403])
    return (mRNA171) - (peptide171)
 
def E3_2_1_93_mRNA(t, y):
    mRNA172 = 0.00292 - (0.0093 * y[1102])
    peptide172 = (0.278 * y[1102]) - (0.00000278 * y[1404])
    return (mRNA172) - (peptide172)
 
def E3_2_2_3_mRNA(t, y):
    mRNA173 = 0.00292 - (0.0093 * y[1103])
    peptide173 = (0.278 * y[1103]) - (0.00000278 * y[1405])
    return (mRNA173) - (peptide173)
 
def E3_2_2_9_mRNA(t, y):
    mRNA174 = 0.00292 - (0.0093 * y[1104])
    peptide174 = (0.278 * y[1104]) - (0.00000278 * y[1406])
    return (mRNA174) - (peptide174)
 
def E3_5_1_2_mRNA(t, y):
    mRNA175 = 0.00292 - (0.0093 * y[1105])
    peptide175 = (0.278 * y[1105]) - (0.00000278 * y[1407])
    return (mRNA175) - (peptide175)
 
def E3_5_1_28_mRNA(t, y):
    mRNA176 = 0.00292 - (0.0093 * y[1106])
    peptide176 = (0.278 * y[1106]) - (0.00000278 * y[1408])
    return (mRNA176) - (peptide176)
 
def E3_5_1_4_mRNA(t, y):
    mRNA177 = 0.00292 - (0.0093 * y[1107])
    peptide177 = (0.278 * y[1107]) - (0.00000278 * y[1409])
    return (mRNA177) - (peptide177)
 
def E3_5_1_88_mRNA(t, y):
    mRNA178 = 0.00292 - (0.0093 * y[1108])
    peptide178 = (0.278 * y[1108]) - (0.00000278 * y[1410])
    return (mRNA178) - (peptide178)
 
def E3_5_2_3_mRNA(t, y):
    mRNA179 = 0.00292 - (0.0093 * y[1109])
    peptide179 = (0.278 * y[1109]) - (0.00000278 * y[1411])
    return (mRNA179) - (peptide179)
 
def E3_5_2_5_mRNA(t, y):
    mRNA180 = 0.00292 - (0.0093 * y[1110])
    peptide180 = (0.278 * y[1110]) - (0.00000278 * y[1412])
    return (mRNA180) - (peptide180)
 
def E3_5_2_9_mRNA(t, y):
    mRNA181 = 0.00292 - (0.0093 * y[1111])
    peptide181 = (0.278 * y[1111]) - (0.00000278 * y[1413])
    return (mRNA181) - (peptide181)
 
def E3_5_3_6_mRNA(t, y):
    mRNA182 = 0.00292 - (0.0093 * y[1112])
    peptide182 = (0.278 * y[1112]) - (0.00000278 * y[1414])
    return (mRNA182) - (peptide182)
 
def E3_5_4_10_mRNA(t, y):
    mRNA183 = 0.00292 - (0.0093 * y[1113])
    peptide183 = (0.278 * y[1113]) - (0.00000278 * y[1415])
    return (mRNA183) - (peptide183)
 
def E3_5_4_16_mRNA(t, y):
    mRNA184 = 0.00292 - (0.0093 * y[1114])
    peptide184 = (0.278 * y[1114]) - (0.00000278 * y[1416])
    return (mRNA184) - (peptide184)
 
def E3_5_4_19_mRNA(t, y):
    mRNA185 = 0.00292 - (0.0093 * y[1115])
    peptide185 = (0.278 * y[1115]) - (0.00000278 * y[1417])
    return (mRNA185) - (peptide185)
 
def E3_5_4_25_mRNA(t, y):
    mRNA186 = 0.00292 - (0.0093 * y[1116])
    peptide186 = (0.278 * y[1116]) - (0.00000278 * y[1418])
    return (mRNA186) - (peptide186)
 
def E3_5_4_26_mRNA(t, y):
    mRNA187 = 0.00292 - (0.0093 * y[1117])
    peptide187 = (0.278 * y[1117]) - (0.00000278 * y[1419])
    return (mRNA187) - (peptide187)
 
def E3_5_4_3_mRNA(t, y):
    mRNA188 = 0.00292 - (0.0093 * y[1118])
    peptide188 = (0.278 * y[1118]) - (0.00000278 * y[1420])
    return (mRNA188) - (peptide188)
 
def E3_5_4_33_mRNA(t, y):
    mRNA189 = 0.00292 - (0.0093 * y[1119])
    peptide189 = (0.278 * y[1119]) - (0.00000278 * y[1421])
    return (mRNA189) - (peptide189)
 
def E3_5_99_2_mRNA(t, y):
    mRNA190 = 0.00292 - (0.0093 * y[1120])
    peptide190 = (0.278 * y[1120]) - (0.00000278 * y[1422])
    return (mRNA190) - (peptide190)
 
def E3_6_1_1_mRNA(t, y):
    mRNA191 = 0.00292 - (0.0093 * y[1121])
    peptide191 = (0.278 * y[1121]) - (0.00000278 * y[1423])
    return (mRNA191) - (peptide191)
 
def E3_6_1_27_mRNA(t, y):
    mRNA192 = 0.00292 - (0.0093 * y[1122])
    peptide192 = (0.278 * y[1122]) - (0.00000278 * y[1424])
    return (mRNA192) - (peptide192)
 
def E3_6_1_31_mRNA(t, y):
    mRNA193 = 0.00292 - (0.0093 * y[1123])
    peptide193 = (0.278 * y[1123]) - (0.00000278 * y[1425])
    return (mRNA193) - (peptide193)
 
def E3_6_1_41_mRNA(t, y):
    mRNA194 = 0.00292 - (0.0093 * y[1124])
    peptide194 = (0.278 * y[1124]) - (0.00000278 * y[1426])
    return (mRNA194) - (peptide194)
 
def E3_6_1_66_mRNA(t, y):
    mRNA195 = 0.00292 - (0.0093 * y[1125])
    peptide195 = (0.278 * y[1125]) - (0.00000278 * y[1427])
    return (mRNA195) - (peptide195)
 
def E4_1_1_101_mRNA(t, y):
    mRNA196 = 0.00292 - (0.0093 * y[1126])
    peptide196 = (0.278 * y[1126]) - (0.00000278 * y[1428])
    return (mRNA196) - (peptide196)
 
def E4_1_1_15_mRNA(t, y):
    mRNA197 = 0.00292 - (0.0093 * y[1127])
    peptide197 = (0.278 * y[1127]) - (0.00000278 * y[1429])
    return (mRNA197) - (peptide197)
 
def E4_1_1_20_mRNA(t, y):
    mRNA198 = 0.00292 - (0.0093 * y[1128])
    peptide198 = (0.278 * y[1128]) - (0.00000278 * y[1430])
    return (mRNA198) - (peptide198)
 
def E4_1_1_21_mRNA(t, y):
    mRNA199 = 0.00292 - (0.0093 * y[1129])
    peptide199 = (0.278 * y[1129]) - (0.00000278 * y[1431])
    return (mRNA199) - (peptide199)
 
def E4_1_1_23_mRNA(t, y):
    mRNA200 = 0.00292 - (0.0093 * y[1130])
    peptide200 = (0.278 * y[1130]) - (0.00000278 * y[1432])
    return (mRNA200) - (peptide200)
 
def E4_1_1_33_mRNA(t, y):
    mRNA201 = 0.00292 - (0.0093 * y[1131])
    peptide201 = (0.278 * y[1131]) - (0.00000278 * y[1433])
    return (mRNA201) - (peptide201)
 
def E4_1_1_36_mRNA(t, y):
    mRNA202 = 0.00292 - (0.0093 * y[1132])
    peptide202 = (0.278 * y[1132]) - (0.00000278 * y[1434])
    return (mRNA202) - (peptide202)
 
def E4_1_1_5_mRNA(t, y):
    mRNA203 = 0.00292 - (0.0093 * y[1133])
    peptide203 = (0.278 * y[1133]) - (0.00000278 * y[1435])
    return (mRNA203) - (peptide203)
 
def E4_1_2_25_mRNA(t, y):
    mRNA204 = 0.00292 - (0.0093 * y[1134])
    peptide204 = (0.278 * y[1134]) - (0.00000278 * y[1436])
    return (mRNA204) - (peptide204)
 
def E4_1_2_4_mRNA(t, y):
    mRNA205 = 0.00292 - (0.0093 * y[1135])
    peptide205 = (0.278 * y[1135]) - (0.00000278 * y[1437])
    return (mRNA205) - (peptide205)
 
def E4_1_3_36_mRNA(t, y):
    mRNA206 = 0.00292 - (0.0093 * y[1136])
    peptide206 = (0.278 * y[1136]) - (0.00000278 * y[1438])
    return (mRNA206) - (peptide206)
 
def E4_1_99_22_mRNA(t, y):
    mRNA207 = 0.00292 - (0.0093 * y[1137])
    peptide207 = (0.278 * y[1137]) - (0.00000278 * y[1439])
    return (mRNA207) - (peptide207)
 
def E4_2_1_11_mRNA(t, y):
    mRNA208 = 0.00292 - (0.0093 * y[1138])
    peptide208 = (0.278 * y[1138]) - (0.00000278 * y[1440])
    return (mRNA208) - (peptide208)
 
def E4_2_1_113_mRNA(t, y):
    mRNA209 = 0.00292 - (0.0093 * y[1139])
    peptide209 = (0.278 * y[1139]) - (0.00000278 * y[1441])
    return (mRNA209) - (peptide209)
 
def E4_2_1_19_mRNA(t, y):
    mRNA210 = 0.00292 - (0.0093 * y[1140])
    peptide210 = (0.278 * y[1140]) - (0.00000278 * y[1442])
    return (mRNA210) - (peptide210)
 
def E4_2_1_2_mRNA(t, y):
    mRNA211 = 0.00292 - (0.0093 * y[1141])
    peptide211 = (0.278 * y[1141]) - (0.00000278 * y[1443])
    return (mRNA211) - (peptide211)
 
def E4_2_1_33_mRNA(t, y):
    mRNA212 = 0.00292 - (0.0093 * y[1142])
    peptide212 = (0.278 * y[1142]) - (0.00000278 * y[1444])
    return (mRNA212) - (peptide212)
 
def E4_2_1_46_mRNA(t, y):
    mRNA213 = 0.00292 - (0.0093 * y[1143])
    peptide213 = (0.278 * y[1143]) - (0.00000278 * y[1445])
    return (mRNA213) - (peptide213)
 
def E4_2_1_59_mRNA(t, y):
    mRNA214 = 0.00292 - (0.0093 * y[1144])
    peptide214 = (0.278 * y[1144]) - (0.00000278 * y[1446])
    return (mRNA214) - (peptide214)
 
def E4_2_1_9_mRNA(t, y):
    mRNA215 = 0.00292 - (0.0093 * y[1145])
    peptide215 = (0.278 * y[1145]) - (0.00000278 * y[1447])
    return (mRNA215) - (peptide215)
 
def E4_2_3_1_mRNA(t, y):
    mRNA216 = 0.00292 - (0.0093 * y[1146])
    peptide216 = (0.278 * y[1146]) - (0.00000278 * y[1448])
    return (mRNA216) - (peptide216)
 
def E4_2_3_5_mRNA(t, y):
    mRNA217 = 0.00292 - (0.0093 * y[1147])
    peptide217 = (0.278 * y[1147]) - (0.00000278 * y[1449])
    return (mRNA217) - (peptide217)
 
def E4_3_1_17_mRNA(t, y):
    mRNA218 = 0.00292 - (0.0093 * y[1148])
    peptide218 = (0.278 * y[1148]) - (0.00000278 * y[1450])
    return (mRNA218) - (peptide218)
 
def E4_3_1_19_mRNA(t, y):
    mRNA219 = 0.00292 - (0.0093 * y[1149])
    peptide219 = (0.278 * y[1149]) - (0.00000278 * y[1451])
    return (mRNA219) - (peptide219)
 
def E4_3_1_8_mRNA(t, y):
    mRNA220 = 0.00292 - (0.0093 * y[1150])
    peptide220 = (0.278 * y[1150]) - (0.00000278 * y[1452])
    return (mRNA220) - (peptide220)
 
def E4_3_2_1_mRNA(t, y):
    mRNA221 = 0.00292 - (0.0093 * y[1151])
    peptide221 = (0.278 * y[1151]) - (0.00000278 * y[1453])
    return (mRNA221) - (peptide221)
 
def E4_3_2_10_mRNA(t, y):
    mRNA222 = 0.00292 - (0.0093 * y[1152])
    peptide222 = (0.278 * y[1152]) - (0.00000278 * y[1454])
    return (mRNA222) - (peptide222)
 
def E4_3_2_2_mRNA(t, y):
    mRNA223 = 0.00292 - (0.0093 * y[1153])
    peptide223 = (0.278 * y[1153]) - (0.00000278 * y[1455])
    return (mRNA223) - (peptide223)
 
def E4_3_3_7_mRNA(t, y):
    mRNA224 = 0.00292 - (0.0093 * y[1154])
    peptide224 = (0.278 * y[1154]) - (0.00000278 * y[1456])
    return (mRNA224) - (peptide224)
 
def E4_4_1_21_mRNA(t, y):
    mRNA225 = 0.00292 - (0.0093 * y[1155])
    peptide225 = (0.278 * y[1155]) - (0.00000278 * y[1457])
    return (mRNA225) - (peptide225)
 
def E4_6_1_17_mRNA(t, y):
    mRNA226 = 0.00292 - (0.0093 * y[1156])
    peptide226 = (0.278 * y[1156]) - (0.00000278 * y[1458])
    return (mRNA226) - (peptide226)
 
def E4_99_1_12_mRNA(t, y):
    mRNA227 = 0.00292 - (0.0093 * y[1157])
    peptide227 = (0.278 * y[1157]) - (0.00000278 * y[1459])
    return (mRNA227) - (peptide227)
 
def E5_1_1_1_mRNA(t, y):
    mRNA228 = 0.00292 - (0.0093 * y[1158])
    peptide228 = (0.278 * y[1158]) - (0.00000278 * y[1460])
    return (mRNA228) - (peptide228)
 
def E5_1_1_3_mRNA(t, y):
    mRNA229 = 0.00292 - (0.0093 * y[1159])
    peptide229 = (0.278 * y[1159]) - (0.00000278 * y[1461])
    return (mRNA229) - (peptide229)
 
def E5_1_1_7_mRNA(t, y):
    mRNA230 = 0.00292 - (0.0093 * y[1160])
    peptide230 = (0.278 * y[1160]) - (0.00000278 * y[1462])
    return (mRNA230) - (peptide230)
 
def E5_1_3_1_mRNA(t, y):
    mRNA231 = 0.00292 - (0.0093 * y[1161])
    peptide231 = (0.278 * y[1161]) - (0.00000278 * y[1463])
    return (mRNA231) - (peptide231)
 
def E5_1_3_13_mRNA(t, y):
    mRNA232 = 0.00292 - (0.0093 * y[1162])
    peptide232 = (0.278 * y[1162]) - (0.00000278 * y[1464])
    return (mRNA232) - (peptide232)
 
def E5_1_3_14_mRNA(t, y):
    mRNA233 = 0.00292 - (0.0093 * y[1163])
    peptide233 = (0.278 * y[1163]) - (0.00000278 * y[1465])
    return (mRNA233) - (peptide233)
 
def E5_1_3_2_mRNA(t, y):
    mRNA234 = 0.00292 - (0.0093 * y[1164])
    peptide234 = (0.278 * y[1164]) - (0.00000278 * y[1466])
    return (mRNA234) - (peptide234)
 
def E5_1_99_6_mRNA(t, y):
    mRNA235 = 0.00292 - (0.0093 * y[1165])
    peptide235 = (0.278 * y[1165]) - (0.00000278 * y[1467])
    return (mRNA235) - (peptide235)
 
def E5_2_1_8_mRNA(t, y):
    mRNA236 = 0.00292 - (0.0093 * y[1166])
    peptide236 = (0.278 * y[1166]) - (0.00000278 * y[1468])
    return (mRNA236) - (peptide236)
 
def E5_3_1_1_mRNA(t, y):
    mRNA237 = 0.00292 - (0.0093 * y[1167])
    peptide237 = (0.278 * y[1167]) - (0.00000278 * y[1469])
    return (mRNA237) - (peptide237)
 
def E5_3_1_16_mRNA(t, y):
    mRNA238 = 0.00292 - (0.0093 * y[1168])
    peptide238 = (0.278 * y[1168]) - (0.00000278 * y[1470])
    return (mRNA238) - (peptide238)
 
def E5_3_1_4_mRNA(t, y):
    mRNA239 = 0.00292 - (0.0093 * y[1169])
    peptide239 = (0.278 * y[1169]) - (0.00000278 * y[1471])
    return (mRNA239) - (peptide239)
 
def E5_3_1_6_mRNA(t, y):
    mRNA240 = 0.00292 - (0.0093 * y[1170])
    peptide240 = (0.278 * y[1170]) - (0.00000278 * y[1472])
    return (mRNA240) - (peptide240)
 
def E5_3_1_9_mRNA(t, y):
    mRNA241 = 0.00292 - (0.0093 * y[1171])
    peptide241 = (0.278 * y[1171]) - (0.00000278 * y[1473])
    return (mRNA241) - (peptide241)
 
def E5_3_2_6_mRNA(t, y):
    mRNA242 = 0.00292 - (0.0093 * y[1172])
    peptide242 = (0.278 * y[1172]) - (0.00000278 * y[1474])
    return (mRNA242) - (peptide242)
 
def E5_3_3_2_mRNA(t, y):
    mRNA243 = 0.00292 - (0.0093 * y[1173])
    peptide243 = (0.278 * y[1173]) - (0.00000278 * y[1475])
    return (mRNA243) - (peptide243)
 
def E5_4_2_10_mRNA(t, y):
    mRNA244 = 0.00292 - (0.0093 * y[1174])
    peptide244 = (0.278 * y[1174]) - (0.00000278 * y[1476])
    return (mRNA244) - (peptide244)
 
def E5_4_2_11_mRNA(t, y):
    mRNA245 = 0.00292 - (0.0093 * y[1175])
    peptide245 = (0.278 * y[1175]) - (0.00000278 * y[1477])
    return (mRNA245) - (peptide245)
 
def E5_4_2_6_mRNA(t, y):
    mRNA246 = 0.00292 - (0.0093 * y[1176])
    peptide246 = (0.278 * y[1176]) - (0.00000278 * y[1478])
    return (mRNA246) - (peptide246)
 
def E5_4_99_12_mRNA(t, y):
    mRNA247 = 0.00292 - (0.0093 * y[1177])
    peptide247 = (0.278 * y[1177]) - (0.00000278 * y[1479])
    return (mRNA247) - (peptide247)
 
def E5_4_99_18_mRNA(t, y):
    mRNA248 = 0.00292 - (0.0093 * y[1178])
    peptide248 = (0.278 * y[1178]) - (0.00000278 * y[1480])
    return (mRNA248) - (peptide248)
 
def E5_4_99_5_mRNA(t, y):
    mRNA249 = 0.00292 - (0.0093 * y[1179])
    peptide249 = (0.278 * y[1179]) - (0.00000278 * y[1481])
    return (mRNA249) - (peptide249)
 
def E5_4_99_62_mRNA(t, y):
    mRNA250 = 0.00292 - (0.0093 * y[1180])
    peptide250 = (0.278 * y[1180]) - (0.00000278 * y[1482])
    return (mRNA250) - (peptide250)
 
def E5_4_99_9_mRNA(t, y):
    mRNA251 = 0.00292 - (0.0093 * y[1181])
    peptide251 = (0.278 * y[1181]) - (0.00000278 * y[1483])
    return (mRNA251) - (peptide251)
 
def E6_1_1_1_mRNA(t, y):
    mRNA252 = 0.00292 - (0.0093 * y[1182])
    peptide252 = (0.278 * y[1182]) - (0.00000278 * y[1484])
    return (mRNA252) - (peptide252)
 
def E6_1_1_10_mRNA(t, y):
    mRNA253 = 0.00292 - (0.0093 * y[1183])
    peptide253 = (0.278 * y[1183]) - (0.00000278 * y[1485])
    return (mRNA253) - (peptide253)
 
def E6_1_1_11_mRNA(t, y):
    mRNA254 = 0.00292 - (0.0093 * y[1184])
    peptide254 = (0.278 * y[1184]) - (0.00000278 * y[1486])
    return (mRNA254) - (peptide254)
 
def E6_1_1_12_mRNA(t, y):
    mRNA255 = 0.00292 - (0.0093 * y[1185])
    peptide255 = (0.278 * y[1185]) - (0.00000278 * y[1487])
    return (mRNA255) - (peptide255)
 
def E6_1_1_13_mRNA(t, y):
    mRNA256 = 0.00292 - (0.0093 * y[1186])
    peptide256 = (0.278 * y[1186]) - (0.00000278 * y[1488])
    return (mRNA256) - (peptide256)
 
def E6_1_1_14_mRNA(t, y):
    mRNA257 = 0.00292 - (0.0093 * y[1187])
    peptide257 = (0.278 * y[1187]) - (0.00000278 * y[1489])
    return (mRNA257) - (peptide257)
 
def E6_1_1_15_mRNA(t, y):
    mRNA258 = 0.00292 - (0.0093 * y[1188])
    peptide258 = (0.278 * y[1188]) - (0.00000278 * y[1490])
    return (mRNA258) - (peptide258)
 
def E6_1_1_16_mRNA(t, y):
    mRNA259 = 0.00292 - (0.0093 * y[1189])
    peptide259 = (0.278 * y[1189]) - (0.00000278 * y[1491])
    return (mRNA259) - (peptide259)
 
def E6_1_1_17_mRNA(t, y):
    mRNA260 = 0.00292 - (0.0093 * y[1190])
    peptide260 = (0.278 * y[1190]) - (0.00000278 * y[1492])
    return (mRNA260) - (peptide260)
 
def E6_1_1_19_mRNA(t, y):
    mRNA261 = 0.00292 - (0.0093 * y[1191])
    peptide261 = (0.278 * y[1191]) - (0.00000278 * y[1493])
    return (mRNA261) - (peptide261)
 
def E6_1_1_2_mRNA(t, y):
    mRNA262 = 0.00292 - (0.0093 * y[1192])
    peptide262 = (0.278 * y[1192]) - (0.00000278 * y[1494])
    return (mRNA262) - (peptide262)
 
def E6_1_1_20_mRNA(t, y):
    mRNA263 = 0.00292 - (0.0093 * y[1193])
    peptide263 = (0.278 * y[1193]) - (0.00000278 * y[1495])
    return (mRNA263) - (peptide263)
 
def E6_1_1_21_mRNA(t, y):
    mRNA264 = 0.00292 - (0.0093 * y[1194])
    peptide264 = (0.278 * y[1194]) - (0.00000278 * y[1496])
    return (mRNA264) - (peptide264)
 
def E6_1_1_22_mRNA(t, y):
    mRNA265 = 0.00292 - (0.0093 * y[1195])
    peptide265 = (0.278 * y[1195]) - (0.00000278 * y[1497])
    return (mRNA265) - (peptide265)
 
def E6_1_1_3_mRNA(t, y):
    mRNA266 = 0.00292 - (0.0093 * y[1196])
    peptide266 = (0.278 * y[1196]) - (0.00000278 * y[1498])
    return (mRNA266) - (peptide266)
 
def E6_1_1_4_mRNA(t, y):
    mRNA267 = 0.00292 - (0.0093 * y[1197])
    peptide267 = (0.278 * y[1197]) - (0.00000278 * y[1499])
    return (mRNA267) - (peptide267)
 
def E6_1_1_5_mRNA(t, y):
    mRNA268 = 0.00292 - (0.0093 * y[1198])
    peptide268 = (0.278 * y[1198]) - (0.00000278 * y[1500])
    return (mRNA268) - (peptide268)
 
def E6_1_1_6_mRNA(t, y):
    mRNA269 = 0.00292 - (0.0093 * y[1199])
    peptide269 = (0.278 * y[1199]) - (0.00000278 * y[1501])
    return (mRNA269) - (peptide269)
 
def E6_1_1_7_mRNA(t, y):
    mRNA270 = 0.00292 - (0.0093 * y[1200])
    peptide270 = (0.278 * y[1200]) - (0.00000278 * y[1502])
    return (mRNA270) - (peptide270)
 
def E6_1_1_9_mRNA(t, y):
    mRNA271 = 0.00292 - (0.0093 * y[1201])
    peptide271 = (0.278 * y[1201]) - (0.00000278 * y[1503])
    return (mRNA271) - (peptide271)
 
def E6_2_1_26_mRNA(t, y):
    mRNA272 = 0.00292 - (0.0093 * y[1202])
    peptide272 = (0.278 * y[1202]) - (0.00000278 * y[1504])
    return (mRNA272) - (peptide272)
 
def E6_3_1_1_mRNA(t, y):
    mRNA273 = 0.00292 - (0.0093 * y[1203])
    peptide273 = (0.278 * y[1203]) - (0.00000278 * y[1505])
    return (mRNA273) - (peptide273)
 
def E6_3_1_2_mRNA(t, y):
    mRNA274 = 0.00292 - (0.0093 * y[1204])
    peptide274 = (0.278 * y[1204]) - (0.00000278 * y[1506])
    return (mRNA274) - (peptide274)
 
def E6_3_1_20_mRNA(t, y):
    mRNA275 = 0.00292 - (0.0093 * y[1205])
    peptide275 = (0.278 * y[1205]) - (0.00000278 * y[1507])
    return (mRNA275) - (peptide275)
 
def E6_3_1_5_mRNA(t, y):
    mRNA276 = 0.00292 - (0.0093 * y[1206])
    peptide276 = (0.278 * y[1206]) - (0.00000278 * y[1508])
    return (mRNA276) - (peptide276)
 
def E6_3_2_10_mRNA(t, y):
    mRNA277 = 0.00292 - (0.0093 * y[1207])
    peptide277 = (0.278 * y[1207]) - (0.00000278 * y[1509])
    return (mRNA277) - (peptide277)
 
def E6_3_2_13_mRNA(t, y):
    mRNA278 = 0.00292 - (0.0093 * y[1208])
    peptide278 = (0.278 * y[1208]) - (0.00000278 * y[1510])
    return (mRNA278) - (peptide278)
 
def E6_3_2_5_mRNA(t, y):
    mRNA279 = 0.00292 - (0.0093 * y[1209])
    peptide279 = (0.278 * y[1209]) - (0.00000278 * y[1511])
    return (mRNA279) - (peptide279)
 
def E6_3_2_6_mRNA(t, y):
    mRNA280 = 0.00292 - (0.0093 * y[1210])
    peptide280 = (0.278 * y[1210]) - (0.00000278 * y[1512])
    return (mRNA280) - (peptide280)
 
def E6_3_2_8_mRNA(t, y):
    mRNA281 = 0.00292 - (0.0093 * y[1211])
    peptide281 = (0.278 * y[1211]) - (0.00000278 * y[1513])
    return (mRNA281) - (peptide281)
 
def E6_3_2_9_mRNA(t, y):
    mRNA282 = 0.00292 - (0.0093 * y[1212])
    peptide282 = (0.278 * y[1212]) - (0.00000278 * y[1514])
    return (mRNA282) - (peptide282)
 
def E6_3_3_1_mRNA(t, y):
    mRNA283 = 0.00292 - (0.0093 * y[1213])
    peptide283 = (0.278 * y[1213]) - (0.00000278 * y[1515])
    return (mRNA283) - (peptide283)
 
def E6_3_3_2_mRNA(t, y):
    mRNA284 = 0.00292 - (0.0093 * y[1214])
    peptide284 = (0.278 * y[1214]) - (0.00000278 * y[1516])
    return (mRNA284) - (peptide284)
 
def E6_3_4_13_mRNA(t, y):
    mRNA285 = 0.00292 - (0.0093 * y[1215])
    peptide285 = (0.278 * y[1215]) - (0.00000278 * y[1517])
    return (mRNA285) - (peptide285)
 
def E6_3_4_14_mRNA(t, y):
    mRNA286 = 0.00292 - (0.0093 * y[1216])
    peptide286 = (0.278 * y[1216]) - (0.00000278 * y[1518])
    return (mRNA286) - (peptide286)
 
def E6_3_4_15_mRNA(t, y):
    mRNA287 = 0.00292 - (0.0093 * y[1217])
    peptide287 = (0.278 * y[1217]) - (0.00000278 * y[1519])
    return (mRNA287) - (peptide287)
 
def E6_3_4_18_mRNA(t, y):
    mRNA288 = 0.00292 - (0.0093 * y[1218])
    peptide288 = (0.278 * y[1218]) - (0.00000278 * y[1520])
    return (mRNA288) - (peptide288)
 
def E6_3_4_19_mRNA(t, y):
    mRNA289 = 0.00292 - (0.0093 * y[1219])
    peptide289 = (0.278 * y[1219]) - (0.00000278 * y[1521])
    return (mRNA289) - (peptide289)
 
def E6_3_4_2_mRNA(t, y):
    mRNA290 = 0.00292 - (0.0093 * y[1220])
    peptide290 = (0.278 * y[1220]) - (0.00000278 * y[1522])
    return (mRNA290) - (peptide290)
 
def E6_3_4_21_mRNA(t, y):
    mRNA291 = 0.00292 - (0.0093 * y[1221])
    peptide291 = (0.278 * y[1221]) - (0.00000278 * y[1523])
    return (mRNA291) - (peptide291)
 
def E6_3_4_3_mRNA(t, y):
    mRNA292 = 0.00292 - (0.0093 * y[1222])
    peptide292 = (0.278 * y[1222]) - (0.00000278 * y[1524])
    return (mRNA292) - (peptide292)
 
def E6_3_4_4_mRNA(t, y):
    mRNA293 = 0.00292 - (0.0093 * y[1223])
    peptide293 = (0.278 * y[1223]) - (0.00000278 * y[1525])
    return (mRNA293) - (peptide293)
 
def E6_3_4_5_mRNA(t, y):
    mRNA294 = 0.00292 - (0.0093 * y[1224])
    peptide294 = (0.278 * y[1224]) - (0.00000278 * y[1526])
    return (mRNA294) - (peptide294)
 
def E6_3_5_2_mRNA(t, y):
    mRNA295 = 0.00292 - (0.0093 * y[1225])
    peptide295 = (0.278 * y[1225]) - (0.00000278 * y[1527])
    return (mRNA295) - (peptide295)
 
def E6_3_5_3_mRNA(t, y):
    mRNA296 = 0.00292 - (0.0093 * y[1226])
    peptide296 = (0.278 * y[1226]) - (0.00000278 * y[1528])
    return (mRNA296) - (peptide296)
 
def E6_3_5_4_mRNA(t, y):
    mRNA297 = 0.00292 - (0.0093 * y[1227])
    peptide297 = (0.278 * y[1227]) - (0.00000278 * y[1529])
    return (mRNA297) - (peptide297)
 
def E6_3_5_5_mRNA(t, y):
    mRNA298 = 0.00292 - (0.0093 * y[1228])
    peptide298 = (0.278 * y[1228]) - (0.00000278 * y[1530])
    return (mRNA298) - (peptide298)
 
def E6_4_1_1_mRNA(t, y):
    mRNA299 = 0.00292 - (0.0093 * y[1229])
    peptide299 = (0.278 * y[1229]) - (0.00000278 * y[1531])
    return (mRNA299) - (peptide299)
 
def E6_4_1_2_mRNA(t, y):
    mRNA300 = 0.00292 - (0.0093 * y[1230])
    peptide300 = (0.278 * y[1230]) - (0.00000278 * y[1532])
    return (mRNA300) - (peptide300)
 
def E6_5_1_2_mRNA(t, y):
    mRNA301 = 0.00292 - (0.0093 * y[1231])
    peptide301 = (0.278 * y[1231]) - (0.00000278 * y[1533])
    return (mRNA301) - (peptide301)
 
def E7_1_2_2_mRNA(t, y):
    mRNA302 = 0.00292 - (0.0093 * y[1232])
    peptide302 = (0.278 * y[1232]) - (0.00000278 * y[1534])
    return (mRNA302) - (peptide302)
 
def E1_1_1_1(t, y):
    peptide1 = (0.278 * y[931]) - (0.00000278 * y[1233])
    return (peptide1) - (0)
 
def E1_1_1_133(t, y):
    peptide2 = (0.278 * y[932]) - (0.00000278 * y[1234])
    return (peptide2) - (0)
 
def E1_1_1_169(t, y):
    peptide3 = (0.278 * y[933]) - (0.00000278 * y[1235])
    return (peptide3) - (0)
 
def E1_1_1_193(t, y):
    peptide4 = (0.278 * y[934]) - (0.00000278 * y[1236])
    return (peptide4) - (0)
 
def E1_1_1_23(t, y):
    peptide5 = (0.278 * y[935]) - (0.00000278 * y[1237])
    return (peptide5) - (0)
 
def E1_1_1_27(t, y):
    peptide6 = (0.278 * y[936]) - (0.00000278 * y[1238])
    return (peptide6) - (0)
 
def E1_1_1_28(t, y):
    peptide7 = (0.278 * y[937]) - (0.00000278 * y[1239])
    return (peptide7) - (0)
 
def E1_1_1_3(t, y):
    peptide8 = (0.278 * y[938]) - (0.00000278 * y[1240])
    return (peptide8) - (0)
 
def E1_1_1_304(t, y):
    peptide9 = (0.278 * y[939]) - (0.00000278 * y[1241])
    return (peptide9) - (0)
 
def E1_1_1_35(t, y):
    peptide10 = (0.278 * y[940]) - (0.00000278 * y[1242])
    return (peptide10) - (0)
 
def E1_1_1_44(t, y):
    peptide11 = (0.278 * y[941]) - (0.00000278 * y[1243])
    return (peptide11) - (0)
 
def E1_1_1_47(t, y):
    peptide12 = (0.278 * y[942]) - (0.00000278 * y[1244])
    return (peptide12) - (0)
 
def E1_1_1_49(t, y):
    peptide13 = (0.278 * y[943]) - (0.00000278 * y[1245])
    return (peptide13) - (0)
 
def E1_1_1_6(t, y):
    peptide14 = (0.278 * y[944]) - (0.00000278 * y[1246])
    return (peptide14) - (0)
 
def E1_1_1_85(t, y):
    peptide15 = (0.278 * y[945]) - (0.00000278 * y[1247])
    return (peptide15) - (0)
 
def E1_1_1_86(t, y):
    peptide16 = (0.278 * y[946]) - (0.00000278 * y[1248])
    return (peptide16) - (0)
 
def E1_1_1_88(t, y):
    peptide17 = (0.278 * y[947]) - (0.00000278 * y[1249])
    return (peptide17) - (0)
 
def E1_1_1_94(t, y):
    peptide18 = (0.278 * y[948]) - (0.00000278 * y[1250])
    return (peptide18) - (0)
 
def E1_11_1_26(t, y):
    peptide19 = (0.278 * y[949]) - (0.00000278 * y[1251])
    return (peptide19) - (0)
 
def E1_17_1_8(t, y):
    peptide20 = (0.278 * y[950]) - (0.00000278 * y[1252])
    return (peptide20) - (0)
 
def E1_17_4_1(t, y):
    peptide21 = (0.278 * y[951]) - (0.00000278 * y[1253])
    return (peptide21) - (0)
 
def E1_17_4_2(t, y):
    peptide22 = (0.278 * y[952]) - (0.00000278 * y[1254])
    return (peptide22) - (0)
 
def E1_2_1_10(t, y):
    peptide23 = (0.278 * y[953]) - (0.00000278 * y[1255])
    return (peptide23) - (0)
 
def E1_2_1_11(t, y):
    peptide24 = (0.278 * y[954]) - (0.00000278 * y[1256])
    return (peptide24) - (0)
 
def E1_2_1_38(t, y):
    peptide25 = (0.278 * y[955]) - (0.00000278 * y[1257])
    return (peptide25) - (0)
 
def E1_2_1_41(t, y):
    peptide26 = (0.278 * y[956]) - (0.00000278 * y[1258])
    return (peptide26) - (0)
 
def E1_20_4_4(t, y):
    peptide27 = (0.278 * y[957]) - (0.00000278 * y[1259])
    return (peptide27) - (0)
 
def E1_3_1_12(t, y):
    peptide28 = (0.278 * y[958]) - (0.00000278 * y[1260])
    return (peptide28) - (0)
 
def E1_3_1_14(t, y):
    peptide29 = (0.278 * y[959]) - (0.00000278 * y[1261])
    return (peptide29) - (0)
 
def E1_3_1_9(t, y):
    peptide30 = (0.278 * y[960]) - (0.00000278 * y[1262])
    return (peptide30) - (0)
 
def E1_3_1_98(t, y):
    peptide31 = (0.278 * y[961]) - (0.00000278 * y[1263])
    return (peptide31) - (0)
 
def E1_4_1_13(t, y):
    peptide32 = (0.278 * y[962]) - (0.00000278 * y[1264])
    return (peptide32) - (0)
 
def E1_5_1_2(t, y):
    peptide33 = (0.278 * y[963]) - (0.00000278 * y[1265])
    return (peptide33) - (0)
 
def E1_5_1_3(t, y):
    peptide34 = (0.278 * y[964]) - (0.00000278 * y[1266])
    return (peptide34) - (0)
 
def E1_6_5_2(t, y):
    peptide35 = (0.278 * y[965]) - (0.00000278 * y[1267])
    return (peptide35) - (0)
 
def E1_7_1_7(t, y):
    peptide36 = (0.278 * y[966]) - (0.00000278 * y[1268])
    return (peptide36) - (0)
 
def E1_8_1_4(t, y):
    peptide37 = (0.278 * y[967]) - (0.00000278 * y[1269])
    return (peptide37) - (0)
 
def E1_8_1_9(t, y):
    peptide38 = (0.278 * y[968]) - (0.00000278 * y[1270])
    return (peptide38) - (0)
 
def E1_8_4_11(t, y):
    peptide39 = (0.278 * y[969]) - (0.00000278 * y[1271])
    return (peptide39) - (0)
 
def E1_8_4_12(t, y):
    peptide40 = (0.278 * y[970]) - (0.00000278 * y[1272])
    return (peptide40) - (0)
 
def E2_1_1_10(t, y):
    peptide41 = (0.278 * y[971]) - (0.00000278 * y[1273])
    return (peptide41) - (0)
 
def E2_1_1_107(t, y):
    peptide42 = (0.278 * y[972]) - (0.00000278 * y[1274])
    return (peptide42) - (0)
 
def E2_1_1_14(t, y):
    peptide43 = (0.278 * y[973]) - (0.00000278 * y[1275])
    return (peptide43) - (0)
 
def E2_1_1_163(t, y):
    peptide44 = (0.278 * y[974]) - (0.00000278 * y[1276])
    return (peptide44) - (0)
 
def E2_1_1_171(t, y):
    peptide45 = (0.278 * y[975]) - (0.00000278 * y[1277])
    return (peptide45) - (0)
 
def E2_1_1_182(t, y):
    peptide46 = (0.278 * y[976]) - (0.00000278 * y[1278])
    return (peptide46) - (0)
 
def E2_1_1_201(t, y):
    peptide47 = (0.278 * y[977]) - (0.00000278 * y[1279])
    return (peptide47) - (0)
 
def E2_1_1_228(t, y):
    peptide48 = (0.278 * y[978]) - (0.00000278 * y[1280])
    return (peptide48) - (0)
 
def E2_1_1_297(t, y):
    peptide49 = (0.278 * y[979]) - (0.00000278 * y[1281])
    return (peptide49) - (0)
 
def E2_1_1_33(t, y):
    peptide50 = (0.278 * y[980]) - (0.00000278 * y[1282])
    return (peptide50) - (0)
 
def E2_1_1_45(t, y):
    peptide51 = (0.278 * y[981]) - (0.00000278 * y[1283])
    return (peptide51) - (0)
 
def E2_1_1_63(t, y):
    peptide52 = (0.278 * y[982]) - (0.00000278 * y[1284])
    return (peptide52) - (0)
 
def E2_1_2_1(t, y):
    peptide53 = (0.278 * y[983]) - (0.00000278 * y[1285])
    return (peptide53) - (0)
 
def E2_1_2_2(t, y):
    peptide54 = (0.278 * y[984]) - (0.00000278 * y[1286])
    return (peptide54) - (0)
 
def E2_1_2_3(t, y):
    peptide55 = (0.278 * y[985]) - (0.00000278 * y[1287])
    return (peptide55) - (0)
 
def E2_1_2_9(t, y):
    peptide56 = (0.278 * y[986]) - (0.00000278 * y[1288])
    return (peptide56) - (0)
 
def E2_1_3_15(t, y):
    peptide57 = (0.278 * y[987]) - (0.00000278 * y[1289])
    return (peptide57) - (0)
 
def E2_1_3_2(t, y):
    peptide58 = (0.278 * y[988]) - (0.00000278 * y[1290])
    return (peptide58) - (0)
 
def E2_1_3_3(t, y):
    peptide59 = (0.278 * y[989]) - (0.00000278 * y[1291])
    return (peptide59) - (0)
 
def E2_2_1_1(t, y):
    peptide60 = (0.278 * y[990]) - (0.00000278 * y[1292])
    return (peptide60) - (0)
 
def E2_2_1_6(t, y):
    peptide61 = (0.278 * y[991]) - (0.00000278 * y[1293])
    return (peptide61) - (0)
 
def E2_2_1_7(t, y):
    peptide62 = (0.278 * y[992]) - (0.00000278 * y[1294])
    return (peptide62) - (0)
 
def E2_3_1_1(t, y):
    peptide63 = (0.278 * y[993]) - (0.00000278 * y[1295])
    return (peptide63) - (0)
 
def E2_3_1_15(t, y):
    peptide64 = (0.278 * y[994]) - (0.00000278 * y[1296])
    return (peptide64) - (0)
 
def E2_3_1_157(t, y):
    peptide65 = (0.278 * y[995]) - (0.00000278 * y[1297])
    return (peptide65) - (0)
 
def E2_3_1_179(t, y):
    peptide66 = (0.278 * y[996]) - (0.00000278 * y[1298])
    return (peptide66) - (0)
 
def E2_3_1_180(t, y):
    peptide67 = (0.278 * y[997]) - (0.00000278 * y[1299])
    return (peptide67) - (0)
 
def E2_3_1_234(t, y):
    peptide68 = (0.278 * y[998]) - (0.00000278 * y[1300])
    return (peptide68) - (0)
 
def E2_3_1_266(t, y):
    peptide69 = (0.278 * y[999]) - (0.00000278 * y[1301])
    return (peptide69) - (0)
 
def E2_3_1_274(t, y):
    peptide70 = (0.278 * y[1000]) - (0.00000278 * y[1302])
    return (peptide70) - (0)
 
def E2_3_1_286(t, y):
    peptide71 = (0.278 * y[1001]) - (0.00000278 * y[1303])
    return (peptide71) - (0)
 
def E2_3_1_35(t, y):
    peptide72 = (0.278 * y[1002]) - (0.00000278 * y[1304])
    return (peptide72) - (0)
 
def E2_3_1_39(t, y):
    peptide73 = (0.278 * y[1003]) - (0.00000278 * y[1305])
    return (peptide73) - (0)
 
def E2_3_1_46(t, y):
    peptide74 = (0.278 * y[1004]) - (0.00000278 * y[1306])
    return (peptide74) - (0)
 
def E2_3_1_8(t, y):
    peptide75 = (0.278 * y[1005]) - (0.00000278 * y[1307])
    return (peptide75) - (0)
 
def E2_3_1_89(t, y):
    peptide76 = (0.278 * y[1006]) - (0.00000278 * y[1308])
    return (peptide76) - (0)
 
def E2_3_1_9(t, y):
    peptide77 = (0.278 * y[1007]) - (0.00000278 * y[1309])
    return (peptide77) - (0)
 
def E2_3_3_10(t, y):
    peptide78 = (0.278 * y[1008]) - (0.00000278 * y[1310])
    return (peptide78) - (0)
 
def E2_4_1_227(t, y):
    peptide79 = (0.278 * y[1009]) - (0.00000278 * y[1311])
    return (peptide79) - (0)
 
def E2_4_2_10(t, y):
    peptide80 = (0.278 * y[1010]) - (0.00000278 * y[1312])
    return (peptide80) - (0)
 
def E2_4_2_14(t, y):
    peptide81 = (0.278 * y[1011]) - (0.00000278 * y[1313])
    return (peptide81) - (0)
 
def E2_4_2_17(t, y):
    peptide82 = (0.278 * y[1012]) - (0.00000278 * y[1314])
    return (peptide82) - (0)
 
def E2_4_2_22(t, y):
    peptide83 = (0.278 * y[1013]) - (0.00000278 * y[1315])
    return (peptide83) - (0)
 
def E2_4_2_7(t, y):
    peptide84 = (0.278 * y[1014]) - (0.00000278 * y[1316])
    return (peptide84) - (0)
 
def E2_4_2_8(t, y):
    peptide85 = (0.278 * y[1015]) - (0.00000278 * y[1317])
    return (peptide85) - (0)
 
def E2_4_2_9(t, y):
    peptide86 = (0.278 * y[1016]) - (0.00000278 * y[1318])
    return (peptide86) - (0)
 
def E2_5_1_15(t, y):
    peptide87 = (0.278 * y[1017]) - (0.00000278 * y[1319])
    return (peptide87) - (0)
 
def E2_5_1_19(t, y):
    peptide88 = (0.278 * y[1018]) - (0.00000278 * y[1320])
    return (peptide88) - (0)
 
def E2_5_1_3(t, y):
    peptide89 = (0.278 * y[1019]) - (0.00000278 * y[1321])
    return (peptide89) - (0)
 
def E2_5_1_47(t, y):
    peptide90 = (0.278 * y[1020]) - (0.00000278 * y[1322])
    return (peptide90) - (0)
 
def E2_5_1_6(t, y):
    peptide91 = (0.278 * y[1021]) - (0.00000278 * y[1323])
    return (peptide91) - (0)
 
def E2_5_1_75(t, y):
    peptide92 = (0.278 * y[1022]) - (0.00000278 * y[1324])
    return (peptide92) - (0)
 
def E2_5_1_78(t, y):
    peptide93 = (0.278 * y[1023]) - (0.00000278 * y[1325])
    return (peptide93) - (0)
 
def E2_5_1_9(t, y):
    peptide94 = (0.278 * y[1024]) - (0.00000278 * y[1326])
    return (peptide94) - (0)
 
def E2_6_1_11(t, y):
    peptide95 = (0.278 * y[1025]) - (0.00000278 * y[1327])
    return (peptide95) - (0)
 
def E2_6_1_16(t, y):
    peptide96 = (0.278 * y[1026]) - (0.00000278 * y[1328])
    return (peptide96) - (0)
 
def E2_6_1_42(t, y):
    peptide97 = (0.278 * y[1027]) - (0.00000278 * y[1329])
    return (peptide97) - (0)
 
def E2_6_1_52(t, y):
    peptide98 = (0.278 * y[1028]) - (0.00000278 * y[1330])
    return (peptide98) - (0)
 
def E2_6_1_9(t, y):
    peptide99 = (0.278 * y[1029]) - (0.00000278 * y[1331])
    return (peptide99) - (0)
 
def E2_7_1_107(t, y):
    peptide100 = (0.278 * y[1030]) - (0.00000278 * y[1332])
    return (peptide100) - (0)
 
def E2_7_1_12(t, y):
    peptide101 = (0.278 * y[1031]) - (0.00000278 * y[1333])
    return (peptide101) - (0)
 
def E2_7_1_148(t, y):
    peptide102 = (0.278 * y[1032]) - (0.00000278 * y[1334])
    return (peptide102) - (0)
 
def E2_7_1_15(t, y):
    peptide103 = (0.278 * y[1033]) - (0.00000278 * y[1335])
    return (peptide103) - (0)
 
def E2_7_1_2(t, y):
    peptide104 = (0.278 * y[1034]) - (0.00000278 * y[1336])
    return (peptide104) - (0)
 
def E2_7_1_21(t, y):
    peptide105 = (0.278 * y[1035]) - (0.00000278 * y[1337])
    return (peptide105) - (0)
 
def E2_7_1_211(t, y):
    peptide106 = (0.278 * y[1036]) - (0.00000278 * y[1338])
    return (peptide106) - (0)
 
def E2_7_1_23(t, y):
    peptide107 = (0.278 * y[1037]) - (0.00000278 * y[1339])
    return (peptide107) - (0)
 
def E2_7_1_24(t, y):
    peptide108 = (0.278 * y[1038]) - (0.00000278 * y[1340])
    return (peptide108) - (0)
 
def E2_7_1_26(t, y):
    peptide109 = (0.278 * y[1039]) - (0.00000278 * y[1341])
    return (peptide109) - (0)
 
def E2_7_1_30(t, y):
    peptide110 = (0.278 * y[1040]) - (0.00000278 * y[1342])
    return (peptide110) - (0)
 
def E2_7_1_31(t, y):
    peptide111 = (0.278 * y[1041]) - (0.00000278 * y[1343])
    return (peptide111) - (0)
 
def E2_7_1_33(t, y):
    peptide112 = (0.278 * y[1042]) - (0.00000278 * y[1344])
    return (peptide112) - (0)
 
def E2_7_1_36(t, y):
    peptide113 = (0.278 * y[1043]) - (0.00000278 * y[1345])
    return (peptide113) - (0)
 
def E2_7_1_39(t, y):
    peptide114 = (0.278 * y[1044]) - (0.00000278 * y[1346])
    return (peptide114) - (0)
 
def E2_7_1_4(t, y):
    peptide115 = (0.278 * y[1045]) - (0.00000278 * y[1347])
    return (peptide115) - (0)
 
def E2_7_1_40(t, y):
    peptide116 = (0.278 * y[1046]) - (0.00000278 * y[1348])
    return (peptide116) - (0)
 
def E2_7_1_48(t, y):
    peptide117 = (0.278 * y[1047]) - (0.00000278 * y[1349])
    return (peptide117) - (0)
 
def E2_7_1_49(t, y):
    peptide118 = (0.278 * y[1048]) - (0.00000278 * y[1350])
    return (peptide118) - (0)
 
def E2_7_1_50(t, y):
    peptide119 = (0.278 * y[1049]) - (0.00000278 * y[1351])
    return (peptide119) - (0)
 
def E2_7_1_6(t, y):
    peptide120 = (0.278 * y[1050]) - (0.00000278 * y[1352])
    return (peptide120) - (0)
 
def E2_7_1_71(t, y):
    peptide121 = (0.278 * y[1051]) - (0.00000278 * y[1353])
    return (peptide121) - (0)
 
def E2_7_10_2(t, y):
    peptide122 = (0.278 * y[1052]) - (0.00000278 * y[1354])
    return (peptide122) - (0)
 
def E2_7_2_1(t, y):
    peptide123 = (0.278 * y[1053]) - (0.00000278 * y[1355])
    return (peptide123) - (0)
 
def E2_7_2_11(t, y):
    peptide124 = (0.278 * y[1054]) - (0.00000278 * y[1356])
    return (peptide124) - (0)
 
def E2_7_2_2(t, y):
    peptide125 = (0.278 * y[1055]) - (0.00000278 * y[1357])
    return (peptide125) - (0)
 
def E2_7_2_3(t, y):
    peptide126 = (0.278 * y[1056]) - (0.00000278 * y[1358])
    return (peptide126) - (0)
 
def E2_7_2_4(t, y):
    peptide127 = (0.278 * y[1057]) - (0.00000278 * y[1359])
    return (peptide127) - (0)
 
def E2_7_2_8(t, y):
    peptide128 = (0.278 * y[1058]) - (0.00000278 * y[1360])
    return (peptide128) - (0)
 
def E2_7_3_9(t, y):
    peptide129 = (0.278 * y[1059]) - (0.00000278 * y[1361])
    return (peptide129) - (0)
 
def E2_7_4_1(t, y):
    peptide130 = (0.278 * y[1060]) - (0.00000278 * y[1362])
    return (peptide130) - (0)
 
def E2_7_4_2(t, y):
    peptide131 = (0.278 * y[1061]) - (0.00000278 * y[1363])
    return (peptide131) - (0)
 
def E2_7_4_22(t, y):
    peptide132 = (0.278 * y[1062]) - (0.00000278 * y[1364])
    return (peptide132) - (0)
 
def E2_7_4_25(t, y):
    peptide133 = (0.278 * y[1063]) - (0.00000278 * y[1365])
    return (peptide133) - (0)
 
def E2_7_4_3(t, y):
    peptide134 = (0.278 * y[1064]) - (0.00000278 * y[1366])
    return (peptide134) - (0)
 
def E2_7_4_6(t, y):
    peptide135 = (0.278 * y[1065]) - (0.00000278 * y[1367])
    return (peptide135) - (0)
 
def E2_7_4_7(t, y):
    peptide136 = (0.278 * y[1066]) - (0.00000278 * y[1368])
    return (peptide136) - (0)
 
def E2_7_4_8(t, y):
    peptide137 = (0.278 * y[1067]) - (0.00000278 * y[1369])
    return (peptide137) - (0)
 
def E2_7_4_9(t, y):
    peptide138 = (0.278 * y[1068]) - (0.00000278 * y[1370])
    return (peptide138) - (0)
 
def E2_7_6_1(t, y):
    peptide139 = (0.278 * y[1069]) - (0.00000278 * y[1371])
    return (peptide139) - (0)
 
def E2_7_6_2(t, y):
    peptide140 = (0.278 * y[1070]) - (0.00000278 * y[1372])
    return (peptide140) - (0)
 
def E2_7_6_3(t, y):
    peptide141 = (0.278 * y[1071]) - (0.00000278 * y[1373])
    return (peptide141) - (0)
 
def E2_7_6_5(t, y):
    peptide142 = (0.278 * y[1072]) - (0.00000278 * y[1374])
    return (peptide142) - (0)
 
def E2_7_7_12(t, y):
    peptide143 = (0.278 * y[1073]) - (0.00000278 * y[1375])
    return (peptide143) - (0)
 
def E2_7_7_18(t, y):
    peptide144 = (0.278 * y[1074]) - (0.00000278 * y[1376])
    return (peptide144) - (0)
 
def E2_7_7_2(t, y):
    peptide145 = (0.278 * y[1075]) - (0.00000278 * y[1377])
    return (peptide145) - (0)
 
def E2_7_7_23(t, y):
    peptide146 = (0.278 * y[1076]) - (0.00000278 * y[1378])
    return (peptide146) - (0)
 
def E2_7_7_24(t, y):
    peptide147 = (0.278 * y[1077]) - (0.00000278 * y[1379])
    return (peptide147) - (0)
 
def E2_7_7_3(t, y):
    peptide148 = (0.278 * y[1078]) - (0.00000278 * y[1380])
    return (peptide148) - (0)
 
def E2_7_7_41(t, y):
    peptide149 = (0.278 * y[1079]) - (0.00000278 * y[1381])
    return (peptide149) - (0)
 
def E2_7_7_6(t, y):
    peptide150 = (0.278 * y[1080]) - (0.00000278 * y[1382])
    return (peptide150) - (0)
 
def E2_7_7_7(t, y):
    peptide151 = (0.278 * y[1081]) - (0.00000278 * y[1383])
    return (peptide151) - (0)
 
def E2_7_7_77(t, y):
    peptide152 = (0.278 * y[1082]) - (0.00000278 * y[1384])
    return (peptide152) - (0)
 
def E2_7_7_85(t, y):
    peptide153 = (0.278 * y[1083]) - (0.00000278 * y[1385])
    return (peptide153) - (0)
 
def E2_7_7_87(t, y):
    peptide154 = (0.278 * y[1084]) - (0.00000278 * y[1386])
    return (peptide154) - (0)
 
def E2_7_7_9(t, y):
    peptide155 = (0.278 * y[1085]) - (0.00000278 * y[1387])
    return (peptide155) - (0)
 
def E2_7_8_13(t, y):
    peptide156 = (0.278 * y[1086]) - (0.00000278 * y[1388])
    return (peptide156) - (0)
 
def E2_7_8_5(t, y):
    peptide157 = (0.278 * y[1087]) - (0.00000278 * y[1389])
    return (peptide157) - (0)
 
def E2_7_8_7(t, y):
    peptide158 = (0.278 * y[1088]) - (0.00000278 * y[1390])
    return (peptide158) - (0)
 
def E2_8_1_13(t, y):
    peptide159 = (0.278 * y[1089]) - (0.00000278 * y[1391])
    return (peptide159) - (0)
 
def E2_8_1_4(t, y):
    peptide160 = (0.278 * y[1090]) - (0.00000278 * y[1392])
    return (peptide160) - (0)
 
def E2_8_1_7(t, y):
    peptide161 = (0.278 * y[1091]) - (0.00000278 * y[1393])
    return (peptide161) - (0)
 
def E3_1_1_103(t, y):
    peptide162 = (0.278 * y[1092]) - (0.00000278 * y[1394])
    return (peptide162) - (0)
 
def E3_1_1_106(t, y):
    peptide163 = (0.278 * y[1093]) - (0.00000278 * y[1395])
    return (peptide163) - (0)
 
def E3_1_1_29(t, y):
    peptide164 = (0.278 * y[1094]) - (0.00000278 * y[1396])
    return (peptide164) - (0)
 
def E3_1_3_15(t, y):
    peptide165 = (0.278 * y[1095]) - (0.00000278 * y[1397])
    return (peptide165) - (0)
 
def E3_1_3_27(t, y):
    peptide166 = (0.278 * y[1096]) - (0.00000278 * y[1398])
    return (peptide166) - (0)
 
def E3_1_3_48(t, y):
    peptide167 = (0.278 * y[1097]) - (0.00000278 * y[1399])
    return (peptide167) - (0)
 
def E3_1_3_7(t, y):
    peptide168 = (0.278 * y[1098]) - (0.00000278 * y[1400])
    return (peptide168) - (0)
 
def E3_1_4_4(t, y):
    peptide169 = (0.278 * y[1099]) - (0.00000278 * y[1401])
    return (peptide169) - (0)
 
def E3_2_1_22(t, y):
    peptide170 = (0.278 * y[1100]) - (0.00000278 * y[1402])
    return (peptide170) - (0)
 
def E3_2_1_26(t, y):
    peptide171 = (0.278 * y[1101]) - (0.00000278 * y[1403])
    return (peptide171) - (0)
 
def E3_2_1_93(t, y):
    peptide172 = (0.278 * y[1102]) - (0.00000278 * y[1404])
    return (peptide172) - (0)
 
def E3_2_2_3(t, y):
    peptide173 = (0.278 * y[1103]) - (0.00000278 * y[1405])
    return (peptide173) - (0)
 
def E3_2_2_9(t, y):
    peptide174 = (0.278 * y[1104]) - (0.00000278 * y[1406])
    return (peptide174) - (0)
 
def E3_5_1_2(t, y):
    peptide175 = (0.278 * y[1105]) - (0.00000278 * y[1407])
    return (peptide175) - (0)
 
def E3_5_1_28(t, y):
    peptide176 = (0.278 * y[1106]) - (0.00000278 * y[1408])
    return (peptide176) - (0)
 
def E3_5_1_4(t, y):
    peptide177 = (0.278 * y[1107]) - (0.00000278 * y[1409])
    return (peptide177) - (0)
 
def E3_5_1_88(t, y):
    peptide178 = (0.278 * y[1108]) - (0.00000278 * y[1410])
    return (peptide178) - (0)
 
def E3_5_2_3(t, y):
    peptide179 = (0.278 * y[1109]) - (0.00000278 * y[1411])
    return (peptide179) - (0)
 
def E3_5_2_5(t, y):
    peptide180 = (0.278 * y[1110]) - (0.00000278 * y[1412])
    return (peptide180) - (0)
 
def E3_5_2_9(t, y):
    peptide181 = (0.278 * y[1111]) - (0.00000278 * y[1413])
    return (peptide181) - (0)
 
def E3_5_3_6(t, y):
    peptide182 = (0.278 * y[1112]) - (0.00000278 * y[1414])
    return (peptide182) - (0)
 
def E3_5_4_10(t, y):
    peptide183 = (0.278 * y[1113]) - (0.00000278 * y[1415])
    return (peptide183) - (0)
 
def E3_5_4_16(t, y):
    peptide184 = (0.278 * y[1114]) - (0.00000278 * y[1416])
    return (peptide184) - (0)
 
def E3_5_4_19(t, y):
    peptide185 = (0.278 * y[1115]) - (0.00000278 * y[1417])
    return (peptide185) - (0)
 
def E3_5_4_25(t, y):
    peptide186 = (0.278 * y[1116]) - (0.00000278 * y[1418])
    return (peptide186) - (0)
 
def E3_5_4_26(t, y):
    peptide187 = (0.278 * y[1117]) - (0.00000278 * y[1419])
    return (peptide187) - (0)
 
def E3_5_4_3(t, y):
    peptide188 = (0.278 * y[1118]) - (0.00000278 * y[1420])
    return (peptide188) - (0)
 
def E3_5_4_33(t, y):
    peptide189 = (0.278 * y[1119]) - (0.00000278 * y[1421])
    return (peptide189) - (0)
 
def E3_5_99_2(t, y):
    peptide190 = (0.278 * y[1120]) - (0.00000278 * y[1422])
    return (peptide190) - (0)
 
def E3_6_1_1(t, y):
    peptide191 = (0.278 * y[1121]) - (0.00000278 * y[1423])
    return (peptide191) - (0)
 
def E3_6_1_27(t, y):
    peptide192 = (0.278 * y[1122]) - (0.00000278 * y[1424])
    return (peptide192) - (0)
 
def E3_6_1_31(t, y):
    peptide193 = (0.278 * y[1123]) - (0.00000278 * y[1425])
    return (peptide193) - (0)
 
def E3_6_1_41(t, y):
    peptide194 = (0.278 * y[1124]) - (0.00000278 * y[1426])
    return (peptide194) - (0)
 
def E3_6_1_66(t, y):
    peptide195 = (0.278 * y[1125]) - (0.00000278 * y[1427])
    return (peptide195) - (0)
 
def E4_1_1_101(t, y):
    peptide196 = (0.278 * y[1126]) - (0.00000278 * y[1428])
    return (peptide196) - (0)
 
def E4_1_1_15(t, y):
    peptide197 = (0.278 * y[1127]) - (0.00000278 * y[1429])
    return (peptide197) - (0)
 
def E4_1_1_20(t, y):
    peptide198 = (0.278 * y[1128]) - (0.00000278 * y[1430])
    return (peptide198) - (0)
 
def E4_1_1_21(t, y):
    peptide199 = (0.278 * y[1129]) - (0.00000278 * y[1431])
    return (peptide199) - (0)
 
def E4_1_1_23(t, y):
    peptide200 = (0.278 * y[1130]) - (0.00000278 * y[1432])
    return (peptide200) - (0)
 
def E4_1_1_33(t, y):
    peptide201 = (0.278 * y[1131]) - (0.00000278 * y[1433])
    return (peptide201) - (0)
 
def E4_1_1_36(t, y):
    peptide202 = (0.278 * y[1132]) - (0.00000278 * y[1434])
    return (peptide202) - (0)
 
def E4_1_1_5(t, y):
    peptide203 = (0.278 * y[1133]) - (0.00000278 * y[1435])
    return (peptide203) - (0)
 
def E4_1_2_25(t, y):
    peptide204 = (0.278 * y[1134]) - (0.00000278 * y[1436])
    return (peptide204) - (0)
 
def E4_1_2_4(t, y):
    peptide205 = (0.278 * y[1135]) - (0.00000278 * y[1437])
    return (peptide205) - (0)
 
def E4_1_3_36(t, y):
    peptide206 = (0.278 * y[1136]) - (0.00000278 * y[1438])
    return (peptide206) - (0)
 
def E4_1_99_22(t, y):
    peptide207 = (0.278 * y[1137]) - (0.00000278 * y[1439])
    return (peptide207) - (0)
 
def E4_2_1_11(t, y):
    peptide208 = (0.278 * y[1138]) - (0.00000278 * y[1440])
    return (peptide208) - (0)
 
def E4_2_1_113(t, y):
    peptide209 = (0.278 * y[1139]) - (0.00000278 * y[1441])
    return (peptide209) - (0)
 
def E4_2_1_19(t, y):
    peptide210 = (0.278 * y[1140]) - (0.00000278 * y[1442])
    return (peptide210) - (0)
 
def E4_2_1_2(t, y):
    peptide211 = (0.278 * y[1141]) - (0.00000278 * y[1443])
    return (peptide211) - (0)
 
def E4_2_1_33(t, y):
    peptide212 = (0.278 * y[1142]) - (0.00000278 * y[1444])
    return (peptide212) - (0)
 
def E4_2_1_46(t, y):
    peptide213 = (0.278 * y[1143]) - (0.00000278 * y[1445])
    return (peptide213) - (0)
 
def E4_2_1_59(t, y):
    peptide214 = (0.278 * y[1144]) - (0.00000278 * y[1446])
    return (peptide214) - (0)
 
def E4_2_1_9(t, y):
    peptide215 = (0.278 * y[1145]) - (0.00000278 * y[1447])
    return (peptide215) - (0)
 
def E4_2_3_1(t, y):
    peptide216 = (0.278 * y[1146]) - (0.00000278 * y[1448])
    return (peptide216) - (0)
 
def E4_2_3_5(t, y):
    peptide217 = (0.278 * y[1147]) - (0.00000278 * y[1449])
    return (peptide217) - (0)
 
def E4_3_1_17(t, y):
    peptide218 = (0.278 * y[1148]) - (0.00000278 * y[1450])
    return (peptide218) - (0)
 
def E4_3_1_19(t, y):
    peptide219 = (0.278 * y[1149]) - (0.00000278 * y[1451])
    return (peptide219) - (0)
 
def E4_3_1_8(t, y):
    peptide220 = (0.278 * y[1150]) - (0.00000278 * y[1452])
    return (peptide220) - (0)
 
def E4_3_2_1(t, y):
    peptide221 = (0.278 * y[1151]) - (0.00000278 * y[1453])
    return (peptide221) - (0)
 
def E4_3_2_10(t, y):
    peptide222 = (0.278 * y[1152]) - (0.00000278 * y[1454])
    return (peptide222) - (0)
 
def E4_3_2_2(t, y):
    peptide223 = (0.278 * y[1153]) - (0.00000278 * y[1455])
    return (peptide223) - (0)
 
def E4_3_3_7(t, y):
    peptide224 = (0.278 * y[1154]) - (0.00000278 * y[1456])
    return (peptide224) - (0)
 
def E4_4_1_21(t, y):
    peptide225 = (0.278 * y[1155]) - (0.00000278 * y[1457])
    return (peptide225) - (0)
 
def E4_6_1_17(t, y):
    peptide226 = (0.278 * y[1156]) - (0.00000278 * y[1458])
    return (peptide226) - (0)
 
def E4_99_1_12(t, y):
    peptide227 = (0.278 * y[1157]) - (0.00000278 * y[1459])
    return (peptide227) - (0)
 
def E5_1_1_1(t, y):
    peptide228 = (0.278 * y[1158]) - (0.00000278 * y[1460])
    return (peptide228) - (0)
 
def E5_1_1_3(t, y):
    peptide229 = (0.278 * y[1159]) - (0.00000278 * y[1461])
    return (peptide229) - (0)
 
def E5_1_1_7(t, y):
    peptide230 = (0.278 * y[1160]) - (0.00000278 * y[1462])
    return (peptide230) - (0)
 
def E5_1_3_1(t, y):
    peptide231 = (0.278 * y[1161]) - (0.00000278 * y[1463])
    return (peptide231) - (0)
 
def E5_1_3_13(t, y):
    peptide232 = (0.278 * y[1162]) - (0.00000278 * y[1464])
    return (peptide232) - (0)
 
def E5_1_3_14(t, y):
    peptide233 = (0.278 * y[1163]) - (0.00000278 * y[1465])
    return (peptide233) - (0)
 
def E5_1_3_2(t, y):
    peptide234 = (0.278 * y[1164]) - (0.00000278 * y[1466])
    return (peptide234) - (0)
 
def E5_1_99_6(t, y):
    peptide235 = (0.278 * y[1165]) - (0.00000278 * y[1467])
    return (peptide235) - (0)
 
def E5_2_1_8(t, y):
    peptide236 = (0.278 * y[1166]) - (0.00000278 * y[1468])
    return (peptide236) - (0)
 
def E5_3_1_1(t, y):
    peptide237 = (0.278 * y[1167]) - (0.00000278 * y[1469])
    return (peptide237) - (0)
 
def E5_3_1_16(t, y):
    peptide238 = (0.278 * y[1168]) - (0.00000278 * y[1470])
    return (peptide238) - (0)
 
def E5_3_1_4(t, y):
    peptide239 = (0.278 * y[1169]) - (0.00000278 * y[1471])
    return (peptide239) - (0)
 
def E5_3_1_6(t, y):
    peptide240 = (0.278 * y[1170]) - (0.00000278 * y[1472])
    return (peptide240) - (0)
 
def E5_3_1_9(t, y):
    peptide241 = (0.278 * y[1171]) - (0.00000278 * y[1473])
    return (peptide241) - (0)
 
def E5_3_2_6(t, y):
    peptide242 = (0.278 * y[1172]) - (0.00000278 * y[1474])
    return (peptide242) - (0)
 
def E5_3_3_2(t, y):
    peptide243 = (0.278 * y[1173]) - (0.00000278 * y[1475])
    return (peptide243) - (0)
 
def E5_4_2_10(t, y):
    peptide244 = (0.278 * y[1174]) - (0.00000278 * y[1476])
    return (peptide244) - (0)
 
def E5_4_2_11(t, y):
    peptide245 = (0.278 * y[1175]) - (0.00000278 * y[1477])
    return (peptide245) - (0)
 
def E5_4_2_6(t, y):
    peptide246 = (0.278 * y[1176]) - (0.00000278 * y[1478])
    return (peptide246) - (0)
 
def E5_4_99_12(t, y):
    peptide247 = (0.278 * y[1177]) - (0.00000278 * y[1479])
    return (peptide247) - (0)
 
def E5_4_99_18(t, y):
    peptide248 = (0.278 * y[1178]) - (0.00000278 * y[1480])
    return (peptide248) - (0)
 
def E5_4_99_5(t, y):
    peptide249 = (0.278 * y[1179]) - (0.00000278 * y[1481])
    return (peptide249) - (0)
 
def E5_4_99_62(t, y):
    peptide250 = (0.278 * y[1180]) - (0.00000278 * y[1482])
    return (peptide250) - (0)
 
def E5_4_99_9(t, y):
    peptide251 = (0.278 * y[1181]) - (0.00000278 * y[1483])
    return (peptide251) - (0)
 
def E6_1_1_1(t, y):
    peptide252 = (0.278 * y[1182]) - (0.00000278 * y[1484])
    return (peptide252) - (0)
 
def E6_1_1_10(t, y):
    peptide253 = (0.278 * y[1183]) - (0.00000278 * y[1485])
    return (peptide253) - (0)
 
def E6_1_1_11(t, y):
    peptide254 = (0.278 * y[1184]) - (0.00000278 * y[1486])
    return (peptide254) - (0)
 
def E6_1_1_12(t, y):
    peptide255 = (0.278 * y[1185]) - (0.00000278 * y[1487])
    return (peptide255) - (0)
 
def E6_1_1_13(t, y):
    peptide256 = (0.278 * y[1186]) - (0.00000278 * y[1488])
    return (peptide256) - (0)
 
def E6_1_1_14(t, y):
    peptide257 = (0.278 * y[1187]) - (0.00000278 * y[1489])
    return (peptide257) - (0)
 
def E6_1_1_15(t, y):
    peptide258 = (0.278 * y[1188]) - (0.00000278 * y[1490])
    return (peptide258) - (0)
 
def E6_1_1_16(t, y):
    peptide259 = (0.278 * y[1189]) - (0.00000278 * y[1491])
    return (peptide259) - (0)
 
def E6_1_1_17(t, y):
    peptide260 = (0.278 * y[1190]) - (0.00000278 * y[1492])
    return (peptide260) - (0)
 
def E6_1_1_19(t, y):
    peptide261 = (0.278 * y[1191]) - (0.00000278 * y[1493])
    return (peptide261) - (0)
 
def E6_1_1_2(t, y):
    peptide262 = (0.278 * y[1192]) - (0.00000278 * y[1494])
    return (peptide262) - (0)
 
def E6_1_1_20(t, y):
    peptide263 = (0.278 * y[1193]) - (0.00000278 * y[1495])
    return (peptide263) - (0)
 
def E6_1_1_21(t, y):
    peptide264 = (0.278 * y[1194]) - (0.00000278 * y[1496])
    return (peptide264) - (0)
 
def E6_1_1_22(t, y):
    peptide265 = (0.278 * y[1195]) - (0.00000278 * y[1497])
    return (peptide265) - (0)
 
def E6_1_1_3(t, y):
    peptide266 = (0.278 * y[1196]) - (0.00000278 * y[1498])
    return (peptide266) - (0)
 
def E6_1_1_4(t, y):
    peptide267 = (0.278 * y[1197]) - (0.00000278 * y[1499])
    return (peptide267) - (0)
 
def E6_1_1_5(t, y):
    peptide268 = (0.278 * y[1198]) - (0.00000278 * y[1500])
    return (peptide268) - (0)
 
def E6_1_1_6(t, y):
    peptide269 = (0.278 * y[1199]) - (0.00000278 * y[1501])
    return (peptide269) - (0)
 
def E6_1_1_7(t, y):
    peptide270 = (0.278 * y[1200]) - (0.00000278 * y[1502])
    return (peptide270) - (0)
 
def E6_1_1_9(t, y):
    peptide271 = (0.278 * y[1201]) - (0.00000278 * y[1503])
    return (peptide271) - (0)
 
def E6_2_1_26(t, y):
    peptide272 = (0.278 * y[1202]) - (0.00000278 * y[1504])
    return (peptide272) - (0)
 
def E6_3_1_1(t, y):
    peptide273 = (0.278 * y[1203]) - (0.00000278 * y[1505])
    return (peptide273) - (0)
 
def E6_3_1_2(t, y):
    peptide274 = (0.278 * y[1204]) - (0.00000278 * y[1506])
    return (peptide274) - (0)
 
def E6_3_1_20(t, y):
    peptide275 = (0.278 * y[1205]) - (0.00000278 * y[1507])
    return (peptide275) - (0)
 
def E6_3_1_5(t, y):
    peptide276 = (0.278 * y[1206]) - (0.00000278 * y[1508])
    return (peptide276) - (0)
 
def E6_3_2_10(t, y):
    peptide277 = (0.278 * y[1207]) - (0.00000278 * y[1509])
    return (peptide277) - (0)
 
def E6_3_2_13(t, y):
    peptide278 = (0.278 * y[1208]) - (0.00000278 * y[1510])
    return (peptide278) - (0)
 
def E6_3_2_5(t, y):
    peptide279 = (0.278 * y[1209]) - (0.00000278 * y[1511])
    return (peptide279) - (0)
 
def E6_3_2_6(t, y):
    peptide280 = (0.278 * y[1210]) - (0.00000278 * y[1512])
    return (peptide280) - (0)
 
def E6_3_2_8(t, y):
    peptide281 = (0.278 * y[1211]) - (0.00000278 * y[1513])
    return (peptide281) - (0)
 
def E6_3_2_9(t, y):
    peptide282 = (0.278 * y[1212]) - (0.00000278 * y[1514])
    return (peptide282) - (0)
 
def E6_3_3_1(t, y):
    peptide283 = (0.278 * y[1213]) - (0.00000278 * y[1515])
    return (peptide283) - (0)
 
def E6_3_3_2(t, y):
    peptide284 = (0.278 * y[1214]) - (0.00000278 * y[1516])
    return (peptide284) - (0)
 
def E6_3_4_13(t, y):
    peptide285 = (0.278 * y[1215]) - (0.00000278 * y[1517])
    return (peptide285) - (0)
 
def E6_3_4_14(t, y):
    peptide286 = (0.278 * y[1216]) - (0.00000278 * y[1518])
    return (peptide286) - (0)
 
def E6_3_4_15(t, y):
    peptide287 = (0.278 * y[1217]) - (0.00000278 * y[1519])
    return (peptide287) - (0)
 
def E6_3_4_18(t, y):
    peptide288 = (0.278 * y[1218]) - (0.00000278 * y[1520])
    return (peptide288) - (0)
 
def E6_3_4_19(t, y):
    peptide289 = (0.278 * y[1219]) - (0.00000278 * y[1521])
    return (peptide289) - (0)
 
def E6_3_4_2(t, y):
    peptide290 = (0.278 * y[1220]) - (0.00000278 * y[1522])
    return (peptide290) - (0)
 
def E6_3_4_21(t, y):
    peptide291 = (0.278 * y[1221]) - (0.00000278 * y[1523])
    return (peptide291) - (0)
 
def E6_3_4_3(t, y):
    peptide292 = (0.278 * y[1222]) - (0.00000278 * y[1524])
    return (peptide292) - (0)
 
def E6_3_4_4(t, y):
    peptide293 = (0.278 * y[1223]) - (0.00000278 * y[1525])
    return (peptide293) - (0)
 
def E6_3_4_5(t, y):
    peptide294 = (0.278 * y[1224]) - (0.00000278 * y[1526])
    return (peptide294) - (0)
 
def E6_3_5_2(t, y):
    peptide295 = (0.278 * y[1225]) - (0.00000278 * y[1527])
    return (peptide295) - (0)
 
def E6_3_5_3(t, y):
    peptide296 = (0.278 * y[1226]) - (0.00000278 * y[1528])
    return (peptide296) - (0)
 
def E6_3_5_4(t, y):
    peptide297 = (0.278 * y[1227]) - (0.00000278 * y[1529])
    return (peptide297) - (0)
 
def E6_3_5_5(t, y):
    peptide298 = (0.278 * y[1228]) - (0.00000278 * y[1530])
    return (peptide298) - (0)
 
def E6_4_1_1(t, y):
    peptide299 = (0.278 * y[1229]) - (0.00000278 * y[1531])
    return (peptide299) - (0)
 
def E6_4_1_2(t, y):
    peptide300 = (0.278 * y[1230]) - (0.00000278 * y[1532])
    return (peptide300) - (0)
 
def E6_5_1_2(t, y):
    peptide301 = (0.278 * y[1231]) - (0.00000278 * y[1533])
    return (peptide301) - (0)
 
def E7_1_2_2(t, y):
    peptide302 = (0.278 * y[1232]) - (0.00000278 * y[1534])
    return (peptide302) - (0)
 
def C01335(t, y):
    r92 = (13.7 * y[1251] * y[3] * y[802] * y[77]) / (1 + (y[1251] * y[3] * y[802] * y[77]))
    return (r92) - (0)
 
def C15602(t, y):
    r158 = (13.7 * y[1267] * y[3] * y[77] * y[1536]) / (1 + (y[1267] * y[3] * y[77] * y[1536]))
    r162 = (13.7 * y[1267] * y[4] * y[77] * y[1536]) / (1 + (y[1267] * y[4] * y[77] * y[1536]))
    return (0) - (r158 + r162)
 
def C18902(t, y):
    r171 = (13.7 * y[1270] * y[4] * y[77] * y[1537]) / (1 + (y[1270] * y[4] * y[77] * y[1537]))
    return (0) - (r171)
 
def C05703(t, y):
    r171 = (13.7 * y[1270] * y[4] * y[77] * y[1537]) / (1 + (y[1270] * y[4] * y[77] * y[1537]))
    return (r171) - (0)
 
def C05691(t, y):
    r283 = (13.7 * y[1323] * y[1] * y[696] * y[0]) / (1 + (y[1323] * y[1] * y[696] * y[0]))
    return (r283) - (0)
 
def C00787(t, y):
    r724 = (13.7 * y[1484] * y[1] * y[79] * y[1540]) / (1 + (y[1484] * y[1] * y[79] * y[1540]))
    return (0) - (r724)
 
def C02839(t, y):
    r724 = (13.7 * y[1484] * y[1] * y[79] * y[1540]) / (1 + (y[1484] * y[1] * y[79] * y[1540]))
    return (r724) - (0)
 
def C01647(t, y):
    r725 = (13.7 * y[1485] * y[1] * y[70] * y[1542]) / (1 + (y[1485] * y[1] * y[70] * y[1542]))
    r726 = (13.7 * y[1485] * y[1] * y[696] * y[1542]) / (1 + (y[1485] * y[1] * y[696] * y[1542]))
    return (0) - (r725 + r726)
 
def C05336(t, y):
    r726 = (13.7 * y[1485] * y[1] * y[696] * y[1542]) / (1 + (y[1485] * y[1] * y[696] * y[1542]))
    return (r726) - (0)
 
def C01650(t, y):
    r727 = (13.7 * y[1486] * y[1] * y[62] * y[1544]) / (1 + (y[1486] * y[1] * y[62] * y[1544]))
    return (0) - (r727)
 
def C02553(t, y):
    r727 = (13.7 * y[1486] * y[1] * y[62] * y[1544]) / (1 + (y[1486] * y[1] * y[62] * y[1544]))
    return (r727) - (0)
 
def C16636(t, y):
    r728 = (13.7 * y[1486] * y[1] * y[62] * y[1546]) / (1 + (y[1486] * y[1] * y[62] * y[1546]))
    return (0) - (r728)
 
def C06481(t, y):
    r728 = (13.7 * y[1486] * y[1] * y[62] * y[1546]) / (1 + (y[1486] * y[1] * y[62] * y[1546]))
    return (r728) - (0)
 
def C00653(t, y):
    r730 = (13.7 * y[1488] * y[1] * y[129] * y[1548]) / (1 + (y[1488] * y[1] * y[129] * y[1548]))
    r738 = (13.7 * y[1488] * y[1] * y[129] * y[1548]) / (1 + (y[1488] * y[1] * y[129] * y[1548]))
    return (0) - (r730 + r738)
 
def C04260(t, y):
    r730 = (13.7 * y[1488] * y[1] * y[129] * y[1548]) / (1 + (y[1488] * y[1] * y[129] * y[1548]))
    r738 = (13.7 * y[1488] * y[1] * y[129] * y[1548]) / (1 + (y[1488] * y[1] * y[129] * y[1548]))
    return (r730 + r738) - (0)
 
def G13185(t, y):
    r731 = (13.7 * y[1488] * y[1] * y[129] * y[1550]) / (1 + (y[1488] * y[1] * y[129] * y[1550]))
    r739 = (13.7 * y[1488] * y[1] * y[129] * y[1550]) / (1 + (y[1488] * y[1] * y[129] * y[1550]))
    return (0) - (r731 + r739)
 
def G13186(t, y):
    r731 = (13.7 * y[1488] * y[1] * y[129] * y[1550]) / (1 + (y[1488] * y[1] * y[129] * y[1550]))
    r739 = (13.7 * y[1488] * y[1] * y[129] * y[1550]) / (1 + (y[1488] * y[1] * y[129] * y[1550]))
    return (r731 + r739) - (0)
 
def G13167(t, y):
    r732 = (13.7 * y[1488] * y[1] * y[129] * y[1552]) / (1 + (y[1488] * y[1] * y[129] * y[1552]))
    r740 = (13.7 * y[1488] * y[1] * y[129] * y[1552]) / (1 + (y[1488] * y[1] * y[129] * y[1552]))
    return (0) - (r732 + r740)
 
def G13180(t, y):
    r732 = (13.7 * y[1488] * y[1] * y[129] * y[1552]) / (1 + (y[1488] * y[1] * y[129] * y[1552]))
    r740 = (13.7 * y[1488] * y[1] * y[129] * y[1552]) / (1 + (y[1488] * y[1] * y[129] * y[1552]))
    return (r732 + r740) - (0)
 
def G13170(t, y):
    r733 = (13.7 * y[1488] * y[1] * y[129] * y[1554]) / (1 + (y[1488] * y[1] * y[129] * y[1554]))
    r741 = (13.7 * y[1488] * y[1] * y[129] * y[1554]) / (1 + (y[1488] * y[1] * y[129] * y[1554]))
    return (0) - (r733 + r741)
 
def G13171(t, y):
    r733 = (13.7 * y[1488] * y[1] * y[129] * y[1554]) / (1 + (y[1488] * y[1] * y[129] * y[1554]))
    r741 = (13.7 * y[1488] * y[1] * y[129] * y[1554]) / (1 + (y[1488] * y[1] * y[129] * y[1554]))
    return (r733 + r741) - (0)
 
def G13174(t, y):
    r734 = (13.7 * y[1488] * y[1] * y[129] * y[1556]) / (1 + (y[1488] * y[1] * y[129] * y[1556]))
    r742 = (13.7 * y[1488] * y[1] * y[129] * y[1556]) / (1 + (y[1488] * y[1] * y[129] * y[1556]))
    return (0) - (r734 + r742)
 
def G13175(t, y):
    r734 = (13.7 * y[1488] * y[1] * y[129] * y[1556]) / (1 + (y[1488] * y[1] * y[129] * y[1556]))
    r742 = (13.7 * y[1488] * y[1] * y[129] * y[1556]) / (1 + (y[1488] * y[1] * y[129] * y[1556]))
    return (r734 + r742) - (0)
 
def G13176(t, y):
    r735 = (13.7 * y[1488] * y[1] * y[129] * y[1558]) / (1 + (y[1488] * y[1] * y[129] * y[1558]))
    r743 = (13.7 * y[1488] * y[1] * y[129] * y[1558]) / (1 + (y[1488] * y[1] * y[129] * y[1558]))
    return (0) - (r735 + r743)
 
def G13177(t, y):
    r735 = (13.7 * y[1488] * y[1] * y[129] * y[1558]) / (1 + (y[1488] * y[1] * y[129] * y[1558]))
    r743 = (13.7 * y[1488] * y[1] * y[129] * y[1558]) / (1 + (y[1488] * y[1] * y[129] * y[1558]))
    return (r735 + r743) - (0)
 
def G13178(t, y):
    r736 = (13.7 * y[1488] * y[1] * y[129] * y[1560]) / (1 + (y[1488] * y[1] * y[129] * y[1560]))
    r744 = (13.7 * y[1488] * y[1] * y[129] * y[1560]) / (1 + (y[1488] * y[1] * y[129] * y[1560]))
    return (0) - (r736 + r744)
 
def G13179(t, y):
    r736 = (13.7 * y[1488] * y[1] * y[129] * y[1560]) / (1 + (y[1488] * y[1] * y[129] * y[1560]))
    r744 = (13.7 * y[1488] * y[1] * y[129] * y[1560]) / (1 + (y[1488] * y[1] * y[129] * y[1560]))
    return (r736 + r744) - (0)
 
def G13192(t, y):
    r737 = (13.7 * y[1488] * y[1] * y[129] * y[1562]) / (1 + (y[1488] * y[1] * y[129] * y[1562]))
    r745 = (13.7 * y[1488] * y[1] * y[129] * y[1562]) / (1 + (y[1488] * y[1] * y[129] * y[1562]))
    return (0) - (r737 + r745)
 
def G13193(t, y):
    r737 = (13.7 * y[1488] * y[1] * y[129] * y[1562]) / (1 + (y[1488] * y[1] * y[129] * y[1562]))
    r745 = (13.7 * y[1488] * y[1] * y[129] * y[1562]) / (1 + (y[1488] * y[1] * y[129] * y[1562]))
    return (r737 + r745) - (0)
 
def C01642(t, y):
    r746 = (13.7 * y[1489] * y[1] * y[36] * y[1564]) / (1 + (y[1489] * y[1] * y[36] * y[1564]))
    r747 = (13.7 * y[1489] * y[1] * y[36] * y[1564]) / (1 + (y[1489] * y[1] * y[36] * y[1564]))
    return (0) - (r746 + r747)
 
def C02412(t, y):
    r746 = (13.7 * y[1489] * y[1] * y[36] * y[1564]) / (1 + (y[1489] * y[1] * y[36] * y[1564]))
    r747 = (13.7 * y[1489] * y[1] * y[36] * y[1564]) / (1 + (y[1489] * y[1] * y[36] * y[1564]))
    return (r746 + r747) - (0)
 
def C01649(t, y):
    r748 = (13.7 * y[1490] * y[1] * y[143] * y[1566]) / (1 + (y[1490] * y[1] * y[143] * y[1566]))
    return (0) - (r748)
 
def C02702(t, y):
    r748 = (13.7 * y[1490] * y[1] * y[143] * y[1566]) / (1 + (y[1490] * y[1] * y[143] * y[1566]))
    return (r748) - (0)
 
def C01639(t, y):
    r749 = (13.7 * y[1491] * y[1] * y[94] * y[1568]) / (1 + (y[1491] * y[1] * y[94] * y[1568]))
    return (0) - (r749)
 
def C03125(t, y):
    r749 = (13.7 * y[1491] * y[1] * y[94] * y[1568]) / (1 + (y[1491] * y[1] * y[94] * y[1568]))
    return (r749) - (0)
 
def C01636(t, y):
    r751 = (13.7 * y[1493] * y[1] * y[59] * y[1570]) / (1 + (y[1493] * y[1] * y[59] * y[1570]))
    return (0) - (r751)
 
def C02163(t, y):
    r751 = (13.7 * y[1493] * y[1] * y[59] * y[1570]) / (1 + (y[1493] * y[1] * y[59] * y[1570]))
    return (r751) - (0)
 
def C01652(t, y):
    r752 = (13.7 * y[1494] * y[1] * y[75] * y[1572]) / (1 + (y[1494] * y[1] * y[75] * y[1572]))
    return (0) - (r752)
 
def C03512(t, y):
    r752 = (13.7 * y[1494] * y[1] * y[75] * y[1572]) / (1 + (y[1494] * y[1] * y[75] * y[1572]))
    return (r752) - (0)
 
def C01648(t, y):
    r753 = (13.7 * y[1495] * y[1] * y[76] * y[1574]) / (1 + (y[1495] * y[1] * y[76] * y[1574]))
    r754 = (13.7 * y[1495] * y[1] * y[76] * y[1574]) / (1 + (y[1495] * y[1] * y[76] * y[1574]))
    return (0) - (r753 + r754)
 
def C03511(t, y):
    r753 = (13.7 * y[1495] * y[1] * y[76] * y[1574]) / (1 + (y[1495] * y[1] * y[76] * y[1574]))
    r754 = (13.7 * y[1495] * y[1] * y[76] * y[1574]) / (1 + (y[1495] * y[1] * y[76] * y[1574]))
    return (r753 + r754) - (0)
 
def C01643(t, y):
    r755 = (13.7 * y[1496] * y[1] * y[131] * y[1576]) / (1 + (y[1496] * y[1] * y[131] * y[1576]))
    return (0) - (r755)
 
def C02988(t, y):
    r755 = (13.7 * y[1496] * y[1] * y[131] * y[1576]) / (1 + (y[1496] * y[1] * y[131] * y[1576]))
    return (r755) - (0)
 
def C01645(t, y):
    r756 = (13.7 * y[1497] * y[1] * y[119] * y[1578]) / (1 + (y[1497] * y[1] * y[119] * y[1578]))
    r758 = (13.7 * y[1499] * y[1] * y[119] * y[1578]) / (1 + (y[1499] * y[1] * y[119] * y[1578]))
    return (0) - (r756 + r758)
 
def C03402(t, y):
    r756 = (13.7 * y[1497] * y[1] * y[119] * y[1578]) / (1 + (y[1497] * y[1] * y[119] * y[1578]))
    return (r756) - (0)
 
def C01651(t, y):
    r757 = (13.7 * y[1498] * y[1] * y[183] * y[1580]) / (1 + (y[1498] * y[1] * y[183] * y[1580]))
    return (0) - (r757)
 
def C02992(t, y):
    r757 = (13.7 * y[1498] * y[1] * y[183] * y[1580]) / (1 + (y[1498] * y[1] * y[183] * y[1580]))
    return (r757) - (0)
 
def C02047(t, y):
    r758 = (13.7 * y[1499] * y[1] * y[119] * y[1578]) / (1 + (y[1499] * y[1] * y[119] * y[1578]))
    return (r758) - (0)
 
def C01644(t, y):
    r759 = (13.7 * y[1500] * y[1] * y[383] * y[1583]) / (1 + (y[1500] * y[1] * y[383] * y[1583]))
    return (0) - (r759)
 
def C03127(t, y):
    r759 = (13.7 * y[1500] * y[1] * y[383] * y[1583]) / (1 + (y[1500] * y[1] * y[383] * y[1583]))
    return (r759) - (0)
 
def C01646(t, y):
    r760 = (13.7 * y[1501] * y[1] * y[46] * y[1585]) / (1 + (y[1501] * y[1] * y[46] * y[1585]))
    return (0) - (r760)
 
def C01931(t, y):
    r760 = (13.7 * y[1501] * y[1] * y[46] * y[1585]) / (1 + (y[1501] * y[1] * y[46] * y[1585]))
    return (r760) - (0)
 
def C01635(t, y):
    r761 = (13.7 * y[1502] * y[1] * y[40] * y[1587]) / (1 + (y[1502] * y[1] * y[40] * y[1587]))
    return (0) - (r761)
 
def C00886(t, y):
    r761 = (13.7 * y[1502] * y[1] * y[40] * y[1587]) / (1 + (y[1502] * y[1] * y[40] * y[1587]))
    return (r761) - (0)
 
def C01653(t, y):
    r762 = (13.7 * y[1503] * y[1] * y[178] * y[1589]) / (1 + (y[1503] * y[1] * y[178] * y[1589]))
    return (0) - (r762)
 
def C02554(t, y):
    r762 = (13.7 * y[1503] * y[1] * y[178] * y[1589]) / (1 + (y[1503] * y[1] * y[178] * y[1589]))
    return (r762) - (0)
 
def C22157(t, y):
    r767 = (13.7 * y[1507] * y[1] * y[822] * y[1591]) / (1 + (y[1507] * y[1] * y[822] * y[1591]))
    r773 = (13.7 * y[1507] * y[1] * y[822] * y[1591]) / (1 + (y[1507] * y[1] * y[822] * y[1591]))
    r779 = (13.7 * y[1507] * y[1] * y[822] * y[1591]) / (1 + (y[1507] * y[1] * y[822] * y[1591]))
    return (0) - (r767 + r773 + r779)
 
def C22158(t, y):
    r768 = (13.7 * y[1507] * y[1] * y[822] * y[1592]) / (1 + (y[1507] * y[1] * y[822] * y[1592]))
    r771 = (13.7 * y[1507] * y[1] * y[764] * y[1592]) / (1 + (y[1507] * y[1] * y[764] * y[1592]))
    r774 = (13.7 * y[1507] * y[1] * y[822] * y[1592]) / (1 + (y[1507] * y[1] * y[822] * y[1592]))
    r777 = (13.7 * y[1507] * y[1] * y[764] * y[1592]) / (1 + (y[1507] * y[1] * y[764] * y[1592]))
    r780 = (13.7 * y[1507] * y[1] * y[822] * y[1592]) / (1 + (y[1507] * y[1] * y[822] * y[1592]))
    r783 = (13.7 * y[1507] * y[1] * y[764] * y[1592]) / (1 + (y[1507] * y[1] * y[764] * y[1592]))
    return (0) - (r768 + r771 + r774 + r777 + r780 + r783)
 
def C00993(t, y):
    r785 = (13.7 * y[1509] * y[1] * y[740] * y[1593]) / (1 + (y[1509] * y[1] * y[740] * y[1593]))
    r786 = (13.7 * y[1509] * y[1] * y[673] * y[1593]) / (1 + (y[1509] * y[1] * y[673] * y[1593]))
    return (0) - (r785 + r786)
 
def C04735(t, y):
    r795 = (13.7 * y[1519] * y[1] * y[116] * y[1594]) / (1 + (y[1519] * y[1] * y[116] * y[1594]))
    r798 = (13.7 * y[1519] * y[1] * y[116] * y[1594]) / (1 + (y[1519] * y[1] * y[116] * y[1594]))
    return (0) - (r795 + r798)
 
def C04681(t, y):
    r795 = (13.7 * y[1519] * y[1] * y[116] * y[1594]) / (1 + (y[1519] * y[1] * y[116] * y[1594]))
    r798 = (13.7 * y[1519] * y[1] * y[116] * y[1594]) / (1 + (y[1519] * y[1] * y[116] * y[1594]))
    return (r795 + r798) - (0)
 
def C0020(t, y):
    r796 = (13.7 * y[1519] * y[1] * y[1596]) / (1 + (y[1519] * y[1] * y[1596]))
    return (0) - (r796)
 
def C02128(t, y):
    r845 = (13.7 * y[1533] * y[2] * y[38] * y[1597]) / (1 + (y[1533] * y[2] * y[38] * y[1597]))
    return (0) - (r845)
 
def boundary_checker(y, boundary, type):
    '''
    Private function - called by ODE solvers to perform boundary checking 
    of variable values and reset them to specific values if the original 
    values fall out of the boundary values.
    
    Boundary parameter takes the form of a dictionary with variable number 
    as key and a list of [<boundary value>, <value to set if boundary is 
    exceeded>]. For example, the following dictionary for lower boundary 
    (type = 'lower') {'1': [0.0, 0.0], '5': [2.0, 2.0]} will set the lower 
    boundary of variable y[0] and [5] to 0.0 and 2.0 respectively. This 
    also allows for setting to a different value - for example, {'1': [0.0, 
    1.0]} will set variable y[0] to 2.0 if the original y[0] value is 
    negative.
    
    @param y: values for variables
    @type y: list
    @param boundary: set of values for boundary of variables
    @type boundary: dictionary
    @param type: the type of boundary to be checked, either 'upper' (upper 
    boundary) or 'lower' (lower boundary)
    '''
    for k in list(boundary.keys()):
        if y[int(k)] < boundary[k][0] and type == 'lower':
            y[int(k)] = boundary[k][1]
        if y[int(k)] > boundary[k][0] and type == 'upper':
            y[int(k)] = boundary[k][1]
    return y

def RK4(funcs, x0, y0, step, xmax, nonODEfunc=None,
        lower_bound=None, upper_bound=None,
        overflow=1e100, zerodivision=1e100):
    '''
    Generator to integrate a system of ODEs, y' = f(x, y), using fourth
    order Runge-Kutta method.
    
    A function (as nonODEfunc parameter) can be included to modify one or 
    more variables (y0 list). This function will not be an ODE (not a 
    dy/dt). This can be used to consolidate the modification of one or 
    more variables at each ODE solving step. For example, y[0] = y[1] / y[2] 
    can be written as 
    
    >>> def modifying_function(y, step):
            y[0] = y[1] / y[2]
            return y
    
    This function must take 'y' (variable list) and 'step' (time step) as 
    parameters and must return 'y' (the modified variable list). This 
    function will execute before boundary checking at each time step.
    
    Upper and lower boundaries of one or more variable can be set using 
    upper_bound and lower_bound parameters respectively. These parameters 
    takes the form of a dictionary with variable number as key and a list 
    of [<boundary value>, <value to set if boundary is exceeded>]. For 
    example, the following dictionary for lower boundary {'1': [0.0, 0.0], 
    '5': [2.0, 2.0]} will set the lower boundary of variable y[0] and y[5] 
    to 0.0 and 2.0 respectively. This also allows for setting to a different 
    value - for example, {'1': [0.0, 1.0]} will set variable y[0] to 2.0 if 
    the original y[0] value is negative.
    
    @param funcs: system of differential equations
    @type funcs: list
    @param x0: initial value of x-axis, which is usually starting time
    @type x0: float
    @param y0: initial values for variables
    @type y0: list
    @param step: step size on the x-axis (also known as step in calculus)
    @type step: float
    @param xmax: maximum value of x-axis, which is usually ending time
    @type xmax: float
    @param nonODEfunc: a function to modify the variable list (y0)
    @type nonODEfunc: function
    @param lower_bound: set of values for lower boundary of variables
    @type lower_bound: dictionary
    @param upper_bound: set of values for upper boundary of variables
    @type upper_bound: dictionary
    @param overflow: value (usually a large value) to assign in event of 
    over flow error (usually caused by a large number) during integration. 
    Default = 1e100.
    @type overflow: float
    @param zerodivision: value (usually a large value) to assign in event 
    of zero division error, which results in positive infinity, during 
    integration. Default = 1e100.
    @type zerodivision: float
    '''
    yield [x0] + y0
    def solver(funcs, x0, y0, step):
        n = len(funcs)
        f1, f2, f3, f4 = [0]*n, [0]*n, [0]*n, [0]*n
        y1 = [0]*n
        for i in range(n):
            try: f1[i] = funcs[i](x0, y0)
            except TypeError: pass
            except ZeroDivisionError: f1[i] = zerodivision
            except OverflowError: f1[i] = overflow
        for j in range(n):
            y1[j] = y0[j] + (0.5*step*f1[j])
        for i in range(n):
            try: f2[i] = funcs[i]((x0+(0.5*step)), y1)
            except TypeError: pass
            except ZeroDivisionError: f2[i] = zerodivision
            except OverflowError: f2[i] = overflow
        for j in range(n):
            y1[j] = y0[j] + (0.5*step*f2[j])
        for i in range(n):
            try: f3[i] = funcs[i]((x0+(0.5*step)), y1)
            except TypeError: pass
            except ZeroDivisionError: f3[i] = zerodivision
            except OverflowError: f3[i] = overflow
        for j in range(n):
            y1[j] = y0[j] + (step*f3[j])
        for i in range(n):
            try: f4[i] = funcs[i]((x0+step), y1)
            except TypeError: pass
            except ZeroDivisionError: f4[i] = zerodivision
            except OverflowError: f4[i] = overflow
        for i in range(n):
            try: y1[i] = y0[i] + (step * \
                    (f1[i] + (2.0*f2[i]) + (2.0*f3[i]) + f4[i]) / 6.0)
            except TypeError: pass
            except ZeroDivisionError: y1[i] = zerodivision
            except OverflowError: y1[i] = overflow
        return y1
    while x0 < xmax:
        y1 = solver(funcs, x0, y0, step)
        if nonODEfunc:
            y1 = nonODEfunc(y1, step)
        if lower_bound: 
            y1 = boundary_checker(y1, lower_bound, 'lower')
        if upper_bound: 
            y1 = boundary_checker(y1, upper_bound, 'upper')
        y0 = y1
        x0 = x0 + step
        yield [x0] + y0
        
ODE = list(range(1598))
ODE[0] = C00001
ODE[1] = C00002
ODE[2] = C00003
ODE[3] = C00004
ODE[4] = C00005
ODE[5] = C00006
ODE[6] = C00007
ODE[7] = C00008
ODE[8] = C00009
ODE[9] = C00010
ODE[10] = C00011
ODE[11] = C00012
ODE[12] = C00013
ODE[13] = C00014
ODE[14] = C00015
ODE[15] = C00016
ODE[16] = C00017
ODE[17] = C00018
ODE[18] = C00019
ODE[19] = C00020
ODE[20] = C00021
ODE[21] = C00022
ODE[22] = C00023
ODE[23] = C00024
ODE[24] = C00025
ODE[25] = C00026
ODE[26] = C00027
ODE[27] = C00028
ODE[28] = C00029
ODE[29] = C00030
ODE[30] = C00031
ODE[31] = C00032
ODE[32] = C00033
ODE[33] = C00034
ODE[34] = C00035
ODE[35] = C00036
ODE[36] = C00037
ODE[37] = C00038
ODE[38] = C00039
ODE[39] = C00040
ODE[40] = C00041
ODE[41] = C00042
ODE[42] = C00043
ODE[43] = C00044
ODE[44] = C00045
ODE[45] = C00046
ODE[46] = C00047
ODE[47] = C00048
ODE[48] = C00049
ODE[49] = C00050
ODE[50] = C00051
ODE[51] = C00052
ODE[52] = C00053
ODE[53] = C00054
ODE[54] = C00055
ODE[55] = C00058
ODE[56] = C00059
ODE[57] = C00060
ODE[58] = C00061
ODE[59] = C00062
ODE[60] = C00063
ODE[61] = C00064
ODE[62] = C00065
ODE[63] = C00066
ODE[64] = C00067
ODE[65] = C00068
ODE[66] = C00069
ODE[67] = C00070
ODE[68] = C00071
ODE[69] = C00072
ODE[70] = C00073
ODE[71] = C00074
ODE[72] = C00075
ODE[73] = C00076
ODE[74] = C00077
ODE[75] = C00078
ODE[76] = C00079
ODE[77] = C00080
ODE[78] = C00081
ODE[79] = C00082
ODE[80] = C00083
ODE[81] = C00084
ODE[82] = C00085
ODE[83] = C00086
ODE[84] = C00087
ODE[85] = C00088
ODE[86] = C00089
ODE[87] = C00090
ODE[88] = C00091
ODE[89] = C00092
ODE[90] = C00093
ODE[91] = C00094
ODE[92] = C00095
ODE[93] = C00096
ODE[94] = C00097
ODE[95] = C00098
ODE[96] = C00099
ODE[97] = C00100
ODE[98] = C00101
ODE[99] = C00102
ODE[100] = C00103
ODE[101] = C00104
ODE[102] = C00105
ODE[103] = C00106
ODE[104] = C00107
ODE[105] = C00108
ODE[106] = C00109
ODE[107] = C00110
ODE[108] = C00111
ODE[109] = C00112
ODE[110] = C00113
ODE[111] = C00114
ODE[112] = C00116
ODE[113] = C00117
ODE[114] = C00118
ODE[115] = C00119
ODE[116] = C00120
ODE[117] = C00121
ODE[118] = C00122
ODE[119] = C00123
ODE[120] = C00124
ODE[121] = C00125
ODE[122] = C00126
ODE[123] = C00127
ODE[124] = C00128
ODE[125] = C00129
ODE[126] = C00130
ODE[127] = C00131
ODE[128] = C00132
ODE[129] = C00133
ODE[130] = C00134
ODE[131] = C00135
ODE[132] = C00136
ODE[133] = C00137
ODE[134] = C00138
ODE[135] = C00139
ODE[136] = C00140
ODE[137] = C00141
ODE[138] = C00143
ODE[139] = C00144
ODE[140] = C00145
ODE[141] = C00146
ODE[142] = C00147
ODE[143] = C00148
ODE[144] = C00149
ODE[145] = C00150
ODE[146] = C00151
ODE[147] = C00152
ODE[148] = C00153
ODE[149] = C00154
ODE[150] = C00155
ODE[151] = C00156
ODE[152] = C00157
ODE[153] = C00158
ODE[154] = C00159
ODE[155] = C00160
ODE[156] = C00161
ODE[157] = C00162
ODE[158] = C00163
ODE[159] = C00164
ODE[160] = C00165
ODE[161] = C00166
ODE[162] = C00167
ODE[163] = C00168
ODE[164] = C00169
ODE[165] = C00170
ODE[166] = C00171
ODE[167] = C00172
ODE[168] = C00173
ODE[169] = C00174
ODE[170] = C00175
ODE[171] = C00176
ODE[172] = C00177
ODE[173] = C00178
ODE[174] = C00179
ODE[175] = C00180
ODE[176] = C00181
ODE[177] = C00182
ODE[178] = C00183
ODE[179] = C00184
ODE[180] = C00185
ODE[181] = C00186
ODE[182] = C00187
ODE[183] = C00188
ODE[184] = C00189
ODE[185] = C00190
ODE[186] = C00191
ODE[187] = C00192
ODE[188] = C00193
ODE[189] = C00194
ODE[190] = C00195
ODE[191] = C00196
ODE[192] = C00197
ODE[193] = C00198
ODE[194] = C00199
ODE[195] = C00200
ODE[196] = C00201
ODE[197] = C00202
ODE[198] = C00203
ODE[199] = C00204
ODE[200] = C00205
ODE[201] = C00206
ODE[202] = C00207
ODE[203] = C00208
ODE[204] = C00209
ODE[205] = C00210
ODE[206] = C00211
ODE[207] = C00212
ODE[208] = C00213
ODE[209] = C00214
ODE[210] = C00215
ODE[211] = C00216
ODE[212] = C00217
ODE[213] = C00218
ODE[214] = C00219
ODE[215] = C00220
ODE[216] = C00221
ODE[217] = C00222
ODE[218] = C00223
ODE[219] = C00224
ODE[220] = C00225
ODE[221] = C00226
ODE[222] = C00227
ODE[223] = C00229
ODE[224] = C00230
ODE[225] = C00231
ODE[226] = C00232
ODE[227] = C00233
ODE[228] = C00234
ODE[229] = C00235
ODE[230] = C00236
ODE[231] = C00237
ODE[232] = C00238
ODE[233] = C00239
ODE[234] = C00240
ODE[235] = C00241
ODE[236] = C00242
ODE[237] = C00243
ODE[238] = C00244
ODE[239] = C00245
ODE[240] = C00246
ODE[241] = C00247
ODE[242] = C00248
ODE[243] = C00249
ODE[244] = C00250
ODE[245] = C00251
ODE[246] = C00252
ODE[247] = C00253
ODE[248] = C00254
ODE[249] = C00255
ODE[250] = C00256
ODE[251] = C00257
ODE[252] = C00258
ODE[253] = C00259
ODE[254] = C00261
ODE[255] = C00262
ODE[256] = C00263
ODE[257] = C00264
ODE[258] = C00265
ODE[259] = C00266
ODE[260] = C00267
ODE[261] = C00268
ODE[262] = C00269
ODE[263] = C00270
ODE[264] = C00272
ODE[265] = C00273
ODE[266] = C00275
ODE[267] = C00279
ODE[268] = C00280
ODE[269] = C00282
ODE[270] = C00283
ODE[271] = C00284
ODE[272] = C00286
ODE[273] = C00288
ODE[274] = C00290
ODE[275] = C00291
ODE[276] = C00292
ODE[277] = C00294
ODE[278] = C00295
ODE[279] = C00296
ODE[280] = C00297
ODE[281] = C00298
ODE[282] = C00299
ODE[283] = C00300
ODE[284] = C00301
ODE[285] = C00302
ODE[286] = C00303
ODE[287] = C00304
ODE[288] = C00305
ODE[289] = C00306
ODE[290] = C00307
ODE[291] = C00308
ODE[292] = C00309
ODE[293] = C00310
ODE[294] = C00311
ODE[295] = C00312
ODE[296] = C00313
ODE[297] = C00314
ODE[298] = C00315
ODE[299] = C00317
ODE[300] = C00318
ODE[301] = C00319
ODE[302] = C00320
ODE[303] = C00322
ODE[304] = C00323
ODE[305] = C00324
ODE[306] = C00325
ODE[307] = C00326
ODE[308] = C00327
ODE[309] = C00328
ODE[310] = C00329
ODE[311] = C00330
ODE[312] = C00331
ODE[313] = C00332
ODE[314] = C00333
ODE[315] = C00334
ODE[316] = C00337
ODE[317] = C00338
ODE[318] = C00339
ODE[319] = C00340
ODE[320] = C00341
ODE[321] = C00342
ODE[322] = C00343
ODE[323] = C00344
ODE[324] = C00345
ODE[325] = C00346
ODE[326] = C00347
ODE[327] = C00348
ODE[328] = C00349
ODE[329] = C00350
ODE[330] = C00351
ODE[331] = C00352
ODE[332] = C00353
ODE[333] = C00354
ODE[334] = C00355
ODE[335] = C00356
ODE[336] = C00357
ODE[337] = C00360
ODE[338] = C00361
ODE[339] = C00362
ODE[340] = C00363
ODE[341] = C00364
ODE[342] = C00365
ODE[343] = C00366
ODE[344] = C00367
ODE[345] = C00369
ODE[346] = C00370
ODE[347] = C00371
ODE[348] = C00372
ODE[349] = C00373
ODE[350] = C00374
ODE[351] = C00375
ODE[352] = C00376
ODE[353] = C00377
ODE[354] = C00378
ODE[355] = C00379
ODE[356] = C00380
ODE[357] = C00381
ODE[358] = C00382
ODE[359] = C00383
ODE[360] = C00384
ODE[361] = C00385
ODE[362] = C00386
ODE[363] = C00387
ODE[364] = C00388
ODE[365] = C00389
ODE[366] = C00390
ODE[367] = C00391
ODE[368] = C00392
ODE[369] = C00393
ODE[370] = C00394
ODE[371] = C00395
ODE[372] = C00396
ODE[373] = C00397
ODE[374] = C00398
ODE[375] = C00399
ODE[376] = C00400
ODE[377] = C00401
ODE[378] = C00402
ODE[379] = C00403
ODE[380] = C00404
ODE[381] = C00405
ODE[382] = C00406
ODE[383] = C00407
ODE[384] = C00408
ODE[385] = C00409
ODE[386] = C00410
ODE[387] = C00411
ODE[388] = C00412
ODE[389] = C00413
ODE[390] = C00414
ODE[391] = C00415
ODE[392] = C00416
ODE[393] = C00418
ODE[394] = C00424
ODE[395] = C00437
ODE[396] = C00438
ODE[397] = C00441
ODE[398] = C00445
ODE[399] = C00446
ODE[400] = C00454
ODE[401] = C00455
ODE[402] = C00458
ODE[403] = C00459
ODE[404] = C00460
ODE[405] = C00469
ODE[406] = C00473
ODE[407] = C00475
ODE[408] = C00492
ODE[409] = C00493
ODE[410] = C00499
ODE[411] = C00504
ODE[412] = C00506
ODE[413] = C00508
ODE[414] = C00511
ODE[415] = C00519
ODE[416] = C00522
ODE[417] = C00526
ODE[418] = C00546
ODE[419] = C00568
ODE[420] = C00576
ODE[421] = C00579
ODE[422] = C00583
ODE[423] = C00585
ODE[424] = C00605
ODE[425] = C00606
ODE[426] = C00615
ODE[427] = C00624
ODE[428] = C00631
ODE[429] = C00640
ODE[430] = C00641
ODE[431] = C00645
ODE[432] = C00655
ODE[433] = C00663
ODE[434] = C00666
ODE[435] = C00668
ODE[436] = C00671
ODE[437] = C00673
ODE[438] = C00677
ODE[439] = C00680
ODE[440] = C00681
ODE[441] = C00685
ODE[442] = C00688
ODE[443] = C00689
ODE[444] = C00692
ODE[445] = C00693
ODE[446] = C00700
ODE[447] = C00705
ODE[448] = C00741
ODE[449] = C00756
ODE[450] = C00772
ODE[451] = C00794
ODE[452] = C00810
ODE[453] = C00819
ODE[454] = C00828
ODE[455] = C00831
ODE[456] = C00842
ODE[457] = C00857
ODE[458] = C00860
ODE[459] = C00864
ODE[460] = C00868
ODE[461] = C00882
ODE[462] = C00900
ODE[463] = C00921
ODE[464] = C00931
ODE[465] = C00935
ODE[466] = C00954
ODE[467] = C00957
ODE[468] = C00966
ODE[469] = C00979
ODE[470] = C00984
ODE[471] = C01005
ODE[472] = C01024
ODE[473] = C01035
ODE[474] = C01050
ODE[475] = C01051
ODE[476] = C01081
ODE[477] = C01100
ODE[478] = C01102
ODE[479] = C01103
ODE[480] = C01107
ODE[481] = C01118
ODE[482] = C01134
ODE[483] = C01143
ODE[484] = C01144
ODE[485] = C01157
ODE[486] = C01159
ODE[487] = C01165
ODE[488] = C01167
ODE[489] = C01170
ODE[490] = C01172
ODE[491] = C01179
ODE[492] = C01185
ODE[493] = C01209
ODE[494] = C01212
ODE[495] = C01217
ODE[496] = C01235
ODE[497] = C01236
ODE[498] = C01250
ODE[499] = C01260
ODE[500] = C01267
ODE[501] = C01268
ODE[502] = C01269
ODE[503] = C01271
ODE[504] = C01279
ODE[505] = C01290
ODE[506] = C01300
ODE[507] = C01304
ODE[508] = C01344
ODE[509] = C01345
ODE[510] = C01346
ODE[511] = C01412
ODE[512] = C01450
ODE[513] = C01528
ODE[514] = C01545
ODE[515] = C01563
ODE[516] = C01612
ODE[517] = C01613
ODE[518] = C01628
ODE[519] = C01638
ODE[520] = C01641
ODE[521] = C01659
ODE[522] = C01769
ODE[523] = C01801
ODE[524] = C01879
ODE[525] = C01929
ODE[526] = C01977
ODE[527] = C01997
ODE[528] = C02051
ODE[529] = C02059
ODE[530] = C02090
ODE[531] = C02097
ODE[532] = C02133
ODE[533] = C02188
ODE[534] = C02218
ODE[535] = C02232
ODE[536] = C02336
ODE[537] = C02342
ODE[538] = C02350
ODE[539] = C02356
ODE[540] = C02380
ODE[541] = C02415
ODE[542] = C02430
ODE[543] = C02463
ODE[544] = C02469
ODE[545] = C02479
ODE[546] = C02501
ODE[547] = C02504
ODE[548] = C02505
ODE[549] = C02583
ODE[550] = C02631
ODE[551] = C02686
ODE[552] = C02693
ODE[553] = C02713
ODE[554] = C02730
ODE[555] = C02739
ODE[556] = C02741
ODE[557] = C02743
ODE[558] = C02764
ODE[559] = C02876
ODE[560] = C02909
ODE[561] = C02953
ODE[562] = C02962
ODE[563] = C02972
ODE[564] = C02984
ODE[565] = C02987
ODE[566] = C02999
ODE[567] = C03023
ODE[568] = C03028
ODE[569] = C03078
ODE[570] = C03082
ODE[571] = C03089
ODE[572] = C03090
ODE[573] = C03150
ODE[574] = C03160
ODE[575] = C03170
ODE[576] = C03172
ODE[577] = C03175
ODE[578] = C03232
ODE[579] = C03287
ODE[580] = C03294
ODE[581] = C03313
ODE[582] = C03319
ODE[583] = C03344
ODE[584] = C03356
ODE[585] = C03373
ODE[586] = C03406
ODE[587] = C03453
ODE[588] = C03479
ODE[589] = C03492
ODE[590] = C03523
ODE[591] = C03539
ODE[592] = C03617
ODE[593] = C03620
ODE[594] = C03633
ODE[595] = C03657
ODE[596] = C03688
ODE[597] = C03692
ODE[598] = C03723
ODE[599] = C03733
ODE[600] = C03794
ODE[601] = C03798
ODE[602] = C03800
ODE[603] = C03802
ODE[604] = C03803
ODE[605] = C03838
ODE[606] = C03880
ODE[607] = C03892
ODE[608] = C03895
ODE[609] = C03912
ODE[610] = C03939
ODE[611] = C03972
ODE[612] = C04039
ODE[613] = C04051
ODE[614] = C04079
ODE[615] = C04088
ODE[616] = C04133
ODE[617] = C04144
ODE[618] = C04153
ODE[619] = C04157
ODE[620] = C04160
ODE[621] = C04161
ODE[622] = C04181
ODE[623] = C04232
ODE[624] = C04236
ODE[625] = C04242
ODE[626] = C04246
ODE[627] = C04250
ODE[628] = C04258
ODE[629] = C04261
ODE[630] = C04262
ODE[631] = C04272
ODE[632] = C04281
ODE[633] = C04294
ODE[634] = C04309
ODE[635] = C04327
ODE[636] = C04332
ODE[637] = C04341
ODE[638] = C04352
ODE[639] = C04376
ODE[640] = C04377
ODE[641] = C04405
ODE[642] = C04411
ODE[643] = C04419
ODE[644] = C04432
ODE[645] = C04454
ODE[646] = C04489
ODE[647] = C04494
ODE[648] = C04501
ODE[649] = C04556
ODE[650] = C04574
ODE[651] = C04618
ODE[652] = C04619
ODE[653] = C04620
ODE[654] = C04631
ODE[655] = C04633
ODE[656] = C04640
ODE[657] = C04646
ODE[658] = C04666
ODE[659] = C04677
ODE[660] = C04688
ODE[661] = C04702
ODE[662] = C04732
ODE[663] = C04734
ODE[664] = C04737
ODE[665] = C04751
ODE[666] = C04752
ODE[667] = C04756
ODE[668] = C04807
ODE[669] = C04823
ODE[670] = C04851
ODE[671] = C04856
ODE[672] = C04874
ODE[673] = C04877
ODE[674] = C04882
ODE[675] = C04895
ODE[676] = C04896
ODE[677] = C04899
ODE[678] = C04916
ODE[679] = C05125
ODE[680] = C05167
ODE[681] = C05198
ODE[682] = C05223
ODE[683] = C05235
ODE[684] = C05258
ODE[685] = C05259
ODE[686] = C05260
ODE[687] = C05261
ODE[688] = C05262
ODE[689] = C05263
ODE[690] = C05264
ODE[691] = C05265
ODE[692] = C05266
ODE[693] = C05267
ODE[694] = C05268
ODE[695] = C05269
ODE[696] = C05335
ODE[697] = C05345
ODE[698] = C05382
ODE[699] = C05399
ODE[700] = C05400
ODE[701] = C05401
ODE[702] = C05402
ODE[703] = C05404
ODE[704] = C05444
ODE[705] = C05445
ODE[706] = C05526
ODE[707] = C05539
ODE[708] = C05576
ODE[709] = C05577
ODE[710] = C05684
ODE[711] = C05688
ODE[712] = C05698
ODE[713] = C05744
ODE[714] = C05745
ODE[715] = C05746
ODE[716] = C05747
ODE[717] = C05748
ODE[718] = C05749
ODE[719] = C05750
ODE[720] = C05751
ODE[721] = C05752
ODE[722] = C05753
ODE[723] = C05754
ODE[724] = C05755
ODE[725] = C05756
ODE[726] = C05757
ODE[727] = C05758
ODE[728] = C05759
ODE[729] = C05760
ODE[730] = C05761
ODE[731] = C05762
ODE[732] = C05763
ODE[733] = C05764
ODE[734] = C05778
ODE[735] = C05817
ODE[736] = C05819
ODE[737] = C05823
ODE[738] = C05841
ODE[739] = C05850
ODE[740] = C05892
ODE[741] = C05893
ODE[742] = C05897
ODE[743] = C05898
ODE[744] = C05921
ODE[745] = C05922
ODE[746] = C05923
ODE[747] = C05984
ODE[748] = C06006
ODE[749] = C06007
ODE[750] = C06010
ODE[751] = C06032
ODE[752] = C06037
ODE[753] = C06054
ODE[754] = C06055
ODE[755] = C06056
ODE[756] = C06060
ODE[757] = C06126
ODE[758] = C06148
ODE[759] = C06156
ODE[760] = C06196
ODE[761] = C06244
ODE[762] = C06249
ODE[763] = C06250
ODE[764] = C06423
ODE[765] = C06611
ODE[766] = C06612
ODE[767] = C06613
ODE[768] = C06697
ODE[769] = C06714
ODE[770] = C06715
ODE[771] = C06899
ODE[772] = C07086
ODE[773] = C07478
ODE[774] = C07479
ODE[775] = C07490
ODE[776] = C07645
ODE[777] = C07648
ODE[778] = C07649
ODE[779] = C08353
ODE[780] = C08492
ODE[781] = C09815
ODE[782] = C11038
ODE[783] = C11039
ODE[784] = C11215
ODE[785] = C11435
ODE[786] = C11436
ODE[787] = C11437
ODE[788] = C11439
ODE[789] = C11440
ODE[790] = C11475
ODE[791] = C11736
ODE[792] = C11838
ODE[793] = C11907
ODE[794] = C12214
ODE[795] = C12215
ODE[796] = C13378
ODE[797] = C14089
ODE[798] = C14090
ODE[799] = C14099
ODE[800] = C14145
ODE[801] = C14463
ODE[802] = C15498
ODE[803] = C15527
ODE[804] = C15547
ODE[805] = C15556
ODE[806] = C15603
ODE[807] = C15647
ODE[808] = C15653
ODE[809] = C15667
ODE[810] = C15811
ODE[811] = C15812
ODE[812] = C15813
ODE[813] = C15814
ODE[814] = C15972
ODE[815] = C15973
ODE[816] = C15999
ODE[817] = C16219
ODE[818] = C16221
ODE[819] = C16237
ODE[820] = C16238
ODE[821] = C16240
ODE[822] = C16241
ODE[823] = C16310
ODE[824] = C16329
ODE[825] = C16330
ODE[826] = C16333
ODE[827] = C16334
ODE[828] = C16337
ODE[829] = C16338
ODE[830] = C16348
ODE[831] = C16469
ODE[832] = C16471
ODE[833] = C16551
ODE[834] = C16586
ODE[835] = C16587
ODE[836] = C16595
ODE[837] = C16596
ODE[838] = C16614
ODE[839] = C16615
ODE[840] = C16617
ODE[841] = C16618
ODE[842] = C16619
ODE[843] = C16633
ODE[844] = C16634
ODE[845] = C16639
ODE[846] = C16663
ODE[847] = C16664
ODE[848] = C16688
ODE[849] = C16832
ODE[850] = C17234
ODE[851] = C17322
ODE[852] = C17324
ODE[853] = C17556
ODE[854] = C18094
ODE[855] = C18096
ODE[856] = C18237
ODE[857] = C18239
ODE[858] = C19609
ODE[859] = C19673
ODE[860] = C19722
ODE[861] = C19723
ODE[862] = C19847
ODE[863] = C19858
ODE[864] = C19859
ODE[865] = C19871
ODE[866] = C20246
ODE[867] = C20247
ODE[868] = C20258
ODE[869] = C20267
ODE[870] = C20372
ODE[871] = C20373
ODE[872] = C20374
ODE[873] = C20375
ODE[874] = C20376
ODE[875] = C20377
ODE[876] = C20378
ODE[877] = C20451
ODE[878] = C20482
ODE[879] = C20483
ODE[880] = C20565
ODE[881] = C20641
ODE[882] = C20648
ODE[883] = C20658
ODE[884] = C20743
ODE[885] = C20751
ODE[886] = C20796
ODE[887] = C20858
ODE[888] = C20864
ODE[889] = C20904
ODE[890] = C20905
ODE[891] = C20969
ODE[892] = C21031
ODE[893] = C21310
ODE[894] = C21440
ODE[895] = C21748
ODE[896] = C21749
ODE[897] = C21750
ODE[898] = C21751
ODE[899] = C21767
ODE[900] = C21769
ODE[901] = C21811
ODE[902] = C21812
ODE[903] = C22131
ODE[904] = C22160
ODE[905] = C22288
ODE[906] = C22395
ODE[907] = C22441
ODE[908] = C22442
ODE[909] = C22443
ODE[910] = G00092
ODE[911] = G00093
ODE[912] = G00249
ODE[913] = G00278
ODE[914] = G00370
ODE[915] = G00497
ODE[916] = G00501
ODE[917] = G01275
ODE[918] = G09795
ODE[919] = G10488
ODE[920] = G10508
ODE[921] = G10529
ODE[922] = G10550
ODE[923] = G10551
ODE[924] = G10552
ODE[925] = G10553
ODE[926] = G10555
ODE[927] = G10556
ODE[928] = G10610
ODE[929] = G10619
ODE[930] = G11121
ODE[931] = E1_1_1_1_mRNA
ODE[932] = E1_1_1_133_mRNA
ODE[933] = E1_1_1_169_mRNA
ODE[934] = E1_1_1_193_mRNA
ODE[935] = E1_1_1_23_mRNA
ODE[936] = E1_1_1_27_mRNA
ODE[937] = E1_1_1_28_mRNA
ODE[938] = E1_1_1_3_mRNA
ODE[939] = E1_1_1_304_mRNA
ODE[940] = E1_1_1_35_mRNA
ODE[941] = E1_1_1_44_mRNA
ODE[942] = E1_1_1_47_mRNA
ODE[943] = E1_1_1_49_mRNA
ODE[944] = E1_1_1_6_mRNA
ODE[945] = E1_1_1_85_mRNA
ODE[946] = E1_1_1_86_mRNA
ODE[947] = E1_1_1_88_mRNA
ODE[948] = E1_1_1_94_mRNA
ODE[949] = E1_11_1_26_mRNA
ODE[950] = E1_17_1_8_mRNA
ODE[951] = E1_17_4_1_mRNA
ODE[952] = E1_17_4_2_mRNA
ODE[953] = E1_2_1_10_mRNA
ODE[954] = E1_2_1_11_mRNA
ODE[955] = E1_2_1_38_mRNA
ODE[956] = E1_2_1_41_mRNA
ODE[957] = E1_20_4_4_mRNA
ODE[958] = E1_3_1_12_mRNA
ODE[959] = E1_3_1_14_mRNA
ODE[960] = E1_3_1_9_mRNA
ODE[961] = E1_3_1_98_mRNA
ODE[962] = E1_4_1_13_mRNA
ODE[963] = E1_5_1_2_mRNA
ODE[964] = E1_5_1_3_mRNA
ODE[965] = E1_6_5_2_mRNA
ODE[966] = E1_7_1_7_mRNA
ODE[967] = E1_8_1_4_mRNA
ODE[968] = E1_8_1_9_mRNA
ODE[969] = E1_8_4_11_mRNA
ODE[970] = E1_8_4_12_mRNA
ODE[971] = E2_1_1_10_mRNA
ODE[972] = E2_1_1_107_mRNA
ODE[973] = E2_1_1_14_mRNA
ODE[974] = E2_1_1_163_mRNA
ODE[975] = E2_1_1_171_mRNA
ODE[976] = E2_1_1_182_mRNA
ODE[977] = E2_1_1_201_mRNA
ODE[978] = E2_1_1_228_mRNA
ODE[979] = E2_1_1_297_mRNA
ODE[980] = E2_1_1_33_mRNA
ODE[981] = E2_1_1_45_mRNA
ODE[982] = E2_1_1_63_mRNA
ODE[983] = E2_1_2_1_mRNA
ODE[984] = E2_1_2_2_mRNA
ODE[985] = E2_1_2_3_mRNA
ODE[986] = E2_1_2_9_mRNA
ODE[987] = E2_1_3_15_mRNA
ODE[988] = E2_1_3_2_mRNA
ODE[989] = E2_1_3_3_mRNA
ODE[990] = E2_2_1_1_mRNA
ODE[991] = E2_2_1_6_mRNA
ODE[992] = E2_2_1_7_mRNA
ODE[993] = E2_3_1_1_mRNA
ODE[994] = E2_3_1_15_mRNA
ODE[995] = E2_3_1_157_mRNA
ODE[996] = E2_3_1_179_mRNA
ODE[997] = E2_3_1_180_mRNA
ODE[998] = E2_3_1_234_mRNA
ODE[999] = E2_3_1_266_mRNA
ODE[1000] = E2_3_1_274_mRNA
ODE[1001] = E2_3_1_286_mRNA
ODE[1002] = E2_3_1_35_mRNA
ODE[1003] = E2_3_1_39_mRNA
ODE[1004] = E2_3_1_46_mRNA
ODE[1005] = E2_3_1_8_mRNA
ODE[1006] = E2_3_1_89_mRNA
ODE[1007] = E2_3_1_9_mRNA
ODE[1008] = E2_3_3_10_mRNA
ODE[1009] = E2_4_1_227_mRNA
ODE[1010] = E2_4_2_10_mRNA
ODE[1011] = E2_4_2_14_mRNA
ODE[1012] = E2_4_2_17_mRNA
ODE[1013] = E2_4_2_22_mRNA
ODE[1014] = E2_4_2_7_mRNA
ODE[1015] = E2_4_2_8_mRNA
ODE[1016] = E2_4_2_9_mRNA
ODE[1017] = E2_5_1_15_mRNA
ODE[1018] = E2_5_1_19_mRNA
ODE[1019] = E2_5_1_3_mRNA
ODE[1020] = E2_5_1_47_mRNA
ODE[1021] = E2_5_1_6_mRNA
ODE[1022] = E2_5_1_75_mRNA
ODE[1023] = E2_5_1_78_mRNA
ODE[1024] = E2_5_1_9_mRNA
ODE[1025] = E2_6_1_11_mRNA
ODE[1026] = E2_6_1_16_mRNA
ODE[1027] = E2_6_1_42_mRNA
ODE[1028] = E2_6_1_52_mRNA
ODE[1029] = E2_6_1_9_mRNA
ODE[1030] = E2_7_1_107_mRNA
ODE[1031] = E2_7_1_12_mRNA
ODE[1032] = E2_7_1_148_mRNA
ODE[1033] = E2_7_1_15_mRNA
ODE[1034] = E2_7_1_2_mRNA
ODE[1035] = E2_7_1_21_mRNA
ODE[1036] = E2_7_1_211_mRNA
ODE[1037] = E2_7_1_23_mRNA
ODE[1038] = E2_7_1_24_mRNA
ODE[1039] = E2_7_1_26_mRNA
ODE[1040] = E2_7_1_30_mRNA
ODE[1041] = E2_7_1_31_mRNA
ODE[1042] = E2_7_1_33_mRNA
ODE[1043] = E2_7_1_36_mRNA
ODE[1044] = E2_7_1_39_mRNA
ODE[1045] = E2_7_1_4_mRNA
ODE[1046] = E2_7_1_40_mRNA
ODE[1047] = E2_7_1_48_mRNA
ODE[1048] = E2_7_1_49_mRNA
ODE[1049] = E2_7_1_50_mRNA
ODE[1050] = E2_7_1_6_mRNA
ODE[1051] = E2_7_1_71_mRNA
ODE[1052] = E2_7_10_2_mRNA
ODE[1053] = E2_7_2_1_mRNA
ODE[1054] = E2_7_2_11_mRNA
ODE[1055] = E2_7_2_2_mRNA
ODE[1056] = E2_7_2_3_mRNA
ODE[1057] = E2_7_2_4_mRNA
ODE[1058] = E2_7_2_8_mRNA
ODE[1059] = E2_7_3_9_mRNA
ODE[1060] = E2_7_4_1_mRNA
ODE[1061] = E2_7_4_2_mRNA
ODE[1062] = E2_7_4_22_mRNA
ODE[1063] = E2_7_4_25_mRNA
ODE[1064] = E2_7_4_3_mRNA
ODE[1065] = E2_7_4_6_mRNA
ODE[1066] = E2_7_4_7_mRNA
ODE[1067] = E2_7_4_8_mRNA
ODE[1068] = E2_7_4_9_mRNA
ODE[1069] = E2_7_6_1_mRNA
ODE[1070] = E2_7_6_2_mRNA
ODE[1071] = E2_7_6_3_mRNA
ODE[1072] = E2_7_6_5_mRNA
ODE[1073] = E2_7_7_12_mRNA
ODE[1074] = E2_7_7_18_mRNA
ODE[1075] = E2_7_7_2_mRNA
ODE[1076] = E2_7_7_23_mRNA
ODE[1077] = E2_7_7_24_mRNA
ODE[1078] = E2_7_7_3_mRNA
ODE[1079] = E2_7_7_41_mRNA
ODE[1080] = E2_7_7_6_mRNA
ODE[1081] = E2_7_7_7_mRNA
ODE[1082] = E2_7_7_77_mRNA
ODE[1083] = E2_7_7_85_mRNA
ODE[1084] = E2_7_7_87_mRNA
ODE[1085] = E2_7_7_9_mRNA
ODE[1086] = E2_7_8_13_mRNA
ODE[1087] = E2_7_8_5_mRNA
ODE[1088] = E2_7_8_7_mRNA
ODE[1089] = E2_8_1_13_mRNA
ODE[1090] = E2_8_1_4_mRNA
ODE[1091] = E2_8_1_7_mRNA
ODE[1092] = E3_1_1_103_mRNA
ODE[1093] = E3_1_1_106_mRNA
ODE[1094] = E3_1_1_29_mRNA
ODE[1095] = E3_1_3_15_mRNA
ODE[1096] = E3_1_3_27_mRNA
ODE[1097] = E3_1_3_48_mRNA
ODE[1098] = E3_1_3_7_mRNA
ODE[1099] = E3_1_4_4_mRNA
ODE[1100] = E3_2_1_22_mRNA
ODE[1101] = E3_2_1_26_mRNA
ODE[1102] = E3_2_1_93_mRNA
ODE[1103] = E3_2_2_3_mRNA
ODE[1104] = E3_2_2_9_mRNA
ODE[1105] = E3_5_1_2_mRNA
ODE[1106] = E3_5_1_28_mRNA
ODE[1107] = E3_5_1_4_mRNA
ODE[1108] = E3_5_1_88_mRNA
ODE[1109] = E3_5_2_3_mRNA
ODE[1110] = E3_5_2_5_mRNA
ODE[1111] = E3_5_2_9_mRNA
ODE[1112] = E3_5_3_6_mRNA
ODE[1113] = E3_5_4_10_mRNA
ODE[1114] = E3_5_4_16_mRNA
ODE[1115] = E3_5_4_19_mRNA
ODE[1116] = E3_5_4_25_mRNA
ODE[1117] = E3_5_4_26_mRNA
ODE[1118] = E3_5_4_3_mRNA
ODE[1119] = E3_5_4_33_mRNA
ODE[1120] = E3_5_99_2_mRNA
ODE[1121] = E3_6_1_1_mRNA
ODE[1122] = E3_6_1_27_mRNA
ODE[1123] = E3_6_1_31_mRNA
ODE[1124] = E3_6_1_41_mRNA
ODE[1125] = E3_6_1_66_mRNA
ODE[1126] = E4_1_1_101_mRNA
ODE[1127] = E4_1_1_15_mRNA
ODE[1128] = E4_1_1_20_mRNA
ODE[1129] = E4_1_1_21_mRNA
ODE[1130] = E4_1_1_23_mRNA
ODE[1131] = E4_1_1_33_mRNA
ODE[1132] = E4_1_1_36_mRNA
ODE[1133] = E4_1_1_5_mRNA
ODE[1134] = E4_1_2_25_mRNA
ODE[1135] = E4_1_2_4_mRNA
ODE[1136] = E4_1_3_36_mRNA
ODE[1137] = E4_1_99_22_mRNA
ODE[1138] = E4_2_1_11_mRNA
ODE[1139] = E4_2_1_113_mRNA
ODE[1140] = E4_2_1_19_mRNA
ODE[1141] = E4_2_1_2_mRNA
ODE[1142] = E4_2_1_33_mRNA
ODE[1143] = E4_2_1_46_mRNA
ODE[1144] = E4_2_1_59_mRNA
ODE[1145] = E4_2_1_9_mRNA
ODE[1146] = E4_2_3_1_mRNA
ODE[1147] = E4_2_3_5_mRNA
ODE[1148] = E4_3_1_17_mRNA
ODE[1149] = E4_3_1_19_mRNA
ODE[1150] = E4_3_1_8_mRNA
ODE[1151] = E4_3_2_1_mRNA
ODE[1152] = E4_3_2_10_mRNA
ODE[1153] = E4_3_2_2_mRNA
ODE[1154] = E4_3_3_7_mRNA
ODE[1155] = E4_4_1_21_mRNA
ODE[1156] = E4_6_1_17_mRNA
ODE[1157] = E4_99_1_12_mRNA
ODE[1158] = E5_1_1_1_mRNA
ODE[1159] = E5_1_1_3_mRNA
ODE[1160] = E5_1_1_7_mRNA
ODE[1161] = E5_1_3_1_mRNA
ODE[1162] = E5_1_3_13_mRNA
ODE[1163] = E5_1_3_14_mRNA
ODE[1164] = E5_1_3_2_mRNA
ODE[1165] = E5_1_99_6_mRNA
ODE[1166] = E5_2_1_8_mRNA
ODE[1167] = E5_3_1_1_mRNA
ODE[1168] = E5_3_1_16_mRNA
ODE[1169] = E5_3_1_4_mRNA
ODE[1170] = E5_3_1_6_mRNA
ODE[1171] = E5_3_1_9_mRNA
ODE[1172] = E5_3_2_6_mRNA
ODE[1173] = E5_3_3_2_mRNA
ODE[1174] = E5_4_2_10_mRNA
ODE[1175] = E5_4_2_11_mRNA
ODE[1176] = E5_4_2_6_mRNA
ODE[1177] = E5_4_99_12_mRNA
ODE[1178] = E5_4_99_18_mRNA
ODE[1179] = E5_4_99_5_mRNA
ODE[1180] = E5_4_99_62_mRNA
ODE[1181] = E5_4_99_9_mRNA
ODE[1182] = E6_1_1_1_mRNA
ODE[1183] = E6_1_1_10_mRNA
ODE[1184] = E6_1_1_11_mRNA
ODE[1185] = E6_1_1_12_mRNA
ODE[1186] = E6_1_1_13_mRNA
ODE[1187] = E6_1_1_14_mRNA
ODE[1188] = E6_1_1_15_mRNA
ODE[1189] = E6_1_1_16_mRNA
ODE[1190] = E6_1_1_17_mRNA
ODE[1191] = E6_1_1_19_mRNA
ODE[1192] = E6_1_1_2_mRNA
ODE[1193] = E6_1_1_20_mRNA
ODE[1194] = E6_1_1_21_mRNA
ODE[1195] = E6_1_1_22_mRNA
ODE[1196] = E6_1_1_3_mRNA
ODE[1197] = E6_1_1_4_mRNA
ODE[1198] = E6_1_1_5_mRNA
ODE[1199] = E6_1_1_6_mRNA
ODE[1200] = E6_1_1_7_mRNA
ODE[1201] = E6_1_1_9_mRNA
ODE[1202] = E6_2_1_26_mRNA
ODE[1203] = E6_3_1_1_mRNA
ODE[1204] = E6_3_1_2_mRNA
ODE[1205] = E6_3_1_20_mRNA
ODE[1206] = E6_3_1_5_mRNA
ODE[1207] = E6_3_2_10_mRNA
ODE[1208] = E6_3_2_13_mRNA
ODE[1209] = E6_3_2_5_mRNA
ODE[1210] = E6_3_2_6_mRNA
ODE[1211] = E6_3_2_8_mRNA
ODE[1212] = E6_3_2_9_mRNA
ODE[1213] = E6_3_3_1_mRNA
ODE[1214] = E6_3_3_2_mRNA
ODE[1215] = E6_3_4_13_mRNA
ODE[1216] = E6_3_4_14_mRNA
ODE[1217] = E6_3_4_15_mRNA
ODE[1218] = E6_3_4_18_mRNA
ODE[1219] = E6_3_4_19_mRNA
ODE[1220] = E6_3_4_2_mRNA
ODE[1221] = E6_3_4_21_mRNA
ODE[1222] = E6_3_4_3_mRNA
ODE[1223] = E6_3_4_4_mRNA
ODE[1224] = E6_3_4_5_mRNA
ODE[1225] = E6_3_5_2_mRNA
ODE[1226] = E6_3_5_3_mRNA
ODE[1227] = E6_3_5_4_mRNA
ODE[1228] = E6_3_5_5_mRNA
ODE[1229] = E6_4_1_1_mRNA
ODE[1230] = E6_4_1_2_mRNA
ODE[1231] = E6_5_1_2_mRNA
ODE[1232] = E7_1_2_2_mRNA
ODE[1233] = E1_1_1_1
ODE[1234] = E1_1_1_133
ODE[1235] = E1_1_1_169
ODE[1236] = E1_1_1_193
ODE[1237] = E1_1_1_23
ODE[1238] = E1_1_1_27
ODE[1239] = E1_1_1_28
ODE[1240] = E1_1_1_3
ODE[1241] = E1_1_1_304
ODE[1242] = E1_1_1_35
ODE[1243] = E1_1_1_44
ODE[1244] = E1_1_1_47
ODE[1245] = E1_1_1_49
ODE[1246] = E1_1_1_6
ODE[1247] = E1_1_1_85
ODE[1248] = E1_1_1_86
ODE[1249] = E1_1_1_88
ODE[1250] = E1_1_1_94
ODE[1251] = E1_11_1_26
ODE[1252] = E1_17_1_8
ODE[1253] = E1_17_4_1
ODE[1254] = E1_17_4_2
ODE[1255] = E1_2_1_10
ODE[1256] = E1_2_1_11
ODE[1257] = E1_2_1_38
ODE[1258] = E1_2_1_41
ODE[1259] = E1_20_4_4
ODE[1260] = E1_3_1_12
ODE[1261] = E1_3_1_14
ODE[1262] = E1_3_1_9
ODE[1263] = E1_3_1_98
ODE[1264] = E1_4_1_13
ODE[1265] = E1_5_1_2
ODE[1266] = E1_5_1_3
ODE[1267] = E1_6_5_2
ODE[1268] = E1_7_1_7
ODE[1269] = E1_8_1_4
ODE[1270] = E1_8_1_9
ODE[1271] = E1_8_4_11
ODE[1272] = E1_8_4_12
ODE[1273] = E2_1_1_10
ODE[1274] = E2_1_1_107
ODE[1275] = E2_1_1_14
ODE[1276] = E2_1_1_163
ODE[1277] = E2_1_1_171
ODE[1278] = E2_1_1_182
ODE[1279] = E2_1_1_201
ODE[1280] = E2_1_1_228
ODE[1281] = E2_1_1_297
ODE[1282] = E2_1_1_33
ODE[1283] = E2_1_1_45
ODE[1284] = E2_1_1_63
ODE[1285] = E2_1_2_1
ODE[1286] = E2_1_2_2
ODE[1287] = E2_1_2_3
ODE[1288] = E2_1_2_9
ODE[1289] = E2_1_3_15
ODE[1290] = E2_1_3_2
ODE[1291] = E2_1_3_3
ODE[1292] = E2_2_1_1
ODE[1293] = E2_2_1_6
ODE[1294] = E2_2_1_7
ODE[1295] = E2_3_1_1
ODE[1296] = E2_3_1_15
ODE[1297] = E2_3_1_157
ODE[1298] = E2_3_1_179
ODE[1299] = E2_3_1_180
ODE[1300] = E2_3_1_234
ODE[1301] = E2_3_1_266
ODE[1302] = E2_3_1_274
ODE[1303] = E2_3_1_286
ODE[1304] = E2_3_1_35
ODE[1305] = E2_3_1_39
ODE[1306] = E2_3_1_46
ODE[1307] = E2_3_1_8
ODE[1308] = E2_3_1_89
ODE[1309] = E2_3_1_9
ODE[1310] = E2_3_3_10
ODE[1311] = E2_4_1_227
ODE[1312] = E2_4_2_10
ODE[1313] = E2_4_2_14
ODE[1314] = E2_4_2_17
ODE[1315] = E2_4_2_22
ODE[1316] = E2_4_2_7
ODE[1317] = E2_4_2_8
ODE[1318] = E2_4_2_9
ODE[1319] = E2_5_1_15
ODE[1320] = E2_5_1_19
ODE[1321] = E2_5_1_3
ODE[1322] = E2_5_1_47
ODE[1323] = E2_5_1_6
ODE[1324] = E2_5_1_75
ODE[1325] = E2_5_1_78
ODE[1326] = E2_5_1_9
ODE[1327] = E2_6_1_11
ODE[1328] = E2_6_1_16
ODE[1329] = E2_6_1_42
ODE[1330] = E2_6_1_52
ODE[1331] = E2_6_1_9
ODE[1332] = E2_7_1_107
ODE[1333] = E2_7_1_12
ODE[1334] = E2_7_1_148
ODE[1335] = E2_7_1_15
ODE[1336] = E2_7_1_2
ODE[1337] = E2_7_1_21
ODE[1338] = E2_7_1_211
ODE[1339] = E2_7_1_23
ODE[1340] = E2_7_1_24
ODE[1341] = E2_7_1_26
ODE[1342] = E2_7_1_30
ODE[1343] = E2_7_1_31
ODE[1344] = E2_7_1_33
ODE[1345] = E2_7_1_36
ODE[1346] = E2_7_1_39
ODE[1347] = E2_7_1_4
ODE[1348] = E2_7_1_40
ODE[1349] = E2_7_1_48
ODE[1350] = E2_7_1_49
ODE[1351] = E2_7_1_50
ODE[1352] = E2_7_1_6
ODE[1353] = E2_7_1_71
ODE[1354] = E2_7_10_2
ODE[1355] = E2_7_2_1
ODE[1356] = E2_7_2_11
ODE[1357] = E2_7_2_2
ODE[1358] = E2_7_2_3
ODE[1359] = E2_7_2_4
ODE[1360] = E2_7_2_8
ODE[1361] = E2_7_3_9
ODE[1362] = E2_7_4_1
ODE[1363] = E2_7_4_2
ODE[1364] = E2_7_4_22
ODE[1365] = E2_7_4_25
ODE[1366] = E2_7_4_3
ODE[1367] = E2_7_4_6
ODE[1368] = E2_7_4_7
ODE[1369] = E2_7_4_8
ODE[1370] = E2_7_4_9
ODE[1371] = E2_7_6_1
ODE[1372] = E2_7_6_2
ODE[1373] = E2_7_6_3
ODE[1374] = E2_7_6_5
ODE[1375] = E2_7_7_12
ODE[1376] = E2_7_7_18
ODE[1377] = E2_7_7_2
ODE[1378] = E2_7_7_23
ODE[1379] = E2_7_7_24
ODE[1380] = E2_7_7_3
ODE[1381] = E2_7_7_41
ODE[1382] = E2_7_7_6
ODE[1383] = E2_7_7_7
ODE[1384] = E2_7_7_77
ODE[1385] = E2_7_7_85
ODE[1386] = E2_7_7_87
ODE[1387] = E2_7_7_9
ODE[1388] = E2_7_8_13
ODE[1389] = E2_7_8_5
ODE[1390] = E2_7_8_7
ODE[1391] = E2_8_1_13
ODE[1392] = E2_8_1_4
ODE[1393] = E2_8_1_7
ODE[1394] = E3_1_1_103
ODE[1395] = E3_1_1_106
ODE[1396] = E3_1_1_29
ODE[1397] = E3_1_3_15
ODE[1398] = E3_1_3_27
ODE[1399] = E3_1_3_48
ODE[1400] = E3_1_3_7
ODE[1401] = E3_1_4_4
ODE[1402] = E3_2_1_22
ODE[1403] = E3_2_1_26
ODE[1404] = E3_2_1_93
ODE[1405] = E3_2_2_3
ODE[1406] = E3_2_2_9
ODE[1407] = E3_5_1_2
ODE[1408] = E3_5_1_28
ODE[1409] = E3_5_1_4
ODE[1410] = E3_5_1_88
ODE[1411] = E3_5_2_3
ODE[1412] = E3_5_2_5
ODE[1413] = E3_5_2_9
ODE[1414] = E3_5_3_6
ODE[1415] = E3_5_4_10
ODE[1416] = E3_5_4_16
ODE[1417] = E3_5_4_19
ODE[1418] = E3_5_4_25
ODE[1419] = E3_5_4_26
ODE[1420] = E3_5_4_3
ODE[1421] = E3_5_4_33
ODE[1422] = E3_5_99_2
ODE[1423] = E3_6_1_1
ODE[1424] = E3_6_1_27
ODE[1425] = E3_6_1_31
ODE[1426] = E3_6_1_41
ODE[1427] = E3_6_1_66
ODE[1428] = E4_1_1_101
ODE[1429] = E4_1_1_15
ODE[1430] = E4_1_1_20
ODE[1431] = E4_1_1_21
ODE[1432] = E4_1_1_23
ODE[1433] = E4_1_1_33
ODE[1434] = E4_1_1_36
ODE[1435] = E4_1_1_5
ODE[1436] = E4_1_2_25
ODE[1437] = E4_1_2_4
ODE[1438] = E4_1_3_36
ODE[1439] = E4_1_99_22
ODE[1440] = E4_2_1_11
ODE[1441] = E4_2_1_113
ODE[1442] = E4_2_1_19
ODE[1443] = E4_2_1_2
ODE[1444] = E4_2_1_33
ODE[1445] = E4_2_1_46
ODE[1446] = E4_2_1_59
ODE[1447] = E4_2_1_9
ODE[1448] = E4_2_3_1
ODE[1449] = E4_2_3_5
ODE[1450] = E4_3_1_17
ODE[1451] = E4_3_1_19
ODE[1452] = E4_3_1_8
ODE[1453] = E4_3_2_1
ODE[1454] = E4_3_2_10
ODE[1455] = E4_3_2_2
ODE[1456] = E4_3_3_7
ODE[1457] = E4_4_1_21
ODE[1458] = E4_6_1_17
ODE[1459] = E4_99_1_12
ODE[1460] = E5_1_1_1
ODE[1461] = E5_1_1_3
ODE[1462] = E5_1_1_7
ODE[1463] = E5_1_3_1
ODE[1464] = E5_1_3_13
ODE[1465] = E5_1_3_14
ODE[1466] = E5_1_3_2
ODE[1467] = E5_1_99_6
ODE[1468] = E5_2_1_8
ODE[1469] = E5_3_1_1
ODE[1470] = E5_3_1_16
ODE[1471] = E5_3_1_4
ODE[1472] = E5_3_1_6
ODE[1473] = E5_3_1_9
ODE[1474] = E5_3_2_6
ODE[1475] = E5_3_3_2
ODE[1476] = E5_4_2_10
ODE[1477] = E5_4_2_11
ODE[1478] = E5_4_2_6
ODE[1479] = E5_4_99_12
ODE[1480] = E5_4_99_18
ODE[1481] = E5_4_99_5
ODE[1482] = E5_4_99_62
ODE[1483] = E5_4_99_9
ODE[1484] = E6_1_1_1
ODE[1485] = E6_1_1_10
ODE[1486] = E6_1_1_11
ODE[1487] = E6_1_1_12
ODE[1488] = E6_1_1_13
ODE[1489] = E6_1_1_14
ODE[1490] = E6_1_1_15
ODE[1491] = E6_1_1_16
ODE[1492] = E6_1_1_17
ODE[1493] = E6_1_1_19
ODE[1494] = E6_1_1_2
ODE[1495] = E6_1_1_20
ODE[1496] = E6_1_1_21
ODE[1497] = E6_1_1_22
ODE[1498] = E6_1_1_3
ODE[1499] = E6_1_1_4
ODE[1500] = E6_1_1_5
ODE[1501] = E6_1_1_6
ODE[1502] = E6_1_1_7
ODE[1503] = E6_1_1_9
ODE[1504] = E6_2_1_26
ODE[1505] = E6_3_1_1
ODE[1506] = E6_3_1_2
ODE[1507] = E6_3_1_20
ODE[1508] = E6_3_1_5
ODE[1509] = E6_3_2_10
ODE[1510] = E6_3_2_13
ODE[1511] = E6_3_2_5
ODE[1512] = E6_3_2_6
ODE[1513] = E6_3_2_8
ODE[1514] = E6_3_2_9
ODE[1515] = E6_3_3_1
ODE[1516] = E6_3_3_2
ODE[1517] = E6_3_4_13
ODE[1518] = E6_3_4_14
ODE[1519] = E6_3_4_15
ODE[1520] = E6_3_4_18
ODE[1521] = E6_3_4_19
ODE[1522] = E6_3_4_2
ODE[1523] = E6_3_4_21
ODE[1524] = E6_3_4_3
ODE[1525] = E6_3_4_4
ODE[1526] = E6_3_4_5
ODE[1527] = E6_3_5_2
ODE[1528] = E6_3_5_3
ODE[1529] = E6_3_5_4
ODE[1530] = E6_3_5_5
ODE[1531] = E6_4_1_1
ODE[1532] = E6_4_1_2
ODE[1533] = E6_5_1_2
ODE[1534] = E7_1_2_2
ODE[1535] = C01335
ODE[1536] = C15602
ODE[1537] = C18902
ODE[1538] = C05703
ODE[1539] = C05691
ODE[1540] = C00787
ODE[1541] = C02839
ODE[1542] = C01647
ODE[1543] = C05336
ODE[1544] = C01650
ODE[1545] = C02553
ODE[1546] = C16636
ODE[1547] = C06481
ODE[1548] = C00653
ODE[1549] = C04260
ODE[1550] = G13185
ODE[1551] = G13186
ODE[1552] = G13167
ODE[1553] = G13180
ODE[1554] = G13170
ODE[1555] = G13171
ODE[1556] = G13174
ODE[1557] = G13175
ODE[1558] = G13176
ODE[1559] = G13177
ODE[1560] = G13178
ODE[1561] = G13179
ODE[1562] = G13192
ODE[1563] = G13193
ODE[1564] = C01642
ODE[1565] = C02412
ODE[1566] = C01649
ODE[1567] = C02702
ODE[1568] = C01639
ODE[1569] = C03125
ODE[1570] = C01636
ODE[1571] = C02163
ODE[1572] = C01652
ODE[1573] = C03512
ODE[1574] = C01648
ODE[1575] = C03511
ODE[1576] = C01643
ODE[1577] = C02988
ODE[1578] = C01645
ODE[1579] = C03402
ODE[1580] = C01651
ODE[1581] = C02992
ODE[1582] = C02047
ODE[1583] = C01644
ODE[1584] = C03127
ODE[1585] = C01646
ODE[1586] = C01931
ODE[1587] = C01635
ODE[1588] = C00886
ODE[1589] = C01653
ODE[1590] = C02554
ODE[1591] = C22157
ODE[1592] = C22158
ODE[1593] = C00993
ODE[1594] = C04735
ODE[1595] = C04681
ODE[1596] = C0020
ODE[1597] = C02128
 
y = list(range(1598))
y[0] = 1000    # C00001 : Water
y[1] = 1000    # C00002 : ATP
y[2] = 1000    # C00003 : NAD+
y[3] = 1000    # C00004 : NADH
y[4] = 1000    # C00005 : NADPH
y[5] = 1000    # C00006 : NADP+
y[6] = 1000    # C00007 : Oxygen
y[7] = 1000    # C00008 : ADP
y[8] = 1    # C00009 : Orthophosphate
y[9] = 1    # C00010 : CoA
y[10] = 1000    # C00011 : CO2
y[11] = 1    # C00012 : Peptide
y[12] = 1    # C00013 : Diphosphate
y[13] = 1000    # C00014 : Ammonia
y[14] = 1    # C00015 : UDP
y[15] = 1    # C00016 : FAD
y[16] = 1    # C00017 : Protein
y[17] = 1    # C00018 : Pyridoxial phosphate
y[18] = 1    # C00019 : S-Adenosyl-L-methionine
y[19] = 1    # C00020 : AMP
y[20] = 1    # C00021 : S-Adenosyl-L-homocysteine
y[21] = 1    # C00022 : Pyruvate
y[22] = 1    # C00023 : Iron
y[23] = 1    # C00024 : Acetyl-CoA
y[24] = 1000    # C00025 : L-Glutamate
y[25] = 1    # C00026 : 2-Oxoglutarate
y[26] = 1    # C00027 : Hydrogen peroxide
y[27] = 1    # C00028 : Acceptor
y[28] = 1    # C00029 : UDP-glucose
y[29] = 1    # C00030 : Reduced acceptor
y[30] = 1000    # C00031 : D-Glucose
y[31] = 1    # C00032 : Heme
y[32] = 1    # C00033 : Acetate
y[33] = 1    # C00034 : Manganese
y[34] = 1    # C00035 : GDP
y[35] = 1    # C00036 : Oxaloacetate
y[36] = 1000    # C00037 : Glycine
y[37] = 1    # C00038 : Zinc cation
y[38] = 1    # C00039 : DNA
y[39] = 1    # C00040 : Acyl-CoA
y[40] = 1000    # C00041 : L - Alanine
y[41] = 1    # C00042 : Succinate
y[42] = 1    # C00043 : UDP-N-acetyl-alpha-D-glucosamine
y[43] = 1    # C00044 : GTP
y[44] = 1    # C00045 : Amino acid
y[45] = 1    # C00046 : RNA
y[46] = 1000    # C00047 : L-Lysine
y[47] = 1    # C00048 : Glyoxylate
y[48] = 1000    # C00049 : L-Aspartate
y[49] = 1    # C00050 : Metal
y[50] = 1    # C00051 : Glutatione
y[51] = 1    # C00052 : UDP-alpha-D-galactose
y[52] = 1    # C00053 : 3'-Phosphoadenylyl sulphate
y[53] = 1    # C00054 : Adenosine 3',5-bisphosphate
y[54] = 1    # C00055 : CMP
y[55] = 1    # C00058 : Formate
y[56] = 1    # C00059 : Sulphate
y[57] = 1    # C00060 : Carboxylate
y[58] = 1    # C00061 : FMN
y[59] = 1    # C00062 : L-Arginine
y[60] = 1    # C00063 : CTP
y[61] = 1000    # C00064 : L-Glutamine
y[62] = 1000    # C00065 : L-Serine
y[63] = 1    # C00066 : tRNA
y[64] = 1    # C00067 : Formaldehyde
y[65] = 1    # C00068 : Thiamin diphosphate
y[66] = 1    # C00069 : Alcohol
y[67] = 1    # C00070 : Copper
y[68] = 1    # C00071 : Aldehyde
y[69] = 1    # C00072 : Ascorbate
y[70] = 1000    # C00073 : L-Methionine
y[71] = 1    # C00074 : Phosphoenolpyruvate
y[72] = 1    # C00075 : UTP
y[73] = 1    # C00076 : Calcium cation
y[74] = 1    # C00077 : L-Ornithine
y[75] = 1000    # C00078 : L-Tryptophan
y[76] = 1000    # C00079 : L-Phenylalanine
y[77] = 1    # C00080 : H+
y[78] = 1    # C00081 : ITP
y[79] = 1000    # C00082 : L-Tryosine
y[80] = 1    # C00083 : Malonyl - CoA
y[81] = 1    # C00084 : Acetaldhyde
y[82] = 1    # C00085 : D-Fructose 6-phosphate
y[83] = 1    # C00086 : Urea
y[84] = 1    # C00087 : Sulfur
y[85] = 1    # C00088 : Nitrite
y[86] = 1    # C00089 : Sucrose
y[87] = 1    # C00090 : Catechol
y[88] = 1    # C00091 : Succinyl - CoA
y[89] = 1    # C00092 : D-Glucose 6-phosphate
y[90] = 1    # C00093 : sn-Glycrol 3-phosphate
y[91] = 1    # C00094 : Sulfite
y[92] = 1    # C00095 : D-Fructose
y[93] = 1    # C00096 : GDP-mannose
y[94] = 1    # C00097 : L-Cysteine
y[95] = 1    # C00098 : Oligopeptide
y[96] = 1    # C00099 : beta-Alanine
y[97] = 1    # C00100 : Propanoyl-CoA
y[98] = 1    # C00101 : Tetrahydrofolate
y[99] = 1    # C00102 : 2,6-Dichloroindophenol
y[100] = 1    # C00103 : D-Glucose 1-phosphate
y[101] = 1    # C00104 : IDP
y[102] = 1    # C00105 : UMP
y[103] = 1    # C00106 : Uracil
y[104] = 1    # C00107 : Dipeptide
y[105] = 1    # C00108 : Anthranilate
y[106] = 1    # C00109 : 2-Oxobutanoate
y[107] = 1    # C00110 : Dolichyl phosphate
y[108] = 1    # C00111 : Glycerone phosphate
y[109] = 1    # C00112 : CDP
y[110] = 1    # C00113 : PQQ
y[111] = 1    # C00114 : Choline
y[112] = 1    # C00116 : Glycerol
y[113] = 1    # C00117 : D-Ribose 5-phosphate
y[114] = 1    # C00118 : D-Glyceraldehyde 3-phosphate
y[115] = 1    # C00119 : 5-Phospho-alpha-D-ribose 1-diphosphate
y[116] = 1    # C00120 : Biotin
y[117] = 1    # C00121 : D-Ribose
y[118] = 1    # C00122 : Fumarate
y[119] = 1000    # C00123 : L-Leucine
y[120] = 1    # C00124 : D-Galactose
y[121] = 1    # C00125 : Ferricytochrome c
y[122] = 1    # C00126 : Ferrocytochrome c
y[123] = 1    # C00127 : Glutathione disulphide
y[124] = 1    # C00128 : CMP-N-acetylneuraminate
y[125] = 1    # C00129 : Isopentenyl diphosphate
y[126] = 1    # C00130 : IMP
y[127] = 1    # C00131 : dATP
y[128] = 1    # C00132 : Methanol
y[129] = 1000    # C00133 : D-Alanine
y[130] = 1    # C00134 : Putrescine
y[131] = 1000    # C00135 : L-Histidine
y[132] = 1    # C00136 : Butanoyl-CoA
y[133] = 1    # C00137 : myo-Inositol
y[134] = 1    # C00138 : Reduced ferredoxin
y[135] = 1    # C00139 : Oxidised ferredoxin
y[136] = 1    # C00140 : N-Acetyl-D-glucosamine
y[137] = 1    # C00141 : 3-Methyl-2-oxobutanoic acid
y[138] = 1    # C00143 : 5,10-Methylnetetrahydrofolate
y[139] = 1    # C00144 : GMP
y[140] = 1    # C00145 : Thiol
y[141] = 1    # C00146 : Phenol
y[142] = 1    # C00147 : Adenine
y[143] = 1000    # C00148 : L-Proline
y[144] = 1    # C00149 : (S)-Malate
y[145] = 1    # C00150 : Molybdenum
y[146] = 1    # C00151 : L-Amino acid
y[147] = 1    # C00152 : L-Asparagine
y[148] = 1    # C00153 : Nicotinamide
y[149] = 1    # C00154 : Palmitoyl-CoA
y[150] = 1    # C00155 : L-Homocysteine
y[151] = 1    # C00156 : 4-Hydroxybenzoate
y[152] = 1    # C00157 : Phosphatidylcholine
y[153] = 1    # C00158 : Citrate
y[154] = 1    # C00159 : D-Mannose
y[155] = 1    # C00160 : Glycolate
y[156] = 1    # C00161 : 2-Oxo acid
y[157] = 1    # C00162 : Fatty acid
y[158] = 1    # C00163 : Propanoate
y[159] = 1    # C00164 : Acetoacetate
y[160] = 1    # C00165 : Diacylglycerol
y[161] = 1    # C00166 : Phenylpyruvate
y[162] = 1    # C00167 : UDP-glucuronate
y[163] = 1    # C00168 : Hydropyruvate
y[164] = 1    # C00169 : Carbomyl phosphate
y[165] = 1    # C00170 : 5'-methylthioadenosine
y[166] = 1    # C00171 : 5'-Phosphomononucleotide
y[167] = 1    # C00172 : 3'-Phosphooligonucleotide
y[168] = 1    # C00173 : Acyl-[ acyl carrier protein ]
y[169] = 1    # C00174 : Acid
y[170] = 1    # C00175 : Cobalt ion
y[171] = 1    # C00176 : Flavin
y[172] = 1    # C00177 : Cyanide ion
y[173] = 1    # C00178 : Thymine
y[174] = 1    # C00179 : Agmatine
y[175] = 1    # C00180 : Benoate
y[176] = 1    # C00181 : D-Xylose
y[177] = 1    # C00182 : Glycogen
y[178] = 1    # C00183 : L-Valine
y[179] = 1    # C00184 : Glycerone
y[180] = 1    # C00185 : Cellobiose
y[181] = 1    # C00186 : (S)-Lactate
y[182] = 1    # C00187 : Cholesterol
y[183] = 1    # C00188 : L-Threonine
y[184] = 1    # C00189 : Ethanolamine
y[185] = 1    # C00190 : UDP-D-xylose
y[186] = 1    # C00191 : D-Glucuronate
y[187] = 1    # C00192 : Hydroxylamine
y[188] = 1    # C00193 : Aromatic Aldehyde
y[189] = 1    # C00194 : Cobamide coenzyme
y[190] = 1    # C00195 : N-Acylsphingosine
y[191] = 1    # C00196 : 2,3-Dihydroxybenzoate
y[192] = 1    # C00197 : 3-Phospho-D-glycerate
y[193] = 1    # C00198 : D-Glucono-1,5-lactone
y[194] = 1    # C00199 : D-Ribulose 5-phosphate
y[195] = 1    # C00200 : Phenazine methosufate
y[196] = 1    # C00201 : Nucleoside triphosphate
y[197] = 1    # C00202 : Isoflurophate
y[198] = 1    # C00203 : UDP-N-acetyl-alpha-D-galactosamine
y[199] = 1    # C00204 : 2-Dehydro-3-deoxy-D-gulconate
y[200] = 1    # C00205 : hn
y[201] = 1    # C00206 : dADP
y[202] = 1    # C00207 : Acetone
y[203] = 1    # C00208 : Maltose
y[204] = 1    # C00209 : Oxalate
y[205] = 1    # C00210 : Cobamide
y[206] = 1    # C00211 : Collagen
y[207] = 1    # C00212 : Adenosine
y[208] = 1    # C00213 : Sarcosine
y[209] = 1    # C00214 : Thymidine
y[210] = 1    # C00215 : Nucleotide
y[211] = 1    # C00216 : D-Arabinose
y[212] = 1    # C00217 : D-Glutamate
y[213] = 1    # C00218 : Methylamine
y[214] = 1    # C00219 : Arachidonate
y[215] = 1    # C00220 : Methylene blue
y[216] = 1000    # C00221 : beta-D-glucose
y[217] = 1    # C00222 : 3-Oxopropanoate
y[218] = 1    # C00223 : p-Coumaroyl-CoA
y[219] = 1    # C00224 : Adenylyl sulfate
y[220] = 1    # C00225 : Methyl viologen
y[221] = 1    # C00226 : Primary alcohol
y[222] = 1    # C00227 : Acetyl phosphate
y[223] = 1    # C00229 : Acyl-carrier protein
y[224] = 1    # C00230 : 3,4-Dihydroxybenzoate
y[225] = 1    # C00231 : D-Xyluose 5-phosphate
y[226] = 1    # C00232 : Succinate semialdehyde
y[227] = 1    # C00233 : 4-Methyl-2-oxopentanoate
y[228] = 1    # C00234 : 10-Formyltetrahdrofolate
y[229] = 1    # C00235 : Dimethylallyl diphosphate
y[230] = 1    # C00236 : 3-Phospho-D-glyceroyl phosphate
y[231] = 1    # C00237 : CO
y[232] = 1    # C00238 : Potassium cation
y[233] = 1    # C00239 : dCMP
y[234] = 1    # C00240 : rRNA
y[235] = 1    # C00241 : Amide
y[236] = 1    # C00242 : Guanine
y[237] = 1    # C00243 : Lactose
y[238] = 1    # C00244 : Nitrate
y[239] = 1    # C00245 : Taurine
y[240] = 1    # C00246 : Butanoic acid
y[241] = 1    # C00247 : L-Sorbose
y[242] = 1    # C00248 : Lipoamide
y[243] = 1    # C00249 : Hexadecanoic acid
y[244] = 1    # C00250 : Pyridoxal
y[245] = 1    # C00251 : Chorismate
y[246] = 1    # C00252 : Isomaltose
y[247] = 1    # C00253 : Nicotinate
y[248] = 1    # C00254 : Prephenate
y[249] = 1    # C00255 : Riboflavin
y[250] = 1    # C00256 : ®-Lactate
y[251] = 1    # C00257 : D-Gluconic acid
y[252] = 1    # C00258 : D-Glycerate
y[253] = 1    # C00259 : L-Arabinose
y[254] = 1    # C00261 : Benzaldehyde
y[255] = 1    # C00262 : Hypoxanthine
y[256] = 1    # C00263 : L-Homoserine
y[257] = 1    # C00264 : 3-Oxoacyl-CoA
y[258] = 1    # C00265 : Dithiothreitol
y[259] = 1    # C00266 : Glycolaldehyde
y[260] = 1000    # C00267 : alpha-D-Glucose
y[261] = 1    # C00268 : Dihydrobiopterin
y[262] = 1    # C00269 : CDP-diacylglycerol
y[263] = 1    # C00270 : N-Acetylneuraminate
y[264] = 1    # C00272 : Tetrahydrobioptrin
y[265] = 1    # C00273 : 5-Dehydro-D-fructose
y[266] = 1    # C00275 : D-Mannose 6-phosphate
y[267] = 1    # C00279 : D-Erythrose 4-phosphate
y[268] = 1    # C00280 : Androstenedione
y[269] = 1    # C00282 : Hydrogen
y[270] = 1    # C00283 : Hydrogen sulfide
y[271] = 1    # C00284 : EDTA
y[272] = 1    # C00286 : dGTP
y[273] = 1    # C00288 : HCO3-
y[274] = 1    # C00290 : Fibrin
y[275] = 1    # C00291 : Nickel
y[276] = 1    # C00292 : Aniline
y[277] = 1    # C00294 : Inosine
y[278] = 1    # C00295 : Orotate
y[279] = 1    # C00296 : Quinate
y[280] = 1    # C00297 : Sulfide
y[281] = 1    # C00298 : Trypsin
y[282] = 1    # C00299 : Uridine
y[283] = 1    # C00300 : Creatinine
y[284] = 1    # C00301 : ADP-ribose
y[285] = 1    # C00302 : Glutamate
y[286] = 1    # C00303 : Glutamine
y[287] = 1    # C00304 : Kanamycin
y[288] = 1    # C00305 : Magnesium cation
y[289] = 1    # C00306 : Bradykinin
y[290] = 1    # C00307 : CDP-choline
y[291] = 1    # C00308 : Canavanine
y[292] = 1    # C00309 : D-Ribulose
y[293] = 1    # C00310 : D-Xylulose
y[294] = 1    # C00311 : Isocitrate
y[295] = 1    # C00312 : L-Xylulose
y[296] = 1    # C00313 : Oxalyl-CoA
y[297] = 1    # C00314 : Pyridoxine
y[298] = 1    # C00315 : Spermidine
y[299] = 1    # C00317 : Amylopeptin
y[300] = 1    # C00318 : L-Carnitine
y[301] = 1    # C00319 : Sphingosine
y[302] = 1    # C00320 : Thiosulfate
y[303] = 1    # C00322 : 2-Oxoadipate
y[304] = 1    # C00323 : Caffaeoyl-CoA
y[305] = 1    # C00324 : Ferricyanide
y[306] = 1    # C00325 : GDP-L-fucose
y[307] = 1    # C00326 : Glycoprotein
y[308] = 1    # C00327 : L-Citrulline
y[309] = 1    # C00328 : L-Kynurenine
y[310] = 1    # C00329 : D-Glucosamine
y[311] = 1    # C00330 : Deoxyguanosine
y[312] = 1    # C00331 : Indolpyruvate
y[313] = 1    # C00332 : Acetoacetyl-CoA
y[314] = 1    # C00333 : D-Galacturonate
y[315] = 1    # C00334 : 4-Aminobutanoate
y[316] = 1    # C00337 : (S)-Dihydroorotate
y[317] = 1    # C00338 : Lipopolysaccharide
y[318] = 1    # C00339 : Long chain alcohol
y[319] = 1    # C00340 : Reduced rubredoxin
y[320] = 1    # C00341 : Geranyl diphosphate
y[321] = 1    # C00342 : Thioredoxin
y[322] = 1    # C00343 : Thioredoxin disulfide
y[323] = 1    # C00344 : Phosphadylglycerol
y[324] = 1    # C00345 : 6-Phospho-D-gluconate
y[325] = 1    # C00346 : Ethanolamine phosphate
y[326] = 1    # C00347 : Long-chain carboxylate
y[327] = 1    # C00348 : all-trans-Undecaprenyl phosphate
y[328] = 1    # C00349 : 2-Methyl-3-oxopropanoate
y[329] = 1    # C00350 : Phosphatidylethanolamine
y[330] = 1    # C00351 : 5'-Phosphooligonucleotide
y[331] = 1    # C00352 : D-Glucosamine 6-phosphate
y[332] = 1    # C00353 : Geranylgeranyl diphosphate
y[333] = 1    # C00354 : D-Fructose 1,6-bisphophate
y[334] = 1    # C00355 : 3,4-Dihydroxy-L-phenylalanine
y[335] = 1    # C00356 : (S)-3-Hydroxy-3-methylglutaryl-CoA
y[336] = 1    # C00357 : N-Acetyl-D-glucosamine 6-phosphate
y[337] = 1    # C00360 : dAMP
y[338] = 1    # C00361 : dGDP
y[339] = 1    # C00362 : dGMP
y[340] = 1    # C00363 : d TDP
y[341] = 1    # C00364 : d TMP
y[342] = 1    # C00365 : d UMP
y[343] = 1    # C00366 : Urate
y[344] = 1    # C00367 : Casein
y[345] = 1    # C00369 : Starch
y[346] = 1    # C00370 : Sterol
y[347] = 1    # C00371 : Zeatin
y[348] = 1    # C00372 : Dexatran
y[349] = 1    # C00373 : Elastin
y[350] = 1    # C00374 : Heparin
y[351] = 1    # C00375 : RCH2NH2
y[352] = 1    # C00376 : Retinal
y[353] = 1    # C00377 : Steroid
y[354] = 1    # C00378 : Thiamine
y[355] = 1    # C00379 : Xylitol
y[356] = 1    # C00380 : Cytosine
y[357] = 1    # C00381 : Dolichol
y[358] = 1    # C00382 : 
y[359] = 1    # C00383 : Malonate
y[360] = 1    # C00384 : Meomycin
y[361] = 1    # C00385 : Xanthine
y[362] = 1    # C00386 : Carnosine
y[363] = 1    # C00387 : Guanosine
y[364] = 1    # C00388 : Histamine
y[365] = 1    # C00389 : Quercetin
y[366] = 1    # C00390 : Ubiquinol
y[367] = 1    # C00391 : Calmodulin
y[368] = 1    # C00392 : Mannitol
y[369] = 1    # C00393 : Fibrinogen
y[370] = 1    # C00394 : GDP-glucose
y[371] = 1    # C00395 : Penicillin
y[372] = 1    # C00396 : Pyrimidine
y[373] = 1    # C00397 : Tobramycin
y[374] = 1    # C00398 : Tryptamine
y[375] = 1    # C00399 : Ubiquinone
y[376] = 1    # C00400 : (-)-Menthol
y[377] = 1    # C00401 : Chondroitin
y[378] = 1    # C00402 : D-Aspartate
y[379] = 1    # C00403 : Polypeptide
y[380] = 1    # C00404 : Polyphosphate
y[381] = 1    # C00405 : D-Amino acid
y[382] = 1    # C00406 : Feruloyl-CoA
y[383] = 1    # C00407 : L-Isoleucine
y[384] = 1    # C00408 : L-Pipecolate
y[385] = 1    # C00409 : Methanethiol
y[386] = 1    # C00410 : Progesterone
y[387] = 1    # C00411 : Sinapoyl-CoA
y[388] = 1    # C00412 : Stearoyl-CoA
y[389] = 1    # C00413 : Streptomycin
y[390] = 1    # C00414 : Cyclohexanone
y[391] = 1    # C00415 : Dihydrofolate
y[392] = 1    # C00416 : Phosphatidate
y[393] = 1    # C00418 : ®-Mevanolate
y[394] = 1    # C00424 : (S)-Lactaldehye
y[395] = 1    # C00437 : N-Acetylornithine
y[396] = 1    # C00438 : N-Carbamoyl-L-aspartate
y[397] = 1    # C00441 : L-Aspartate 4-semialdehyde
y[398] = 1    # C00445 : 5, 10-Methenyltetrahydrofolate
y[399] = 1    # C00446 : alpha-D - Galactose 1-phosphate
y[400] = 1    # C00454 : NDP
y[401] = 1    # C00455 : Nicotinamide D-ribonucleotide
y[402] = 1    # C00458 : dCTP
y[403] = 1    # C00459 : dTTP
y[404] = 1    # C00460 : dUTP
y[405] = 1    # C00469 : Ethanol
y[406] = 1    # C00473 : Retinol
y[407] = 1    # C00475 : Cytidine
y[408] = 1    # C00492 : Sulochrin
y[409] = 1    # C00493 : Shikimate
y[410] = 1    # C00499 : Allantoate
y[411] = 1    # C00504 : Folate
y[412] = 1    # C00506 : L-Cysteate
y[413] = 1    # C00508 : L-Ribulose
y[414] = 1    # C00511 : Acrylic acid
y[415] = 1    # C00519 : Hypotaurine
y[416] = 1    # C00522 : ®-Pantoate
y[417] = 1    # C00526 : Deoxyuridine
y[418] = 1    # C00546 : Methylglyoxal
y[419] = 1    # C00568 : 4-Aminobenoate
y[420] = 1    # C00576 : Betaine aldehyde
y[421] = 1    # C00579 : Dihydrolpoamide
y[422] = 1    # C00583 : Propane-1,2-diol
y[423] = 1    # C00585 : Protein tyrosine
y[424] = 1    # C00605 : 2,3-Dhydroacyl-CoA
y[425] = 1    # C00606 : 3-Sulfino-L-alanine
y[426] = 1    # C00615 : Protein histidine
y[427] = 1    # C00624 : N-Acetyl-L-glutamate
y[428] = 1    # C00631 : 2-Phospho-D- glycerate
y[429] = 1    # C00640 : (3S)-3-Hydroxyacyl-CoA
y[430] = 1    # C00641 : 1,2-Diacyl-sn-glycerol
y[431] = 1    # C00645 : N-Acetyl-D-mannosamine
y[432] = 1    # C00655 : Xanthosine 5'-phosphate
y[433] = 1    # C00663 : beta-D-Glucose 1-phosphate
y[434] = 1    # C00666 : LL-2,6-Diaminhetanedioate
y[435] = 1    # C00668 : alpha-D-Glucose 6-phosphate
y[436] = 1    # C00671 : (S)-3- Methyl-2-oxopentanoic acid
y[437] = 1    # C00673 : 2-Deoxy-D-ribose 5-phosphate
y[438] = 1    # C00677 : Deoxynucleoside triphosphate
y[439] = 1    # C00680 : meso-2,6-Diaminoheptanedioate
y[440] = 1    # C00681 : 1-Acyl-sn-glycerol 3-phosphate
y[441] = 1    # C00685 : 3-Oxoacyl-[acyl-carrier protein]
y[442] = 1    # C00688 : dTDP-4-dehydro-beta-L-rhamnose
y[443] = 1    # C00689 : alpha,alpha'-Trehalose 6-phosphate
y[444] = 1    # C00692 : UDP-N-acetylmuramoyl-L-alanyl-D-glutamate
y[445] = 1    # C00693 : trans-2,3-Dehydroacyl-[acyl-carrier protein]
y[446] = 1    # C00700 : XTP
y[447] = 1    # C00705 : dCDP
y[448] = 1    # C00741 : Diacetyl
y[449] = 1    # C00756 : 1-Octanol
y[450] = 1    # C00772 : Mevaldate
y[451] = 1    # C00794 : D-Sorbitol
y[452] = 1    # C00810 : ®-Acetoin
y[453] = 1    # C00819 : D-Glutamine
y[454] = 1    # C00828 : Menaquinone
y[455] = 1    # C00831 : Pantetheine
y[456] = 1    # C00842 : dTDP-glucose
y[457] = 1    # C00857 : Deamino-NAD+
y[458] = 1    # C00860 : L-Histidinol
y[459] = 1    # C00864 : Pantothenate
y[460] = 1    # C00868 : tRNA uridine
y[461] = 1    # C00882 : Dephospho-CoA
y[462] = 1    # C00900 : 2-Actolactate
y[463] = 1    # C00921 : Dihydropteroate
y[464] = 1    # C00931 : Porphobilinogen
y[465] = 1    # C00935 : UDP-L-arabinose
y[466] = 1    # C00954 : Indole-3-acetate
y[467] = 1    # C00957 : Mercaptopyruvate
y[468] = 1    # C00966 : 2-Dehdropantoate
y[469] = 1    # C00979 : O-Acetyl-L-serine
y[470] = 1    # C00984 : alpha-D-Galactose
y[471] = 1    # C01005 : O-Phospho-L-serine
y[472] = 1    # C01024 : Hydroxymethylbilane
y[473] = 1    # C01035 : 4-Guanidinobutanoate
y[474] = 1    # C01050 : UDP-N-acetylmuramate
y[475] = 1    # C01051 : Uroporphyrinogen III
y[476] = 1    # C01081 : Thiamin monophosphate
y[477] = 1    # C01100 : L-Histidol phosphate
y[478] = 1    # C01102 : O-Phospho-L-homoserine
y[479] = 1    # C01103 : Orotidine 5'-phosphate
y[480] = 1    # C01107 : ®-5-Phosphomevalonate
y[481] = 1    # C01118 : D-Glyceraldehyde 3-phosphate
y[482] = 1    # C01134 : Pantetheine 4'-phosphate
y[483] = 1    # C01143 : ®-5-Diphosphomevalonate
y[484] = 1    # C01144 : (S)-3-Hydroxybutnoyl-CoA
y[485] = 1    # C01157 : Hyroxyproline
y[486] = 1    # C01159 : 2,3-Bisphospho-D-glycerate
y[487] = 1    # C01165 : L-Glutamate 5-semialdehyde
y[488] = 1    # C01167 : Protein tyrosine phosphate
y[489] = 1    # C01170 : UDP-N-acetyl-D-mannosamine
y[490] = 1    # C01172 : beta-D-Glucose 6-phosphate
y[491] = 1    # C01179 : 3-(4-Hydroxyphenyl)pyruvate
y[492] = 1    # C01185 : Nicotinate D-ribonucleotide
y[493] = 1    # C01209 : Malonyl-[acyl-carrier protein]
y[494] = 1    # C01212 : UDP-N-acetylmuramoyl-L-alanine
y[495] = 1    # C01217 : 5,6,7,8-Tertrahydromethanopterin
y[496] = 1    # C01235 : alpha-D-Galactosyl-(1->3)-1D-myo-inositol
y[497] = 1    # C01236 : D-Glucono-1,5-lactone 6-phosphate
y[498] = 1    # C01250 : N-Acetyl-L-glutamate 5-semialdehyde
y[499] = 1    # C01260 : P1,P4-Bis(5'-adenosyl)tetraphosphate
y[500] = 1    # C01267 : 3-(Imidazol-4-yl)-2-oxopropyl phosphate
y[501] = 1    # C01268 : 5-Amino-6-(5'-phosphoribosylamino)uracil
y[502] = 1    # C01269 : 5-O-(1-Carboxyvinyl)-3phosphikimate
y[503] = 1    # C01271 : (3R)-3-Hydroxyacyl-[acyl-carrier protein]
y[504] = 1    # C01279 : 4-Amino-5-hydroxymethyl-2-methylpyrmidine
y[505] = 1    # C01290 : Lactosylceramide
y[506] = 1    # C01300 : 6-(hydroxymethyl)-7,8-dihydropterin
y[507] = 1    # C01304 : 2,5-Diamino-6-(5-phospho-D-ribosylamino)pyrmidin-4(3H)-one
y[508] = 1    # C01344 : d IDP
y[509] = 1    # C01345 : d ITP
y[510] = 1    # C01346 : d UDP
y[511] = 1    # C01412 : Butanal
y[512] = 1    # C01450 : Ketone
y[513] = 1    # C01528 : Hydrogen selenide
y[514] = 1    # C01545 : Octanal
y[515] = 1    # C01563 : Carbamate
y[516] = 1    # C01612 : Secondary alcohol
y[517] = 1    # C01613 : Stachyose
y[518] = 1    # C01628 : Vitamin K
y[519] = 1    # C01638 : tRNA(Asp)
y[520] = 1    # C01641 : tRNA(Glu)
y[521] = 1    # C01659 : Acrylamide
y[522] = 1    # C01769 : (S)-Acetoin
y[523] = 1    # C01801 : Deoxyribose
y[524] = 1    # C01879 : 5-Oxoproline
y[525] = 1    # C01929 : L-Histidinal
y[526] = 1    # C01977 : tRNA guanine
y[527] = 1    # C01997 : Histone N6-acetyl-L-lysine
y[528] = 1    # C02051 : Lipoylprotein
y[529] = 1    # C02059 : Phylloquinone
y[530] = 1    # C02090 : Trypanothione
y[531] = 1    # C02097 : dTDP-galactose
y[532] = 1    # C02133 : Acyl phosphate
y[533] = 1    # C02188 : Protein lysine
y[534] = 1    # C02218 : Dehydroalanine
y[535] = 1    # C02232 : 3-Oxoadipyl-CoA
y[536] = 1    # C02336 : beta-D-Fructose
y[537] = 1    # C02342 : Activated' tRNA
y[538] = 1    # C02350 : (S)-Allantoin
y[539] = 1    # C02356 : (S)-2-Aminobutanoate
y[540] = 1    # C02380 : 6-Mercaptopurine
y[541] = 1    # C02415 : Histone-L-lysine
y[542] = 1    # C02430 : L-Methionyl-tRNA
y[543] = 1    # C02463 : Precorrin 2
y[544] = 1    # C02469 : Uroporphyrin III
y[545] = 1    # C02479 : beta-L-Arabinopyranose
y[546] = 1    # C02501 : 2-Hydroxymuconate
y[547] = 1    # C02504 : alpha-Isopropylmalate
y[548] = 1    # C02505 : 2-Phenylacetamide
y[549] = 1    # C02583 : Protein glutamine
y[550] = 1    # C02631 : 2-Isopropylmaleate
y[551] = 1    # C02686 : Galactosylceramide
y[552] = 1    # C02693 : (Indol-3-yl)acetamide
y[553] = 1    # C02713 : N-Acetylmurate
y[554] = 1    # C02730 : 2-Succinylbenzoate
y[555] = 1    # C02739 : 1-(5-phospho-D-ribosyl)-ATP
y[556] = 1    # C02741 : Phosphoribosyl-AMP
y[557] = 1    # C02743 : [Protein]-L-cysteine
y[558] = 1    # C02764 : tRNA pseudouridine
y[559] = 1    # C02876 : Propanoyl phosphate
y[560] = 1    # C02909 : (2-Naphthyl)methanol
y[561] = 1    # C02953 : 7,8-Dihydrobiopterin
y[562] = 1    # C02962 : D-Allose 6-phosphate
y[563] = 1    # C02972 : Dihydrolipoylprotein
y[564] = 1    # C02984 : L-Aspartyl-tRNA(Asp)
y[565] = 1    # C02987 : L-Glutamyl-tRNA(Glu)
y[566] = 1    # C02999 : N-Acetylmuramoyl-Ala
y[567] = 1    # C03023 : Peptide-L-methionine
y[568] = 1    # C03028 : Thiamin triphosphate
y[569] = 1    # C03078 : 4-Guanidinobutanamide
y[570] = 1    # C03082 : 4-Phospho-L-aspartate
y[571] = 1    # C03089 : 5-Methylthio-D-ribose
y[572] = 1    # C03090 : 5-Phosphoribosylamine
y[573] = 1    # C03150 : Nicotinamide-beta-riboside
y[574] = 1    # C03160 : 2-Succinylbenzoyl-CoA
y[575] = 1    # C03170 : Trypanothione disulfide
y[576] = 1    # C03172 : S-Methyl-L-methionine
y[577] = 1    # C03175 : Shikimate 3-phosphate
y[578] = 1    # C03232 : 3-Phosphonooxypyruvate
y[579] = 1    # C03287 : L-Glutamyl 5-phosphate
y[580] = 1    # C03294 : N-Formylmethionyl-tRNA
y[581] = 1    # C03313 : Phylloquinol
y[582] = 1    # C03319 : dTDP-L-rhamnose
y[583] = 1    # C03344 : 2-Methylacetoacetyl-CoA
y[584] = 1    # C03356 : 3-Phospho-D-erythronate
y[585] = 1    # C03373 : Aminoimidazole ribotide
y[586] = 1    # C03406 : N-(L-Arginino)succinate
y[587] = 1    # C03453 : gamma-Oxalocrotonate
y[588] = 1    # C03479 : Folinic acid
y[589] = 1    # C03492 : D-4'-Phosphopantothenate
y[590] = 1    # C03523 : N-Substituted amino acid
y[591] = 1    # C03539 : S-Ribosyl-L-homocysteine
y[592] = 1    # C03617 : L-Methionylaminoacyl-tRNA
y[593] = 1    # C03620 : Monocarboxylic acid amide
y[594] = 1    # C03633 : Peptidylproline (omega=0)
y[595] = 1    # C03657 : 1,4-Dihydroxy-2-naphthoate
y[596] = 1    # C03688 : Apo-[acyl-carrier protein]
y[597] = 1    # C03692 : 1,2-Diacyl-3-beta-D-galactosyl-sn-glycerol
y[598] = 1    # C03723 : Ribonucleoside diphosphate
y[599] = 1    # C03733 : UDP-alpha-D-galactofuranose
y[600] = 1    # C03794 : N6-(1,2-Dicarboxyethyl)-AMP
y[601] = 1    # C03798 : Peptidylproline (omega=180)
y[602] = 1    # C03800 : Protein S-methyl-L-cysteine
y[603] = 1    # C03802 : Ribonucleoside triphosphate
y[604] = 1    # C03803 : Ribosomal-protein L-alanine
y[605] = 1    # C03838 : 5'-Phosphoribosylglycinamide
y[606] = 1    # C03880 : N-Substituted aminoacyl-tRNA
y[607] = 1    # C03892 : Phosphoatidylglycerophosphate
y[608] = 1    # C03895 : Peptide-L-methionine (S)-S-oxide
y[609] = 1    # C03912 : (S)-1-Pyrroline-5-Carboxylate
y[610] = 1    # C03939 : Acetyl-[acyl-carrier protein]
y[611] = 1    # C03972 : 2,3,4,5-Tetrahydrodipicolinate
y[612] = 1    # C04039 : 2,3-Dihydroxy-3-methylbutanoate
y[613] = 1    # C04051 : 5-Amino-4-imidazolecarboxyamide
y[614] = 1    # C04079 : N-(®-Pantothenoyl)-L-cysteine
y[615] = 1    # C04088 : Octadecanoyl-[acyl-carrier protein]
y[616] = 1    # C04133 : N-Acetyl-L-glutamate 5-phosphate
y[617] = 1    # C04144 : Tetrahydropteroyltri-L-glutamate
y[618] = 1    # C04153 : r RNA cotaining N2-methylguanine
y[619] = 1    # C04157 : t RNA containing N1-methylguanine
y[620] = 1    # C04160 : t RNA containing N7-methylguanine
y[621] = 1    # C04161 : tRNA containing a thionucleotide
y[622] = 1    # C04181 : 3-Hydroxy-3-methyl-2-oxobutanoic acid
y[623] = 1    # C04232 : 2'-Deoxyribonucleoside diphosphate
y[624] = 1    # C04236 : (2S)-2-Isopropyl-3-oxosuccinate
y[625] = 1    # C04242 : 5-Fluorodeoxyuridine monophosphate
y[626] = 1    # C04246 : But-2-enoyl-[acyl-carrier protein]
y[627] = 1    # C04250 : DNA containing 6-O-methylguanine
y[628] = 1    # C04258 : N-Formyl-L-methionylaminoacyl-tRNA
y[629] = 1    # C04261 : Protein N(pi)-phospho-L-histidine
y[630] = 1    # C04262 : Protein N(tau)-phospho-L-histidine
y[631] = 1    # C04272 : ®-2,3-Dihydroxy-3-methylbutanoate
y[632] = 1    # C04281 : L-1-Pyrroline-3-hydroxy-5-carboxylate
y[633] = 1    # C04294 : 5-(2-Hydroxyethyl)-4-methylthiazole
y[634] = 1    # C04309 : Phosphoenol-4-deoxy-3-tetrulosonate
y[635] = 1    # C04327 : 4-Methyl-5-(2-phosphooxyethyl)thiazole
y[636] = 1    # C04332 : N(omega)-Nitro-L-arginine methyl ester
y[637] = 1    # C04341 : Ribosomal-protein N-acetyl-L-alanine
y[638] = 1    # C04352 : ®-4'-Phosphopantothenoyl-L-cysteine
y[639] = 1    # C04376 : 5'-Phosphoribosyl-N-formylglycinamide
y[640] = 1    # C04377 : 5,10-Methylenetetrahydromethanopterin
y[641] = 1    # C04405 : (2S,3S)-3-Hydroxy-2-methylbutanoyl-CoA
y[642] = 1    # C04411 : (2R,3S)-3-Isopropylmalate
y[643] = 1    # C04419 : Carboxybiotin-carboxyl-carrier protein
y[644] = 1    # C04432 : t RNA containing 6-isopentyladenosine
y[645] = 1    # C04454 : 5-Amino-6-(5'-phospho-D-ribitylamino)uracil
y[646] = 1    # C04489 : 5-Methyltetrahydropteroltri-L-glutamate
y[647] = 1    # C04494 : Guanosine 3'-diphosphate 5'-triphosphate
y[648] = 1    # C04501 : N-Acetyl-alpha-D-glucosamine 1-phosphate
y[649] = 1    # C04556 : 4-Amino-2-methyl-5-(phosphooxymethyl)pyrimidine
y[650] = 1    # C04574 : di-trans,poly-cis-Undecaprenyl diphosphate
y[651] = 1    # C04618 : (3R)-3-Hydroxybutanoyl-[acyl-carrier protein]
y[652] = 1    # C04619 : (3R)-3-Hydroxydecanoyl-[acy-carrier protein]
y[653] = 1    # C04620 : (3R)-3-Hydroxyoctanoyl-[acyl-carrier protein]
y[654] = 1    # C04631 : UDP-N_acety-3-(1-carboxyvinyl)-D-glucosamine
y[655] = 1    # C04633 : (3R)-3-Hydroxypalmatoyl-[acyl-carrier protein]
y[656] = 1    # C04640 : 2-(Formamido)-N1-(5'-phosphoribosyl)acetamidine
y[657] = 1    # C04646 : 6-Thioinosine-5'-monophosphate
y[658] = 1    # C04666 : D-erythro-1-(Imidazol-4-yl)glycerol 3-phosphate
y[659] = 1    # C04677 : 1-(5'-Phosphoribosyl)-5-amino-4-imidazolecarboxamide
y[660] = 1    # C04688 : (3R)-3-Hydroxytetradecanoyl-[acy-carrier protein]
y[661] = 1    # C04702 : UDPMurNAc(oyl-L-Ala-D-gamma-Glu-L-Lys-D-Ala-D-Ala)
y[662] = 1    # C04732 : 5-Amino-6-(1-D-ribitylamino)uracil
y[663] = 1    # C04734 : 1-(5'-Phosphoribosyl)-5-formamido-4-imidazolecarboxamide
y[664] = 1    # C04737 : alpha-D-Galactosyl-(1->4)-beta-D-galactosyl-(1->4)-beta-D-glucosyl-(1<->1)-ceramide
y[665] = 1    # C04751 : 1-(5-Phospho-D-ribosyl)-5-amino-4-imidazolecarboxylate
y[666] = 1    # C04752 : O-1-Alk-1-enyl-2-acyl-sn-glycero-3-phosphoethanolamine
y[667] = 1    # C04756 : O-1-Alk-1-enyl-2-acyl-sn-glycero-3-phosphoethanolamine
y[668] = 1    # C04807 : 6-Hydroxymethyl-7,8-dihydropterin diphosphate
y[669] = 1    # C04823 : 1-(5'-Phosphoribosyl)-5-amino-4-(N-succinocarboxamide)-imidazole
y[670] = 1    # C04851 : MurAc(oyl-L-Ala-D-gamma-Glu-L-Lys-D-Ala-D-Ala)-diphospho-undecaprenol
y[671] = 1    # C04856 : (6S)-6beta-Hydroxy-1,4,5,6-tetrahydronicotinamide-adenine dinucleotide
y[672] = 1    # C04874 : 7,8-Dihydroneopterin
y[673] = 1    # C04877 : UDP-N-acetylmuramoyl-L-alanyl-gamma-D-glutamyl-meso-2,6-diaminopimelate
y[674] = 1    # C04882 : UDP-N-acetylmuramoyl-L-alanyl-D-glutamyl-6-carboxy-L-lysyl-D-alanyl-D-alanine
y[675] = 1    # C04895 : 7,8-Dihydroneopterin 3'-triphosphate
y[676] = 1    # C04896 : 5-(5-Phospho-D-ribosylaminoformino)-1-(5-phosphoribosyl)-imidazole-4-carboxamide
y[677] = 1    # C04899 : (6S)-6beta-Hydroxy-1,4,5,6-tetrahydronicotinamide-adenine dinucleotide phosphate
y[678] = 1    # C04916 : N-(5'-Phospho-D-1'-ribulosylformimino)-5-amino-1-(5''-phospho-D-ribosyl)-4-imidazolecarboxamide
y[679] = 1    # C05125 : 2-(alpha-Hydroxyethyl)thiamine diphosphate
y[680] = 1    # C05167 : alpha-Amino acid
y[681] = 1    # C05198 : 5'-Deoxyadenosine
y[682] = 1    # C05223 : Dodecanoyl-[acyl-carrier protein]
y[683] = 1    # C05235 : Hydroxyacetone
y[684] = 1    # C05258 : (S)-3-Hydroxyhexadecanoyl-CoA
y[685] = 1    # C05259 : 3-Oxopalmitoyl-CoA
y[686] = 1    # C05260 : (S)-3-Hydroxytetradecanoyl-CoA
y[687] = 1    # C05261 : 3-Oxotetradecanoyl-CoA
y[688] = 1    # C05262 : (S)-3-Hydroxydodecanoyl-CoA
y[689] = 1    # C05263 : 3-Oxododecanoyl-CoA
y[690] = 1    # C05264 : (S)-Hydroxydecanoyl-CoA
y[691] = 1    # C05265 : 3-Oxodecanoyl-CoA
y[692] = 1    # C05266 : (S)-3-Hydroxyoctanoyl-CoA
y[693] = 1    # C05267 : 3-Oxooctanoyl-CoA
y[694] = 1    # C05268 : (S)-Hydroxyhexanoyl-CoA
y[695] = 1    # C05269 : 3-Oxohexanoyl-CoA
y[696] = 1    # C05335 : L-Selenomethionine
y[697] = 1    # C05345 : beta-D-Fructose 6-phosphate
y[698] = 1    # C05382 : Sedoheptulose 7-phosphate
y[699] = 1    # C05399 : Melibiitol
y[700] = 1    # C05400 : Epimelibiose
y[701] = 1    # C05401 : 3-beta-D-Galactosyl-sn-glycerol
y[702] = 1    # C05402 : Melibiose
y[703] = 1    # C05404 : D-Gal alpha 1->6D-Gal alpha 1->6D-Glucose
y[704] = 1    # C05444 : 3alpha,7alpha,26-Trihydroxy-5beta-cholestane
y[705] = 1    # C05445 : 3alpha,7alpha,Dihydroxy-5beta-cholestan-26-al
y[706] = 1    # C05526 : S-Gluthathione-L-cysteine
y[707] = 1    # C05539 : N-Acetyl-L-2-amino-6-oxopimelate
y[708] = 1    # C05576 : 3,4-Dihydroxyphenylethyleneglycol
y[709] = 1    # C05577 : 3,4-Dihydroxymandelaldehyde
y[710] = 1    # C05684 : Selenite
y[711] = 1    # C05688 : L-Selenocysteine
y[712] = 1    # C05698 : Selenohomocysteine
y[713] = 1    # C05744 : Acetoacetyl-[acp]
y[714] = 1    # C05745 : Butyryl-[acp]
y[715] = 1    # C05746 : 3-Oxohexanoyl-[acp]
y[716] = 1    # C05747 : (3R)-3-Hydroxyhexanoyl-[acyl-carrier protein]
y[717] = 1    # C05748 : trans-Hex-2-enoyl-[acp]
y[718] = 1    # C05749 : Hexanoyl-[acp]
y[719] = 1    # C05750 : 3-Oxooctanoyl-[acp]
y[720] = 1    # C05751 : trans-Oct-2-enoyl-[acp]
y[721] = 1    # C05752 : Octnoyl-[acp]
y[722] = 1    # C05753 : 3-Oxodecanoyl-[acp]
y[723] = 1    # C05754 : trans-Dec-2-enoyl-[acp]
y[724] = 1    # C05755 : Decanoyl-[acp]
y[725] = 1    # C05756 : 3-Oxododecanoyl-[acp]
y[726] = 1    # C05757 : (3R)-3-Hydroxydodecanoyl-[acyl-carrier protein]
y[727] = 1    # C05758 : trans-Dodec-2-enoyl-[acp]
y[728] = 1    # C05759 : 3-Oxoetradecanoyl-[acp]
y[729] = 1    # C05760 : trans-Tetradec-2-enoyl-[acp]
y[730] = 1    # C05761 : Tetradecanoyl-[acp]
y[731] = 1    # C05762 : 3-Oxohexadecanoyl-[acp]
y[732] = 1    # C05763 : tetra-hexadec-2-enoyl-[acp]
y[733] = 1    # C05764 : Hexadecanoyl-[acp]
y[734] = 1    # C05778 : Sirohydrochlorin
y[735] = 1    # C05817 : (1R,6R)-6-Hydroxy-2-succinylcyclohexa-2,4-diene-1-carboxylate
y[736] = 1    # C05819 : Menaquinol
y[737] = 1    # C05823 : 3-Mercaptolactate
y[738] = 1    # C05841 : Nicotinate D-ribonucleoside
y[739] = 1    # C05850 : Reduced Vitamin K
y[740] = 1    # C05892 : UDP-N-acetylmuramoyl-L-alanyl-gamma-D-glutamyl-L-lysine
y[741] = 1    # C05893 : Undecaprenyl-diphospho-N-acetylmuramoyl-(N-acetylglucosamine)-L-alanyl-gamma-D-glutamyl-L-lysyl-D-alanyl-D-alanine
y[742] = 1    # C05897 : Undecaprenyl-diphospho-N-acetylmuramoyl-L-alanyl-gamma-D-glutamyl-meso-2,6-diaminopimeloyl-D-alanyl-D-alanine
y[743] = 1    # C05898 : Undecaprenyl-diphospho-N-acetylmuramoyl-(N-acetylglucosamine)-L-alanyl-D-glutamyl-meso-2,6-diaminopimeloyl-D-alanyl-D-alanine
y[744] = 1    # C05921 : Biotinyl-5'-AMP
y[745] = 1    # C05922 : Formamidopyrimidine nucleoside triphosphate
y[746] = 1    # C05923 : 2,5-Diaminopyrimidine nucleoside triphosphate
y[747] = 1    # C05984 : 2-Hydroxybutanoic acid
y[748] = 1    # C06006 : (S)-2-Aceto-2-hydroxybutanoate
y[749] = 1    # C06007 : ®-2,3-Dihydroxy-3-methylpentanoate
y[750] = 1    # C06010 : (S)-2-Acetolactate
y[751] = 1    # C06032 : D-erythro-3-Methylmalate
y[752] = 1    # C06037 : Digalactosyl-diacylglycerol
y[753] = 1    # C06054 : 2-Oxo-3-hydroxy-4-phosphobutanoate
y[754] = 1    # C06055 : O-Phospho-4-hydroxy-L-threonine
y[755] = 1    # C06056 : 4-Hydroxy-L-threonine
y[756] = 1    # C06060 : Amidine
y[757] = 1    # C06126 : Digalactosylceramide
y[758] = 1    # C06148 : 2,5-Diamino-6-(5'-triphosphoryl-3',4'-trihydroxy-2'-oxopentyl)-amino-4-oxopyrimidine
y[759] = 1    # C06156 : alpha-D-Glucosamine 1-phosphate
y[760] = 1    # C06196 : 2'-Deoxyinosine 5'-phosphate
y[761] = 1    # C06244 : Acetamide
y[762] = 1    # C06249 : Apo-[carboxylase]
y[763] = 1    # C06250 : Holo-[carboxylase]
y[764] = 1    # C06423 : Octanoic acid
y[765] = 1    # C06611 : trans-3-Chloro-2-propene-1-ol
y[766] = 1    # C06612 : cis-3-Chloro-2-propne-1-ol
y[767] = 1    # C06613 : trans-3-Chloroallyl aldehyde
y[768] = 1    # C06697 : Arsenite
y[769] = 1    # C06714 : 3-Hydroxypimeloyl-CoA
y[770] = 1    # C06715 : 3-Oxopimeloyl-CoA
y[771] = 1    # C06899 : Chloral hydrate
y[772] = 1    # C07086 : Phenylacetic acid
y[773] = 1    # C07478 : 2-Hydroxy-5-methyl-cis,cis-muconate
y[774] = 1    # C07479 : 2-Oxo-5-methyl-cis-muconate
y[775] = 1    # C07490 : Trichloroethanol
y[776] = 1    # C07645 : Aldophosphamide
y[777] = 1    # C07648 : Thioguanine
y[778] = 1    # C07649 : 5-FU
y[779] = 1    # C08353 : beta-D-Ribopyranose
y[780] = 1    # C08492 : 3-Hexenol
y[781] = 1    # C09815 : Benzamide
y[782] = 1    # C11038 : 2'-Deoxy-5-hydroxymethylcytidine-5'-diphosphate
y[783] = 1    # C11039 : 2'-Deoxy-5-hydroxymethylcytidine-5'-triphosphate
y[784] = 1    # C11215 : Arsenate ion
y[785] = 1    # C11435 : 4-(Cytidine 5'-diphospho)-2-C-methyl-D-erythritol
y[786] = 1    # C11436 : 2-Phospho-4-(cytidine 5'-diphospho)-2-C-methyl-D-erythritol
y[787] = 1    # C11437 : 1-Deoxy-D-xylulose 5-phosphate
y[788] = 1    # C11439 : Formyl-L-methionyl peptide
y[789] = 1    # C11440 : Methionyl peptide
y[790] = 1    # C11475 : DNA containing guanine
y[791] = 1    # C11736 : 5-Fluorodeoxyuridine
y[792] = 1    # C11838 : (S)-4,5-Dihydroxypentane-2,3-dione
y[793] = 1    # C11907 : d TDP 4-oxo-6-deoxy-D-glucose
y[794] = 1    # C12214 : Aminofructose 6-phosphate
y[795] = 1    # C12215 : Iminoerythrose 4-phosphate
y[796] = 1    # C13378 : alpha,beta-Dihydroxyethyl-TPP
y[797] = 1    # C14089 : 1-Hydroxymethylnaphthalene
y[798] = 1    # C14090 : 1-Napthaldehyde
y[799] = 1    # C14099 : 2-Napthaldehyde
y[800] = 1    # C14145 : (3S)-3-Hydroxyadipyl-CoA
y[801] = 1    # C14463 : ®-3-Hydroxy-3-methyl-2-oxopentanoate
y[802] = 1    # C15498 : ROOH
y[803] = 1    # C15527 : Precorrin 1
y[804] = 1    # C15547 : 1,4-Dihydroxy-2-naphthoyl-CoA
y[805] = 1    # C15556 : L-3,4-Dihydroxybutan-2-one 4-phosphate
y[806] = 1    # C15603 : Hydroquinone
y[807] = 1    # C15647 : 2-Acyl-1-(1-alkenyl)-sn-glycero-3-phosphate
y[808] = 1    # C15653 : Peptide-L-methionine (R)-S-oxide
y[809] = 1    # C15667 : 5-Carboxyamino-1-(5-phospho-D-ribosyl)imidazole
y[810] = 1    # C15811 : [Enzyme]-cysteine
y[811] = 1    # C15812 : [Enzyme]-S-sulfanylcysteine
y[812] = 1    # C15813 : Adenylyl-[sulfur-carrier protein]
y[813] = 1    # C15814 : Thiocarboxy-[sulfur-carrier protein]
y[814] = 1    # C15972 : Enzyme N6-(lipoyl)lysine
y[815] = 1    # C15973 : Enzyme N6-(dihydrolipoyl)lysine
y[816] = 1    # C15999 : L-Methionine (S)-S-oxide
y[817] = 1    # C16219 : 3-Oxostearoyl-[acp]
y[818] = 1    # C16221 : (2E)-Octadecenoyl-[acp]
y[819] = 1    # C16237 : Protein N6-(lipoyl)lysine
y[820] = 1    # C16238 : Lipoyl-AMP
y[821] = 1    # C16240 : [Lipoyl-carrier protein]-L-lysine
y[822] = 1    # C16241 : ®-Lipoate
y[823] = 1    # C16310 : 3-Hexenal
y[824] = 1    # C16329 : 3-Hydroxy-OPC8-CoA
y[825] = 1    # C16330 : 3-Oxo-OPC8-CoA
y[826] = 1    # C16333 : 3-Hydroxy-OPC6-CoA
y[827] = 1    # C16334 : 3-Oxo-OPC6-CoA
y[828] = 1    # C16337 : 3-Hydroxy-OPC4-CoA
y[829] = 1    # C16338 : 3-Oxo-OPC4-CoA
y[830] = 1    # C16348 : cis-3-Chloroallyl aldehyde
y[831] = 1    # C16469 : 3-Hydroxy-5-methylhe-4-enoyl-CoA
y[832] = 1    # C16471 : 5-Methyl-3-oxo-4-hexaoyl-CoA
y[833] = 1    # C16551 : Alcophosphamide
y[834] = 1    # C16586 : 2-Phenyl-1,3-propanediolmonocarbamate
y[835] = 1    # C16587 : 3-Carbamoyl-2-phenylpropioaldehyde
y[836] = 1    # C16595 : 4-Hydroxy-5-phenyltetrahydro-1,3-oxazin-2-one
y[837] = 1    # C16596 : 5-Phenyl-1,3-oxazinane-2,4-dione
y[838] = 1    # C16614 : 6-Methylmercaptopurine
y[839] = 1    # C16615 : 6-Methylmercaptopurine 5'monophosphate ribonucleotide
y[840] = 1    # C16617 : 6-Mercaptopurine ribonucleotide triphosphate
y[841] = 1    # C16618 : 6-Thioxanthine 5'-monophosphate
y[842] = 1    # C16619 : 6-Thioguanosine monophosphate
y[843] = 1    # C16633 : 5-Fluorouridine
y[844] = 1    # C16634 : 5-Fluorouridine monophosphate
y[845] = 1    # C16639 : beta-D-Ribofuranose
y[846] = 1    # C16663 : Tryparedoxin
y[847] = 1    # C16664 : Tryparedoxin disulfide
y[848] = 1    # C16688 : Sucrose 6-phosphate
y[849] = 1    # C16832 : [Protein]-N6-[®-dihydrlipoyl]-L-lysine
y[850] = 1    # C17234 : 2-Aminobut-2-enoate
y[851] = 1    # C17322 : tRNA containing 2-thionucleotide
y[852] = 1    # C17324 : t RNA adenine
y[853] = 1    # C17556 : di-trans,poly-cis-Undecaprenyl phosphate
y[854] = 1    # C18094 : UDP-L-arabinofuranose
y[855] = 1    # C18096 : D-Allulose 6-phosphate
y[856] = 1    # C18237 : Molybdoenzyme molybdenum cofactor
y[857] = 1    # C18239 : Precursor Z
y[858] = 1    # C19609 : Nickel(2+)
y[859] = 1    # C19673 : Malonyl-[acp] methyl ester
y[860] = 1    # C19722 : [tRNA(Ile2)]-cytidine34
y[861] = 1    # C19723 : [tRNA(Ile2)]-lysidine34
y[862] = 1    # C19847 : Demethylmenaquinol
y[863] = 1    # C19858 : 2-Methoxy-6-all-trans-polyprenyl-1,4-benzoquinol
y[864] = 1    # C19859 : 5-Methox-2-methyl-3-(all-trans-polyprenyl)benzene-1,4-diol
y[865] = 1    # C19871 : Guanylyl molybdenum cofactor
y[866] = 1    # C20246 : 2-[(2R,5Z)-2-Carboxy-4-methylthiazol-5(2H)-ylidene]ethyl phosphate
y[867] = 1    # C20247 : 2-(2-Carboxy-4-methylthiazol-5-yl)ethyl phosphate
y[868] = 1    # C20258 : (2S,4S)-4-Hydroxy-2,3,4,5-tetrahydrodipicolinate
y[869] = 1    # C20267 : 4-Amino-5-aminomethyl-2-methylpyimidine
y[870] = 1    # C20372 : 3-Ketoglutaryl-[acp] methyl ester
y[871] = 1    # C20373 : 3-Hydroxyglutaryl-[acp] methyl ester
y[872] = 1    # C20374 : Enoylglutaryl-[acp] methyl ester
y[873] = 1    # C20375 : Glutaryl-[acp] methyl ester
y[874] = 1    # C20376 : 3-Ketopimeloyl-[acp] methyl ester
y[875] = 1    # C20377 : 3-Hydroxypimeloyl-[acp] methyl ester
y[876] = 1    # C20378 : Enoylpimeloyl-[acp] methyl ester
y[877] = 1    # C20451 : tRNA hypoxanthine
y[878] = 1    # C20482 : t RNA hypoxanthine-1,4,5,6-tetrahydronicotinamide-adenine diucleotide
y[879] = 1    # C20483 : (6R)-6beta-Hydroxy-1,4,5,6-tetrahydronicotinamide-adenine dinucleotide phosphate
y[880] = 1    # C20565 : Cyclic di-3',5'-adenylate
y[881] = 1    # C20641 : L-Threonylcarbamoyladenylate
y[882] = 1    # C20648 : Adenine in rRNA
y[883] = 1    # C20658 : O-Acetyl-ADP-ribose
y[884] = 1    # C20743 : Protein N6-acetyl-L-lysine
y[885] = 1    # C20751 : N6-L-Threonylcarbamoyladenine in tRNA
y[886] = 1    # C20796 : N6-Dimethyladenine in rRNA
y[887] = 1    # C20858 : Protein N5-methyl-L-glutamine
y[888] = 1    # C20864 : 5'-Triphospho-[mRNA]
y[889] = 1    # C20904 : 2-Iminopropanoate
y[890] = 1    # C20905 : 2-Iminobutanoate
y[891] = 1    # C20969 : Carboxyphosphate
y[892] = 1    # C21031 : 5-Hydroxyethylcytosine in DNA
y[893] = 1    # C21310 : (8S)-3',8-Cyclo-7,8-dihydroguanosine 5'-triphosphate
y[894] = 1    # C21440 : [Protein]-S-sulfanyl-L-cysteine
y[895] = 1    # C21748 : 5-Fluorouridine diphosphate
y[896] = 1    # C21749 : 5-Fluorouridine triphosphate
y[897] = 1    # C21750 : 5-Fluorodeoxyuridine diphosphate
y[898] = 1    # C21751 : 5-Fluorodeoxyuridine triphosphate
y[899] = 1    # C21767 : Pyridinium-3,5-bisthiocarboxylate mononucleotide
y[900] = 1    # C21769 : Ni(II)-pyridinium-3,5-bisthiocarboxylatemononucleotide
y[901] = 1    # C21811 : Wall teichoic acid
y[902] = 1    # C21812 : Wall teichoic acid
y[903] = 1    # C22131 : 3''-O'Acetyl-ADP-D-ribose
y[904] = 1    # C22160 : [Lipoyl-carrier protein E2]-N6-octanoyl-L-lysine
y[905] = 1    # C22288 : 5-Deoxy-D-ribose
y[906] = 1    # C22395 : N6-Succino-2-amino-2'-deoxyadenylate
y[907] = 1    # C22441 : dZMP
y[908] = 1    # C22442 : dZDP
y[909] = 1    # C22443 : dZTP
y[910] = 1    # G00092 : Lactosylceramide
y[911] = 1    # G00093 : Globotriaosylceramide
y[912] = 1    # G00249 : Raffinose
y[913] = 1    # G00278 : Stachyose
y[914] = 1    # G00370 : Sucrose
y[915] = 1    # G00497 : Galabiosylceramide
y[916] = 1    # G00501 : Manninotriose
y[917] = 1    # G01275 : Melibiose
y[918] = 1    # G09795 : Trehalose 6-phosphate
y[919] = 1    # G10488 : Galactinol
y[920] = 1    # G10508 : Sucrose 6'-phosphate
y[921] = 1    # G10529 : Epimelibiose
y[922] = 1    # G10550 : (GlcNAc)1 (MurNAc)1 (D-Ala-D-Ala-Lys-D-Glu-Ala)1 (PP-Und)1
y[923] = 1    # G10551 : (MurNAc)1 (D-Ala-D-Ala-Lys-D-Glu-Ala)1 (PP-Und)1
y[924] = 1    # G10552 : (MurNAc)1 (D-Ala-D-Ala-Lys-gamma-D-Glu-Ala)1 (PP-Und)1
y[925] = 1    # G10553 : (GlcNAc)1 (MurNAc)1 (D-Ala-D-Ala-Lys-gamma-D-Glu-Ala)1 (PP-Und)1
y[926] = 1    # G10555 : (GlcNAc)1 (MurNAc)1 (D-Ala-D-Ala-A2pm-gamma-D-Glu-Ala)1 (PP-Und)1
y[927] = 1    # G10556 : (MurNAc)1 (D-Ala-D-Ala-A2pm-gamma-D-Glu-Ala)1 (PP-Und)1
y[928] = 1    # G10610 : UDP-N-acetyl-D-glucosamine
y[929] = 1    # G10619 : UDP
y[930] = 1    # G11121 : Galactosylceramide
y[931] = 0    # E1_1_1_1_mRNA : E1_1_1_1_mRNA
y[932] = 0    # E1_1_1_133_mRNA : E1_1_1_133_mRNA
y[933] = 0    # E1_1_1_169_mRNA : E1_1_1_169_mRNA
y[934] = 0    # E1_1_1_193_mRNA : E1_1_1_193_mRNA
y[935] = 0    # E1_1_1_23_mRNA : E1_1_1_23_mRNA
y[936] = 0    # E1_1_1_27_mRNA : E1_1_1_27_mRNA
y[937] = 0    # E1_1_1_28_mRNA : E1_1_1_28_mRNA
y[938] = 0    # E1_1_1_3_mRNA : E1_1_1_3_mRNA
y[939] = 0    # E1_1_1_304_mRNA : E1_1_1_304_mRNA
y[940] = 0    # E1_1_1_35_mRNA : E1_1_1_35_mRNA
y[941] = 0    # E1_1_1_44_mRNA : E1_1_1_44_mRNA
y[942] = 0    # E1_1_1_47_mRNA : E1_1_1_47_mRNA
y[943] = 0    # E1_1_1_49_mRNA : E1_1_1_49_mRNA
y[944] = 0    # E1_1_1_6_mRNA : E1_1_1_6_mRNA
y[945] = 0    # E1_1_1_85_mRNA : E1_1_1_85_mRNA
y[946] = 0    # E1_1_1_86_mRNA : E1_1_1_86_mRNA
y[947] = 0    # E1_1_1_88_mRNA : E1_1_1_88_mRNA
y[948] = 0    # E1_1_1_94_mRNA : E1_1_1_94_mRNA
y[949] = 0    # E1_11_1_26_mRNA : E1_11_1_26_mRNA
y[950] = 0    # E1_17_1_8_mRNA : E1_17_1_8_mRNA
y[951] = 0    # E1_17_4_1_mRNA : E1_17_4_1_mRNA
y[952] = 0    # E1_17_4_2_mRNA : E1_17_4_2_mRNA
y[953] = 0    # E1_2_1_10_mRNA : E1_2_1_10_mRNA
y[954] = 0    # E1_2_1_11_mRNA : E1_2_1_11_mRNA
y[955] = 0    # E1_2_1_38_mRNA : E1_2_1_38_mRNA
y[956] = 0    # E1_2_1_41_mRNA : E1_2_1_41_mRNA
y[957] = 0    # E1_20_4_4_mRNA : E1_20_4_4_mRNA
y[958] = 0    # E1_3_1_12_mRNA : E1_3_1_12_mRNA
y[959] = 0    # E1_3_1_14_mRNA : E1_3_1_14_mRNA
y[960] = 0    # E1_3_1_9_mRNA : E1_3_1_9_mRNA
y[961] = 0    # E1_3_1_98_mRNA : E1_3_1_98_mRNA
y[962] = 0    # E1_4_1_13_mRNA : E1_4_1_13_mRNA
y[963] = 0    # E1_5_1_2_mRNA : E1_5_1_2_mRNA
y[964] = 0    # E1_5_1_3_mRNA : E1_5_1_3_mRNA
y[965] = 0    # E1_6_5_2_mRNA : E1_6_5_2_mRNA
y[966] = 0    # E1_7_1_7_mRNA : E1_7_1_7_mRNA
y[967] = 0    # E1_8_1_4_mRNA : E1_8_1_4_mRNA
y[968] = 0    # E1_8_1_9_mRNA : E1_8_1_9_mRNA
y[969] = 0    # E1_8_4_11_mRNA : E1_8_4_11_mRNA
y[970] = 0    # E1_8_4_12_mRNA : E1_8_4_12_mRNA
y[971] = 0    # E2_1_1_10_mRNA : E2_1_1_10_mRNA
y[972] = 0    # E2_1_1_107_mRNA : E2_1_1_107_mRNA
y[973] = 0    # E2_1_1_14_mRNA : E2_1_1_14_mRNA
y[974] = 0    # E2_1_1_163_mRNA : E2_1_1_163_mRNA
y[975] = 0    # E2_1_1_171_mRNA : E2_1_1_171_mRNA
y[976] = 0    # E2_1_1_182_mRNA : E2_1_1_182_mRNA
y[977] = 0    # E2_1_1_201_mRNA : E2_1_1_201_mRNA
y[978] = 0    # E2_1_1_228_mRNA : E2_1_1_228_mRNA
y[979] = 0    # E2_1_1_297_mRNA : E2_1_1_297_mRNA
y[980] = 0    # E2_1_1_33_mRNA : E2_1_1_33_mRNA
y[981] = 0    # E2_1_1_45_mRNA : E2_1_1_45_mRNA
y[982] = 0    # E2_1_1_63_mRNA : E2_1_1_63_mRNA
y[983] = 0    # E2_1_2_1_mRNA : E2_1_2_1_mRNA
y[984] = 0    # E2_1_2_2_mRNA : E2_1_2_2_mRNA
y[985] = 0    # E2_1_2_3_mRNA : E2_1_2_3_mRNA
y[986] = 0    # E2_1_2_9_mRNA : E2_1_2_9_mRNA
y[987] = 0    # E2_1_3_15_mRNA : E2_1_3_15_mRNA
y[988] = 0    # E2_1_3_2_mRNA : E2_1_3_2_mRNA
y[989] = 0    # E2_1_3_3_mRNA : E2_1_3_3_mRNA
y[990] = 0    # E2_2_1_1_mRNA : E2_2_1_1_mRNA
y[991] = 0    # E2_2_1_6_mRNA : E2_2_1_6_mRNA
y[992] = 0    # E2_2_1_7_mRNA : E2_2_1_7_mRNA
y[993] = 0    # E2_3_1_1_mRNA : E2_3_1_1_mRNA
y[994] = 0    # E2_3_1_15_mRNA : E2_3_1_15_mRNA
y[995] = 0    # E2_3_1_157_mRNA : E2_3_1_157_mRNA
y[996] = 0    # E2_3_1_179_mRNA : E2_3_1_179_mRNA
y[997] = 0    # E2_3_1_180_mRNA : E2_3_1_180_mRNA
y[998] = 0    # E2_3_1_234_mRNA : E2_3_1_234_mRNA
y[999] = 0    # E2_3_1_266_mRNA : E2_3_1_266_mRNA
y[1000] = 0    # E2_3_1_274_mRNA : E2_3_1_274_mRNA
y[1001] = 0    # E2_3_1_286_mRNA : E2_3_1_286_mRNA
y[1002] = 0    # E2_3_1_35_mRNA : E2_3_1_35_mRNA
y[1003] = 0    # E2_3_1_39_mRNA : E2_3_1_39_mRNA
y[1004] = 0    # E2_3_1_46_mRNA : E2_3_1_46_mRNA
y[1005] = 0    # E2_3_1_8_mRNA : E2_3_1_8_mRNA
y[1006] = 0    # E2_3_1_89_mRNA : E2_3_1_89_mRNA
y[1007] = 0    # E2_3_1_9_mRNA : E2_3_1_9_mRNA
y[1008] = 0    # E2_3_3_10_mRNA : E2_3_3_10_mRNA
y[1009] = 0    # E2_4_1_227_mRNA : E2_4_1_227_mRNA
y[1010] = 0    # E2_4_2_10_mRNA : E2_4_2_10_mRNA
y[1011] = 0    # E2_4_2_14_mRNA : E2_4_2_14_mRNA
y[1012] = 0    # E2_4_2_17_mRNA : E2_4_2_17_mRNA
y[1013] = 0    # E2_4_2_22_mRNA : E2_4_2_22_mRNA
y[1014] = 0    # E2_4_2_7_mRNA : E2_4_2_7_mRNA
y[1015] = 0    # E2_4_2_8_mRNA : E2_4_2_8_mRNA
y[1016] = 0    # E2_4_2_9_mRNA : E2_4_2_9_mRNA
y[1017] = 0    # E2_5_1_15_mRNA : E2_5_1_15_mRNA
y[1018] = 0    # E2_5_1_19_mRNA : E2_5_1_19_mRNA
y[1019] = 0    # E2_5_1_3_mRNA : E2_5_1_3_mRNA
y[1020] = 0    # E2_5_1_47_mRNA : E2_5_1_47_mRNA
y[1021] = 0    # E2_5_1_6_mRNA : E2_5_1_6_mRNA
y[1022] = 0    # E2_5_1_75_mRNA : E2_5_1_75_mRNA
y[1023] = 0    # E2_5_1_78_mRNA : E2_5_1_78_mRNA
y[1024] = 0    # E2_5_1_9_mRNA : E2_5_1_9_mRNA
y[1025] = 0    # E2_6_1_11_mRNA : E2_6_1_11_mRNA
y[1026] = 0    # E2_6_1_16_mRNA : E2_6_1_16_mRNA
y[1027] = 0    # E2_6_1_42_mRNA : E2_6_1_42_mRNA
y[1028] = 0    # E2_6_1_52_mRNA : E2_6_1_52_mRNA
y[1029] = 0    # E2_6_1_9_mRNA : E2_6_1_9_mRNA
y[1030] = 0    # E2_7_1_107_mRNA : E2_7_1_107_mRNA
y[1031] = 0    # E2_7_1_12_mRNA : E2_7_1_12_mRNA
y[1032] = 0    # E2_7_1_148_mRNA : E2_7_1_148_mRNA
y[1033] = 0    # E2_7_1_15_mRNA : E2_7_1_15_mRNA
y[1034] = 0    # E2_7_1_2_mRNA : E2_7_1_2_mRNA
y[1035] = 0    # E2_7_1_21_mRNA : E2_7_1_21_mRNA
y[1036] = 0    # E2_7_1_211_mRNA : E2_7_1_211_mRNA
y[1037] = 0    # E2_7_1_23_mRNA : E2_7_1_23_mRNA
y[1038] = 0    # E2_7_1_24_mRNA : E2_7_1_24_mRNA
y[1039] = 0    # E2_7_1_26_mRNA : E2_7_1_26_mRNA
y[1040] = 0    # E2_7_1_30_mRNA : E2_7_1_30_mRNA
y[1041] = 0    # E2_7_1_31_mRNA : E2_7_1_31_mRNA
y[1042] = 0    # E2_7_1_33_mRNA : E2_7_1_33_mRNA
y[1043] = 0    # E2_7_1_36_mRNA : E2_7_1_36_mRNA
y[1044] = 0    # E2_7_1_39_mRNA : E2_7_1_39_mRNA
y[1045] = 0    # E2_7_1_4_mRNA : E2_7_1_4_mRNA
y[1046] = 0    # E2_7_1_40_mRNA : E2_7_1_40_mRNA
y[1047] = 0    # E2_7_1_48_mRNA : E2_7_1_48_mRNA
y[1048] = 0    # E2_7_1_49_mRNA : E2_7_1_49_mRNA
y[1049] = 0    # E2_7_1_50_mRNA : E2_7_1_50_mRNA
y[1050] = 0    # E2_7_1_6_mRNA : E2_7_1_6_mRNA
y[1051] = 0    # E2_7_1_71_mRNA : E2_7_1_71_mRNA
y[1052] = 0    # E2_7_10_2_mRNA : E2_7_10_2_mRNA
y[1053] = 0    # E2_7_2_1_mRNA : E2_7_2_1_mRNA
y[1054] = 0    # E2_7_2_11_mRNA : E2_7_2_11_mRNA
y[1055] = 0    # E2_7_2_2_mRNA : E2_7_2_2_mRNA
y[1056] = 0    # E2_7_2_3_mRNA : E2_7_2_3_mRNA
y[1057] = 0    # E2_7_2_4_mRNA : E2_7_2_4_mRNA
y[1058] = 0    # E2_7_2_8_mRNA : E2_7_2_8_mRNA
y[1059] = 0    # E2_7_3_9_mRNA : E2_7_3_9_mRNA
y[1060] = 0    # E2_7_4_1_mRNA : E2_7_4_1_mRNA
y[1061] = 0    # E2_7_4_2_mRNA : E2_7_4_2_mRNA
y[1062] = 0    # E2_7_4_22_mRNA : E2_7_4_22_mRNA
y[1063] = 0    # E2_7_4_25_mRNA : E2_7_4_25_mRNA
y[1064] = 0    # E2_7_4_3_mRNA : E2_7_4_3_mRNA
y[1065] = 0    # E2_7_4_6_mRNA : E2_7_4_6_mRNA
y[1066] = 0    # E2_7_4_7_mRNA : E2_7_4_7_mRNA
y[1067] = 0    # E2_7_4_8_mRNA : E2_7_4_8_mRNA
y[1068] = 0    # E2_7_4_9_mRNA : E2_7_4_9_mRNA
y[1069] = 0    # E2_7_6_1_mRNA : E2_7_6_1_mRNA
y[1070] = 0    # E2_7_6_2_mRNA : E2_7_6_2_mRNA
y[1071] = 0    # E2_7_6_3_mRNA : E2_7_6_3_mRNA
y[1072] = 0    # E2_7_6_5_mRNA : E2_7_6_5_mRNA
y[1073] = 0    # E2_7_7_12_mRNA : E2_7_7_12_mRNA
y[1074] = 0    # E2_7_7_18_mRNA : E2_7_7_18_mRNA
y[1075] = 0    # E2_7_7_2_mRNA : E2_7_7_2_mRNA
y[1076] = 0    # E2_7_7_23_mRNA : E2_7_7_23_mRNA
y[1077] = 0    # E2_7_7_24_mRNA : E2_7_7_24_mRNA
y[1078] = 0    # E2_7_7_3_mRNA : E2_7_7_3_mRNA
y[1079] = 0    # E2_7_7_41_mRNA : E2_7_7_41_mRNA
y[1080] = 0    # E2_7_7_6_mRNA : E2_7_7_6_mRNA
y[1081] = 0    # E2_7_7_7_mRNA : E2_7_7_7_mRNA
y[1082] = 0    # E2_7_7_77_mRNA : E2_7_7_77_mRNA
y[1083] = 0    # E2_7_7_85_mRNA : E2_7_7_85_mRNA
y[1084] = 0    # E2_7_7_87_mRNA : E2_7_7_87_mRNA
y[1085] = 0    # E2_7_7_9_mRNA : E2_7_7_9_mRNA
y[1086] = 0    # E2_7_8_13_mRNA : E2_7_8_13_mRNA
y[1087] = 0    # E2_7_8_5_mRNA : E2_7_8_5_mRNA
y[1088] = 0    # E2_7_8_7_mRNA : E2_7_8_7_mRNA
y[1089] = 0    # E2_8_1_13_mRNA : E2_8_1_13_mRNA
y[1090] = 0    # E2_8_1_4_mRNA : E2_8_1_4_mRNA
y[1091] = 0    # E2_8_1_7_mRNA : E2_8_1_7_mRNA
y[1092] = 0    # E3_1_1_103_mRNA : E3_1_1_103_mRNA
y[1093] = 0    # E3_1_1_106_mRNA : E3_1_1_106_mRNA
y[1094] = 0    # E3_1_1_29_mRNA : E3_1_1_29_mRNA
y[1095] = 0    # E3_1_3_15_mRNA : E3_1_3_15_mRNA
y[1096] = 0    # E3_1_3_27_mRNA : E3_1_3_27_mRNA
y[1097] = 0    # E3_1_3_48_mRNA : E3_1_3_48_mRNA
y[1098] = 0    # E3_1_3_7_mRNA : E3_1_3_7_mRNA
y[1099] = 0    # E3_1_4_4_mRNA : E3_1_4_4_mRNA
y[1100] = 0    # E3_2_1_22_mRNA : E3_2_1_22_mRNA
y[1101] = 0    # E3_2_1_26_mRNA : E3_2_1_26_mRNA
y[1102] = 0    # E3_2_1_93_mRNA : E3_2_1_93_mRNA
y[1103] = 0    # E3_2_2_3_mRNA : E3_2_2_3_mRNA
y[1104] = 0    # E3_2_2_9_mRNA : E3_2_2_9_mRNA
y[1105] = 0    # E3_5_1_2_mRNA : E3_5_1_2_mRNA
y[1106] = 0    # E3_5_1_28_mRNA : E3_5_1_28_mRNA
y[1107] = 0    # E3_5_1_4_mRNA : E3_5_1_4_mRNA
y[1108] = 0    # E3_5_1_88_mRNA : E3_5_1_88_mRNA
y[1109] = 0    # E3_5_2_3_mRNA : E3_5_2_3_mRNA
y[1110] = 0    # E3_5_2_5_mRNA : E3_5_2_5_mRNA
y[1111] = 0    # E3_5_2_9_mRNA : E3_5_2_9_mRNA
y[1112] = 0    # E3_5_3_6_mRNA : E3_5_3_6_mRNA
y[1113] = 0    # E3_5_4_10_mRNA : E3_5_4_10_mRNA
y[1114] = 0    # E3_5_4_16_mRNA : E3_5_4_16_mRNA
y[1115] = 0    # E3_5_4_19_mRNA : E3_5_4_19_mRNA
y[1116] = 0    # E3_5_4_25_mRNA : E3_5_4_25_mRNA
y[1117] = 0    # E3_5_4_26_mRNA : E3_5_4_26_mRNA
y[1118] = 0    # E3_5_4_3_mRNA : E3_5_4_3_mRNA
y[1119] = 0    # E3_5_4_33_mRNA : E3_5_4_33_mRNA
y[1120] = 0    # E3_5_99_2_mRNA : E3_5_99_2_mRNA
y[1121] = 0    # E3_6_1_1_mRNA : E3_6_1_1_mRNA
y[1122] = 0    # E3_6_1_27_mRNA : E3_6_1_27_mRNA
y[1123] = 0    # E3_6_1_31_mRNA : E3_6_1_31_mRNA
y[1124] = 0    # E3_6_1_41_mRNA : E3_6_1_41_mRNA
y[1125] = 0    # E3_6_1_66_mRNA : E3_6_1_66_mRNA
y[1126] = 0    # E4_1_1_101_mRNA : E4_1_1_101_mRNA
y[1127] = 0    # E4_1_1_15_mRNA : E4_1_1_15_mRNA
y[1128] = 0    # E4_1_1_20_mRNA : E4_1_1_20_mRNA
y[1129] = 0    # E4_1_1_21_mRNA : E4_1_1_21_mRNA
y[1130] = 0    # E4_1_1_23_mRNA : E4_1_1_23_mRNA
y[1131] = 0    # E4_1_1_33_mRNA : E4_1_1_33_mRNA
y[1132] = 0    # E4_1_1_36_mRNA : E4_1_1_36_mRNA
y[1133] = 0    # E4_1_1_5_mRNA : E4_1_1_5_mRNA
y[1134] = 0    # E4_1_2_25_mRNA : E4_1_2_25_mRNA
y[1135] = 0    # E4_1_2_4_mRNA : E4_1_2_4_mRNA
y[1136] = 0    # E4_1_3_36_mRNA : E4_1_3_36_mRNA
y[1137] = 0    # E4_1_99_22_mRNA : E4_1_99_22_mRNA
y[1138] = 0    # E4_2_1_11_mRNA : E4_2_1_11_mRNA
y[1139] = 0    # E4_2_1_113_mRNA : E4_2_1_113_mRNA
y[1140] = 0    # E4_2_1_19_mRNA : E4_2_1_19_mRNA
y[1141] = 0    # E4_2_1_2_mRNA : E4_2_1_2_mRNA
y[1142] = 0    # E4_2_1_33_mRNA : E4_2_1_33_mRNA
y[1143] = 0    # E4_2_1_46_mRNA : E4_2_1_46_mRNA
y[1144] = 0    # E4_2_1_59_mRNA : E4_2_1_59_mRNA
y[1145] = 0    # E4_2_1_9_mRNA : E4_2_1_9_mRNA
y[1146] = 0    # E4_2_3_1_mRNA : E4_2_3_1_mRNA
y[1147] = 0    # E4_2_3_5_mRNA : E4_2_3_5_mRNA
y[1148] = 0    # E4_3_1_17_mRNA : E4_3_1_17_mRNA
y[1149] = 0    # E4_3_1_19_mRNA : E4_3_1_19_mRNA
y[1150] = 0    # E4_3_1_8_mRNA : E4_3_1_8_mRNA
y[1151] = 0    # E4_3_2_1_mRNA : E4_3_2_1_mRNA
y[1152] = 0    # E4_3_2_10_mRNA : E4_3_2_10_mRNA
y[1153] = 0    # E4_3_2_2_mRNA : E4_3_2_2_mRNA
y[1154] = 0    # E4_3_3_7_mRNA : E4_3_3_7_mRNA
y[1155] = 0    # E4_4_1_21_mRNA : E4_4_1_21_mRNA
y[1156] = 0    # E4_6_1_17_mRNA : E4_6_1_17_mRNA
y[1157] = 0    # E4_99_1_12_mRNA : E4_99_1_12_mRNA
y[1158] = 0    # E5_1_1_1_mRNA : E5_1_1_1_mRNA
y[1159] = 0    # E5_1_1_3_mRNA : E5_1_1_3_mRNA
y[1160] = 0    # E5_1_1_7_mRNA : E5_1_1_7_mRNA
y[1161] = 0    # E5_1_3_1_mRNA : E5_1_3_1_mRNA
y[1162] = 0    # E5_1_3_13_mRNA : E5_1_3_13_mRNA
y[1163] = 0    # E5_1_3_14_mRNA : E5_1_3_14_mRNA
y[1164] = 0    # E5_1_3_2_mRNA : E5_1_3_2_mRNA
y[1165] = 0    # E5_1_99_6_mRNA : E5_1_99_6_mRNA
y[1166] = 0    # E5_2_1_8_mRNA : E5_2_1_8_mRNA
y[1167] = 0    # E5_3_1_1_mRNA : E5_3_1_1_mRNA
y[1168] = 0    # E5_3_1_16_mRNA : E5_3_1_16_mRNA
y[1169] = 0    # E5_3_1_4_mRNA : E5_3_1_4_mRNA
y[1170] = 0    # E5_3_1_6_mRNA : E5_3_1_6_mRNA
y[1171] = 0    # E5_3_1_9_mRNA : E5_3_1_9_mRNA
y[1172] = 0    # E5_3_2_6_mRNA : E5_3_2_6_mRNA
y[1173] = 0    # E5_3_3_2_mRNA : E5_3_3_2_mRNA
y[1174] = 0    # E5_4_2_10_mRNA : E5_4_2_10_mRNA
y[1175] = 0    # E5_4_2_11_mRNA : E5_4_2_11_mRNA
y[1176] = 0    # E5_4_2_6_mRNA : E5_4_2_6_mRNA
y[1177] = 0    # E5_4_99_12_mRNA : E5_4_99_12_mRNA
y[1178] = 0    # E5_4_99_18_mRNA : E5_4_99_18_mRNA
y[1179] = 0    # E5_4_99_5_mRNA : E5_4_99_5_mRNA
y[1180] = 0    # E5_4_99_62_mRNA : E5_4_99_62_mRNA
y[1181] = 0    # E5_4_99_9_mRNA : E5_4_99_9_mRNA
y[1182] = 0    # E6_1_1_1_mRNA : E6_1_1_1_mRNA
y[1183] = 0    # E6_1_1_10_mRNA : E6_1_1_10_mRNA
y[1184] = 0    # E6_1_1_11_mRNA : E6_1_1_11_mRNA
y[1185] = 0    # E6_1_1_12_mRNA : E6_1_1_12_mRNA
y[1186] = 0    # E6_1_1_13_mRNA : E6_1_1_13_mRNA
y[1187] = 0    # E6_1_1_14_mRNA : E6_1_1_14_mRNA
y[1188] = 0    # E6_1_1_15_mRNA : E6_1_1_15_mRNA
y[1189] = 0    # E6_1_1_16_mRNA : E6_1_1_16_mRNA
y[1190] = 0    # E6_1_1_17_mRNA : E6_1_1_17_mRNA
y[1191] = 0    # E6_1_1_19_mRNA : E6_1_1_19_mRNA
y[1192] = 0    # E6_1_1_2_mRNA : E6_1_1_2_mRNA
y[1193] = 0    # E6_1_1_20_mRNA : E6_1_1_20_mRNA
y[1194] = 0    # E6_1_1_21_mRNA : E6_1_1_21_mRNA
y[1195] = 0    # E6_1_1_22_mRNA : E6_1_1_22_mRNA
y[1196] = 0    # E6_1_1_3_mRNA : E6_1_1_3_mRNA
y[1197] = 0    # E6_1_1_4_mRNA : E6_1_1_4_mRNA
y[1198] = 0    # E6_1_1_5_mRNA : E6_1_1_5_mRNA
y[1199] = 0    # E6_1_1_6_mRNA : E6_1_1_6_mRNA
y[1200] = 0    # E6_1_1_7_mRNA : E6_1_1_7_mRNA
y[1201] = 0    # E6_1_1_9_mRNA : E6_1_1_9_mRNA
y[1202] = 0    # E6_2_1_26_mRNA : E6_2_1_26_mRNA
y[1203] = 0    # E6_3_1_1_mRNA : E6_3_1_1_mRNA
y[1204] = 0    # E6_3_1_2_mRNA : E6_3_1_2_mRNA
y[1205] = 0    # E6_3_1_20_mRNA : E6_3_1_20_mRNA
y[1206] = 0    # E6_3_1_5_mRNA : E6_3_1_5_mRNA
y[1207] = 0    # E6_3_2_10_mRNA : E6_3_2_10_mRNA
y[1208] = 0    # E6_3_2_13_mRNA : E6_3_2_13_mRNA
y[1209] = 0    # E6_3_2_5_mRNA : E6_3_2_5_mRNA
y[1210] = 0    # E6_3_2_6_mRNA : E6_3_2_6_mRNA
y[1211] = 0    # E6_3_2_8_mRNA : E6_3_2_8_mRNA
y[1212] = 0    # E6_3_2_9_mRNA : E6_3_2_9_mRNA
y[1213] = 0    # E6_3_3_1_mRNA : E6_3_3_1_mRNA
y[1214] = 0    # E6_3_3_2_mRNA : E6_3_3_2_mRNA
y[1215] = 0    # E6_3_4_13_mRNA : E6_3_4_13_mRNA
y[1216] = 0    # E6_3_4_14_mRNA : E6_3_4_14_mRNA
y[1217] = 0    # E6_3_4_15_mRNA : E6_3_4_15_mRNA
y[1218] = 0    # E6_3_4_18_mRNA : E6_3_4_18_mRNA
y[1219] = 0    # E6_3_4_19_mRNA : E6_3_4_19_mRNA
y[1220] = 0    # E6_3_4_2_mRNA : E6_3_4_2_mRNA
y[1221] = 0    # E6_3_4_21_mRNA : E6_3_4_21_mRNA
y[1222] = 0    # E6_3_4_3_mRNA : E6_3_4_3_mRNA
y[1223] = 0    # E6_3_4_4_mRNA : E6_3_4_4_mRNA
y[1224] = 0    # E6_3_4_5_mRNA : E6_3_4_5_mRNA
y[1225] = 0    # E6_3_5_2_mRNA : E6_3_5_2_mRNA
y[1226] = 0    # E6_3_5_3_mRNA : E6_3_5_3_mRNA
y[1227] = 0    # E6_3_5_4_mRNA : E6_3_5_4_mRNA
y[1228] = 0    # E6_3_5_5_mRNA : E6_3_5_5_mRNA
y[1229] = 0    # E6_4_1_1_mRNA : E6_4_1_1_mRNA
y[1230] = 0    # E6_4_1_2_mRNA : E6_4_1_2_mRNA
y[1231] = 0    # E6_5_1_2_mRNA : E6_5_1_2_mRNA
y[1232] = 0    # E7_1_2_2_mRNA : E7_1_2_2_mRNA
y[1233] = 0    # E1_1_1_1 : E1_1_1_1
y[1234] = 0    # E1_1_1_133 : E1_1_1_133
y[1235] = 0    # E1_1_1_169 : E1_1_1_169
y[1236] = 0    # E1_1_1_193 : E1_1_1_193
y[1237] = 0    # E1_1_1_23 : E1_1_1_23
y[1238] = 0    # E1_1_1_27 : E1_1_1_27
y[1239] = 0    # E1_1_1_28 : E1_1_1_28
y[1240] = 0    # E1_1_1_3 : E1_1_1_3
y[1241] = 0    # E1_1_1_304 : E1_1_1_304
y[1242] = 0    # E1_1_1_35 : E1_1_1_35
y[1243] = 0    # E1_1_1_44 : E1_1_1_44
y[1244] = 0    # E1_1_1_47 : E1_1_1_47
y[1245] = 0    # E1_1_1_49 : E1_1_1_49
y[1246] = 0    # E1_1_1_6 : E1_1_1_6
y[1247] = 0    # E1_1_1_85 : E1_1_1_85
y[1248] = 0    # E1_1_1_86 : E1_1_1_86
y[1249] = 0    # E1_1_1_88 : E1_1_1_88
y[1250] = 0    # E1_1_1_94 : E1_1_1_94
y[1251] = 0    # E1_11_1_26 : E1_11_1_26
y[1252] = 0    # E1_17_1_8 : E1_17_1_8
y[1253] = 0    # E1_17_4_1 : E1_17_4_1
y[1254] = 0    # E1_17_4_2 : E1_17_4_2
y[1255] = 0    # E1_2_1_10 : E1_2_1_10
y[1256] = 0    # E1_2_1_11 : E1_2_1_11
y[1257] = 0    # E1_2_1_38 : E1_2_1_38
y[1258] = 0    # E1_2_1_41 : E1_2_1_41
y[1259] = 0    # E1_20_4_4 : E1_20_4_4
y[1260] = 0    # E1_3_1_12 : E1_3_1_12
y[1261] = 0    # E1_3_1_14 : E1_3_1_14
y[1262] = 0    # E1_3_1_9 : E1_3_1_9
y[1263] = 0    # E1_3_1_98 : E1_3_1_98
y[1264] = 0    # E1_4_1_13 : E1_4_1_13
y[1265] = 0    # E1_5_1_2 : E1_5_1_2
y[1266] = 0    # E1_5_1_3 : E1_5_1_3
y[1267] = 0    # E1_6_5_2 : E1_6_5_2
y[1268] = 0    # E1_7_1_7 : E1_7_1_7
y[1269] = 0    # E1_8_1_4 : E1_8_1_4
y[1270] = 0    # E1_8_1_9 : E1_8_1_9
y[1271] = 0    # E1_8_4_11 : E1_8_4_11
y[1272] = 0    # E1_8_4_12 : E1_8_4_12
y[1273] = 0    # E2_1_1_10 : E2_1_1_10
y[1274] = 0    # E2_1_1_107 : E2_1_1_107
y[1275] = 0    # E2_1_1_14 : E2_1_1_14
y[1276] = 0    # E2_1_1_163 : E2_1_1_163
y[1277] = 0    # E2_1_1_171 : E2_1_1_171
y[1278] = 0    # E2_1_1_182 : E2_1_1_182
y[1279] = 0    # E2_1_1_201 : E2_1_1_201
y[1280] = 0    # E2_1_1_228 : E2_1_1_228
y[1281] = 0    # E2_1_1_297 : E2_1_1_297
y[1282] = 0    # E2_1_1_33 : E2_1_1_33
y[1283] = 0    # E2_1_1_45 : E2_1_1_45
y[1284] = 0    # E2_1_1_63 : E2_1_1_63
y[1285] = 0    # E2_1_2_1 : E2_1_2_1
y[1286] = 0    # E2_1_2_2 : E2_1_2_2
y[1287] = 0    # E2_1_2_3 : E2_1_2_3
y[1288] = 0    # E2_1_2_9 : E2_1_2_9
y[1289] = 0    # E2_1_3_15 : E2_1_3_15
y[1290] = 0    # E2_1_3_2 : E2_1_3_2
y[1291] = 0    # E2_1_3_3 : E2_1_3_3
y[1292] = 0    # E2_2_1_1 : E2_2_1_1
y[1293] = 0    # E2_2_1_6 : E2_2_1_6
y[1294] = 0    # E2_2_1_7 : E2_2_1_7
y[1295] = 0    # E2_3_1_1 : E2_3_1_1
y[1296] = 0    # E2_3_1_15 : E2_3_1_15
y[1297] = 0    # E2_3_1_157 : E2_3_1_157
y[1298] = 0    # E2_3_1_179 : E2_3_1_179
y[1299] = 0    # E2_3_1_180 : E2_3_1_180
y[1300] = 0    # E2_3_1_234 : E2_3_1_234
y[1301] = 0    # E2_3_1_266 : E2_3_1_266
y[1302] = 0    # E2_3_1_274 : E2_3_1_274
y[1303] = 0    # E2_3_1_286 : E2_3_1_286
y[1304] = 0    # E2_3_1_35 : E2_3_1_35
y[1305] = 0    # E2_3_1_39 : E2_3_1_39
y[1306] = 0    # E2_3_1_46 : E2_3_1_46
y[1307] = 0    # E2_3_1_8 : E2_3_1_8
y[1308] = 0    # E2_3_1_89 : E2_3_1_89
y[1309] = 0    # E2_3_1_9 : E2_3_1_9
y[1310] = 0    # E2_3_3_10 : E2_3_3_10
y[1311] = 0    # E2_4_1_227 : E2_4_1_227
y[1312] = 0    # E2_4_2_10 : E2_4_2_10
y[1313] = 0    # E2_4_2_14 : E2_4_2_14
y[1314] = 0    # E2_4_2_17 : E2_4_2_17
y[1315] = 0    # E2_4_2_22 : E2_4_2_22
y[1316] = 0    # E2_4_2_7 : E2_4_2_7
y[1317] = 0    # E2_4_2_8 : E2_4_2_8
y[1318] = 0    # E2_4_2_9 : E2_4_2_9
y[1319] = 0    # E2_5_1_15 : E2_5_1_15
y[1320] = 0    # E2_5_1_19 : E2_5_1_19
y[1321] = 0    # E2_5_1_3 : E2_5_1_3
y[1322] = 0    # E2_5_1_47 : E2_5_1_47
y[1323] = 0    # E2_5_1_6 : E2_5_1_6
y[1324] = 0    # E2_5_1_75 : E2_5_1_75
y[1325] = 0    # E2_5_1_78 : E2_5_1_78
y[1326] = 0    # E2_5_1_9 : E2_5_1_9
y[1327] = 0    # E2_6_1_11 : E2_6_1_11
y[1328] = 0    # E2_6_1_16 : E2_6_1_16
y[1329] = 0    # E2_6_1_42 : E2_6_1_42
y[1330] = 0    # E2_6_1_52 : E2_6_1_52
y[1331] = 0    # E2_6_1_9 : E2_6_1_9
y[1332] = 0    # E2_7_1_107 : E2_7_1_107
y[1333] = 0    # E2_7_1_12 : E2_7_1_12
y[1334] = 0    # E2_7_1_148 : E2_7_1_148
y[1335] = 0    # E2_7_1_15 : E2_7_1_15
y[1336] = 0    # E2_7_1_2 : E2_7_1_2
y[1337] = 0    # E2_7_1_21 : E2_7_1_21
y[1338] = 0    # E2_7_1_211 : E2_7_1_211
y[1339] = 0    # E2_7_1_23 : E2_7_1_23
y[1340] = 0    # E2_7_1_24 : E2_7_1_24
y[1341] = 0    # E2_7_1_26 : E2_7_1_26
y[1342] = 0    # E2_7_1_30 : E2_7_1_30
y[1343] = 0    # E2_7_1_31 : E2_7_1_31
y[1344] = 0    # E2_7_1_33 : E2_7_1_33
y[1345] = 0    # E2_7_1_36 : E2_7_1_36
y[1346] = 0    # E2_7_1_39 : E2_7_1_39
y[1347] = 0    # E2_7_1_4 : E2_7_1_4
y[1348] = 0    # E2_7_1_40 : E2_7_1_40
y[1349] = 0    # E2_7_1_48 : E2_7_1_48
y[1350] = 0    # E2_7_1_49 : E2_7_1_49
y[1351] = 0    # E2_7_1_50 : E2_7_1_50
y[1352] = 0    # E2_7_1_6 : E2_7_1_6
y[1353] = 0    # E2_7_1_71 : E2_7_1_71
y[1354] = 0    # E2_7_10_2 : E2_7_10_2
y[1355] = 0    # E2_7_2_1 : E2_7_2_1
y[1356] = 0    # E2_7_2_11 : E2_7_2_11
y[1357] = 0    # E2_7_2_2 : E2_7_2_2
y[1358] = 0    # E2_7_2_3 : E2_7_2_3
y[1359] = 0    # E2_7_2_4 : E2_7_2_4
y[1360] = 0    # E2_7_2_8 : E2_7_2_8
y[1361] = 0    # E2_7_3_9 : E2_7_3_9
y[1362] = 0    # E2_7_4_1 : E2_7_4_1
y[1363] = 0    # E2_7_4_2 : E2_7_4_2
y[1364] = 0    # E2_7_4_22 : E2_7_4_22
y[1365] = 0    # E2_7_4_25 : E2_7_4_25
y[1366] = 0    # E2_7_4_3 : E2_7_4_3
y[1367] = 0    # E2_7_4_6 : E2_7_4_6
y[1368] = 0    # E2_7_4_7 : E2_7_4_7
y[1369] = 0    # E2_7_4_8 : E2_7_4_8
y[1370] = 0    # E2_7_4_9 : E2_7_4_9
y[1371] = 0    # E2_7_6_1 : E2_7_6_1
y[1372] = 0    # E2_7_6_2 : E2_7_6_2
y[1373] = 0    # E2_7_6_3 : E2_7_6_3
y[1374] = 0    # E2_7_6_5 : E2_7_6_5
y[1375] = 0    # E2_7_7_12 : E2_7_7_12
y[1376] = 0    # E2_7_7_18 : E2_7_7_18
y[1377] = 0    # E2_7_7_2 : E2_7_7_2
y[1378] = 0    # E2_7_7_23 : E2_7_7_23
y[1379] = 0    # E2_7_7_24 : E2_7_7_24
y[1380] = 0    # E2_7_7_3 : E2_7_7_3
y[1381] = 0    # E2_7_7_41 : E2_7_7_41
y[1382] = 0    # E2_7_7_6 : E2_7_7_6
y[1383] = 0    # E2_7_7_7 : E2_7_7_7
y[1384] = 0    # E2_7_7_77 : E2_7_7_77
y[1385] = 0    # E2_7_7_85 : E2_7_7_85
y[1386] = 0    # E2_7_7_87 : E2_7_7_87
y[1387] = 0    # E2_7_7_9 : E2_7_7_9
y[1388] = 0    # E2_7_8_13 : E2_7_8_13
y[1389] = 0    # E2_7_8_5 : E2_7_8_5
y[1390] = 0    # E2_7_8_7 : E2_7_8_7
y[1391] = 0    # E2_8_1_13 : E2_8_1_13
y[1392] = 0    # E2_8_1_4 : E2_8_1_4
y[1393] = 0    # E2_8_1_7 : E2_8_1_7
y[1394] = 0    # E3_1_1_103 : E3_1_1_103
y[1395] = 0    # E3_1_1_106 : E3_1_1_106
y[1396] = 0    # E3_1_1_29 : E3_1_1_29
y[1397] = 0    # E3_1_3_15 : E3_1_3_15
y[1398] = 0    # E3_1_3_27 : E3_1_3_27
y[1399] = 0    # E3_1_3_48 : E3_1_3_48
y[1400] = 0    # E3_1_3_7 : E3_1_3_7
y[1401] = 0    # E3_1_4_4 : E3_1_4_4
y[1402] = 0    # E3_2_1_22 : E3_2_1_22
y[1403] = 0    # E3_2_1_26 : E3_2_1_26
y[1404] = 0    # E3_2_1_93 : E3_2_1_93
y[1405] = 0    # E3_2_2_3 : E3_2_2_3
y[1406] = 0    # E3_2_2_9 : E3_2_2_9
y[1407] = 0    # E3_5_1_2 : E3_5_1_2
y[1408] = 0    # E3_5_1_28 : E3_5_1_28
y[1409] = 0    # E3_5_1_4 : E3_5_1_4
y[1410] = 0    # E3_5_1_88 : E3_5_1_88
y[1411] = 0    # E3_5_2_3 : E3_5_2_3
y[1412] = 0    # E3_5_2_5 : E3_5_2_5
y[1413] = 0    # E3_5_2_9 : E3_5_2_9
y[1414] = 0    # E3_5_3_6 : E3_5_3_6
y[1415] = 0    # E3_5_4_10 : E3_5_4_10
y[1416] = 0    # E3_5_4_16 : E3_5_4_16
y[1417] = 0    # E3_5_4_19 : E3_5_4_19
y[1418] = 0    # E3_5_4_25 : E3_5_4_25
y[1419] = 0    # E3_5_4_26 : E3_5_4_26
y[1420] = 0    # E3_5_4_3 : E3_5_4_3
y[1421] = 0    # E3_5_4_33 : E3_5_4_33
y[1422] = 0    # E3_5_99_2 : E3_5_99_2
y[1423] = 0    # E3_6_1_1 : E3_6_1_1
y[1424] = 0    # E3_6_1_27 : E3_6_1_27
y[1425] = 0    # E3_6_1_31 : E3_6_1_31
y[1426] = 0    # E3_6_1_41 : E3_6_1_41
y[1427] = 0    # E3_6_1_66 : E3_6_1_66
y[1428] = 0    # E4_1_1_101 : E4_1_1_101
y[1429] = 0    # E4_1_1_15 : E4_1_1_15
y[1430] = 0    # E4_1_1_20 : E4_1_1_20
y[1431] = 0    # E4_1_1_21 : E4_1_1_21
y[1432] = 0    # E4_1_1_23 : E4_1_1_23
y[1433] = 0    # E4_1_1_33 : E4_1_1_33
y[1434] = 0    # E4_1_1_36 : E4_1_1_36
y[1435] = 0    # E4_1_1_5 : E4_1_1_5
y[1436] = 0    # E4_1_2_25 : E4_1_2_25
y[1437] = 0    # E4_1_2_4 : E4_1_2_4
y[1438] = 0    # E4_1_3_36 : E4_1_3_36
y[1439] = 0    # E4_1_99_22 : E4_1_99_22
y[1440] = 0    # E4_2_1_11 : E4_2_1_11
y[1441] = 0    # E4_2_1_113 : E4_2_1_113
y[1442] = 0    # E4_2_1_19 : E4_2_1_19
y[1443] = 0    # E4_2_1_2 : E4_2_1_2
y[1444] = 0    # E4_2_1_33 : E4_2_1_33
y[1445] = 0    # E4_2_1_46 : E4_2_1_46
y[1446] = 0    # E4_2_1_59 : E4_2_1_59
y[1447] = 0    # E4_2_1_9 : E4_2_1_9
y[1448] = 0    # E4_2_3_1 : E4_2_3_1
y[1449] = 0    # E4_2_3_5 : E4_2_3_5
y[1450] = 0    # E4_3_1_17 : E4_3_1_17
y[1451] = 0    # E4_3_1_19 : E4_3_1_19
y[1452] = 0    # E4_3_1_8 : E4_3_1_8
y[1453] = 0    # E4_3_2_1 : E4_3_2_1
y[1454] = 0    # E4_3_2_10 : E4_3_2_10
y[1455] = 0    # E4_3_2_2 : E4_3_2_2
y[1456] = 0    # E4_3_3_7 : E4_3_3_7
y[1457] = 0    # E4_4_1_21 : E4_4_1_21
y[1458] = 0    # E4_6_1_17 : E4_6_1_17
y[1459] = 0    # E4_99_1_12 : E4_99_1_12
y[1460] = 0    # E5_1_1_1 : E5_1_1_1
y[1461] = 0    # E5_1_1_3 : E5_1_1_3
y[1462] = 0    # E5_1_1_7 : E5_1_1_7
y[1463] = 0    # E5_1_3_1 : E5_1_3_1
y[1464] = 0    # E5_1_3_13 : E5_1_3_13
y[1465] = 0    # E5_1_3_14 : E5_1_3_14
y[1466] = 0    # E5_1_3_2 : E5_1_3_2
y[1467] = 0    # E5_1_99_6 : E5_1_99_6
y[1468] = 0    # E5_2_1_8 : E5_2_1_8
y[1469] = 0    # E5_3_1_1 : E5_3_1_1
y[1470] = 0    # E5_3_1_16 : E5_3_1_16
y[1471] = 0    # E5_3_1_4 : E5_3_1_4
y[1472] = 0    # E5_3_1_6 : E5_3_1_6
y[1473] = 0    # E5_3_1_9 : E5_3_1_9
y[1474] = 0    # E5_3_2_6 : E5_3_2_6
y[1475] = 0    # E5_3_3_2 : E5_3_3_2
y[1476] = 0    # E5_4_2_10 : E5_4_2_10
y[1477] = 0    # E5_4_2_11 : E5_4_2_11
y[1478] = 0    # E5_4_2_6 : E5_4_2_6
y[1479] = 0    # E5_4_99_12 : E5_4_99_12
y[1480] = 0    # E5_4_99_18 : E5_4_99_18
y[1481] = 0    # E5_4_99_5 : E5_4_99_5
y[1482] = 0    # E5_4_99_62 : E5_4_99_62
y[1483] = 0    # E5_4_99_9 : E5_4_99_9
y[1484] = 0    # E6_1_1_1 : E6_1_1_1
y[1485] = 0    # E6_1_1_10 : E6_1_1_10
y[1486] = 0    # E6_1_1_11 : E6_1_1_11
y[1487] = 0    # E6_1_1_12 : E6_1_1_12
y[1488] = 0    # E6_1_1_13 : E6_1_1_13
y[1489] = 0    # E6_1_1_14 : E6_1_1_14
y[1490] = 0    # E6_1_1_15 : E6_1_1_15
y[1491] = 0    # E6_1_1_16 : E6_1_1_16
y[1492] = 0    # E6_1_1_17 : E6_1_1_17
y[1493] = 0    # E6_1_1_19 : E6_1_1_19
y[1494] = 0    # E6_1_1_2 : E6_1_1_2
y[1495] = 0    # E6_1_1_20 : E6_1_1_20
y[1496] = 0    # E6_1_1_21 : E6_1_1_21
y[1497] = 0    # E6_1_1_22 : E6_1_1_22
y[1498] = 0    # E6_1_1_3 : E6_1_1_3
y[1499] = 0    # E6_1_1_4 : E6_1_1_4
y[1500] = 0    # E6_1_1_5 : E6_1_1_5
y[1501] = 0    # E6_1_1_6 : E6_1_1_6
y[1502] = 0    # E6_1_1_7 : E6_1_1_7
y[1503] = 0    # E6_1_1_9 : E6_1_1_9
y[1504] = 0    # E6_2_1_26 : E6_2_1_26
y[1505] = 0    # E6_3_1_1 : E6_3_1_1
y[1506] = 0    # E6_3_1_2 : E6_3_1_2
y[1507] = 0    # E6_3_1_20 : E6_3_1_20
y[1508] = 0    # E6_3_1_5 : E6_3_1_5
y[1509] = 0    # E6_3_2_10 : E6_3_2_10
y[1510] = 0    # E6_3_2_13 : E6_3_2_13
y[1511] = 0    # E6_3_2_5 : E6_3_2_5
y[1512] = 0    # E6_3_2_6 : E6_3_2_6
y[1513] = 0    # E6_3_2_8 : E6_3_2_8
y[1514] = 0    # E6_3_2_9 : E6_3_2_9
y[1515] = 0    # E6_3_3_1 : E6_3_3_1
y[1516] = 0    # E6_3_3_2 : E6_3_3_2
y[1517] = 0    # E6_3_4_13 : E6_3_4_13
y[1518] = 0    # E6_3_4_14 : E6_3_4_14
y[1519] = 0    # E6_3_4_15 : E6_3_4_15
y[1520] = 0    # E6_3_4_18 : E6_3_4_18
y[1521] = 0    # E6_3_4_19 : E6_3_4_19
y[1522] = 0    # E6_3_4_2 : E6_3_4_2
y[1523] = 0    # E6_3_4_21 : E6_3_4_21
y[1524] = 0    # E6_3_4_3 : E6_3_4_3
y[1525] = 0    # E6_3_4_4 : E6_3_4_4
y[1526] = 0    # E6_3_4_5 : E6_3_4_5
y[1527] = 0    # E6_3_5_2 : E6_3_5_2
y[1528] = 0    # E6_3_5_3 : E6_3_5_3
y[1529] = 0    # E6_3_5_4 : E6_3_5_4
y[1530] = 0    # E6_3_5_5 : E6_3_5_5
y[1531] = 0    # E6_4_1_1 : E6_4_1_1
y[1532] = 0    # E6_4_1_2 : E6_4_1_2
y[1533] = 0    # E6_5_1_2 : E6_5_1_2
y[1534] = 0    # E7_1_2_2 : E7_1_2_2
y[1535] = 0    # C01335 : Inserted by Backup Object Loader
y[1536] = 0    # C15602 : Inserted by Backup Object Loader
y[1537] = 0    # C18902 : Inserted by Backup Object Loader
y[1538] = 0    # C05703 : Inserted by Backup Object Loader
y[1539] = 0    # C05691 : Inserted by Backup Object Loader
y[1540] = 0    # C00787 : Inserted by Backup Object Loader
y[1541] = 0    # C02839 : Inserted by Backup Object Loader
y[1542] = 0    # C01647 : Inserted by Backup Object Loader
y[1543] = 0    # C05336 : Inserted by Backup Object Loader
y[1544] = 0    # C01650 : Inserted by Backup Object Loader
y[1545] = 0    # C02553 : Inserted by Backup Object Loader
y[1546] = 0    # C16636 : Inserted by Backup Object Loader
y[1547] = 0    # C06481 : Inserted by Backup Object Loader
y[1548] = 0    # C00653 : Inserted by Backup Object Loader
y[1549] = 0    # C04260 : Inserted by Backup Object Loader
y[1550] = 0    # G13185 : Inserted by Backup Object Loader
y[1551] = 0    # G13186 : Inserted by Backup Object Loader
y[1552] = 0    # G13167 : Inserted by Backup Object Loader
y[1553] = 0    # G13180 : Inserted by Backup Object Loader
y[1554] = 0    # G13170 : Inserted by Backup Object Loader
y[1555] = 0    # G13171 : Inserted by Backup Object Loader
y[1556] = 0    # G13174 : Inserted by Backup Object Loader
y[1557] = 0    # G13175 : Inserted by Backup Object Loader
y[1558] = 0    # G13176 : Inserted by Backup Object Loader
y[1559] = 0    # G13177 : Inserted by Backup Object Loader
y[1560] = 0    # G13178 : Inserted by Backup Object Loader
y[1561] = 0    # G13179 : Inserted by Backup Object Loader
y[1562] = 0    # G13192 : Inserted by Backup Object Loader
y[1563] = 0    # G13193 : Inserted by Backup Object Loader
y[1564] = 0    # C01642 : Inserted by Backup Object Loader
y[1565] = 0    # C02412 : Inserted by Backup Object Loader
y[1566] = 0    # C01649 : Inserted by Backup Object Loader
y[1567] = 0    # C02702 : Inserted by Backup Object Loader
y[1568] = 0    # C01639 : Inserted by Backup Object Loader
y[1569] = 0    # C03125 : Inserted by Backup Object Loader
y[1570] = 0    # C01636 : Inserted by Backup Object Loader
y[1571] = 0    # C02163 : Inserted by Backup Object Loader
y[1572] = 0    # C01652 : Inserted by Backup Object Loader
y[1573] = 0    # C03512 : Inserted by Backup Object Loader
y[1574] = 0    # C01648 : Inserted by Backup Object Loader
y[1575] = 0    # C03511 : Inserted by Backup Object Loader
y[1576] = 0    # C01643 : Inserted by Backup Object Loader
y[1577] = 0    # C02988 : Inserted by Backup Object Loader
y[1578] = 0    # C01645 : Inserted by Backup Object Loader
y[1579] = 0    # C03402 : Inserted by Backup Object Loader
y[1580] = 0    # C01651 : Inserted by Backup Object Loader
y[1581] = 0    # C02992 : Inserted by Backup Object Loader
y[1582] = 0    # C02047 : Inserted by Backup Object Loader
y[1583] = 0    # C01644 : Inserted by Backup Object Loader
y[1584] = 0    # C03127 : Inserted by Backup Object Loader
y[1585] = 0    # C01646 : Inserted by Backup Object Loader
y[1586] = 0    # C01931 : Inserted by Backup Object Loader
y[1587] = 0    # C01635 : Inserted by Backup Object Loader
y[1588] = 0    # C00886 : Inserted by Backup Object Loader
y[1589] = 0    # C01653 : Inserted by Backup Object Loader
y[1590] = 0    # C02554 : Inserted by Backup Object Loader
y[1591] = 0    # C22157 : Inserted by Backup Object Loader
y[1592] = 0    # C22158 : Inserted by Backup Object Loader
y[1593] = 0    # C00993 : Inserted by Backup Object Loader
y[1594] = 0    # C04735 : Inserted by Backup Object Loader
y[1595] = 0    # C04681 : Inserted by Backup Object Loader
y[1596] = 0    # C0020 : Inserted by Backup Object Loader
y[1597] = 0    # C02128 : Inserted by Backup Object Loader
 
labels = ['time', 'C00001', 'C00002', 'C00003', 'C00004', 'C00005', 'C00006', 'C00007', 'C00008', 'C00009', 'C00010', 'C00011', 'C00012', 'C00013', 'C00014', 'C00015', 'C00016', 'C00017', 'C00018', 'C00019', 'C00020', 'C00021', 'C00022', 'C00023', 'C00024', 'C00025', 'C00026', 'C00027', 'C00028', 'C00029', 'C00030', 'C00031', 'C00032', 'C00033', 'C00034', 'C00035', 'C00036', 'C00037', 'C00038', 'C00039', 'C00040', 'C00041', 'C00042', 'C00043', 'C00044', 'C00045', 'C00046', 'C00047', 'C00048', 'C00049', 'C00050', 'C00051', 'C00052', 'C00053', 'C00054', 'C00055', 'C00058', 'C00059', 'C00060', 'C00061', 'C00062', 'C00063', 'C00064', 'C00065', 'C00066', 'C00067', 'C00068', 'C00069', 'C00070', 'C00071', 'C00072', 'C00073', 'C00074', 'C00075', 'C00076', 'C00077', 'C00078', 'C00079', 'C00080', 'C00081', 'C00082', 'C00083', 'C00084', 'C00085', 'C00086', 'C00087', 'C00088', 'C00089', 'C00090', 'C00091', 'C00092', 'C00093', 'C00094', 'C00095', 'C00096', 'C00097', 'C00098', 'C00099', 'C00100', 'C00101', 'C00102', 'C00103', 'C00104', 'C00105', 'C00106', 'C00107', 'C00108', 'C00109', 'C00110', 'C00111', 'C00112', 'C00113', 'C00114', 'C00116', 'C00117', 'C00118', 'C00119', 'C00120', 'C00121', 'C00122', 'C00123', 'C00124', 'C00125', 'C00126', 'C00127', 'C00128', 'C00129', 'C00130', 'C00131', 'C00132', 'C00133', 'C00134', 'C00135', 'C00136', 'C00137', 'C00138', 'C00139', 'C00140', 'C00141', 'C00143', 'C00144', 'C00145', 'C00146', 'C00147', 'C00148', 'C00149', 'C00150', 'C00151', 'C00152', 'C00153', 'C00154', 'C00155', 'C00156', 'C00157', 'C00158', 'C00159', 'C00160', 'C00161', 'C00162', 'C00163', 'C00164', 'C00165', 'C00166', 'C00167', 'C00168', 'C00169', 'C00170', 'C00171', 'C00172', 'C00173', 'C00174', 'C00175', 'C00176', 'C00177', 'C00178', 'C00179', 'C00180', 'C00181', 'C00182', 'C00183', 'C00184', 'C00185', 'C00186', 'C00187', 'C00188', 'C00189', 'C00190', 'C00191', 'C00192', 'C00193', 'C00194', 'C00195', 'C00196', 'C00197', 'C00198', 'C00199', 'C00200', 'C00201', 'C00202', 'C00203', 'C00204', 'C00205', 'C00206', 'C00207', 'C00208', 'C00209', 'C00210', 'C00211', 'C00212', 'C00213', 'C00214', 'C00215', 'C00216', 'C00217', 'C00218', 'C00219', 'C00220', 'C00221', 'C00222', 'C00223', 'C00224', 'C00225', 'C00226', 'C00227', 'C00229', 'C00230', 'C00231', 'C00232', 'C00233', 'C00234', 'C00235', 'C00236', 'C00237', 'C00238', 'C00239', 'C00240', 'C00241', 'C00242', 'C00243', 'C00244', 'C00245', 'C00246', 'C00247', 'C00248', 'C00249', 'C00250', 'C00251', 'C00252', 'C00253', 'C00254', 'C00255', 'C00256', 'C00257', 'C00258', 'C00259', 'C00261', 'C00262', 'C00263', 'C00264', 'C00265', 'C00266', 'C00267', 'C00268', 'C00269', 'C00270', 'C00272', 'C00273', 'C00275', 'C00279', 'C00280', 'C00282', 'C00283', 'C00284', 'C00286', 'C00288', 'C00290', 'C00291', 'C00292', 'C00294', 'C00295', 'C00296', 'C00297', 'C00298', 'C00299', 'C00300', 'C00301', 'C00302', 'C00303', 'C00304', 'C00305', 'C00306', 'C00307', 'C00308', 'C00309', 'C00310', 'C00311', 'C00312', 'C00313', 'C00314', 'C00315', 'C00317', 'C00318', 'C00319', 'C00320', 'C00322', 'C00323', 'C00324', 'C00325', 'C00326', 'C00327', 'C00328', 'C00329', 'C00330', 'C00331', 'C00332', 'C00333', 'C00334', 'C00337', 'C00338', 'C00339', 'C00340', 'C00341', 'C00342', 'C00343', 'C00344', 'C00345', 'C00346', 'C00347', 'C00348', 'C00349', 'C00350', 'C00351', 'C00352', 'C00353', 'C00354', 'C00355', 'C00356', 'C00357', 'C00360', 'C00361', 'C00362', 'C00363', 'C00364', 'C00365', 'C00366', 'C00367', 'C00369', 'C00370', 'C00371', 'C00372', 'C00373', 'C00374', 'C00375', 'C00376', 'C00377', 'C00378', 'C00379', 'C00380', 'C00381', 'C00382', 'C00383', 'C00384', 'C00385', 'C00386', 'C00387', 'C00388', 'C00389', 'C00390', 'C00391', 'C00392', 'C00393', 'C00394', 'C00395', 'C00396', 'C00397', 'C00398', 'C00399', 'C00400', 'C00401', 'C00402', 'C00403', 'C00404', 'C00405', 'C00406', 'C00407', 'C00408', 'C00409', 'C00410', 'C00411', 'C00412', 'C00413', 'C00414', 'C00415', 'C00416', 'C00418', 'C00424', 'C00437', 'C00438', 'C00441', 'C00445', 'C00446', 'C00454', 'C00455', 'C00458', 'C00459', 'C00460', 'C00469', 'C00473', 'C00475', 'C00492', 'C00493', 'C00499', 'C00504', 'C00506', 'C00508', 'C00511', 'C00519', 'C00522', 'C00526', 'C00546', 'C00568', 'C00576', 'C00579', 'C00583', 'C00585', 'C00605', 'C00606', 'C00615', 'C00624', 'C00631', 'C00640', 'C00641', 'C00645', 'C00655', 'C00663', 'C00666', 'C00668', 'C00671', 'C00673', 'C00677', 'C00680', 'C00681', 'C00685', 'C00688', 'C00689', 'C00692', 'C00693', 'C00700', 'C00705', 'C00741', 'C00756', 'C00772', 'C00794', 'C00810', 'C00819', 'C00828', 'C00831', 'C00842', 'C00857', 'C00860', 'C00864', 'C00868', 'C00882', 'C00900', 'C00921', 'C00931', 'C00935', 'C00954', 'C00957', 'C00966', 'C00979', 'C00984', 'C01005', 'C01024', 'C01035', 'C01050', 'C01051', 'C01081', 'C01100', 'C01102', 'C01103', 'C01107', 'C01118', 'C01134', 'C01143', 'C01144', 'C01157', 'C01159', 'C01165', 'C01167', 'C01170', 'C01172', 'C01179', 'C01185', 'C01209', 'C01212', 'C01217', 'C01235', 'C01236', 'C01250', 'C01260', 'C01267', 'C01268', 'C01269', 'C01271', 'C01279', 'C01290', 'C01300', 'C01304', 'C01344', 'C01345', 'C01346', 'C01412', 'C01450', 'C01528', 'C01545', 'C01563', 'C01612', 'C01613', 'C01628', 'C01638', 'C01641', 'C01659', 'C01769', 'C01801', 'C01879', 'C01929', 'C01977', 'C01997', 'C02051', 'C02059', 'C02090', 'C02097', 'C02133', 'C02188', 'C02218', 'C02232', 'C02336', 'C02342', 'C02350', 'C02356', 'C02380', 'C02415', 'C02430', 'C02463', 'C02469', 'C02479', 'C02501', 'C02504', 'C02505', 'C02583', 'C02631', 'C02686', 'C02693', 'C02713', 'C02730', 'C02739', 'C02741', 'C02743', 'C02764', 'C02876', 'C02909', 'C02953', 'C02962', 'C02972', 'C02984', 'C02987', 'C02999', 'C03023', 'C03028', 'C03078', 'C03082', 'C03089', 'C03090', 'C03150', 'C03160', 'C03170', 'C03172', 'C03175', 'C03232', 'C03287', 'C03294', 'C03313', 'C03319', 'C03344', 'C03356', 'C03373', 'C03406', 'C03453', 'C03479', 'C03492', 'C03523', 'C03539', 'C03617', 'C03620', 'C03633', 'C03657', 'C03688', 'C03692', 'C03723', 'C03733', 'C03794', 'C03798', 'C03800', 'C03802', 'C03803', 'C03838', 'C03880', 'C03892', 'C03895', 'C03912', 'C03939', 'C03972', 'C04039', 'C04051', 'C04079', 'C04088', 'C04133', 'C04144', 'C04153', 'C04157', 'C04160', 'C04161', 'C04181', 'C04232', 'C04236', 'C04242', 'C04246', 'C04250', 'C04258', 'C04261', 'C04262', 'C04272', 'C04281', 'C04294', 'C04309', 'C04327', 'C04332', 'C04341', 'C04352', 'C04376', 'C04377', 'C04405', 'C04411', 'C04419', 'C04432', 'C04454', 'C04489', 'C04494', 'C04501', 'C04556', 'C04574', 'C04618', 'C04619', 'C04620', 'C04631', 'C04633', 'C04640', 'C04646', 'C04666', 'C04677', 'C04688', 'C04702', 'C04732', 'C04734', 'C04737', 'C04751', 'C04752', 'C04756', 'C04807', 'C04823', 'C04851', 'C04856', 'C04874', 'C04877', 'C04882', 'C04895', 'C04896', 'C04899', 'C04916', 'C05125', 'C05167', 'C05198', 'C05223', 'C05235', 'C05258', 'C05259', 'C05260', 'C05261', 'C05262', 'C05263', 'C05264', 'C05265', 'C05266', 'C05267', 'C05268', 'C05269', 'C05335', 'C05345', 'C05382', 'C05399', 'C05400', 'C05401', 'C05402', 'C05404', 'C05444', 'C05445', 'C05526', 'C05539', 'C05576', 'C05577', 'C05684', 'C05688', 'C05698', 'C05744', 'C05745', 'C05746', 'C05747', 'C05748', 'C05749', 'C05750', 'C05751', 'C05752', 'C05753', 'C05754', 'C05755', 'C05756', 'C05757', 'C05758', 'C05759', 'C05760', 'C05761', 'C05762', 'C05763', 'C05764', 'C05778', 'C05817', 'C05819', 'C05823', 'C05841', 'C05850', 'C05892', 'C05893', 'C05897', 'C05898', 'C05921', 'C05922', 'C05923', 'C05984', 'C06006', 'C06007', 'C06010', 'C06032', 'C06037', 'C06054', 'C06055', 'C06056', 'C06060', 'C06126', 'C06148', 'C06156', 'C06196', 'C06244', 'C06249', 'C06250', 'C06423', 'C06611', 'C06612', 'C06613', 'C06697', 'C06714', 'C06715', 'C06899', 'C07086', 'C07478', 'C07479', 'C07490', 'C07645', 'C07648', 'C07649', 'C08353', 'C08492', 'C09815', 'C11038', 'C11039', 'C11215', 'C11435', 'C11436', 'C11437', 'C11439', 'C11440', 'C11475', 'C11736', 'C11838', 'C11907', 'C12214', 'C12215', 'C13378', 'C14089', 'C14090', 'C14099', 'C14145', 'C14463', 'C15498', 'C15527', 'C15547', 'C15556', 'C15603', 'C15647', 'C15653', 'C15667', 'C15811', 'C15812', 'C15813', 'C15814', 'C15972', 'C15973', 'C15999', 'C16219', 'C16221', 'C16237', 'C16238', 'C16240', 'C16241', 'C16310', 'C16329', 'C16330', 'C16333', 'C16334', 'C16337', 'C16338', 'C16348', 'C16469', 'C16471', 'C16551', 'C16586', 'C16587', 'C16595', 'C16596', 'C16614', 'C16615', 'C16617', 'C16618', 'C16619', 'C16633', 'C16634', 'C16639', 'C16663', 'C16664', 'C16688', 'C16832', 'C17234', 'C17322', 'C17324', 'C17556', 'C18094', 'C18096', 'C18237', 'C18239', 'C19609', 'C19673', 'C19722', 'C19723', 'C19847', 'C19858', 'C19859', 'C19871', 'C20246', 'C20247', 'C20258', 'C20267', 'C20372', 'C20373', 'C20374', 'C20375', 'C20376', 'C20377', 'C20378', 'C20451', 'C20482', 'C20483', 'C20565', 'C20641', 'C20648', 'C20658', 'C20743', 'C20751', 'C20796', 'C20858', 'C20864', 'C20904', 'C20905', 'C20969', 'C21031', 'C21310', 'C21440', 'C21748', 'C21749', 'C21750', 'C21751', 'C21767', 'C21769', 'C21811', 'C21812', 'C22131', 'C22160', 'C22288', 'C22395', 'C22441', 'C22442', 'C22443', 'G00092', 'G00093', 'G00249', 'G00278', 'G00370', 'G00497', 'G00501', 'G01275', 'G09795', 'G10488', 'G10508', 'G10529', 'G10550', 'G10551', 'G10552', 'G10553', 'G10555', 'G10556', 'G10610', 'G10619', 'G11121', 'E1_1_1_1_mRNA', 'E1_1_1_133_mRNA', 'E1_1_1_169_mRNA', 'E1_1_1_193_mRNA', 'E1_1_1_23_mRNA', 'E1_1_1_27_mRNA', 'E1_1_1_28_mRNA', 'E1_1_1_3_mRNA', 'E1_1_1_304_mRNA', 'E1_1_1_35_mRNA', 'E1_1_1_44_mRNA', 'E1_1_1_47_mRNA', 'E1_1_1_49_mRNA', 'E1_1_1_6_mRNA', 'E1_1_1_85_mRNA', 'E1_1_1_86_mRNA', 'E1_1_1_88_mRNA', 'E1_1_1_94_mRNA', 'E1_11_1_26_mRNA', 'E1_17_1_8_mRNA', 'E1_17_4_1_mRNA', 'E1_17_4_2_mRNA', 'E1_2_1_10_mRNA', 'E1_2_1_11_mRNA', 'E1_2_1_38_mRNA', 'E1_2_1_41_mRNA', 'E1_20_4_4_mRNA', 'E1_3_1_12_mRNA', 'E1_3_1_14_mRNA', 'E1_3_1_9_mRNA', 'E1_3_1_98_mRNA', 'E1_4_1_13_mRNA', 'E1_5_1_2_mRNA', 'E1_5_1_3_mRNA', 'E1_6_5_2_mRNA', 'E1_7_1_7_mRNA', 'E1_8_1_4_mRNA', 'E1_8_1_9_mRNA', 'E1_8_4_11_mRNA', 'E1_8_4_12_mRNA', 'E2_1_1_10_mRNA', 'E2_1_1_107_mRNA', 'E2_1_1_14_mRNA', 'E2_1_1_163_mRNA', 'E2_1_1_171_mRNA', 'E2_1_1_182_mRNA', 'E2_1_1_201_mRNA', 'E2_1_1_228_mRNA', 'E2_1_1_297_mRNA', 'E2_1_1_33_mRNA', 'E2_1_1_45_mRNA', 'E2_1_1_63_mRNA', 'E2_1_2_1_mRNA', 'E2_1_2_2_mRNA', 'E2_1_2_3_mRNA', 'E2_1_2_9_mRNA', 'E2_1_3_15_mRNA', 'E2_1_3_2_mRNA', 'E2_1_3_3_mRNA', 'E2_2_1_1_mRNA', 'E2_2_1_6_mRNA', 'E2_2_1_7_mRNA', 'E2_3_1_1_mRNA', 'E2_3_1_15_mRNA', 'E2_3_1_157_mRNA', 'E2_3_1_179_mRNA', 'E2_3_1_180_mRNA', 'E2_3_1_234_mRNA', 'E2_3_1_266_mRNA', 'E2_3_1_274_mRNA', 'E2_3_1_286_mRNA', 'E2_3_1_35_mRNA', 'E2_3_1_39_mRNA', 'E2_3_1_46_mRNA', 'E2_3_1_8_mRNA', 'E2_3_1_89_mRNA', 'E2_3_1_9_mRNA', 'E2_3_3_10_mRNA', 'E2_4_1_227_mRNA', 'E2_4_2_10_mRNA', 'E2_4_2_14_mRNA', 'E2_4_2_17_mRNA', 'E2_4_2_22_mRNA', 'E2_4_2_7_mRNA', 'E2_4_2_8_mRNA', 'E2_4_2_9_mRNA', 'E2_5_1_15_mRNA', 'E2_5_1_19_mRNA', 'E2_5_1_3_mRNA', 'E2_5_1_47_mRNA', 'E2_5_1_6_mRNA', 'E2_5_1_75_mRNA', 'E2_5_1_78_mRNA', 'E2_5_1_9_mRNA', 'E2_6_1_11_mRNA', 'E2_6_1_16_mRNA', 'E2_6_1_42_mRNA', 'E2_6_1_52_mRNA', 'E2_6_1_9_mRNA', 'E2_7_1_107_mRNA', 'E2_7_1_12_mRNA', 'E2_7_1_148_mRNA', 'E2_7_1_15_mRNA', 'E2_7_1_2_mRNA', 'E2_7_1_21_mRNA', 'E2_7_1_211_mRNA', 'E2_7_1_23_mRNA', 'E2_7_1_24_mRNA', 'E2_7_1_26_mRNA', 'E2_7_1_30_mRNA', 'E2_7_1_31_mRNA', 'E2_7_1_33_mRNA', 'E2_7_1_36_mRNA', 'E2_7_1_39_mRNA', 'E2_7_1_4_mRNA', 'E2_7_1_40_mRNA', 'E2_7_1_48_mRNA', 'E2_7_1_49_mRNA', 'E2_7_1_50_mRNA', 'E2_7_1_6_mRNA', 'E2_7_1_71_mRNA', 'E2_7_10_2_mRNA', 'E2_7_2_1_mRNA', 'E2_7_2_11_mRNA', 'E2_7_2_2_mRNA', 'E2_7_2_3_mRNA', 'E2_7_2_4_mRNA', 'E2_7_2_8_mRNA', 'E2_7_3_9_mRNA', 'E2_7_4_1_mRNA', 'E2_7_4_2_mRNA', 'E2_7_4_22_mRNA', 'E2_7_4_25_mRNA', 'E2_7_4_3_mRNA', 'E2_7_4_6_mRNA', 'E2_7_4_7_mRNA', 'E2_7_4_8_mRNA', 'E2_7_4_9_mRNA', 'E2_7_6_1_mRNA', 'E2_7_6_2_mRNA', 'E2_7_6_3_mRNA', 'E2_7_6_5_mRNA', 'E2_7_7_12_mRNA', 'E2_7_7_18_mRNA', 'E2_7_7_2_mRNA', 'E2_7_7_23_mRNA', 'E2_7_7_24_mRNA', 'E2_7_7_3_mRNA', 'E2_7_7_41_mRNA', 'E2_7_7_6_mRNA', 'E2_7_7_7_mRNA', 'E2_7_7_77_mRNA', 'E2_7_7_85_mRNA', 'E2_7_7_87_mRNA', 'E2_7_7_9_mRNA', 'E2_7_8_13_mRNA', 'E2_7_8_5_mRNA', 'E2_7_8_7_mRNA', 'E2_8_1_13_mRNA', 'E2_8_1_4_mRNA', 'E2_8_1_7_mRNA', 'E3_1_1_103_mRNA', 'E3_1_1_106_mRNA', 'E3_1_1_29_mRNA', 'E3_1_3_15_mRNA', 'E3_1_3_27_mRNA', 'E3_1_3_48_mRNA', 'E3_1_3_7_mRNA', 'E3_1_4_4_mRNA', 'E3_2_1_22_mRNA', 'E3_2_1_26_mRNA', 'E3_2_1_93_mRNA', 'E3_2_2_3_mRNA', 'E3_2_2_9_mRNA', 'E3_5_1_2_mRNA', 'E3_5_1_28_mRNA', 'E3_5_1_4_mRNA', 'E3_5_1_88_mRNA', 'E3_5_2_3_mRNA', 'E3_5_2_5_mRNA', 'E3_5_2_9_mRNA', 'E3_5_3_6_mRNA', 'E3_5_4_10_mRNA', 'E3_5_4_16_mRNA', 'E3_5_4_19_mRNA', 'E3_5_4_25_mRNA', 'E3_5_4_26_mRNA', 'E3_5_4_3_mRNA', 'E3_5_4_33_mRNA', 'E3_5_99_2_mRNA', 'E3_6_1_1_mRNA', 'E3_6_1_27_mRNA', 'E3_6_1_31_mRNA', 'E3_6_1_41_mRNA', 'E3_6_1_66_mRNA', 'E4_1_1_101_mRNA', 'E4_1_1_15_mRNA', 'E4_1_1_20_mRNA', 'E4_1_1_21_mRNA', 'E4_1_1_23_mRNA', 'E4_1_1_33_mRNA', 'E4_1_1_36_mRNA', 'E4_1_1_5_mRNA', 'E4_1_2_25_mRNA', 'E4_1_2_4_mRNA', 'E4_1_3_36_mRNA', 'E4_1_99_22_mRNA', 'E4_2_1_11_mRNA', 'E4_2_1_113_mRNA', 'E4_2_1_19_mRNA', 'E4_2_1_2_mRNA', 'E4_2_1_33_mRNA', 'E4_2_1_46_mRNA', 'E4_2_1_59_mRNA', 'E4_2_1_9_mRNA', 'E4_2_3_1_mRNA', 'E4_2_3_5_mRNA', 'E4_3_1_17_mRNA', 'E4_3_1_19_mRNA', 'E4_3_1_8_mRNA', 'E4_3_2_1_mRNA', 'E4_3_2_10_mRNA', 'E4_3_2_2_mRNA', 'E4_3_3_7_mRNA', 'E4_4_1_21_mRNA', 'E4_6_1_17_mRNA', 'E4_99_1_12_mRNA', 'E5_1_1_1_mRNA', 'E5_1_1_3_mRNA', 'E5_1_1_7_mRNA', 'E5_1_3_1_mRNA', 'E5_1_3_13_mRNA', 'E5_1_3_14_mRNA', 'E5_1_3_2_mRNA', 'E5_1_99_6_mRNA', 'E5_2_1_8_mRNA', 'E5_3_1_1_mRNA', 'E5_3_1_16_mRNA', 'E5_3_1_4_mRNA', 'E5_3_1_6_mRNA', 'E5_3_1_9_mRNA', 'E5_3_2_6_mRNA', 'E5_3_3_2_mRNA', 'E5_4_2_10_mRNA', 'E5_4_2_11_mRNA', 'E5_4_2_6_mRNA', 'E5_4_99_12_mRNA', 'E5_4_99_18_mRNA', 'E5_4_99_5_mRNA', 'E5_4_99_62_mRNA', 'E5_4_99_9_mRNA', 'E6_1_1_1_mRNA', 'E6_1_1_10_mRNA', 'E6_1_1_11_mRNA', 'E6_1_1_12_mRNA', 'E6_1_1_13_mRNA', 'E6_1_1_14_mRNA', 'E6_1_1_15_mRNA', 'E6_1_1_16_mRNA', 'E6_1_1_17_mRNA', 'E6_1_1_19_mRNA', 'E6_1_1_2_mRNA', 'E6_1_1_20_mRNA', 'E6_1_1_21_mRNA', 'E6_1_1_22_mRNA', 'E6_1_1_3_mRNA', 'E6_1_1_4_mRNA', 'E6_1_1_5_mRNA', 'E6_1_1_6_mRNA', 'E6_1_1_7_mRNA', 'E6_1_1_9_mRNA', 'E6_2_1_26_mRNA', 'E6_3_1_1_mRNA', 'E6_3_1_2_mRNA', 'E6_3_1_20_mRNA', 'E6_3_1_5_mRNA', 'E6_3_2_10_mRNA', 'E6_3_2_13_mRNA', 'E6_3_2_5_mRNA', 'E6_3_2_6_mRNA', 'E6_3_2_8_mRNA', 'E6_3_2_9_mRNA', 'E6_3_3_1_mRNA', 'E6_3_3_2_mRNA', 'E6_3_4_13_mRNA', 'E6_3_4_14_mRNA', 'E6_3_4_15_mRNA', 'E6_3_4_18_mRNA', 'E6_3_4_19_mRNA', 'E6_3_4_2_mRNA', 'E6_3_4_21_mRNA', 'E6_3_4_3_mRNA', 'E6_3_4_4_mRNA', 'E6_3_4_5_mRNA', 'E6_3_5_2_mRNA', 'E6_3_5_3_mRNA', 'E6_3_5_4_mRNA', 'E6_3_5_5_mRNA', 'E6_4_1_1_mRNA', 'E6_4_1_2_mRNA', 'E6_5_1_2_mRNA', 'E7_1_2_2_mRNA', 'E1_1_1_1', 'E1_1_1_133', 'E1_1_1_169', 'E1_1_1_193', 'E1_1_1_23', 'E1_1_1_27', 'E1_1_1_28', 'E1_1_1_3', 'E1_1_1_304', 'E1_1_1_35', 'E1_1_1_44', 'E1_1_1_47', 'E1_1_1_49', 'E1_1_1_6', 'E1_1_1_85', 'E1_1_1_86', 'E1_1_1_88', 'E1_1_1_94', 'E1_11_1_26', 'E1_17_1_8', 'E1_17_4_1', 'E1_17_4_2', 'E1_2_1_10', 'E1_2_1_11', 'E1_2_1_38', 'E1_2_1_41', 'E1_20_4_4', 'E1_3_1_12', 'E1_3_1_14', 'E1_3_1_9', 'E1_3_1_98', 'E1_4_1_13', 'E1_5_1_2', 'E1_5_1_3', 'E1_6_5_2', 'E1_7_1_7', 'E1_8_1_4', 'E1_8_1_9', 'E1_8_4_11', 'E1_8_4_12', 'E2_1_1_10', 'E2_1_1_107', 'E2_1_1_14', 'E2_1_1_163', 'E2_1_1_171', 'E2_1_1_182', 'E2_1_1_201', 'E2_1_1_228', 'E2_1_1_297', 'E2_1_1_33', 'E2_1_1_45', 'E2_1_1_63', 'E2_1_2_1', 'E2_1_2_2', 'E2_1_2_3', 'E2_1_2_9', 'E2_1_3_15', 'E2_1_3_2', 'E2_1_3_3', 'E2_2_1_1', 'E2_2_1_6', 'E2_2_1_7', 'E2_3_1_1', 'E2_3_1_15', 'E2_3_1_157', 'E2_3_1_179', 'E2_3_1_180', 'E2_3_1_234', 'E2_3_1_266', 'E2_3_1_274', 'E2_3_1_286', 'E2_3_1_35', 'E2_3_1_39', 'E2_3_1_46', 'E2_3_1_8', 'E2_3_1_89', 'E2_3_1_9', 'E2_3_3_10', 'E2_4_1_227', 'E2_4_2_10', 'E2_4_2_14', 'E2_4_2_17', 'E2_4_2_22', 'E2_4_2_7', 'E2_4_2_8', 'E2_4_2_9', 'E2_5_1_15', 'E2_5_1_19', 'E2_5_1_3', 'E2_5_1_47', 'E2_5_1_6', 'E2_5_1_75', 'E2_5_1_78', 'E2_5_1_9', 'E2_6_1_11', 'E2_6_1_16', 'E2_6_1_42', 'E2_6_1_52', 'E2_6_1_9', 'E2_7_1_107', 'E2_7_1_12', 'E2_7_1_148', 'E2_7_1_15', 'E2_7_1_2', 'E2_7_1_21', 'E2_7_1_211', 'E2_7_1_23', 'E2_7_1_24', 'E2_7_1_26', 'E2_7_1_30', 'E2_7_1_31', 'E2_7_1_33', 'E2_7_1_36', 'E2_7_1_39', 'E2_7_1_4', 'E2_7_1_40', 'E2_7_1_48', 'E2_7_1_49', 'E2_7_1_50', 'E2_7_1_6', 'E2_7_1_71', 'E2_7_10_2', 'E2_7_2_1', 'E2_7_2_11', 'E2_7_2_2', 'E2_7_2_3', 'E2_7_2_4', 'E2_7_2_8', 'E2_7_3_9', 'E2_7_4_1', 'E2_7_4_2', 'E2_7_4_22', 'E2_7_4_25', 'E2_7_4_3', 'E2_7_4_6', 'E2_7_4_7', 'E2_7_4_8', 'E2_7_4_9', 'E2_7_6_1', 'E2_7_6_2', 'E2_7_6_3', 'E2_7_6_5', 'E2_7_7_12', 'E2_7_7_18', 'E2_7_7_2', 'E2_7_7_23', 'E2_7_7_24', 'E2_7_7_3', 'E2_7_7_41', 'E2_7_7_6', 'E2_7_7_7', 'E2_7_7_77', 'E2_7_7_85', 'E2_7_7_87', 'E2_7_7_9', 'E2_7_8_13', 'E2_7_8_5', 'E2_7_8_7', 'E2_8_1_13', 'E2_8_1_4', 'E2_8_1_7', 'E3_1_1_103', 'E3_1_1_106', 'E3_1_1_29', 'E3_1_3_15', 'E3_1_3_27', 'E3_1_3_48', 'E3_1_3_7', 'E3_1_4_4', 'E3_2_1_22', 'E3_2_1_26', 'E3_2_1_93', 'E3_2_2_3', 'E3_2_2_9', 'E3_5_1_2', 'E3_5_1_28', 'E3_5_1_4', 'E3_5_1_88', 'E3_5_2_3', 'E3_5_2_5', 'E3_5_2_9', 'E3_5_3_6', 'E3_5_4_10', 'E3_5_4_16', 'E3_5_4_19', 'E3_5_4_25', 'E3_5_4_26', 'E3_5_4_3', 'E3_5_4_33', 'E3_5_99_2', 'E3_6_1_1', 'E3_6_1_27', 'E3_6_1_31', 'E3_6_1_41', 'E3_6_1_66', 'E4_1_1_101', 'E4_1_1_15', 'E4_1_1_20', 'E4_1_1_21', 'E4_1_1_23', 'E4_1_1_33', 'E4_1_1_36', 'E4_1_1_5', 'E4_1_2_25', 'E4_1_2_4', 'E4_1_3_36', 'E4_1_99_22', 'E4_2_1_11', 'E4_2_1_113', 'E4_2_1_19', 'E4_2_1_2', 'E4_2_1_33', 'E4_2_1_46', 'E4_2_1_59', 'E4_2_1_9', 'E4_2_3_1', 'E4_2_3_5', 'E4_3_1_17', 'E4_3_1_19', 'E4_3_1_8', 'E4_3_2_1', 'E4_3_2_10', 'E4_3_2_2', 'E4_3_3_7', 'E4_4_1_21', 'E4_6_1_17', 'E4_99_1_12', 'E5_1_1_1', 'E5_1_1_3', 'E5_1_1_7', 'E5_1_3_1', 'E5_1_3_13', 'E5_1_3_14', 'E5_1_3_2', 'E5_1_99_6', 'E5_2_1_8', 'E5_3_1_1', 'E5_3_1_16', 'E5_3_1_4', 'E5_3_1_6', 'E5_3_1_9', 'E5_3_2_6', 'E5_3_3_2', 'E5_4_2_10', 'E5_4_2_11', 'E5_4_2_6', 'E5_4_99_12', 'E5_4_99_18', 'E5_4_99_5', 'E5_4_99_62', 'E5_4_99_9', 'E6_1_1_1', 'E6_1_1_10', 'E6_1_1_11', 'E6_1_1_12', 'E6_1_1_13', 'E6_1_1_14', 'E6_1_1_15', 'E6_1_1_16', 'E6_1_1_17', 'E6_1_1_19', 'E6_1_1_2', 'E6_1_1_20', 'E6_1_1_21', 'E6_1_1_22', 'E6_1_1_3', 'E6_1_1_4', 'E6_1_1_5', 'E6_1_1_6', 'E6_1_1_7', 'E6_1_1_9', 'E6_2_1_26', 'E6_3_1_1', 'E6_3_1_2', 'E6_3_1_20', 'E6_3_1_5', 'E6_3_2_10', 'E6_3_2_13', 'E6_3_2_5', 'E6_3_2_6', 'E6_3_2_8', 'E6_3_2_9', 'E6_3_3_1', 'E6_3_3_2', 'E6_3_4_13', 'E6_3_4_14', 'E6_3_4_15', 'E6_3_4_18', 'E6_3_4_19', 'E6_3_4_2', 'E6_3_4_21', 'E6_3_4_3', 'E6_3_4_4', 'E6_3_4_5', 'E6_3_5_2', 'E6_3_5_3', 'E6_3_5_4', 'E6_3_5_5', 'E6_4_1_1', 'E6_4_1_2', 'E6_5_1_2', 'E7_1_2_2', 'C01335', 'C15602', 'C18902', 'C05703', 'C05691', 'C00787', 'C02839', 'C01647', 'C05336', 'C01650', 'C02553', 'C16636', 'C06481', 'C00653', 'C04260', 'G13185', 'G13186', 'G13167', 'G13180', 'G13170', 'G13171', 'G13174', 'G13175', 'G13176', 'G13177', 'G13178', 'G13179', 'G13192', 'G13193', 'C01642', 'C02412', 'C01649', 'C02702', 'C01639', 'C03125', 'C01636', 'C02163', 'C01652', 'C03512', 'C01648', 'C03511', 'C01643', 'C02988', 'C01645', 'C03402', 'C01651', 'C02992', 'C02047', 'C01644', 'C03127', 'C01646', 'C01931', 'C01635', 'C00886', 'C01653', 'C02554', 'C22157', 'C22158', 'C00993', 'C04735', 'C04681', 'C0020', 'C02128']
 
lowerbound = {'0': [0.0, 0.0], '1': [0.0, 0.0], '2': [0.0, 0.0], '3': [0.0, 0.0], '4': [0.0, 0.0], '5': [0.0, 0.0], '6': [0.0, 0.0], '7': [0.0, 0.0], '8': [0.0, 0.0], '9': [0.0, 0.0], '10': [0.0, 0.0], '11': [0.0, 0.0], '12': [0.0, 0.0], '13': [0.0, 0.0], '14': [0.0, 0.0], '15': [0.0, 0.0], '16': [0.0, 0.0], '17': [0.0, 0.0], '18': [0.0, 0.0], '19': [0.0, 0.0], '20': [0.0, 0.0], '21': [0.0, 0.0], '22': [0.0, 0.0], '23': [0.0, 0.0], '24': [0.0, 0.0], '25': [0.0, 0.0], '26': [0.0, 0.0], '27': [0.0, 0.0], '28': [0.0, 0.0], '29': [0.0, 0.0], '30': [0.0, 0.0], '31': [0.0, 0.0], '32': [0.0, 0.0], '33': [0.0, 0.0], '34': [0.0, 0.0], '35': [0.0, 0.0], '36': [0.0, 0.0], '37': [0.0, 0.0], '38': [0.0, 0.0], '39': [0.0, 0.0], '40': [0.0, 0.0], '41': [0.0, 0.0], '42': [0.0, 0.0], '43': [0.0, 0.0], '44': [0.0, 0.0], '45': [0.0, 0.0], '46': [0.0, 0.0], '47': [0.0, 0.0], '48': [0.0, 0.0], '49': [0.0, 0.0], '50': [0.0, 0.0], '51': [0.0, 0.0], '52': [0.0, 0.0], '53': [0.0, 0.0], '54': [0.0, 0.0], '55': [0.0, 0.0], '56': [0.0, 0.0], '57': [0.0, 0.0], '58': [0.0, 0.0], '59': [0.0, 0.0], '60': [0.0, 0.0], '61': [0.0, 0.0], '62': [0.0, 0.0], '63': [0.0, 0.0], '64': [0.0, 0.0], '65': [0.0, 0.0], '66': [0.0, 0.0], '67': [0.0, 0.0], '68': [0.0, 0.0], '69': [0.0, 0.0], '70': [0.0, 0.0], '71': [0.0, 0.0], '72': [0.0, 0.0], '73': [0.0, 0.0], '74': [0.0, 0.0], '75': [0.0, 0.0], '76': [0.0, 0.0], '77': [0.0, 0.0], '78': [0.0, 0.0], '79': [0.0, 0.0], '80': [0.0, 0.0], '81': [0.0, 0.0], '82': [0.0, 0.0], '83': [0.0, 0.0], '84': [0.0, 0.0], '85': [0.0, 0.0], '86': [0.0, 0.0], '87': [0.0, 0.0], '88': [0.0, 0.0], '89': [0.0, 0.0], '90': [0.0, 0.0], '91': [0.0, 0.0], '92': [0.0, 0.0], '93': [0.0, 0.0], '94': [0.0, 0.0], '95': [0.0, 0.0], '96': [0.0, 0.0], '97': [0.0, 0.0], '98': [0.0, 0.0], '99': [0.0, 0.0], '100': [0.0, 0.0], '101': [0.0, 0.0], '102': [0.0, 0.0], '103': [0.0, 0.0], '104': [0.0, 0.0], '105': [0.0, 0.0], '106': [0.0, 0.0], '107': [0.0, 0.0], '108': [0.0, 0.0], '109': [0.0, 0.0], '110': [0.0, 0.0], '111': [0.0, 0.0], '112': [0.0, 0.0], '113': [0.0, 0.0], '114': [0.0, 0.0], '115': [0.0, 0.0], '116': [0.0, 0.0], '117': [0.0, 0.0], '118': [0.0, 0.0], '119': [0.0, 0.0], '120': [0.0, 0.0], '121': [0.0, 0.0], '122': [0.0, 0.0], '123': [0.0, 0.0], '124': [0.0, 0.0], '125': [0.0, 0.0], '126': [0.0, 0.0], '127': [0.0, 0.0], '128': [0.0, 0.0], '129': [0.0, 0.0], '130': [0.0, 0.0], '131': [0.0, 0.0], '132': [0.0, 0.0], '133': [0.0, 0.0], '134': [0.0, 0.0], '135': [0.0, 0.0], '136': [0.0, 0.0], '137': [0.0, 0.0], '138': [0.0, 0.0], '139': [0.0, 0.0], '140': [0.0, 0.0], '141': [0.0, 0.0], '142': [0.0, 0.0], '143': [0.0, 0.0], '144': [0.0, 0.0], '145': [0.0, 0.0], '146': [0.0, 0.0], '147': [0.0, 0.0], '148': [0.0, 0.0], '149': [0.0, 0.0], '150': [0.0, 0.0], '151': [0.0, 0.0], '152': [0.0, 0.0], '153': [0.0, 0.0], '154': [0.0, 0.0], '155': [0.0, 0.0], '156': [0.0, 0.0], '157': [0.0, 0.0], '158': [0.0, 0.0], '159': [0.0, 0.0], '160': [0.0, 0.0], '161': [0.0, 0.0], '162': [0.0, 0.0], '163': [0.0, 0.0], '164': [0.0, 0.0], '165': [0.0, 0.0], '166': [0.0, 0.0], '167': [0.0, 0.0], '168': [0.0, 0.0], '169': [0.0, 0.0], '170': [0.0, 0.0], '171': [0.0, 0.0], '172': [0.0, 0.0], '173': [0.0, 0.0], '174': [0.0, 0.0], '175': [0.0, 0.0], '176': [0.0, 0.0], '177': [0.0, 0.0], '178': [0.0, 0.0], '179': [0.0, 0.0], '180': [0.0, 0.0], '181': [0.0, 0.0], '182': [0.0, 0.0], '183': [0.0, 0.0], '184': [0.0, 0.0], '185': [0.0, 0.0], '186': [0.0, 0.0], '187': [0.0, 0.0], '188': [0.0, 0.0], '189': [0.0, 0.0], '190': [0.0, 0.0], '191': [0.0, 0.0], '192': [0.0, 0.0], '193': [0.0, 0.0], '194': [0.0, 0.0], '195': [0.0, 0.0], '196': [0.0, 0.0], '197': [0.0, 0.0], '198': [0.0, 0.0], '199': [0.0, 0.0], '200': [0.0, 0.0], '201': [0.0, 0.0], '202': [0.0, 0.0], '203': [0.0, 0.0], '204': [0.0, 0.0], '205': [0.0, 0.0], '206': [0.0, 0.0], '207': [0.0, 0.0], '208': [0.0, 0.0], '209': [0.0, 0.0], '210': [0.0, 0.0], '211': [0.0, 0.0], '212': [0.0, 0.0], '213': [0.0, 0.0], '214': [0.0, 0.0], '215': [0.0, 0.0], '216': [0.0, 0.0], '217': [0.0, 0.0], '218': [0.0, 0.0], '219': [0.0, 0.0], '220': [0.0, 0.0], '221': [0.0, 0.0], '222': [0.0, 0.0], '223': [0.0, 0.0], '224': [0.0, 0.0], '225': [0.0, 0.0], '226': [0.0, 0.0], '227': [0.0, 0.0], '228': [0.0, 0.0], '229': [0.0, 0.0], '230': [0.0, 0.0], '231': [0.0, 0.0], '232': [0.0, 0.0], '233': [0.0, 0.0], '234': [0.0, 0.0], '235': [0.0, 0.0], '236': [0.0, 0.0], '237': [0.0, 0.0], '238': [0.0, 0.0], '239': [0.0, 0.0], '240': [0.0, 0.0], '241': [0.0, 0.0], '242': [0.0, 0.0], '243': [0.0, 0.0], '244': [0.0, 0.0], '245': [0.0, 0.0], '246': [0.0, 0.0], '247': [0.0, 0.0], '248': [0.0, 0.0], '249': [0.0, 0.0], '250': [0.0, 0.0], '251': [0.0, 0.0], '252': [0.0, 0.0], '253': [0.0, 0.0], '254': [0.0, 0.0], '255': [0.0, 0.0], '256': [0.0, 0.0], '257': [0.0, 0.0], '258': [0.0, 0.0], '259': [0.0, 0.0], '260': [0.0, 0.0], '261': [0.0, 0.0], '262': [0.0, 0.0], '263': [0.0, 0.0], '264': [0.0, 0.0], '265': [0.0, 0.0], '266': [0.0, 0.0], '267': [0.0, 0.0], '268': [0.0, 0.0], '269': [0.0, 0.0], '270': [0.0, 0.0], '271': [0.0, 0.0], '272': [0.0, 0.0], '273': [0.0, 0.0], '274': [0.0, 0.0], '275': [0.0, 0.0], '276': [0.0, 0.0], '277': [0.0, 0.0], '278': [0.0, 0.0], '279': [0.0, 0.0], '280': [0.0, 0.0], '281': [0.0, 0.0], '282': [0.0, 0.0], '283': [0.0, 0.0], '284': [0.0, 0.0], '285': [0.0, 0.0], '286': [0.0, 0.0], '287': [0.0, 0.0], '288': [0.0, 0.0], '289': [0.0, 0.0], '290': [0.0, 0.0], '291': [0.0, 0.0], '292': [0.0, 0.0], '293': [0.0, 0.0], '294': [0.0, 0.0], '295': [0.0, 0.0], '296': [0.0, 0.0], '297': [0.0, 0.0], '298': [0.0, 0.0], '299': [0.0, 0.0], '300': [0.0, 0.0], '301': [0.0, 0.0], '302': [0.0, 0.0], '303': [0.0, 0.0], '304': [0.0, 0.0], '305': [0.0, 0.0], '306': [0.0, 0.0], '307': [0.0, 0.0], '308': [0.0, 0.0], '309': [0.0, 0.0], '310': [0.0, 0.0], '311': [0.0, 0.0], '312': [0.0, 0.0], '313': [0.0, 0.0], '314': [0.0, 0.0], '315': [0.0, 0.0], '316': [0.0, 0.0], '317': [0.0, 0.0], '318': [0.0, 0.0], '319': [0.0, 0.0], '320': [0.0, 0.0], '321': [0.0, 0.0], '322': [0.0, 0.0], '323': [0.0, 0.0], '324': [0.0, 0.0], '325': [0.0, 0.0], '326': [0.0, 0.0], '327': [0.0, 0.0], '328': [0.0, 0.0], '329': [0.0, 0.0], '330': [0.0, 0.0], '331': [0.0, 0.0], '332': [0.0, 0.0], '333': [0.0, 0.0], '334': [0.0, 0.0], '335': [0.0, 0.0], '336': [0.0, 0.0], '337': [0.0, 0.0], '338': [0.0, 0.0], '339': [0.0, 0.0], '340': [0.0, 0.0], '341': [0.0, 0.0], '342': [0.0, 0.0], '343': [0.0, 0.0], '344': [0.0, 0.0], '345': [0.0, 0.0], '346': [0.0, 0.0], '347': [0.0, 0.0], '348': [0.0, 0.0], '349': [0.0, 0.0], '350': [0.0, 0.0], '351': [0.0, 0.0], '352': [0.0, 0.0], '353': [0.0, 0.0], '354': [0.0, 0.0], '355': [0.0, 0.0], '356': [0.0, 0.0], '357': [0.0, 0.0], '358': [0.0, 0.0], '359': [0.0, 0.0], '360': [0.0, 0.0], '361': [0.0, 0.0], '362': [0.0, 0.0], '363': [0.0, 0.0], '364': [0.0, 0.0], '365': [0.0, 0.0], '366': [0.0, 0.0], '367': [0.0, 0.0], '368': [0.0, 0.0], '369': [0.0, 0.0], '370': [0.0, 0.0], '371': [0.0, 0.0], '372': [0.0, 0.0], '373': [0.0, 0.0], '374': [0.0, 0.0], '375': [0.0, 0.0], '376': [0.0, 0.0], '377': [0.0, 0.0], '378': [0.0, 0.0], '379': [0.0, 0.0], '380': [0.0, 0.0], '381': [0.0, 0.0], '382': [0.0, 0.0], '383': [0.0, 0.0], '384': [0.0, 0.0], '385': [0.0, 0.0], '386': [0.0, 0.0], '387': [0.0, 0.0], '388': [0.0, 0.0], '389': [0.0, 0.0], '390': [0.0, 0.0], '391': [0.0, 0.0], '392': [0.0, 0.0], '393': [0.0, 0.0], '394': [0.0, 0.0], '395': [0.0, 0.0], '396': [0.0, 0.0], '397': [0.0, 0.0], '398': [0.0, 0.0], '399': [0.0, 0.0], '400': [0.0, 0.0], '401': [0.0, 0.0], '402': [0.0, 0.0], '403': [0.0, 0.0], '404': [0.0, 0.0], '405': [0.0, 0.0], '406': [0.0, 0.0], '407': [0.0, 0.0], '408': [0.0, 0.0], '409': [0.0, 0.0], '410': [0.0, 0.0], '411': [0.0, 0.0], '412': [0.0, 0.0], '413': [0.0, 0.0], '414': [0.0, 0.0], '415': [0.0, 0.0], '416': [0.0, 0.0], '417': [0.0, 0.0], '418': [0.0, 0.0], '419': [0.0, 0.0], '420': [0.0, 0.0], '421': [0.0, 0.0], '422': [0.0, 0.0], '423': [0.0, 0.0], '424': [0.0, 0.0], '425': [0.0, 0.0], '426': [0.0, 0.0], '427': [0.0, 0.0], '428': [0.0, 0.0], '429': [0.0, 0.0], '430': [0.0, 0.0], '431': [0.0, 0.0], '432': [0.0, 0.0], '433': [0.0, 0.0], '434': [0.0, 0.0], '435': [0.0, 0.0], '436': [0.0, 0.0], '437': [0.0, 0.0], '438': [0.0, 0.0], '439': [0.0, 0.0], '440': [0.0, 0.0], '441': [0.0, 0.0], '442': [0.0, 0.0], '443': [0.0, 0.0], '444': [0.0, 0.0], '445': [0.0, 0.0], '446': [0.0, 0.0], '447': [0.0, 0.0], '448': [0.0, 0.0], '449': [0.0, 0.0], '450': [0.0, 0.0], '451': [0.0, 0.0], '452': [0.0, 0.0], '453': [0.0, 0.0], '454': [0.0, 0.0], '455': [0.0, 0.0], '456': [0.0, 0.0], '457': [0.0, 0.0], '458': [0.0, 0.0], '459': [0.0, 0.0], '460': [0.0, 0.0], '461': [0.0, 0.0], '462': [0.0, 0.0], '463': [0.0, 0.0], '464': [0.0, 0.0], '465': [0.0, 0.0], '466': [0.0, 0.0], '467': [0.0, 0.0], '468': [0.0, 0.0], '469': [0.0, 0.0], '470': [0.0, 0.0], '471': [0.0, 0.0], '472': [0.0, 0.0], '473': [0.0, 0.0], '474': [0.0, 0.0], '475': [0.0, 0.0], '476': [0.0, 0.0], '477': [0.0, 0.0], '478': [0.0, 0.0], '479': [0.0, 0.0], '480': [0.0, 0.0], '481': [0.0, 0.0], '482': [0.0, 0.0], '483': [0.0, 0.0], '484': [0.0, 0.0], '485': [0.0, 0.0], '486': [0.0, 0.0], '487': [0.0, 0.0], '488': [0.0, 0.0], '489': [0.0, 0.0], '490': [0.0, 0.0], '491': [0.0, 0.0], '492': [0.0, 0.0], '493': [0.0, 0.0], '494': [0.0, 0.0], '495': [0.0, 0.0], '496': [0.0, 0.0], '497': [0.0, 0.0], '498': [0.0, 0.0], '499': [0.0, 0.0], '500': [0.0, 0.0], '501': [0.0, 0.0], '502': [0.0, 0.0], '503': [0.0, 0.0], '504': [0.0, 0.0], '505': [0.0, 0.0], '506': [0.0, 0.0], '507': [0.0, 0.0], '508': [0.0, 0.0], '509': [0.0, 0.0], '510': [0.0, 0.0], '511': [0.0, 0.0], '512': [0.0, 0.0], '513': [0.0, 0.0], '514': [0.0, 0.0], '515': [0.0, 0.0], '516': [0.0, 0.0], '517': [0.0, 0.0], '518': [0.0, 0.0], '519': [0.0, 0.0], '520': [0.0, 0.0], '521': [0.0, 0.0], '522': [0.0, 0.0], '523': [0.0, 0.0], '524': [0.0, 0.0], '525': [0.0, 0.0], '526': [0.0, 0.0], '527': [0.0, 0.0], '528': [0.0, 0.0], '529': [0.0, 0.0], '530': [0.0, 0.0], '531': [0.0, 0.0], '532': [0.0, 0.0], '533': [0.0, 0.0], '534': [0.0, 0.0], '535': [0.0, 0.0], '536': [0.0, 0.0], '537': [0.0, 0.0], '538': [0.0, 0.0], '539': [0.0, 0.0], '540': [0.0, 0.0], '541': [0.0, 0.0], '542': [0.0, 0.0], '543': [0.0, 0.0], '544': [0.0, 0.0], '545': [0.0, 0.0], '546': [0.0, 0.0], '547': [0.0, 0.0], '548': [0.0, 0.0], '549': [0.0, 0.0], '550': [0.0, 0.0], '551': [0.0, 0.0], '552': [0.0, 0.0], '553': [0.0, 0.0], '554': [0.0, 0.0], '555': [0.0, 0.0], '556': [0.0, 0.0], '557': [0.0, 0.0], '558': [0.0, 0.0], '559': [0.0, 0.0], '560': [0.0, 0.0], '561': [0.0, 0.0], '562': [0.0, 0.0], '563': [0.0, 0.0], '564': [0.0, 0.0], '565': [0.0, 0.0], '566': [0.0, 0.0], '567': [0.0, 0.0], '568': [0.0, 0.0], '569': [0.0, 0.0], '570': [0.0, 0.0], '571': [0.0, 0.0], '572': [0.0, 0.0], '573': [0.0, 0.0], '574': [0.0, 0.0], '575': [0.0, 0.0], '576': [0.0, 0.0], '577': [0.0, 0.0], '578': [0.0, 0.0], '579': [0.0, 0.0], '580': [0.0, 0.0], '581': [0.0, 0.0], '582': [0.0, 0.0], '583': [0.0, 0.0], '584': [0.0, 0.0], '585': [0.0, 0.0], '586': [0.0, 0.0], '587': [0.0, 0.0], '588': [0.0, 0.0], '589': [0.0, 0.0], '590': [0.0, 0.0], '591': [0.0, 0.0], '592': [0.0, 0.0], '593': [0.0, 0.0], '594': [0.0, 0.0], '595': [0.0, 0.0], '596': [0.0, 0.0], '597': [0.0, 0.0], '598': [0.0, 0.0], '599': [0.0, 0.0], '600': [0.0, 0.0], '601': [0.0, 0.0], '602': [0.0, 0.0], '603': [0.0, 0.0], '604': [0.0, 0.0], '605': [0.0, 0.0], '606': [0.0, 0.0], '607': [0.0, 0.0], '608': [0.0, 0.0], '609': [0.0, 0.0], '610': [0.0, 0.0], '611': [0.0, 0.0], '612': [0.0, 0.0], '613': [0.0, 0.0], '614': [0.0, 0.0], '615': [0.0, 0.0], '616': [0.0, 0.0], '617': [0.0, 0.0], '618': [0.0, 0.0], '619': [0.0, 0.0], '620': [0.0, 0.0], '621': [0.0, 0.0], '622': [0.0, 0.0], '623': [0.0, 0.0], '624': [0.0, 0.0], '625': [0.0, 0.0], '626': [0.0, 0.0], '627': [0.0, 0.0], '628': [0.0, 0.0], '629': [0.0, 0.0], '630': [0.0, 0.0], '631': [0.0, 0.0], '632': [0.0, 0.0], '633': [0.0, 0.0], '634': [0.0, 0.0], '635': [0.0, 0.0], '636': [0.0, 0.0], '637': [0.0, 0.0], '638': [0.0, 0.0], '639': [0.0, 0.0], '640': [0.0, 0.0], '641': [0.0, 0.0], '642': [0.0, 0.0], '643': [0.0, 0.0], '644': [0.0, 0.0], '645': [0.0, 0.0], '646': [0.0, 0.0], '647': [0.0, 0.0], '648': [0.0, 0.0], '649': [0.0, 0.0], '650': [0.0, 0.0], '651': [0.0, 0.0], '652': [0.0, 0.0], '653': [0.0, 0.0], '654': [0.0, 0.0], '655': [0.0, 0.0], '656': [0.0, 0.0], '657': [0.0, 0.0], '658': [0.0, 0.0], '659': [0.0, 0.0], '660': [0.0, 0.0], '661': [0.0, 0.0], '662': [0.0, 0.0], '663': [0.0, 0.0], '664': [0.0, 0.0], '665': [0.0, 0.0], '666': [0.0, 0.0], '667': [0.0, 0.0], '668': [0.0, 0.0], '669': [0.0, 0.0], '670': [0.0, 0.0], '671': [0.0, 0.0], '672': [0.0, 0.0], '673': [0.0, 0.0], '674': [0.0, 0.0], '675': [0.0, 0.0], '676': [0.0, 0.0], '677': [0.0, 0.0], '678': [0.0, 0.0], '679': [0.0, 0.0], '680': [0.0, 0.0], '681': [0.0, 0.0], '682': [0.0, 0.0], '683': [0.0, 0.0], '684': [0.0, 0.0], '685': [0.0, 0.0], '686': [0.0, 0.0], '687': [0.0, 0.0], '688': [0.0, 0.0], '689': [0.0, 0.0], '690': [0.0, 0.0], '691': [0.0, 0.0], '692': [0.0, 0.0], '693': [0.0, 0.0], '694': [0.0, 0.0], '695': [0.0, 0.0], '696': [0.0, 0.0], '697': [0.0, 0.0], '698': [0.0, 0.0], '699': [0.0, 0.0], '700': [0.0, 0.0], '701': [0.0, 0.0], '702': [0.0, 0.0], '703': [0.0, 0.0], '704': [0.0, 0.0], '705': [0.0, 0.0], '706': [0.0, 0.0], '707': [0.0, 0.0], '708': [0.0, 0.0], '709': [0.0, 0.0], '710': [0.0, 0.0], '711': [0.0, 0.0], '712': [0.0, 0.0], '713': [0.0, 0.0], '714': [0.0, 0.0], '715': [0.0, 0.0], '716': [0.0, 0.0], '717': [0.0, 0.0], '718': [0.0, 0.0], '719': [0.0, 0.0], '720': [0.0, 0.0], '721': [0.0, 0.0], '722': [0.0, 0.0], '723': [0.0, 0.0], '724': [0.0, 0.0], '725': [0.0, 0.0], '726': [0.0, 0.0], '727': [0.0, 0.0], '728': [0.0, 0.0], '729': [0.0, 0.0], '730': [0.0, 0.0], '731': [0.0, 0.0], '732': [0.0, 0.0], '733': [0.0, 0.0], '734': [0.0, 0.0], '735': [0.0, 0.0], '736': [0.0, 0.0], '737': [0.0, 0.0], '738': [0.0, 0.0], '739': [0.0, 0.0], '740': [0.0, 0.0], '741': [0.0, 0.0], '742': [0.0, 0.0], '743': [0.0, 0.0], '744': [0.0, 0.0], '745': [0.0, 0.0], '746': [0.0, 0.0], '747': [0.0, 0.0], '748': [0.0, 0.0], '749': [0.0, 0.0], '750': [0.0, 0.0], '751': [0.0, 0.0], '752': [0.0, 0.0], '753': [0.0, 0.0], '754': [0.0, 0.0], '755': [0.0, 0.0], '756': [0.0, 0.0], '757': [0.0, 0.0], '758': [0.0, 0.0], '759': [0.0, 0.0], '760': [0.0, 0.0], '761': [0.0, 0.0], '762': [0.0, 0.0], '763': [0.0, 0.0], '764': [0.0, 0.0], '765': [0.0, 0.0], '766': [0.0, 0.0], '767': [0.0, 0.0], '768': [0.0, 0.0], '769': [0.0, 0.0], '770': [0.0, 0.0], '771': [0.0, 0.0], '772': [0.0, 0.0], '773': [0.0, 0.0], '774': [0.0, 0.0], '775': [0.0, 0.0], '776': [0.0, 0.0], '777': [0.0, 0.0], '778': [0.0, 0.0], '779': [0.0, 0.0], '780': [0.0, 0.0], '781': [0.0, 0.0], '782': [0.0, 0.0], '783': [0.0, 0.0], '784': [0.0, 0.0], '785': [0.0, 0.0], '786': [0.0, 0.0], '787': [0.0, 0.0], '788': [0.0, 0.0], '789': [0.0, 0.0], '790': [0.0, 0.0], '791': [0.0, 0.0], '792': [0.0, 0.0], '793': [0.0, 0.0], '794': [0.0, 0.0], '795': [0.0, 0.0], '796': [0.0, 0.0], '797': [0.0, 0.0], '798': [0.0, 0.0], '799': [0.0, 0.0], '800': [0.0, 0.0], '801': [0.0, 0.0], '802': [0.0, 0.0], '803': [0.0, 0.0], '804': [0.0, 0.0], '805': [0.0, 0.0], '806': [0.0, 0.0], '807': [0.0, 0.0], '808': [0.0, 0.0], '809': [0.0, 0.0], '810': [0.0, 0.0], '811': [0.0, 0.0], '812': [0.0, 0.0], '813': [0.0, 0.0], '814': [0.0, 0.0], '815': [0.0, 0.0], '816': [0.0, 0.0], '817': [0.0, 0.0], '818': [0.0, 0.0], '819': [0.0, 0.0], '820': [0.0, 0.0], '821': [0.0, 0.0], '822': [0.0, 0.0], '823': [0.0, 0.0], '824': [0.0, 0.0], '825': [0.0, 0.0], '826': [0.0, 0.0], '827': [0.0, 0.0], '828': [0.0, 0.0], '829': [0.0, 0.0], '830': [0.0, 0.0], '831': [0.0, 0.0], '832': [0.0, 0.0], '833': [0.0, 0.0], '834': [0.0, 0.0], '835': [0.0, 0.0], '836': [0.0, 0.0], '837': [0.0, 0.0], '838': [0.0, 0.0], '839': [0.0, 0.0], '840': [0.0, 0.0], '841': [0.0, 0.0], '842': [0.0, 0.0], '843': [0.0, 0.0], '844': [0.0, 0.0], '845': [0.0, 0.0], '846': [0.0, 0.0], '847': [0.0, 0.0], '848': [0.0, 0.0], '849': [0.0, 0.0], '850': [0.0, 0.0], '851': [0.0, 0.0], '852': [0.0, 0.0], '853': [0.0, 0.0], '854': [0.0, 0.0], '855': [0.0, 0.0], '856': [0.0, 0.0], '857': [0.0, 0.0], '858': [0.0, 0.0], '859': [0.0, 0.0], '860': [0.0, 0.0], '861': [0.0, 0.0], '862': [0.0, 0.0], '863': [0.0, 0.0], '864': [0.0, 0.0], '865': [0.0, 0.0], '866': [0.0, 0.0], '867': [0.0, 0.0], '868': [0.0, 0.0], '869': [0.0, 0.0], '870': [0.0, 0.0], '871': [0.0, 0.0], '872': [0.0, 0.0], '873': [0.0, 0.0], '874': [0.0, 0.0], '875': [0.0, 0.0], '876': [0.0, 0.0], '877': [0.0, 0.0], '878': [0.0, 0.0], '879': [0.0, 0.0], '880': [0.0, 0.0], '881': [0.0, 0.0], '882': [0.0, 0.0], '883': [0.0, 0.0], '884': [0.0, 0.0], '885': [0.0, 0.0], '886': [0.0, 0.0], '887': [0.0, 0.0], '888': [0.0, 0.0], '889': [0.0, 0.0], '890': [0.0, 0.0], '891': [0.0, 0.0], '892': [0.0, 0.0], '893': [0.0, 0.0], '894': [0.0, 0.0], '895': [0.0, 0.0], '896': [0.0, 0.0], '897': [0.0, 0.0], '898': [0.0, 0.0], '899': [0.0, 0.0], '900': [0.0, 0.0], '901': [0.0, 0.0], '902': [0.0, 0.0], '903': [0.0, 0.0], '904': [0.0, 0.0], '905': [0.0, 0.0], '906': [0.0, 0.0], '907': [0.0, 0.0], '908': [0.0, 0.0], '909': [0.0, 0.0], '910': [0.0, 0.0], '911': [0.0, 0.0], '912': [0.0, 0.0], '913': [0.0, 0.0], '914': [0.0, 0.0], '915': [0.0, 0.0], '916': [0.0, 0.0], '917': [0.0, 0.0], '918': [0.0, 0.0], '919': [0.0, 0.0], '920': [0.0, 0.0], '921': [0.0, 0.0], '922': [0.0, 0.0], '923': [0.0, 0.0], '924': [0.0, 0.0], '925': [0.0, 0.0], '926': [0.0, 0.0], '927': [0.0, 0.0], '928': [0.0, 0.0], '929': [0.0, 0.0], '930': [0.0, 0.0], '931': [0.0, 0.0], '932': [0.0, 0.0], '933': [0.0, 0.0], '934': [0.0, 0.0], '935': [0.0, 0.0], '936': [0.0, 0.0], '937': [0.0, 0.0], '938': [0.0, 0.0], '939': [0.0, 0.0], '940': [0.0, 0.0], '941': [0.0, 0.0], '942': [0.0, 0.0], '943': [0.0, 0.0], '944': [0.0, 0.0], '945': [0.0, 0.0], '946': [0.0, 0.0], '947': [0.0, 0.0], '948': [0.0, 0.0], '949': [0.0, 0.0], '950': [0.0, 0.0], '951': [0.0, 0.0], '952': [0.0, 0.0], '953': [0.0, 0.0], '954': [0.0, 0.0], '955': [0.0, 0.0], '956': [0.0, 0.0], '957': [0.0, 0.0], '958': [0.0, 0.0], '959': [0.0, 0.0], '960': [0.0, 0.0], '961': [0.0, 0.0], '962': [0.0, 0.0], '963': [0.0, 0.0], '964': [0.0, 0.0], '965': [0.0, 0.0], '966': [0.0, 0.0], '967': [0.0, 0.0], '968': [0.0, 0.0], '969': [0.0, 0.0], '970': [0.0, 0.0], '971': [0.0, 0.0], '972': [0.0, 0.0], '973': [0.0, 0.0], '974': [0.0, 0.0], '975': [0.0, 0.0], '976': [0.0, 0.0], '977': [0.0, 0.0], '978': [0.0, 0.0], '979': [0.0, 0.0], '980': [0.0, 0.0], '981': [0.0, 0.0], '982': [0.0, 0.0], '983': [0.0, 0.0], '984': [0.0, 0.0], '985': [0.0, 0.0], '986': [0.0, 0.0], '987': [0.0, 0.0], '988': [0.0, 0.0], '989': [0.0, 0.0], '990': [0.0, 0.0], '991': [0.0, 0.0], '992': [0.0, 0.0], '993': [0.0, 0.0], '994': [0.0, 0.0], '995': [0.0, 0.0], '996': [0.0, 0.0], '997': [0.0, 0.0], '998': [0.0, 0.0], '999': [0.0, 0.0], '1000': [0.0, 0.0], '1001': [0.0, 0.0], '1002': [0.0, 0.0], '1003': [0.0, 0.0], '1004': [0.0, 0.0], '1005': [0.0, 0.0], '1006': [0.0, 0.0], '1007': [0.0, 0.0], '1008': [0.0, 0.0], '1009': [0.0, 0.0], '1010': [0.0, 0.0], '1011': [0.0, 0.0], '1012': [0.0, 0.0], '1013': [0.0, 0.0], '1014': [0.0, 0.0], '1015': [0.0, 0.0], '1016': [0.0, 0.0], '1017': [0.0, 0.0], '1018': [0.0, 0.0], '1019': [0.0, 0.0], '1020': [0.0, 0.0], '1021': [0.0, 0.0], '1022': [0.0, 0.0], '1023': [0.0, 0.0], '1024': [0.0, 0.0], '1025': [0.0, 0.0], '1026': [0.0, 0.0], '1027': [0.0, 0.0], '1028': [0.0, 0.0], '1029': [0.0, 0.0], '1030': [0.0, 0.0], '1031': [0.0, 0.0], '1032': [0.0, 0.0], '1033': [0.0, 0.0], '1034': [0.0, 0.0], '1035': [0.0, 0.0], '1036': [0.0, 0.0], '1037': [0.0, 0.0], '1038': [0.0, 0.0], '1039': [0.0, 0.0], '1040': [0.0, 0.0], '1041': [0.0, 0.0], '1042': [0.0, 0.0], '1043': [0.0, 0.0], '1044': [0.0, 0.0], '1045': [0.0, 0.0], '1046': [0.0, 0.0], '1047': [0.0, 0.0], '1048': [0.0, 0.0], '1049': [0.0, 0.0], '1050': [0.0, 0.0], '1051': [0.0, 0.0], '1052': [0.0, 0.0], '1053': [0.0, 0.0], '1054': [0.0, 0.0], '1055': [0.0, 0.0], '1056': [0.0, 0.0], '1057': [0.0, 0.0], '1058': [0.0, 0.0], '1059': [0.0, 0.0], '1060': [0.0, 0.0], '1061': [0.0, 0.0], '1062': [0.0, 0.0], '1063': [0.0, 0.0], '1064': [0.0, 0.0], '1065': [0.0, 0.0], '1066': [0.0, 0.0], '1067': [0.0, 0.0], '1068': [0.0, 0.0], '1069': [0.0, 0.0], '1070': [0.0, 0.0], '1071': [0.0, 0.0], '1072': [0.0, 0.0], '1073': [0.0, 0.0], '1074': [0.0, 0.0], '1075': [0.0, 0.0], '1076': [0.0, 0.0], '1077': [0.0, 0.0], '1078': [0.0, 0.0], '1079': [0.0, 0.0], '1080': [0.0, 0.0], '1081': [0.0, 0.0], '1082': [0.0, 0.0], '1083': [0.0, 0.0], '1084': [0.0, 0.0], '1085': [0.0, 0.0], '1086': [0.0, 0.0], '1087': [0.0, 0.0], '1088': [0.0, 0.0], '1089': [0.0, 0.0], '1090': [0.0, 0.0], '1091': [0.0, 0.0], '1092': [0.0, 0.0], '1093': [0.0, 0.0], '1094': [0.0, 0.0], '1095': [0.0, 0.0], '1096': [0.0, 0.0], '1097': [0.0, 0.0], '1098': [0.0, 0.0], '1099': [0.0, 0.0], '1100': [0.0, 0.0], '1101': [0.0, 0.0], '1102': [0.0, 0.0], '1103': [0.0, 0.0], '1104': [0.0, 0.0], '1105': [0.0, 0.0], '1106': [0.0, 0.0], '1107': [0.0, 0.0], '1108': [0.0, 0.0], '1109': [0.0, 0.0], '1110': [0.0, 0.0], '1111': [0.0, 0.0], '1112': [0.0, 0.0], '1113': [0.0, 0.0], '1114': [0.0, 0.0], '1115': [0.0, 0.0], '1116': [0.0, 0.0], '1117': [0.0, 0.0], '1118': [0.0, 0.0], '1119': [0.0, 0.0], '1120': [0.0, 0.0], '1121': [0.0, 0.0], '1122': [0.0, 0.0], '1123': [0.0, 0.0], '1124': [0.0, 0.0], '1125': [0.0, 0.0], '1126': [0.0, 0.0], '1127': [0.0, 0.0], '1128': [0.0, 0.0], '1129': [0.0, 0.0], '1130': [0.0, 0.0], '1131': [0.0, 0.0], '1132': [0.0, 0.0], '1133': [0.0, 0.0], '1134': [0.0, 0.0], '1135': [0.0, 0.0], '1136': [0.0, 0.0], '1137': [0.0, 0.0], '1138': [0.0, 0.0], '1139': [0.0, 0.0], '1140': [0.0, 0.0], '1141': [0.0, 0.0], '1142': [0.0, 0.0], '1143': [0.0, 0.0], '1144': [0.0, 0.0], '1145': [0.0, 0.0], '1146': [0.0, 0.0], '1147': [0.0, 0.0], '1148': [0.0, 0.0], '1149': [0.0, 0.0], '1150': [0.0, 0.0], '1151': [0.0, 0.0], '1152': [0.0, 0.0], '1153': [0.0, 0.0], '1154': [0.0, 0.0], '1155': [0.0, 0.0], '1156': [0.0, 0.0], '1157': [0.0, 0.0], '1158': [0.0, 0.0], '1159': [0.0, 0.0], '1160': [0.0, 0.0], '1161': [0.0, 0.0], '1162': [0.0, 0.0], '1163': [0.0, 0.0], '1164': [0.0, 0.0], '1165': [0.0, 0.0], '1166': [0.0, 0.0], '1167': [0.0, 0.0], '1168': [0.0, 0.0], '1169': [0.0, 0.0], '1170': [0.0, 0.0], '1171': [0.0, 0.0], '1172': [0.0, 0.0], '1173': [0.0, 0.0], '1174': [0.0, 0.0], '1175': [0.0, 0.0], '1176': [0.0, 0.0], '1177': [0.0, 0.0], '1178': [0.0, 0.0], '1179': [0.0, 0.0], '1180': [0.0, 0.0], '1181': [0.0, 0.0], '1182': [0.0, 0.0], '1183': [0.0, 0.0], '1184': [0.0, 0.0], '1185': [0.0, 0.0], '1186': [0.0, 0.0], '1187': [0.0, 0.0], '1188': [0.0, 0.0], '1189': [0.0, 0.0], '1190': [0.0, 0.0], '1191': [0.0, 0.0], '1192': [0.0, 0.0], '1193': [0.0, 0.0], '1194': [0.0, 0.0], '1195': [0.0, 0.0], '1196': [0.0, 0.0], '1197': [0.0, 0.0], '1198': [0.0, 0.0], '1199': [0.0, 0.0], '1200': [0.0, 0.0], '1201': [0.0, 0.0], '1202': [0.0, 0.0], '1203': [0.0, 0.0], '1204': [0.0, 0.0], '1205': [0.0, 0.0], '1206': [0.0, 0.0], '1207': [0.0, 0.0], '1208': [0.0, 0.0], '1209': [0.0, 0.0], '1210': [0.0, 0.0], '1211': [0.0, 0.0], '1212': [0.0, 0.0], '1213': [0.0, 0.0], '1214': [0.0, 0.0], '1215': [0.0, 0.0], '1216': [0.0, 0.0], '1217': [0.0, 0.0], '1218': [0.0, 0.0], '1219': [0.0, 0.0], '1220': [0.0, 0.0], '1221': [0.0, 0.0], '1222': [0.0, 0.0], '1223': [0.0, 0.0], '1224': [0.0, 0.0], '1225': [0.0, 0.0], '1226': [0.0, 0.0], '1227': [0.0, 0.0], '1228': [0.0, 0.0], '1229': [0.0, 0.0], '1230': [0.0, 0.0], '1231': [0.0, 0.0], '1232': [0.0, 0.0], '1233': [0.0, 0.0], '1234': [0.0, 0.0], '1235': [0.0, 0.0], '1236': [0.0, 0.0], '1237': [0.0, 0.0], '1238': [0.0, 0.0], '1239': [0.0, 0.0], '1240': [0.0, 0.0], '1241': [0.0, 0.0], '1242': [0.0, 0.0], '1243': [0.0, 0.0], '1244': [0.0, 0.0], '1245': [0.0, 0.0], '1246': [0.0, 0.0], '1247': [0.0, 0.0], '1248': [0.0, 0.0], '1249': [0.0, 0.0], '1250': [0.0, 0.0], '1251': [0.0, 0.0], '1252': [0.0, 0.0], '1253': [0.0, 0.0], '1254': [0.0, 0.0], '1255': [0.0, 0.0], '1256': [0.0, 0.0], '1257': [0.0, 0.0], '1258': [0.0, 0.0], '1259': [0.0, 0.0], '1260': [0.0, 0.0], '1261': [0.0, 0.0], '1262': [0.0, 0.0], '1263': [0.0, 0.0], '1264': [0.0, 0.0], '1265': [0.0, 0.0], '1266': [0.0, 0.0], '1267': [0.0, 0.0], '1268': [0.0, 0.0], '1269': [0.0, 0.0], '1270': [0.0, 0.0], '1271': [0.0, 0.0], '1272': [0.0, 0.0], '1273': [0.0, 0.0], '1274': [0.0, 0.0], '1275': [0.0, 0.0], '1276': [0.0, 0.0], '1277': [0.0, 0.0], '1278': [0.0, 0.0], '1279': [0.0, 0.0], '1280': [0.0, 0.0], '1281': [0.0, 0.0], '1282': [0.0, 0.0], '1283': [0.0, 0.0], '1284': [0.0, 0.0], '1285': [0.0, 0.0], '1286': [0.0, 0.0], '1287': [0.0, 0.0], '1288': [0.0, 0.0], '1289': [0.0, 0.0], '1290': [0.0, 0.0], '1291': [0.0, 0.0], '1292': [0.0, 0.0], '1293': [0.0, 0.0], '1294': [0.0, 0.0], '1295': [0.0, 0.0], '1296': [0.0, 0.0], '1297': [0.0, 0.0], '1298': [0.0, 0.0], '1299': [0.0, 0.0], '1300': [0.0, 0.0], '1301': [0.0, 0.0], '1302': [0.0, 0.0], '1303': [0.0, 0.0], '1304': [0.0, 0.0], '1305': [0.0, 0.0], '1306': [0.0, 0.0], '1307': [0.0, 0.0], '1308': [0.0, 0.0], '1309': [0.0, 0.0], '1310': [0.0, 0.0], '1311': [0.0, 0.0], '1312': [0.0, 0.0], '1313': [0.0, 0.0], '1314': [0.0, 0.0], '1315': [0.0, 0.0], '1316': [0.0, 0.0], '1317': [0.0, 0.0], '1318': [0.0, 0.0], '1319': [0.0, 0.0], '1320': [0.0, 0.0], '1321': [0.0, 0.0], '1322': [0.0, 0.0], '1323': [0.0, 0.0], '1324': [0.0, 0.0], '1325': [0.0, 0.0], '1326': [0.0, 0.0], '1327': [0.0, 0.0], '1328': [0.0, 0.0], '1329': [0.0, 0.0], '1330': [0.0, 0.0], '1331': [0.0, 0.0], '1332': [0.0, 0.0], '1333': [0.0, 0.0], '1334': [0.0, 0.0], '1335': [0.0, 0.0], '1336': [0.0, 0.0], '1337': [0.0, 0.0], '1338': [0.0, 0.0], '1339': [0.0, 0.0], '1340': [0.0, 0.0], '1341': [0.0, 0.0], '1342': [0.0, 0.0], '1343': [0.0, 0.0], '1344': [0.0, 0.0], '1345': [0.0, 0.0], '1346': [0.0, 0.0], '1347': [0.0, 0.0], '1348': [0.0, 0.0], '1349': [0.0, 0.0], '1350': [0.0, 0.0], '1351': [0.0, 0.0], '1352': [0.0, 0.0], '1353': [0.0, 0.0], '1354': [0.0, 0.0], '1355': [0.0, 0.0], '1356': [0.0, 0.0], '1357': [0.0, 0.0], '1358': [0.0, 0.0], '1359': [0.0, 0.0], '1360': [0.0, 0.0], '1361': [0.0, 0.0], '1362': [0.0, 0.0], '1363': [0.0, 0.0], '1364': [0.0, 0.0], '1365': [0.0, 0.0], '1366': [0.0, 0.0], '1367': [0.0, 0.0], '1368': [0.0, 0.0], '1369': [0.0, 0.0], '1370': [0.0, 0.0], '1371': [0.0, 0.0], '1372': [0.0, 0.0], '1373': [0.0, 0.0], '1374': [0.0, 0.0], '1375': [0.0, 0.0], '1376': [0.0, 0.0], '1377': [0.0, 0.0], '1378': [0.0, 0.0], '1379': [0.0, 0.0], '1380': [0.0, 0.0], '1381': [0.0, 0.0], '1382': [0.0, 0.0], '1383': [0.0, 0.0], '1384': [0.0, 0.0], '1385': [0.0, 0.0], '1386': [0.0, 0.0], '1387': [0.0, 0.0], '1388': [0.0, 0.0], '1389': [0.0, 0.0], '1390': [0.0, 0.0], '1391': [0.0, 0.0], '1392': [0.0, 0.0], '1393': [0.0, 0.0], '1394': [0.0, 0.0], '1395': [0.0, 0.0], '1396': [0.0, 0.0], '1397': [0.0, 0.0], '1398': [0.0, 0.0], '1399': [0.0, 0.0], '1400': [0.0, 0.0], '1401': [0.0, 0.0], '1402': [0.0, 0.0], '1403': [0.0, 0.0], '1404': [0.0, 0.0], '1405': [0.0, 0.0], '1406': [0.0, 0.0], '1407': [0.0, 0.0], '1408': [0.0, 0.0], '1409': [0.0, 0.0], '1410': [0.0, 0.0], '1411': [0.0, 0.0], '1412': [0.0, 0.0], '1413': [0.0, 0.0], '1414': [0.0, 0.0], '1415': [0.0, 0.0], '1416': [0.0, 0.0], '1417': [0.0, 0.0], '1418': [0.0, 0.0], '1419': [0.0, 0.0], '1420': [0.0, 0.0], '1421': [0.0, 0.0], '1422': [0.0, 0.0], '1423': [0.0, 0.0], '1424': [0.0, 0.0], '1425': [0.0, 0.0], '1426': [0.0, 0.0], '1427': [0.0, 0.0], '1428': [0.0, 0.0], '1429': [0.0, 0.0], '1430': [0.0, 0.0], '1431': [0.0, 0.0], '1432': [0.0, 0.0], '1433': [0.0, 0.0], '1434': [0.0, 0.0], '1435': [0.0, 0.0], '1436': [0.0, 0.0], '1437': [0.0, 0.0], '1438': [0.0, 0.0], '1439': [0.0, 0.0], '1440': [0.0, 0.0], '1441': [0.0, 0.0], '1442': [0.0, 0.0], '1443': [0.0, 0.0], '1444': [0.0, 0.0], '1445': [0.0, 0.0], '1446': [0.0, 0.0], '1447': [0.0, 0.0], '1448': [0.0, 0.0], '1449': [0.0, 0.0], '1450': [0.0, 0.0], '1451': [0.0, 0.0], '1452': [0.0, 0.0], '1453': [0.0, 0.0], '1454': [0.0, 0.0], '1455': [0.0, 0.0], '1456': [0.0, 0.0], '1457': [0.0, 0.0], '1458': [0.0, 0.0], '1459': [0.0, 0.0], '1460': [0.0, 0.0], '1461': [0.0, 0.0], '1462': [0.0, 0.0], '1463': [0.0, 0.0], '1464': [0.0, 0.0], '1465': [0.0, 0.0], '1466': [0.0, 0.0], '1467': [0.0, 0.0], '1468': [0.0, 0.0], '1469': [0.0, 0.0], '1470': [0.0, 0.0], '1471': [0.0, 0.0], '1472': [0.0, 0.0], '1473': [0.0, 0.0], '1474': [0.0, 0.0], '1475': [0.0, 0.0], '1476': [0.0, 0.0], '1477': [0.0, 0.0], '1478': [0.0, 0.0], '1479': [0.0, 0.0], '1480': [0.0, 0.0], '1481': [0.0, 0.0], '1482': [0.0, 0.0], '1483': [0.0, 0.0], '1484': [0.0, 0.0], '1485': [0.0, 0.0], '1486': [0.0, 0.0], '1487': [0.0, 0.0], '1488': [0.0, 0.0], '1489': [0.0, 0.0], '1490': [0.0, 0.0], '1491': [0.0, 0.0], '1492': [0.0, 0.0], '1493': [0.0, 0.0], '1494': [0.0, 0.0], '1495': [0.0, 0.0], '1496': [0.0, 0.0], '1497': [0.0, 0.0], '1498': [0.0, 0.0], '1499': [0.0, 0.0], '1500': [0.0, 0.0], '1501': [0.0, 0.0], '1502': [0.0, 0.0], '1503': [0.0, 0.0], '1504': [0.0, 0.0], '1505': [0.0, 0.0], '1506': [0.0, 0.0], '1507': [0.0, 0.0], '1508': [0.0, 0.0], '1509': [0.0, 0.0], '1510': [0.0, 0.0], '1511': [0.0, 0.0], '1512': [0.0, 0.0], '1513': [0.0, 0.0], '1514': [0.0, 0.0], '1515': [0.0, 0.0], '1516': [0.0, 0.0], '1517': [0.0, 0.0], '1518': [0.0, 0.0], '1519': [0.0, 0.0], '1520': [0.0, 0.0], '1521': [0.0, 0.0], '1522': [0.0, 0.0], '1523': [0.0, 0.0], '1524': [0.0, 0.0], '1525': [0.0, 0.0], '1526': [0.0, 0.0], '1527': [0.0, 0.0], '1528': [0.0, 0.0], '1529': [0.0, 0.0], '1530': [0.0, 0.0], '1531': [0.0, 0.0], '1532': [0.0, 0.0], '1533': [0.0, 0.0], '1534': [0.0, 0.0], '1535': [0.0, 0.0], '1536': [0.0, 0.0], '1537': [0.0, 0.0], '1538': [0.0, 0.0], '1539': [0.0, 0.0], '1540': [0.0, 0.0], '1541': [0.0, 0.0], '1542': [0.0, 0.0], '1543': [0.0, 0.0], '1544': [0.0, 0.0], '1545': [0.0, 0.0], '1546': [0.0, 0.0], '1547': [0.0, 0.0], '1548': [0.0, 0.0], '1549': [0.0, 0.0], '1550': [0.0, 0.0], '1551': [0.0, 0.0], '1552': [0.0, 0.0], '1553': [0.0, 0.0], '1554': [0.0, 0.0], '1555': [0.0, 0.0], '1556': [0.0, 0.0], '1557': [0.0, 0.0], '1558': [0.0, 0.0], '1559': [0.0, 0.0], '1560': [0.0, 0.0], '1561': [0.0, 0.0], '1562': [0.0, 0.0], '1563': [0.0, 0.0], '1564': [0.0, 0.0], '1565': [0.0, 0.0], '1566': [0.0, 0.0], '1567': [0.0, 0.0], '1568': [0.0, 0.0], '1569': [0.0, 0.0], '1570': [0.0, 0.0], '1571': [0.0, 0.0], '1572': [0.0, 0.0], '1573': [0.0, 0.0], '1574': [0.0, 0.0], '1575': [0.0, 0.0], '1576': [0.0, 0.0], '1577': [0.0, 0.0], '1578': [0.0, 0.0], '1579': [0.0, 0.0], '1580': [0.0, 0.0], '1581': [0.0, 0.0], '1582': [0.0, 0.0], '1583': [0.0, 0.0], '1584': [0.0, 0.0], '1585': [0.0, 0.0], '1586': [0.0, 0.0], '1587': [0.0, 0.0], '1588': [0.0, 0.0], '1589': [0.0, 0.0], '1590': [0.0, 0.0], '1591': [0.0, 0.0], '1592': [0.0, 0.0], '1593': [0.0, 0.0], '1594': [0.0, 0.0], '1595': [0.0, 0.0], '1596': [0.0, 0.0], '1597': [0.0, 0.0], }
 
upperbound = {'0': [1000.0, 1000.0], '1': [1000.0, 1000.0], '2': [1000.0, 1000.0], '3': [1000.0, 1000.0], '4': [1000.0, 1000.0], '5': [1000.0, 1000.0], '6': [1000.0, 1000.0], '7': [1000.0, 1000.0], '8': [1000.0, 1000.0], '9': [1000.0, 1000.0], '10': [1000.0, 1000.0], '11': [1000.0, 1000.0], '12': [1000.0, 1000.0], '13': [1000.0, 1000.0], '14': [1000.0, 1000.0], '15': [1000.0, 1000.0], '16': [1000.0, 1000.0], '17': [1000.0, 1000.0], '18': [1000.0, 1000.0], '19': [1000.0, 1000.0], '20': [1000.0, 1000.0], '21': [1000.0, 1000.0], '22': [1000.0, 1000.0], '23': [1000.0, 1000.0], '24': [1000.0, 1000.0], '25': [1000.0, 1000.0], '26': [1000.0, 1000.0], '27': [1000.0, 1000.0], '28': [1000.0, 1000.0], '29': [1000.0, 1000.0], '30': [1000.0, 1000.0], '31': [1000.0, 1000.0], '32': [1000.0, 1000.0], '33': [1000.0, 1000.0], '34': [1000.0, 1000.0], '35': [1000.0, 1000.0], '36': [1000.0, 1000.0], '37': [1000.0, 1000.0], '38': [1000.0, 1000.0], '39': [1000.0, 1000.0], '40': [1000.0, 1000.0], '41': [1000.0, 1000.0], '42': [1000.0, 1000.0], '43': [1000.0, 1000.0], '44': [1000.0, 1000.0], '45': [1000.0, 1000.0], '46': [1000.0, 1000.0], '47': [1000.0, 1000.0], '48': [1000.0, 1000.0], '49': [1000.0, 1000.0], '50': [1000.0, 1000.0], '51': [1000.0, 1000.0], '52': [1000.0, 1000.0], '53': [1000.0, 1000.0], '54': [1000.0, 1000.0], '55': [1000.0, 1000.0], '56': [1000.0, 1000.0], '57': [1000.0, 1000.0], '58': [1000.0, 1000.0], '59': [1000.0, 1000.0], '60': [1000.0, 1000.0], '61': [1000.0, 1000.0], '62': [1000.0, 1000.0], '63': [1000.0, 1000.0], '64': [1000.0, 1000.0], '65': [1000.0, 1000.0], '66': [1000.0, 1000.0], '67': [1000.0, 1000.0], '68': [1000.0, 1000.0], '69': [1000.0, 1000.0], '70': [1000.0, 1000.0], '71': [1000.0, 1000.0], '72': [1000.0, 1000.0], '73': [1000.0, 1000.0], '74': [1000.0, 1000.0], '75': [1000.0, 1000.0], '76': [1000.0, 1000.0], '77': [1000.0, 1000.0], '78': [1000.0, 1000.0], '79': [1000.0, 1000.0], '80': [1000.0, 1000.0], '81': [1000.0, 1000.0], '82': [1000.0, 1000.0], '83': [1000.0, 1000.0], '84': [1000.0, 1000.0], '85': [1000.0, 1000.0], '86': [1000.0, 1000.0], '87': [1000.0, 1000.0], '88': [1000.0, 1000.0], '89': [1000.0, 1000.0], '90': [1000.0, 1000.0], '91': [1000.0, 1000.0], '92': [1000.0, 1000.0], '93': [1000.0, 1000.0], '94': [1000.0, 1000.0], '95': [1000.0, 1000.0], '96': [1000.0, 1000.0], '97': [1000.0, 1000.0], '98': [1000.0, 1000.0], '99': [1000.0, 1000.0], '100': [1000.0, 1000.0], '101': [1000.0, 1000.0], '102': [1000.0, 1000.0], '103': [1000.0, 1000.0], '104': [1000.0, 1000.0], '105': [1000.0, 1000.0], '106': [1000.0, 1000.0], '107': [1000.0, 1000.0], '108': [1000.0, 1000.0], '109': [1000.0, 1000.0], '110': [1000.0, 1000.0], '111': [1000.0, 1000.0], '112': [1000.0, 1000.0], '113': [1000.0, 1000.0], '114': [1000.0, 1000.0], '115': [1000.0, 1000.0], '116': [1000.0, 1000.0], '117': [1000.0, 1000.0], '118': [1000.0, 1000.0], '119': [1000.0, 1000.0], '120': [1000.0, 1000.0], '121': [1000.0, 1000.0], '122': [1000.0, 1000.0], '123': [1000.0, 1000.0], '124': [1000.0, 1000.0], '125': [1000.0, 1000.0], '126': [1000.0, 1000.0], '127': [1000.0, 1000.0], '128': [1000.0, 1000.0], '129': [1000.0, 1000.0], '130': [1000.0, 1000.0], '131': [1000.0, 1000.0], '132': [1000.0, 1000.0], '133': [1000.0, 1000.0], '134': [1000.0, 1000.0], '135': [1000.0, 1000.0], '136': [1000.0, 1000.0], '137': [1000.0, 1000.0], '138': [1000.0, 1000.0], '139': [1000.0, 1000.0], '140': [1000.0, 1000.0], '141': [1000.0, 1000.0], '142': [1000.0, 1000.0], '143': [1000.0, 1000.0], '144': [1000.0, 1000.0], '145': [1000.0, 1000.0], '146': [1000.0, 1000.0], '147': [1000.0, 1000.0], '148': [1000.0, 1000.0], '149': [1000.0, 1000.0], '150': [1000.0, 1000.0], '151': [1000.0, 1000.0], '152': [1000.0, 1000.0], '153': [1000.0, 1000.0], '154': [1000.0, 1000.0], '155': [1000.0, 1000.0], '156': [1000.0, 1000.0], '157': [1000.0, 1000.0], '158': [1000.0, 1000.0], '159': [1000.0, 1000.0], '160': [1000.0, 1000.0], '161': [1000.0, 1000.0], '162': [1000.0, 1000.0], '163': [1000.0, 1000.0], '164': [1000.0, 1000.0], '165': [1000.0, 1000.0], '166': [1000.0, 1000.0], '167': [1000.0, 1000.0], '168': [1000.0, 1000.0], '169': [1000.0, 1000.0], '170': [1000.0, 1000.0], '171': [1000.0, 1000.0], '172': [1000.0, 1000.0], '173': [1000.0, 1000.0], '174': [1000.0, 1000.0], '175': [1000.0, 1000.0], '176': [1000.0, 1000.0], '177': [1000.0, 1000.0], '178': [1000.0, 1000.0], '179': [1000.0, 1000.0], '180': [1000.0, 1000.0], '181': [1000.0, 1000.0], '182': [1000.0, 1000.0], '183': [1000.0, 1000.0], '184': [1000.0, 1000.0], '185': [1000.0, 1000.0], '186': [1000.0, 1000.0], '187': [1000.0, 1000.0], '188': [1000.0, 1000.0], '189': [1000.0, 1000.0], '190': [1000.0, 1000.0], '191': [1000.0, 1000.0], '192': [1000.0, 1000.0], '193': [1000.0, 1000.0], '194': [1000.0, 1000.0], '195': [1000.0, 1000.0], '196': [1000.0, 1000.0], '197': [1000.0, 1000.0], '198': [1000.0, 1000.0], '199': [1000.0, 1000.0], '200': [1000.0, 1000.0], '201': [1000.0, 1000.0], '202': [1000.0, 1000.0], '203': [1000.0, 1000.0], '204': [1000.0, 1000.0], '205': [1000.0, 1000.0], '206': [1000.0, 1000.0], '207': [1000.0, 1000.0], '208': [1000.0, 1000.0], '209': [1000.0, 1000.0], '210': [1000.0, 1000.0], '211': [1000.0, 1000.0], '212': [1000.0, 1000.0], '213': [1000.0, 1000.0], '214': [1000.0, 1000.0], '215': [1000.0, 1000.0], '216': [1000.0, 1000.0], '217': [1000.0, 1000.0], '218': [1000.0, 1000.0], '219': [1000.0, 1000.0], '220': [1000.0, 1000.0], '221': [1000.0, 1000.0], '222': [1000.0, 1000.0], '223': [1000.0, 1000.0], '224': [1000.0, 1000.0], '225': [1000.0, 1000.0], '226': [1000.0, 1000.0], '227': [1000.0, 1000.0], '228': [1000.0, 1000.0], '229': [1000.0, 1000.0], '230': [1000.0, 1000.0], '231': [1000.0, 1000.0], '232': [1000.0, 1000.0], '233': [1000.0, 1000.0], '234': [1000.0, 1000.0], '235': [1000.0, 1000.0], '236': [1000.0, 1000.0], '237': [1000.0, 1000.0], '238': [1000.0, 1000.0], '239': [1000.0, 1000.0], '240': [1000.0, 1000.0], '241': [1000.0, 1000.0], '242': [1000.0, 1000.0], '243': [1000.0, 1000.0], '244': [1000.0, 1000.0], '245': [1000.0, 1000.0], '246': [1000.0, 1000.0], '247': [1000.0, 1000.0], '248': [1000.0, 1000.0], '249': [1000.0, 1000.0], '250': [1000.0, 1000.0], '251': [1000.0, 1000.0], '252': [1000.0, 1000.0], '253': [1000.0, 1000.0], '254': [1000.0, 1000.0], '255': [1000.0, 1000.0], '256': [1000.0, 1000.0], '257': [1000.0, 1000.0], '258': [1000.0, 1000.0], '259': [1000.0, 1000.0], '260': [1000.0, 1000.0], '261': [1000.0, 1000.0], '262': [1000.0, 1000.0], '263': [1000.0, 1000.0], '264': [1000.0, 1000.0], '265': [1000.0, 1000.0], '266': [1000.0, 1000.0], '267': [1000.0, 1000.0], '268': [1000.0, 1000.0], '269': [1000.0, 1000.0], '270': [1000.0, 1000.0], '271': [1000.0, 1000.0], '272': [1000.0, 1000.0], '273': [1000.0, 1000.0], '274': [1000.0, 1000.0], '275': [1000.0, 1000.0], '276': [1000.0, 1000.0], '277': [1000.0, 1000.0], '278': [1000.0, 1000.0], '279': [1000.0, 1000.0], '280': [1000.0, 1000.0], '281': [1000.0, 1000.0], '282': [1000.0, 1000.0], '283': [1000.0, 1000.0], '284': [1000.0, 1000.0], '285': [1000.0, 1000.0], '286': [1000.0, 1000.0], '287': [1000.0, 1000.0], '288': [1000.0, 1000.0], '289': [1000.0, 1000.0], '290': [1000.0, 1000.0], '291': [1000.0, 1000.0], '292': [1000.0, 1000.0], '293': [1000.0, 1000.0], '294': [1000.0, 1000.0], '295': [1000.0, 1000.0], '296': [1000.0, 1000.0], '297': [1000.0, 1000.0], '298': [1000.0, 1000.0], '299': [1000.0, 1000.0], '300': [1000.0, 1000.0], '301': [1000.0, 1000.0], '302': [1000.0, 1000.0], '303': [1000.0, 1000.0], '304': [1000.0, 1000.0], '305': [1000.0, 1000.0], '306': [1000.0, 1000.0], '307': [1000.0, 1000.0], '308': [1000.0, 1000.0], '309': [1000.0, 1000.0], '310': [1000.0, 1000.0], '311': [1000.0, 1000.0], '312': [1000.0, 1000.0], '313': [1000.0, 1000.0], '314': [1000.0, 1000.0], '315': [1000.0, 1000.0], '316': [1000.0, 1000.0], '317': [1000.0, 1000.0], '318': [1000.0, 1000.0], '319': [1000.0, 1000.0], '320': [1000.0, 1000.0], '321': [1000.0, 1000.0], '322': [1000.0, 1000.0], '323': [1000.0, 1000.0], '324': [1000.0, 1000.0], '325': [1000.0, 1000.0], '326': [1000.0, 1000.0], '327': [1000.0, 1000.0], '328': [1000.0, 1000.0], '329': [1000.0, 1000.0], '330': [1000.0, 1000.0], '331': [1000.0, 1000.0], '332': [1000.0, 1000.0], '333': [1000.0, 1000.0], '334': [1000.0, 1000.0], '335': [1000.0, 1000.0], '336': [1000.0, 1000.0], '337': [1000.0, 1000.0], '338': [1000.0, 1000.0], '339': [1000.0, 1000.0], '340': [1000.0, 1000.0], '341': [1000.0, 1000.0], '342': [1000.0, 1000.0], '343': [1000.0, 1000.0], '344': [1000.0, 1000.0], '345': [1000.0, 1000.0], '346': [1000.0, 1000.0], '347': [1000.0, 1000.0], '348': [1000.0, 1000.0], '349': [1000.0, 1000.0], '350': [1000.0, 1000.0], '351': [1000.0, 1000.0], '352': [1000.0, 1000.0], '353': [1000.0, 1000.0], '354': [1000.0, 1000.0], '355': [1000.0, 1000.0], '356': [1000.0, 1000.0], '357': [1000.0, 1000.0], '358': [1000.0, 1000.0], '359': [1000.0, 1000.0], '360': [1000.0, 1000.0], '361': [1000.0, 1000.0], '362': [1000.0, 1000.0], '363': [1000.0, 1000.0], '364': [1000.0, 1000.0], '365': [1000.0, 1000.0], '366': [1000.0, 1000.0], '367': [1000.0, 1000.0], '368': [1000.0, 1000.0], '369': [1000.0, 1000.0], '370': [1000.0, 1000.0], '371': [1000.0, 1000.0], '372': [1000.0, 1000.0], '373': [1000.0, 1000.0], '374': [1000.0, 1000.0], '375': [1000.0, 1000.0], '376': [1000.0, 1000.0], '377': [1000.0, 1000.0], '378': [1000.0, 1000.0], '379': [1000.0, 1000.0], '380': [1000.0, 1000.0], '381': [1000.0, 1000.0], '382': [1000.0, 1000.0], '383': [1000.0, 1000.0], '384': [1000.0, 1000.0], '385': [1000.0, 1000.0], '386': [1000.0, 1000.0], '387': [1000.0, 1000.0], '388': [1000.0, 1000.0], '389': [1000.0, 1000.0], '390': [1000.0, 1000.0], '391': [1000.0, 1000.0], '392': [1000.0, 1000.0], '393': [1000.0, 1000.0], '394': [1000.0, 1000.0], '395': [1000.0, 1000.0], '396': [1000.0, 1000.0], '397': [1000.0, 1000.0], '398': [1000.0, 1000.0], '399': [1000.0, 1000.0], '400': [1000.0, 1000.0], '401': [1000.0, 1000.0], '402': [1000.0, 1000.0], '403': [1000.0, 1000.0], '404': [1000.0, 1000.0], '405': [1000.0, 1000.0], '406': [1000.0, 1000.0], '407': [1000.0, 1000.0], '408': [1000.0, 1000.0], '409': [1000.0, 1000.0], '410': [1000.0, 1000.0], '411': [1000.0, 1000.0], '412': [1000.0, 1000.0], '413': [1000.0, 1000.0], '414': [1000.0, 1000.0], '415': [1000.0, 1000.0], '416': [1000.0, 1000.0], '417': [1000.0, 1000.0], '418': [1000.0, 1000.0], '419': [1000.0, 1000.0], '420': [1000.0, 1000.0], '421': [1000.0, 1000.0], '422': [1000.0, 1000.0], '423': [1000.0, 1000.0], '424': [1000.0, 1000.0], '425': [1000.0, 1000.0], '426': [1000.0, 1000.0], '427': [1000.0, 1000.0], '428': [1000.0, 1000.0], '429': [1000.0, 1000.0], '430': [1000.0, 1000.0], '431': [1000.0, 1000.0], '432': [1000.0, 1000.0], '433': [1000.0, 1000.0], '434': [1000.0, 1000.0], '435': [1000.0, 1000.0], '436': [1000.0, 1000.0], '437': [1000.0, 1000.0], '438': [1000.0, 1000.0], '439': [1000.0, 1000.0], '440': [1000.0, 1000.0], '441': [1000.0, 1000.0], '442': [1000.0, 1000.0], '443': [1000.0, 1000.0], '444': [1000.0, 1000.0], '445': [1000.0, 1000.0], '446': [1000.0, 1000.0], '447': [1000.0, 1000.0], '448': [1000.0, 1000.0], '449': [1000.0, 1000.0], '450': [1000.0, 1000.0], '451': [1000.0, 1000.0], '452': [1000.0, 1000.0], '453': [1000.0, 1000.0], '454': [1000.0, 1000.0], '455': [1000.0, 1000.0], '456': [1000.0, 1000.0], '457': [1000.0, 1000.0], '458': [1000.0, 1000.0], '459': [1000.0, 1000.0], '460': [1000.0, 1000.0], '461': [1000.0, 1000.0], '462': [1000.0, 1000.0], '463': [1000.0, 1000.0], '464': [1000.0, 1000.0], '465': [1000.0, 1000.0], '466': [1000.0, 1000.0], '467': [1000.0, 1000.0], '468': [1000.0, 1000.0], '469': [1000.0, 1000.0], '470': [1000.0, 1000.0], '471': [1000.0, 1000.0], '472': [1000.0, 1000.0], '473': [1000.0, 1000.0], '474': [1000.0, 1000.0], '475': [1000.0, 1000.0], '476': [1000.0, 1000.0], '477': [1000.0, 1000.0], '478': [1000.0, 1000.0], '479': [1000.0, 1000.0], '480': [1000.0, 1000.0], '481': [1000.0, 1000.0], '482': [1000.0, 1000.0], '483': [1000.0, 1000.0], '484': [1000.0, 1000.0], '485': [1000.0, 1000.0], '486': [1000.0, 1000.0], '487': [1000.0, 1000.0], '488': [1000.0, 1000.0], '489': [1000.0, 1000.0], '490': [1000.0, 1000.0], '491': [1000.0, 1000.0], '492': [1000.0, 1000.0], '493': [1000.0, 1000.0], '494': [1000.0, 1000.0], '495': [1000.0, 1000.0], '496': [1000.0, 1000.0], '497': [1000.0, 1000.0], '498': [1000.0, 1000.0], '499': [1000.0, 1000.0], '500': [1000.0, 1000.0], '501': [1000.0, 1000.0], '502': [1000.0, 1000.0], '503': [1000.0, 1000.0], '504': [1000.0, 1000.0], '505': [1000.0, 1000.0], '506': [1000.0, 1000.0], '507': [1000.0, 1000.0], '508': [1000.0, 1000.0], '509': [1000.0, 1000.0], '510': [1000.0, 1000.0], '511': [1000.0, 1000.0], '512': [1000.0, 1000.0], '513': [1000.0, 1000.0], '514': [1000.0, 1000.0], '515': [1000.0, 1000.0], '516': [1000.0, 1000.0], '517': [1000.0, 1000.0], '518': [1000.0, 1000.0], '519': [1000.0, 1000.0], '520': [1000.0, 1000.0], '521': [1000.0, 1000.0], '522': [1000.0, 1000.0], '523': [1000.0, 1000.0], '524': [1000.0, 1000.0], '525': [1000.0, 1000.0], '526': [1000.0, 1000.0], '527': [1000.0, 1000.0], '528': [1000.0, 1000.0], '529': [1000.0, 1000.0], '530': [1000.0, 1000.0], '531': [1000.0, 1000.0], '532': [1000.0, 1000.0], '533': [1000.0, 1000.0], '534': [1000.0, 1000.0], '535': [1000.0, 1000.0], '536': [1000.0, 1000.0], '537': [1000.0, 1000.0], '538': [1000.0, 1000.0], '539': [1000.0, 1000.0], '540': [1000.0, 1000.0], '541': [1000.0, 1000.0], '542': [1000.0, 1000.0], '543': [1000.0, 1000.0], '544': [1000.0, 1000.0], '545': [1000.0, 1000.0], '546': [1000.0, 1000.0], '547': [1000.0, 1000.0], '548': [1000.0, 1000.0], '549': [1000.0, 1000.0], '550': [1000.0, 1000.0], '551': [1000.0, 1000.0], '552': [1000.0, 1000.0], '553': [1000.0, 1000.0], '554': [1000.0, 1000.0], '555': [1000.0, 1000.0], '556': [1000.0, 1000.0], '557': [1000.0, 1000.0], '558': [1000.0, 1000.0], '559': [1000.0, 1000.0], '560': [1000.0, 1000.0], '561': [1000.0, 1000.0], '562': [1000.0, 1000.0], '563': [1000.0, 1000.0], '564': [1000.0, 1000.0], '565': [1000.0, 1000.0], '566': [1000.0, 1000.0], '567': [1000.0, 1000.0], '568': [1000.0, 1000.0], '569': [1000.0, 1000.0], '570': [1000.0, 1000.0], '571': [1000.0, 1000.0], '572': [1000.0, 1000.0], '573': [1000.0, 1000.0], '574': [1000.0, 1000.0], '575': [1000.0, 1000.0], '576': [1000.0, 1000.0], '577': [1000.0, 1000.0], '578': [1000.0, 1000.0], '579': [1000.0, 1000.0], '580': [1000.0, 1000.0], '581': [1000.0, 1000.0], '582': [1000.0, 1000.0], '583': [1000.0, 1000.0], '584': [1000.0, 1000.0], '585': [1000.0, 1000.0], '586': [1000.0, 1000.0], '587': [1000.0, 1000.0], '588': [1000.0, 1000.0], '589': [1000.0, 1000.0], '590': [1000.0, 1000.0], '591': [1000.0, 1000.0], '592': [1000.0, 1000.0], '593': [1000.0, 1000.0], '594': [1000.0, 1000.0], '595': [1000.0, 1000.0], '596': [1000.0, 1000.0], '597': [1000.0, 1000.0], '598': [1000.0, 1000.0], '599': [1000.0, 1000.0], '600': [1000.0, 1000.0], '601': [1000.0, 1000.0], '602': [1000.0, 1000.0], '603': [1000.0, 1000.0], '604': [1000.0, 1000.0], '605': [1000.0, 1000.0], '606': [1000.0, 1000.0], '607': [1000.0, 1000.0], '608': [1000.0, 1000.0], '609': [1000.0, 1000.0], '610': [1000.0, 1000.0], '611': [1000.0, 1000.0], '612': [1000.0, 1000.0], '613': [1000.0, 1000.0], '614': [1000.0, 1000.0], '615': [1000.0, 1000.0], '616': [1000.0, 1000.0], '617': [1000.0, 1000.0], '618': [1000.0, 1000.0], '619': [1000.0, 1000.0], '620': [1000.0, 1000.0], '621': [1000.0, 1000.0], '622': [1000.0, 1000.0], '623': [1000.0, 1000.0], '624': [1000.0, 1000.0], '625': [1000.0, 1000.0], '626': [1000.0, 1000.0], '627': [1000.0, 1000.0], '628': [1000.0, 1000.0], '629': [1000.0, 1000.0], '630': [1000.0, 1000.0], '631': [1000.0, 1000.0], '632': [1000.0, 1000.0], '633': [1000.0, 1000.0], '634': [1000.0, 1000.0], '635': [1000.0, 1000.0], '636': [1000.0, 1000.0], '637': [1000.0, 1000.0], '638': [1000.0, 1000.0], '639': [1000.0, 1000.0], '640': [1000.0, 1000.0], '641': [1000.0, 1000.0], '642': [1000.0, 1000.0], '643': [1000.0, 1000.0], '644': [1000.0, 1000.0], '645': [1000.0, 1000.0], '646': [1000.0, 1000.0], '647': [1000.0, 1000.0], '648': [1000.0, 1000.0], '649': [1000.0, 1000.0], '650': [1000.0, 1000.0], '651': [1000.0, 1000.0], '652': [1000.0, 1000.0], '653': [1000.0, 1000.0], '654': [1000.0, 1000.0], '655': [1000.0, 1000.0], '656': [1000.0, 1000.0], '657': [1000.0, 1000.0], '658': [1000.0, 1000.0], '659': [1000.0, 1000.0], '660': [1000.0, 1000.0], '661': [1000.0, 1000.0], '662': [1000.0, 1000.0], '663': [1000.0, 1000.0], '664': [1000.0, 1000.0], '665': [1000.0, 1000.0], '666': [1000.0, 1000.0], '667': [1000.0, 1000.0], '668': [1000.0, 1000.0], '669': [1000.0, 1000.0], '670': [1000.0, 1000.0], '671': [1000.0, 1000.0], '672': [1000.0, 1000.0], '673': [1000.0, 1000.0], '674': [1000.0, 1000.0], '675': [1000.0, 1000.0], '676': [1000.0, 1000.0], '677': [1000.0, 1000.0], '678': [1000.0, 1000.0], '679': [1000.0, 1000.0], '680': [1000.0, 1000.0], '681': [1000.0, 1000.0], '682': [1000.0, 1000.0], '683': [1000.0, 1000.0], '684': [1000.0, 1000.0], '685': [1000.0, 1000.0], '686': [1000.0, 1000.0], '687': [1000.0, 1000.0], '688': [1000.0, 1000.0], '689': [1000.0, 1000.0], '690': [1000.0, 1000.0], '691': [1000.0, 1000.0], '692': [1000.0, 1000.0], '693': [1000.0, 1000.0], '694': [1000.0, 1000.0], '695': [1000.0, 1000.0], '696': [1000.0, 1000.0], '697': [1000.0, 1000.0], '698': [1000.0, 1000.0], '699': [1000.0, 1000.0], '700': [1000.0, 1000.0], '701': [1000.0, 1000.0], '702': [1000.0, 1000.0], '703': [1000.0, 1000.0], '704': [1000.0, 1000.0], '705': [1000.0, 1000.0], '706': [1000.0, 1000.0], '707': [1000.0, 1000.0], '708': [1000.0, 1000.0], '709': [1000.0, 1000.0], '710': [1000.0, 1000.0], '711': [1000.0, 1000.0], '712': [1000.0, 1000.0], '713': [1000.0, 1000.0], '714': [1000.0, 1000.0], '715': [1000.0, 1000.0], '716': [1000.0, 1000.0], '717': [1000.0, 1000.0], '718': [1000.0, 1000.0], '719': [1000.0, 1000.0], '720': [1000.0, 1000.0], '721': [1000.0, 1000.0], '722': [1000.0, 1000.0], '723': [1000.0, 1000.0], '724': [1000.0, 1000.0], '725': [1000.0, 1000.0], '726': [1000.0, 1000.0], '727': [1000.0, 1000.0], '728': [1000.0, 1000.0], '729': [1000.0, 1000.0], '730': [1000.0, 1000.0], '731': [1000.0, 1000.0], '732': [1000.0, 1000.0], '733': [1000.0, 1000.0], '734': [1000.0, 1000.0], '735': [1000.0, 1000.0], '736': [1000.0, 1000.0], '737': [1000.0, 1000.0], '738': [1000.0, 1000.0], '739': [1000.0, 1000.0], '740': [1000.0, 1000.0], '741': [1000.0, 1000.0], '742': [1000.0, 1000.0], '743': [1000.0, 1000.0], '744': [1000.0, 1000.0], '745': [1000.0, 1000.0], '746': [1000.0, 1000.0], '747': [1000.0, 1000.0], '748': [1000.0, 1000.0], '749': [1000.0, 1000.0], '750': [1000.0, 1000.0], '751': [1000.0, 1000.0], '752': [1000.0, 1000.0], '753': [1000.0, 1000.0], '754': [1000.0, 1000.0], '755': [1000.0, 1000.0], '756': [1000.0, 1000.0], '757': [1000.0, 1000.0], '758': [1000.0, 1000.0], '759': [1000.0, 1000.0], '760': [1000.0, 1000.0], '761': [1000.0, 1000.0], '762': [1000.0, 1000.0], '763': [1000.0, 1000.0], '764': [1000.0, 1000.0], '765': [1000.0, 1000.0], '766': [1000.0, 1000.0], '767': [1000.0, 1000.0], '768': [1000.0, 1000.0], '769': [1000.0, 1000.0], '770': [1000.0, 1000.0], '771': [1000.0, 1000.0], '772': [1000.0, 1000.0], '773': [1000.0, 1000.0], '774': [1000.0, 1000.0], '775': [1000.0, 1000.0], '776': [1000.0, 1000.0], '777': [1000.0, 1000.0], '778': [1000.0, 1000.0], '779': [1000.0, 1000.0], '780': [1000.0, 1000.0], '781': [1000.0, 1000.0], '782': [1000.0, 1000.0], '783': [1000.0, 1000.0], '784': [1000.0, 1000.0], '785': [1000.0, 1000.0], '786': [1000.0, 1000.0], '787': [1000.0, 1000.0], '788': [1000.0, 1000.0], '789': [1000.0, 1000.0], '790': [1000.0, 1000.0], '791': [1000.0, 1000.0], '792': [1000.0, 1000.0], '793': [1000.0, 1000.0], '794': [1000.0, 1000.0], '795': [1000.0, 1000.0], '796': [1000.0, 1000.0], '797': [1000.0, 1000.0], '798': [1000.0, 1000.0], '799': [1000.0, 1000.0], '800': [1000.0, 1000.0], '801': [1000.0, 1000.0], '802': [1000.0, 1000.0], '803': [1000.0, 1000.0], '804': [1000.0, 1000.0], '805': [1000.0, 1000.0], '806': [1000.0, 1000.0], '807': [1000.0, 1000.0], '808': [1000.0, 1000.0], '809': [1000.0, 1000.0], '810': [1000.0, 1000.0], '811': [1000.0, 1000.0], '812': [1000.0, 1000.0], '813': [1000.0, 1000.0], '814': [1000.0, 1000.0], '815': [1000.0, 1000.0], '816': [1000.0, 1000.0], '817': [1000.0, 1000.0], '818': [1000.0, 1000.0], '819': [1000.0, 1000.0], '820': [1000.0, 1000.0], '821': [1000.0, 1000.0], '822': [1000.0, 1000.0], '823': [1000.0, 1000.0], '824': [1000.0, 1000.0], '825': [1000.0, 1000.0], '826': [1000.0, 1000.0], '827': [1000.0, 1000.0], '828': [1000.0, 1000.0], '829': [1000.0, 1000.0], '830': [1000.0, 1000.0], '831': [1000.0, 1000.0], '832': [1000.0, 1000.0], '833': [1000.0, 1000.0], '834': [1000.0, 1000.0], '835': [1000.0, 1000.0], '836': [1000.0, 1000.0], '837': [1000.0, 1000.0], '838': [1000.0, 1000.0], '839': [1000.0, 1000.0], '840': [1000.0, 1000.0], '841': [1000.0, 1000.0], '842': [1000.0, 1000.0], '843': [1000.0, 1000.0], '844': [1000.0, 1000.0], '845': [1000.0, 1000.0], '846': [1000.0, 1000.0], '847': [1000.0, 1000.0], '848': [1000.0, 1000.0], '849': [1000.0, 1000.0], '850': [1000.0, 1000.0], '851': [1000.0, 1000.0], '852': [1000.0, 1000.0], '853': [1000.0, 1000.0], '854': [1000.0, 1000.0], '855': [1000.0, 1000.0], '856': [1000.0, 1000.0], '857': [1000.0, 1000.0], '858': [1000.0, 1000.0], '859': [1000.0, 1000.0], '860': [1000.0, 1000.0], '861': [1000.0, 1000.0], '862': [1000.0, 1000.0], '863': [1000.0, 1000.0], '864': [1000.0, 1000.0], '865': [1000.0, 1000.0], '866': [1000.0, 1000.0], '867': [1000.0, 1000.0], '868': [1000.0, 1000.0], '869': [1000.0, 1000.0], '870': [1000.0, 1000.0], '871': [1000.0, 1000.0], '872': [1000.0, 1000.0], '873': [1000.0, 1000.0], '874': [1000.0, 1000.0], '875': [1000.0, 1000.0], '876': [1000.0, 1000.0], '877': [1000.0, 1000.0], '878': [1000.0, 1000.0], '879': [1000.0, 1000.0], '880': [1000.0, 1000.0], '881': [1000.0, 1000.0], '882': [1000.0, 1000.0], '883': [1000.0, 1000.0], '884': [1000.0, 1000.0], '885': [1000.0, 1000.0], '886': [1000.0, 1000.0], '887': [1000.0, 1000.0], '888': [1000.0, 1000.0], '889': [1000.0, 1000.0], '890': [1000.0, 1000.0], '891': [1000.0, 1000.0], '892': [1000.0, 1000.0], '893': [1000.0, 1000.0], '894': [1000.0, 1000.0], '895': [1000.0, 1000.0], '896': [1000.0, 1000.0], '897': [1000.0, 1000.0], '898': [1000.0, 1000.0], '899': [1000.0, 1000.0], '900': [1000.0, 1000.0], '901': [1000.0, 1000.0], '902': [1000.0, 1000.0], '903': [1000.0, 1000.0], '904': [1000.0, 1000.0], '905': [1000.0, 1000.0], '906': [1000.0, 1000.0], '907': [1000.0, 1000.0], '908': [1000.0, 1000.0], '909': [1000.0, 1000.0], '910': [1000.0, 1000.0], '911': [1000.0, 1000.0], '912': [1000.0, 1000.0], '913': [1000.0, 1000.0], '914': [1000.0, 1000.0], '915': [1000.0, 1000.0], '916': [1000.0, 1000.0], '917': [1000.0, 1000.0], '918': [1000.0, 1000.0], '919': [1000.0, 1000.0], '920': [1000.0, 1000.0], '921': [1000.0, 1000.0], '922': [1000.0, 1000.0], '923': [1000.0, 1000.0], '924': [1000.0, 1000.0], '925': [1000.0, 1000.0], '926': [1000.0, 1000.0], '927': [1000.0, 1000.0], '928': [1000.0, 1000.0], '929': [1000.0, 1000.0], '930': [1000.0, 1000.0], '931': [1000.0, 1000.0], '932': [1000.0, 1000.0], '933': [1000.0, 1000.0], '934': [1000.0, 1000.0], '935': [1000.0, 1000.0], '936': [1000.0, 1000.0], '937': [1000.0, 1000.0], '938': [1000.0, 1000.0], '939': [1000.0, 1000.0], '940': [1000.0, 1000.0], '941': [1000.0, 1000.0], '942': [1000.0, 1000.0], '943': [1000.0, 1000.0], '944': [1000.0, 1000.0], '945': [1000.0, 1000.0], '946': [1000.0, 1000.0], '947': [1000.0, 1000.0], '948': [1000.0, 1000.0], '949': [1000.0, 1000.0], '950': [1000.0, 1000.0], '951': [1000.0, 1000.0], '952': [1000.0, 1000.0], '953': [1000.0, 1000.0], '954': [1000.0, 1000.0], '955': [1000.0, 1000.0], '956': [1000.0, 1000.0], '957': [1000.0, 1000.0], '958': [1000.0, 1000.0], '959': [1000.0, 1000.0], '960': [1000.0, 1000.0], '961': [1000.0, 1000.0], '962': [1000.0, 1000.0], '963': [1000.0, 1000.0], '964': [1000.0, 1000.0], '965': [1000.0, 1000.0], '966': [1000.0, 1000.0], '967': [1000.0, 1000.0], '968': [1000.0, 1000.0], '969': [1000.0, 1000.0], '970': [1000.0, 1000.0], '971': [1000.0, 1000.0], '972': [1000.0, 1000.0], '973': [1000.0, 1000.0], '974': [1000.0, 1000.0], '975': [1000.0, 1000.0], '976': [1000.0, 1000.0], '977': [1000.0, 1000.0], '978': [1000.0, 1000.0], '979': [1000.0, 1000.0], '980': [1000.0, 1000.0], '981': [1000.0, 1000.0], '982': [1000.0, 1000.0], '983': [1000.0, 1000.0], '984': [1000.0, 1000.0], '985': [1000.0, 1000.0], '986': [1000.0, 1000.0], '987': [1000.0, 1000.0], '988': [1000.0, 1000.0], '989': [1000.0, 1000.0], '990': [1000.0, 1000.0], '991': [1000.0, 1000.0], '992': [1000.0, 1000.0], '993': [1000.0, 1000.0], '994': [1000.0, 1000.0], '995': [1000.0, 1000.0], '996': [1000.0, 1000.0], '997': [1000.0, 1000.0], '998': [1000.0, 1000.0], '999': [1000.0, 1000.0], '1000': [1000.0, 1000.0], '1001': [1000.0, 1000.0], '1002': [1000.0, 1000.0], '1003': [1000.0, 1000.0], '1004': [1000.0, 1000.0], '1005': [1000.0, 1000.0], '1006': [1000.0, 1000.0], '1007': [1000.0, 1000.0], '1008': [1000.0, 1000.0], '1009': [1000.0, 1000.0], '1010': [1000.0, 1000.0], '1011': [1000.0, 1000.0], '1012': [1000.0, 1000.0], '1013': [1000.0, 1000.0], '1014': [1000.0, 1000.0], '1015': [1000.0, 1000.0], '1016': [1000.0, 1000.0], '1017': [1000.0, 1000.0], '1018': [1000.0, 1000.0], '1019': [1000.0, 1000.0], '1020': [1000.0, 1000.0], '1021': [1000.0, 1000.0], '1022': [1000.0, 1000.0], '1023': [1000.0, 1000.0], '1024': [1000.0, 1000.0], '1025': [1000.0, 1000.0], '1026': [1000.0, 1000.0], '1027': [1000.0, 1000.0], '1028': [1000.0, 1000.0], '1029': [1000.0, 1000.0], '1030': [1000.0, 1000.0], '1031': [1000.0, 1000.0], '1032': [1000.0, 1000.0], '1033': [1000.0, 1000.0], '1034': [1000.0, 1000.0], '1035': [1000.0, 1000.0], '1036': [1000.0, 1000.0], '1037': [1000.0, 1000.0], '1038': [1000.0, 1000.0], '1039': [1000.0, 1000.0], '1040': [1000.0, 1000.0], '1041': [1000.0, 1000.0], '1042': [1000.0, 1000.0], '1043': [1000.0, 1000.0], '1044': [1000.0, 1000.0], '1045': [1000.0, 1000.0], '1046': [1000.0, 1000.0], '1047': [1000.0, 1000.0], '1048': [1000.0, 1000.0], '1049': [1000.0, 1000.0], '1050': [1000.0, 1000.0], '1051': [1000.0, 1000.0], '1052': [1000.0, 1000.0], '1053': [1000.0, 1000.0], '1054': [1000.0, 1000.0], '1055': [1000.0, 1000.0], '1056': [1000.0, 1000.0], '1057': [1000.0, 1000.0], '1058': [1000.0, 1000.0], '1059': [1000.0, 1000.0], '1060': [1000.0, 1000.0], '1061': [1000.0, 1000.0], '1062': [1000.0, 1000.0], '1063': [1000.0, 1000.0], '1064': [1000.0, 1000.0], '1065': [1000.0, 1000.0], '1066': [1000.0, 1000.0], '1067': [1000.0, 1000.0], '1068': [1000.0, 1000.0], '1069': [1000.0, 1000.0], '1070': [1000.0, 1000.0], '1071': [1000.0, 1000.0], '1072': [1000.0, 1000.0], '1073': [1000.0, 1000.0], '1074': [1000.0, 1000.0], '1075': [1000.0, 1000.0], '1076': [1000.0, 1000.0], '1077': [1000.0, 1000.0], '1078': [1000.0, 1000.0], '1079': [1000.0, 1000.0], '1080': [1000.0, 1000.0], '1081': [1000.0, 1000.0], '1082': [1000.0, 1000.0], '1083': [1000.0, 1000.0], '1084': [1000.0, 1000.0], '1085': [1000.0, 1000.0], '1086': [1000.0, 1000.0], '1087': [1000.0, 1000.0], '1088': [1000.0, 1000.0], '1089': [1000.0, 1000.0], '1090': [1000.0, 1000.0], '1091': [1000.0, 1000.0], '1092': [1000.0, 1000.0], '1093': [1000.0, 1000.0], '1094': [1000.0, 1000.0], '1095': [1000.0, 1000.0], '1096': [1000.0, 1000.0], '1097': [1000.0, 1000.0], '1098': [1000.0, 1000.0], '1099': [1000.0, 1000.0], '1100': [1000.0, 1000.0], '1101': [1000.0, 1000.0], '1102': [1000.0, 1000.0], '1103': [1000.0, 1000.0], '1104': [1000.0, 1000.0], '1105': [1000.0, 1000.0], '1106': [1000.0, 1000.0], '1107': [1000.0, 1000.0], '1108': [1000.0, 1000.0], '1109': [1000.0, 1000.0], '1110': [1000.0, 1000.0], '1111': [1000.0, 1000.0], '1112': [1000.0, 1000.0], '1113': [1000.0, 1000.0], '1114': [1000.0, 1000.0], '1115': [1000.0, 1000.0], '1116': [1000.0, 1000.0], '1117': [1000.0, 1000.0], '1118': [1000.0, 1000.0], '1119': [1000.0, 1000.0], '1120': [1000.0, 1000.0], '1121': [1000.0, 1000.0], '1122': [1000.0, 1000.0], '1123': [1000.0, 1000.0], '1124': [1000.0, 1000.0], '1125': [1000.0, 1000.0], '1126': [1000.0, 1000.0], '1127': [1000.0, 1000.0], '1128': [1000.0, 1000.0], '1129': [1000.0, 1000.0], '1130': [1000.0, 1000.0], '1131': [1000.0, 1000.0], '1132': [1000.0, 1000.0], '1133': [1000.0, 1000.0], '1134': [1000.0, 1000.0], '1135': [1000.0, 1000.0], '1136': [1000.0, 1000.0], '1137': [1000.0, 1000.0], '1138': [1000.0, 1000.0], '1139': [1000.0, 1000.0], '1140': [1000.0, 1000.0], '1141': [1000.0, 1000.0], '1142': [1000.0, 1000.0], '1143': [1000.0, 1000.0], '1144': [1000.0, 1000.0], '1145': [1000.0, 1000.0], '1146': [1000.0, 1000.0], '1147': [1000.0, 1000.0], '1148': [1000.0, 1000.0], '1149': [1000.0, 1000.0], '1150': [1000.0, 1000.0], '1151': [1000.0, 1000.0], '1152': [1000.0, 1000.0], '1153': [1000.0, 1000.0], '1154': [1000.0, 1000.0], '1155': [1000.0, 1000.0], '1156': [1000.0, 1000.0], '1157': [1000.0, 1000.0], '1158': [1000.0, 1000.0], '1159': [1000.0, 1000.0], '1160': [1000.0, 1000.0], '1161': [1000.0, 1000.0], '1162': [1000.0, 1000.0], '1163': [1000.0, 1000.0], '1164': [1000.0, 1000.0], '1165': [1000.0, 1000.0], '1166': [1000.0, 1000.0], '1167': [1000.0, 1000.0], '1168': [1000.0, 1000.0], '1169': [1000.0, 1000.0], '1170': [1000.0, 1000.0], '1171': [1000.0, 1000.0], '1172': [1000.0, 1000.0], '1173': [1000.0, 1000.0], '1174': [1000.0, 1000.0], '1175': [1000.0, 1000.0], '1176': [1000.0, 1000.0], '1177': [1000.0, 1000.0], '1178': [1000.0, 1000.0], '1179': [1000.0, 1000.0], '1180': [1000.0, 1000.0], '1181': [1000.0, 1000.0], '1182': [1000.0, 1000.0], '1183': [1000.0, 1000.0], '1184': [1000.0, 1000.0], '1185': [1000.0, 1000.0], '1186': [1000.0, 1000.0], '1187': [1000.0, 1000.0], '1188': [1000.0, 1000.0], '1189': [1000.0, 1000.0], '1190': [1000.0, 1000.0], '1191': [1000.0, 1000.0], '1192': [1000.0, 1000.0], '1193': [1000.0, 1000.0], '1194': [1000.0, 1000.0], '1195': [1000.0, 1000.0], '1196': [1000.0, 1000.0], '1197': [1000.0, 1000.0], '1198': [1000.0, 1000.0], '1199': [1000.0, 1000.0], '1200': [1000.0, 1000.0], '1201': [1000.0, 1000.0], '1202': [1000.0, 1000.0], '1203': [1000.0, 1000.0], '1204': [1000.0, 1000.0], '1205': [1000.0, 1000.0], '1206': [1000.0, 1000.0], '1207': [1000.0, 1000.0], '1208': [1000.0, 1000.0], '1209': [1000.0, 1000.0], '1210': [1000.0, 1000.0], '1211': [1000.0, 1000.0], '1212': [1000.0, 1000.0], '1213': [1000.0, 1000.0], '1214': [1000.0, 1000.0], '1215': [1000.0, 1000.0], '1216': [1000.0, 1000.0], '1217': [1000.0, 1000.0], '1218': [1000.0, 1000.0], '1219': [1000.0, 1000.0], '1220': [1000.0, 1000.0], '1221': [1000.0, 1000.0], '1222': [1000.0, 1000.0], '1223': [1000.0, 1000.0], '1224': [1000.0, 1000.0], '1225': [1000.0, 1000.0], '1226': [1000.0, 1000.0], '1227': [1000.0, 1000.0], '1228': [1000.0, 1000.0], '1229': [1000.0, 1000.0], '1230': [1000.0, 1000.0], '1231': [1000.0, 1000.0], '1232': [1000.0, 1000.0], '1233': [1000.0, 1000.0], '1234': [1000.0, 1000.0], '1235': [1000.0, 1000.0], '1236': [1000.0, 1000.0], '1237': [1000.0, 1000.0], '1238': [1000.0, 1000.0], '1239': [1000.0, 1000.0], '1240': [1000.0, 1000.0], '1241': [1000.0, 1000.0], '1242': [1000.0, 1000.0], '1243': [1000.0, 1000.0], '1244': [1000.0, 1000.0], '1245': [1000.0, 1000.0], '1246': [1000.0, 1000.0], '1247': [1000.0, 1000.0], '1248': [1000.0, 1000.0], '1249': [1000.0, 1000.0], '1250': [1000.0, 1000.0], '1251': [1000.0, 1000.0], '1252': [1000.0, 1000.0], '1253': [1000.0, 1000.0], '1254': [1000.0, 1000.0], '1255': [1000.0, 1000.0], '1256': [1000.0, 1000.0], '1257': [1000.0, 1000.0], '1258': [1000.0, 1000.0], '1259': [1000.0, 1000.0], '1260': [1000.0, 1000.0], '1261': [1000.0, 1000.0], '1262': [1000.0, 1000.0], '1263': [1000.0, 1000.0], '1264': [1000.0, 1000.0], '1265': [1000.0, 1000.0], '1266': [1000.0, 1000.0], '1267': [1000.0, 1000.0], '1268': [1000.0, 1000.0], '1269': [1000.0, 1000.0], '1270': [1000.0, 1000.0], '1271': [1000.0, 1000.0], '1272': [1000.0, 1000.0], '1273': [1000.0, 1000.0], '1274': [1000.0, 1000.0], '1275': [1000.0, 1000.0], '1276': [1000.0, 1000.0], '1277': [1000.0, 1000.0], '1278': [1000.0, 1000.0], '1279': [1000.0, 1000.0], '1280': [1000.0, 1000.0], '1281': [1000.0, 1000.0], '1282': [1000.0, 1000.0], '1283': [1000.0, 1000.0], '1284': [1000.0, 1000.0], '1285': [1000.0, 1000.0], '1286': [1000.0, 1000.0], '1287': [1000.0, 1000.0], '1288': [1000.0, 1000.0], '1289': [1000.0, 1000.0], '1290': [1000.0, 1000.0], '1291': [1000.0, 1000.0], '1292': [1000.0, 1000.0], '1293': [1000.0, 1000.0], '1294': [1000.0, 1000.0], '1295': [1000.0, 1000.0], '1296': [1000.0, 1000.0], '1297': [1000.0, 1000.0], '1298': [1000.0, 1000.0], '1299': [1000.0, 1000.0], '1300': [1000.0, 1000.0], '1301': [1000.0, 1000.0], '1302': [1000.0, 1000.0], '1303': [1000.0, 1000.0], '1304': [1000.0, 1000.0], '1305': [1000.0, 1000.0], '1306': [1000.0, 1000.0], '1307': [1000.0, 1000.0], '1308': [1000.0, 1000.0], '1309': [1000.0, 1000.0], '1310': [1000.0, 1000.0], '1311': [1000.0, 1000.0], '1312': [1000.0, 1000.0], '1313': [1000.0, 1000.0], '1314': [1000.0, 1000.0], '1315': [1000.0, 1000.0], '1316': [1000.0, 1000.0], '1317': [1000.0, 1000.0], '1318': [1000.0, 1000.0], '1319': [1000.0, 1000.0], '1320': [1000.0, 1000.0], '1321': [1000.0, 1000.0], '1322': [1000.0, 1000.0], '1323': [1000.0, 1000.0], '1324': [1000.0, 1000.0], '1325': [1000.0, 1000.0], '1326': [1000.0, 1000.0], '1327': [1000.0, 1000.0], '1328': [1000.0, 1000.0], '1329': [1000.0, 1000.0], '1330': [1000.0, 1000.0], '1331': [1000.0, 1000.0], '1332': [1000.0, 1000.0], '1333': [1000.0, 1000.0], '1334': [1000.0, 1000.0], '1335': [1000.0, 1000.0], '1336': [1000.0, 1000.0], '1337': [1000.0, 1000.0], '1338': [1000.0, 1000.0], '1339': [1000.0, 1000.0], '1340': [1000.0, 1000.0], '1341': [1000.0, 1000.0], '1342': [1000.0, 1000.0], '1343': [1000.0, 1000.0], '1344': [1000.0, 1000.0], '1345': [1000.0, 1000.0], '1346': [1000.0, 1000.0], '1347': [1000.0, 1000.0], '1348': [1000.0, 1000.0], '1349': [1000.0, 1000.0], '1350': [1000.0, 1000.0], '1351': [1000.0, 1000.0], '1352': [1000.0, 1000.0], '1353': [1000.0, 1000.0], '1354': [1000.0, 1000.0], '1355': [1000.0, 1000.0], '1356': [1000.0, 1000.0], '1357': [1000.0, 1000.0], '1358': [1000.0, 1000.0], '1359': [1000.0, 1000.0], '1360': [1000.0, 1000.0], '1361': [1000.0, 1000.0], '1362': [1000.0, 1000.0], '1363': [1000.0, 1000.0], '1364': [1000.0, 1000.0], '1365': [1000.0, 1000.0], '1366': [1000.0, 1000.0], '1367': [1000.0, 1000.0], '1368': [1000.0, 1000.0], '1369': [1000.0, 1000.0], '1370': [1000.0, 1000.0], '1371': [1000.0, 1000.0], '1372': [1000.0, 1000.0], '1373': [1000.0, 1000.0], '1374': [1000.0, 1000.0], '1375': [1000.0, 1000.0], '1376': [1000.0, 1000.0], '1377': [1000.0, 1000.0], '1378': [1000.0, 1000.0], '1379': [1000.0, 1000.0], '1380': [1000.0, 1000.0], '1381': [1000.0, 1000.0], '1382': [1000.0, 1000.0], '1383': [1000.0, 1000.0], '1384': [1000.0, 1000.0], '1385': [1000.0, 1000.0], '1386': [1000.0, 1000.0], '1387': [1000.0, 1000.0], '1388': [1000.0, 1000.0], '1389': [1000.0, 1000.0], '1390': [1000.0, 1000.0], '1391': [1000.0, 1000.0], '1392': [1000.0, 1000.0], '1393': [1000.0, 1000.0], '1394': [1000.0, 1000.0], '1395': [1000.0, 1000.0], '1396': [1000.0, 1000.0], '1397': [1000.0, 1000.0], '1398': [1000.0, 1000.0], '1399': [1000.0, 1000.0], '1400': [1000.0, 1000.0], '1401': [1000.0, 1000.0], '1402': [1000.0, 1000.0], '1403': [1000.0, 1000.0], '1404': [1000.0, 1000.0], '1405': [1000.0, 1000.0], '1406': [1000.0, 1000.0], '1407': [1000.0, 1000.0], '1408': [1000.0, 1000.0], '1409': [1000.0, 1000.0], '1410': [1000.0, 1000.0], '1411': [1000.0, 1000.0], '1412': [1000.0, 1000.0], '1413': [1000.0, 1000.0], '1414': [1000.0, 1000.0], '1415': [1000.0, 1000.0], '1416': [1000.0, 1000.0], '1417': [1000.0, 1000.0], '1418': [1000.0, 1000.0], '1419': [1000.0, 1000.0], '1420': [1000.0, 1000.0], '1421': [1000.0, 1000.0], '1422': [1000.0, 1000.0], '1423': [1000.0, 1000.0], '1424': [1000.0, 1000.0], '1425': [1000.0, 1000.0], '1426': [1000.0, 1000.0], '1427': [1000.0, 1000.0], '1428': [1000.0, 1000.0], '1429': [1000.0, 1000.0], '1430': [1000.0, 1000.0], '1431': [1000.0, 1000.0], '1432': [1000.0, 1000.0], '1433': [1000.0, 1000.0], '1434': [1000.0, 1000.0], '1435': [1000.0, 1000.0], '1436': [1000.0, 1000.0], '1437': [1000.0, 1000.0], '1438': [1000.0, 1000.0], '1439': [1000.0, 1000.0], '1440': [1000.0, 1000.0], '1441': [1000.0, 1000.0], '1442': [1000.0, 1000.0], '1443': [1000.0, 1000.0], '1444': [1000.0, 1000.0], '1445': [1000.0, 1000.0], '1446': [1000.0, 1000.0], '1447': [1000.0, 1000.0], '1448': [1000.0, 1000.0], '1449': [1000.0, 1000.0], '1450': [1000.0, 1000.0], '1451': [1000.0, 1000.0], '1452': [1000.0, 1000.0], '1453': [1000.0, 1000.0], '1454': [1000.0, 1000.0], '1455': [1000.0, 1000.0], '1456': [1000.0, 1000.0], '1457': [1000.0, 1000.0], '1458': [1000.0, 1000.0], '1459': [1000.0, 1000.0], '1460': [1000.0, 1000.0], '1461': [1000.0, 1000.0], '1462': [1000.0, 1000.0], '1463': [1000.0, 1000.0], '1464': [1000.0, 1000.0], '1465': [1000.0, 1000.0], '1466': [1000.0, 1000.0], '1467': [1000.0, 1000.0], '1468': [1000.0, 1000.0], '1469': [1000.0, 1000.0], '1470': [1000.0, 1000.0], '1471': [1000.0, 1000.0], '1472': [1000.0, 1000.0], '1473': [1000.0, 1000.0], '1474': [1000.0, 1000.0], '1475': [1000.0, 1000.0], '1476': [1000.0, 1000.0], '1477': [1000.0, 1000.0], '1478': [1000.0, 1000.0], '1479': [1000.0, 1000.0], '1480': [1000.0, 1000.0], '1481': [1000.0, 1000.0], '1482': [1000.0, 1000.0], '1483': [1000.0, 1000.0], '1484': [1000.0, 1000.0], '1485': [1000.0, 1000.0], '1486': [1000.0, 1000.0], '1487': [1000.0, 1000.0], '1488': [1000.0, 1000.0], '1489': [1000.0, 1000.0], '1490': [1000.0, 1000.0], '1491': [1000.0, 1000.0], '1492': [1000.0, 1000.0], '1493': [1000.0, 1000.0], '1494': [1000.0, 1000.0], '1495': [1000.0, 1000.0], '1496': [1000.0, 1000.0], '1497': [1000.0, 1000.0], '1498': [1000.0, 1000.0], '1499': [1000.0, 1000.0], '1500': [1000.0, 1000.0], '1501': [1000.0, 1000.0], '1502': [1000.0, 1000.0], '1503': [1000.0, 1000.0], '1504': [1000.0, 1000.0], '1505': [1000.0, 1000.0], '1506': [1000.0, 1000.0], '1507': [1000.0, 1000.0], '1508': [1000.0, 1000.0], '1509': [1000.0, 1000.0], '1510': [1000.0, 1000.0], '1511': [1000.0, 1000.0], '1512': [1000.0, 1000.0], '1513': [1000.0, 1000.0], '1514': [1000.0, 1000.0], '1515': [1000.0, 1000.0], '1516': [1000.0, 1000.0], '1517': [1000.0, 1000.0], '1518': [1000.0, 1000.0], '1519': [1000.0, 1000.0], '1520': [1000.0, 1000.0], '1521': [1000.0, 1000.0], '1522': [1000.0, 1000.0], '1523': [1000.0, 1000.0], '1524': [1000.0, 1000.0], '1525': [1000.0, 1000.0], '1526': [1000.0, 1000.0], '1527': [1000.0, 1000.0], '1528': [1000.0, 1000.0], '1529': [1000.0, 1000.0], '1530': [1000.0, 1000.0], '1531': [1000.0, 1000.0], '1532': [1000.0, 1000.0], '1533': [1000.0, 1000.0], '1534': [1000.0, 1000.0], '1535': [1000.0, 1000.0], '1536': [1000.0, 1000.0], '1537': [1000.0, 1000.0], '1538': [1000.0, 1000.0], '1539': [1000.0, 1000.0], '1540': [1000.0, 1000.0], '1541': [1000.0, 1000.0], '1542': [1000.0, 1000.0], '1543': [1000.0, 1000.0], '1544': [1000.0, 1000.0], '1545': [1000.0, 1000.0], '1546': [1000.0, 1000.0], '1547': [1000.0, 1000.0], '1548': [1000.0, 1000.0], '1549': [1000.0, 1000.0], '1550': [1000.0, 1000.0], '1551': [1000.0, 1000.0], '1552': [1000.0, 1000.0], '1553': [1000.0, 1000.0], '1554': [1000.0, 1000.0], '1555': [1000.0, 1000.0], '1556': [1000.0, 1000.0], '1557': [1000.0, 1000.0], '1558': [1000.0, 1000.0], '1559': [1000.0, 1000.0], '1560': [1000.0, 1000.0], '1561': [1000.0, 1000.0], '1562': [1000.0, 1000.0], '1563': [1000.0, 1000.0], '1564': [1000.0, 1000.0], '1565': [1000.0, 1000.0], '1566': [1000.0, 1000.0], '1567': [1000.0, 1000.0], '1568': [1000.0, 1000.0], '1569': [1000.0, 1000.0], '1570': [1000.0, 1000.0], '1571': [1000.0, 1000.0], '1572': [1000.0, 1000.0], '1573': [1000.0, 1000.0], '1574': [1000.0, 1000.0], '1575': [1000.0, 1000.0], '1576': [1000.0, 1000.0], '1577': [1000.0, 1000.0], '1578': [1000.0, 1000.0], '1579': [1000.0, 1000.0], '1580': [1000.0, 1000.0], '1581': [1000.0, 1000.0], '1582': [1000.0, 1000.0], '1583': [1000.0, 1000.0], '1584': [1000.0, 1000.0], '1585': [1000.0, 1000.0], '1586': [1000.0, 1000.0], '1587': [1000.0, 1000.0], '1588': [1000.0, 1000.0], '1589': [1000.0, 1000.0], '1590': [1000.0, 1000.0], '1591': [1000.0, 1000.0], '1592': [1000.0, 1000.0], '1593': [1000.0, 1000.0], '1594': [1000.0, 1000.0], '1595': [1000.0, 1000.0], '1596': [1000.0, 1000.0], '1597': [1000.0, 1000.0], }
 
model = RK4(ODE, 0.0, y, 0.1, 3600, None, lowerbound, upperbound)
