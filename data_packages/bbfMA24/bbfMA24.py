''' -------------------------------------
Python ODE script generated by ASModeller
(a package in AdvanceSynToolKit)

Date Time: 2024-11-29 2:28:28:319849

name: Whole Cell Kinetic Model (Enzymatic reactions with enzyme transcriptions and translations) of Bifidobacterium bifidum BGN4 (bbfMA24)
author: AMadhunisha Arivazhagan, Maurice Ling
------------------------------------- '''

def C00001(t, y):
    r15 = (13.7 * y[309] * y[79] * y[202]) / (1 + (y[309] * y[79] * y[202]))
    r16 = (13.7 * y[310] * y[195] * y[202]) / (1 + (y[310] * y[195] * y[202]))
    r17 = (13.7 * y[311] * y[3] * y[202] * y[36]) / (1 + (y[311] * y[3] * y[202] * y[36]))
    r18 = (13.7 * y[312] * y[26] * y[202]) / (1 + (y[312] * y[26] * y[202]))
    r19 = (13.7 * y[313] * y[210] * y[202]) / (1 + (y[313] * y[210] * y[202]))
    r20 = (13.7 * y[313] * y[205] * y[202]) / (1 + (y[313] * y[205] * y[202]))
    r129 = (13.7 * y[355] * y[31]) / (1 + (y[355] * y[31]))
    r1 = (13.7 * y[305] * y[107] * y[2] * y[0]) / (1 + (y[305] * y[107] * y[2] * y[0]))
    r2 = (13.7 * y[305] * y[133] * y[0] * y[2]) / (1 + (y[305] * y[133] * y[0] * y[2]))
    r30 = (13.7 * y[319] * y[148] * y[80] * y[0]) / (1 + (y[319] * y[148] * y[80] * y[0]))
    r65 = (13.7 * y[333] * y[158] * y[0]) / (1 + (y[333] * y[158] * y[0]))
    r69 = (13.7 * y[337] * y[93] *y[0]) / (1 + (y[337] * y[93] *y[0]))
    r70 = (13.7 * y[338] * y[67] * y[0]) / (1 + (y[338] * y[67] * y[0]))
    r71 = (13.7 * y[338] * y[184] * y[0]) / (1 + (y[338] * y[184] * y[0]))
    r72 = (13.7 * y[338] * y[67] * y[0]) / (1 + (y[338] * y[67] * y[0]))
    r73 = (13.7 * y[338] * y[123] * y[0]) / (1 + (y[338] * y[123] * y[0]))
    r74 = (13.7 * y[338] * y[169] * y[0]) / (1 + (y[338] * y[169] * y[0]))
    r75 = (13.7 * y[338] * y[177] * y[0]) / (1 + (y[338] * y[177] * y[0]))
    r76 = (13.7 * y[338] * y[193] * y[0]) / (1 + (y[338] * y[193] * y[0]))
    r77 = (13.7 * y[338] * y[225] * y[0]) / (1 + (y[338] * y[225] * y[0]))
    r78 = (13.7 * y[338] * y[223] * y[0]) / (1 + (y[338] * y[223] * y[0]))
    r79 = (13.7 * y[338] * y[230] * y[0]) / (1 + (y[338] * y[230] * y[0]))
    r80 = (13.7 * y[338] * y[221] * y[0]) / (1 + (y[338] * y[221] * y[0]))
    r81 = (13.7 * y[338] * y[230] * y[0]) / (1 + (y[338] * y[230] * y[0]))
    r82 = (13.7 * y[338] * y[232] * y[0]) / (1 + (y[338] * y[232] * y[0]))
    r83 = (13.7 * y[338] * y[233] * y[0]) / (1 + (y[338] * y[233] * y[0]))
    r84 = (13.7 * y[338] * y[228] * y[0]) / (1 + (y[338] * y[228] * y[0]))
    r85 = (13.7 * y[338] * y[67] * y[0]) / (1 + (y[338] * y[67] * y[0]))
    r86 = (13.7 * y[338] * y[184] * y[0]) / (1 + (y[338] * y[184] * y[0]))
    r87 = (13.7 * y[338] * y[67] * y[0]) / (1 + (y[338] * y[67] * y[0]))
    r88 = (13.7 * y[338] * y[123] * y[0]) / (1 + (y[338] * y[123] * y[0]))
    r89 = (13.7 * y[338] * y[169] * y[0]) / (1 + (y[338] * y[169] * y[0]))
    r90 = (13.7 * y[338] * y[177] * y[0]) / (1 + (y[338] * y[177] * y[0]))
    r91 = (13.7 * y[338] * y[193] * y[0]) / (1 + (y[338] * y[193] * y[0]))
    r92 = (13.7 * y[338] * y[225] * y[0]) / (1 + (y[338] * y[225] * y[0]))
    r93 = (13.7 * y[338] * y[223] * y[0]) / (1 + (y[338] * y[223] * y[0]))
    r94 = (13.7 * y[338] * y[230] * y[0]) / (1 + (y[338] * y[230] * y[0]))
    r95 = (13.7 * y[338] * y[221] * y[0]) / (1 + (y[338] * y[221] * y[0]))
    r96 = (13.7 * y[338] * y[230] * y[0]) / (1 + (y[338] * y[230] * y[0]))
    r97 = (13.7 * y[338] * y[232] * y[0]) / (1 + (y[338] * y[232] * y[0]))
    r98 = (13.7 * y[338] * y[233] * y[0]) / (1 + (y[338] * y[233] * y[0]))
    r99 = (13.7 * y[338] * y[228] * y[0]) / (1 + (y[338] * y[228] * y[0]))
    r100 = (13.7 * y[339] * y[235] * y[0] ) / (1 + (y[339] * y[235] * y[0] ))
    r101 = (13.7 * y[339] * y[234] * y[0]) / (1 + (y[339] * y[234] * y[0]))
    r102 = (13.7 * y[339] * y[231] * y[0] ) / (1 + (y[339] * y[231] * y[0] ))
    r103 = (13.7 * y[340] * y[15] * y[0]) / (1 + (y[340] * y[15] * y[0]))
    r104 = (13.7 * y[340] * y[61] * y[0]) / (1 + (y[340] * y[61] * y[0]))
    r105 = (13.7 * y[340] * y[173] * y[0]) / (1 + (y[340] * y[173] * y[0]))
    r106 = (13.7 * y[341] * y[128] * y[0]) / (1 + (y[341] * y[128] * y[0]))
    r107 = (13.7 * y[341] * y[183] * y[0]) / (1 + (y[341] * y[183] * y[0]))
    r111 = (13.7 * y[345] * y[23] * y[0]) / (1 + (y[345] * y[23] * y[0]))
    r112 = (13.7 * y[345] * y[23] * y[0]) / (1 + (y[345] * y[23] * y[0]))
    r113 = (13.7 * y[345] * y[168] * y[0]) / (1 + (y[345] * y[168] * y[0]))
    r114 = (13.7 * y[345] * y[186] * y[0]) / (1 + (y[345] * y[186] * y[0]))
    r116 = (13.7 * y[346] * y[2] * y[0]) / (1 + (y[346] * y[2] * y[0]))
    r117 = (13.7 * y[346] * y[3] * y[0]) / (1 + (y[346] * y[3] * y[0]))
    r118 = (13.7 * y[346] * y[106] * y[0]) / (1 + (y[346] * y[106] * y[0]))
    r119 = (13.7 * y[347] * y[1] * y[0]) / (1 + (y[347] * y[1] * y[0]))
    r120 = (13.7 * y[347] * y[1] * y[0]) / (1 + (y[347] * y[1] * y[0]))
    r130 = (13.7 * y[355] * y[216] * y[0]) / (1 + (y[355] * y[216] * y[0]))
    r133 = (13.7 * y[356] * y[145] * y[0]) / (1 + (y[356] * y[145] * y[0]))
    r134 = (13.7 * y[356] * y[137] * y[0]) / (1 + (y[356] * y[137] * y[0]))
    r135 = (13.7 * y[356] * y[91] * y[0] ) / (1 + (y[356] * y[91] * y[0] ))
    r136 = (13.7 * y[356] * y[143] * y[0]) / (1 + (y[356] * y[143] * y[0]))
    r137 = (13.7 * y[356] * y[145] * y[0]) / (1 + (y[356] * y[145] * y[0]))
    r138 = (13.7 * y[356] * y[39] * y[0]) / (1 + (y[356] * y[39] * y[0]))
    r139 = (13.7 * y[356] * y[180] * y[0]) / (1 + (y[356] * y[180] * y[0]))
    r140 = (13.7 * y[356] * y[178] * y[0]) / (1 + (y[356] * y[178] * y[0]))
    r165 = (13.7 * y[370] * y[30] * y[0]) / (1 + (y[370] * y[30] * y[0]))
    r167 = (13.7 * y[370] * y[1] * y[34] * y[30] * y[0]) / (1 + (y[370] * y[1] * y[34] * y[30] * y[0]))
    r168 = (13.7 * y[371] * y[30] * y[0]) / (1 + (y[371] * y[30] * y[0]))
    r170 = (13.7 * y[371] * y[1] * y[98] * y[30] * y[0]) / (1 + (y[371] * y[1] * y[98] * y[30] * y[0]))
    r171 = (13.7 * y[371] * y[208] * y[1] * y[30] * y[0]) / (1 + (y[371] * y[208] * y[1] * y[30] * y[0]))
    return (r15 + r16 + r17 + r18 + r19 + r20 + r129) - (r1 + r2 + r30 + r65 + r69 + r70 + r71 + r72 + r73 + r74 + r75 + r76 + r77 + r78 + r79 + r80 + r81 + r82 + r83 + r84 + r85 + r86 + r87 + r88 + r89 + r90 + r91 + r92 + r93 + r94 + r95 + r96 + r97 + r98 + r99 + r100 + r101 + r102 + r103 + r104 + r105 + r106 + r107 + r111 + r112 + r113 + r114 + r116 + r117 + r118 + r119 + r120 + r130 + r133 + r134 + r135 + r136 + r137 + r138 + r139 + r140 + r165 + r167 + r168 + r170 + r171)
 
def C00002(t, y):
    r37 = (13.7 * y[326] * y[1] * y[18]) / (1 + (y[326] * y[1] * y[18]))
    r38 = (13.7 * y[326] * y[1] * y[64]) / (1 + (y[326] * y[1] * y[64]))
    r39 = (13.7 * y[326] * y[1] * y[72]) / (1 + (y[326] * y[1] * y[72]))
    r40 = (13.7 * y[326] * y[1] * y[18]) / (1 + (y[326] * y[1] * y[18]))
    r41 = (13.7 * y[326] * y[1] * y[64]) / (1 + (y[326] * y[1] * y[64]))
    r42 = (13.7 * y[326] * y[1] * y[72]) / (1 + (y[326] * y[1] * y[72]))
    r43 = (13.7 * y[327] * y[1] * y[12]) / (1 + (y[327] * y[1] * y[12]))
    r44 = (13.7 * y[327] * y[1] * y[129]) / (1 + (y[327] * y[1] * y[129]))
    r45 = (13.7 * y[328] * y[1] * y[25]) / (1 + (y[328] * y[1] * y[25]))
    r46 = (13.7 * y[329] * y[1] * y[82]) / (1 + (y[329] * y[1] * y[82]))
    r47 = (13.7 * y[329] * y[1] * y[83]) / (1 + (y[329] * y[1] * y[83]))
    r61 = (13.7 * y[332] * y[135] * y[29] * y[1]) / (1 + (y[332] * y[135] * y[29] * y[1]))
    r64 = (13.7 * y[332] * y[214] * y[1]) / (1 + (y[332] * y[214] * y[1]))
    r119 = (13.7 * y[347] * y[1] * y[0]) / (1 + (y[347] * y[1] * y[0]))
    r120 = (13.7 * y[347] * y[1] * y[0]) / (1 + (y[347] * y[1] * y[0]))
    r149 = (13.7 * y[361] * y[1] * y[19] * y[131]) / (1 + (y[361] * y[1] * y[19] * y[131]))
    r150 = (13.7 * y[362] * y[1] * y[56] * y[132]) / (1 + (y[362] * y[1] * y[56] * y[132]))
    r151 = (13.7 * y[363] * y[1] * y[21] * y[130]) / (1 + (y[363] * y[1] * y[21] * y[130]))
    r152 = (13.7 * y[364] * y[1] * y[97] * y[8]) / (1 + (y[364] * y[1] * y[97] * y[8]))
    r153 = (13.7 * y[364] * y[1] * y[68] * y[8]) / (1 + (y[364] * y[1] * y[68] * y[8]))
    r154 = (13.7 * y[365] * y[1] * y[22] * y[8]) / (1 + (y[365] * y[1] * y[22] * y[8]))
    r155 = (13.7 * y[365] * y[1] * y[90] * y[8]) / (1 + (y[365] * y[1] * y[90] * y[8]))
    r156 = (13.7 * y[366] * y[1] * y[17] * y[11]) / (1 + (y[366] * y[1] * y[17] * y[11]))
    r157 = (13.7 * y[367] * y[1] * y[155] * y[17]) / (1 + (y[367] * y[1] * y[155] * y[17]))
    r158 = (13.7 * y[367] * y[1] * y[41] * y[17]) / (1 + (y[367] * y[1] * y[41] * y[17]))
    r159 = (13.7 * y[367] * y[1] * y[66] * y[17]) / (1 + (y[367] * y[1] * y[66] * y[17]))
    r160 = (13.7 * y[367] * y[1] * y[109] * y[17]) / (1 + (y[367] * y[1] * y[109] * y[17]))
    r161 = (13.7 * y[367] * y[1] * y[188] * y[17]) / (1 + (y[367] * y[1] * y[188] * y[17]))
    r162 = (13.7 * y[368] * y[1] * y[17] * y[39]) / (1 + (y[368] * y[1] * y[17] * y[39]))
    r163 = (13.7 * y[368] * y[1] * y[17] * y[139]) / (1 + (y[368] * y[1] * y[17] * y[139]))
    r164 = (13.7 * y[369] * y[1] *  y[49]) / (1 + (y[369] * y[1] *  y[49]))
    r166 = (13.7 * y[370] * y[1] * y[34] * y[11]) / (1 + (y[370] * y[1] * y[34] * y[11]))
    r167 = (13.7 * y[370] * y[1] * y[34] * y[30] * y[0]) / (1 + (y[370] * y[1] * y[34] * y[30] * y[0]))
    r169 = (13.7 * y[371] * y[1] * y[98] * y[11]) / (1 + (y[371] * y[1] * y[98] * y[11]))
    r170 = (13.7 * y[371] * y[1] * y[98] * y[30] * y[0]) / (1 + (y[371] * y[1] * y[98] * y[30] * y[0]))
    r171 = (13.7 * y[371] * y[208] * y[1] * y[30] * y[0]) / (1 + (y[371] * y[208] * y[1] * y[30] * y[0]))
    r172 = (13.7 * y[372] * y[1] * y[40] * y[75]) / (1 + (y[372] * y[1] * y[40] * y[75]))
    r173 = (13.7 * y[372] * y[1] * y[75] * y[51] * y[36]) / (1 + (y[372] * y[1] * y[75] * y[51] * y[36]))
    return (0) - (r37 + r38 + r39 + r40 + r41 + r42 + r43 + r44 + r45 + r46 + r47 + r61 + r64 + r119 + r120 + r149 + r150 + r151 + r152 + r153 + r154 + r155 + r156 + r157 + r158 + r159 + r160 + r161 + r162 + r163 + r164 + r166 + r167 + r169 + r170 + r171 + r172 + r173)
 
def C00003(t, y):
    r14 = (13.7 * y[308] *  y[43] * y[9] * y[3] * y[36]) / (1 + (y[308] *  y[43] * y[9] * y[3] * y[36]))
    r17 = (13.7 * y[311] * y[3] * y[202] * y[36]) / (1 + (y[311] * y[3] * y[202] * y[36]))
    r1 = (13.7 * y[305] * y[107] * y[2] * y[0]) / (1 + (y[305] * y[107] * y[2] * y[0]))
    r2 = (13.7 * y[305] * y[133] * y[0] * y[2]) / (1 + (y[305] * y[133] * y[0] * y[2]))
    r3 = (13.7 * y[305] * y[107] * y[2]) / (1 + (y[305] * y[107] * y[2]))
    r4 = (13.7 * y[306] * y[62] * y[2]) / (1 + (y[306] * y[62] * y[2]))
    r5 = (13.7 * y[306] * y[190] * y[2]) / (1 + (y[306] * y[190] * y[2]))
    r6 = (13.7 * y[306] * y[185] * y[2]) / (1 + (y[306] * y[185] * y[2]))
    r7 = (13.7 * y[307] * y[147] * y[2]) / (1 + (y[307] * y[147] * y[2]))
    r8 = (13.7 * y[307] * y[146] * y[2]) / (1 + (y[307] * y[146] * y[2]))
    r9 = (13.7 * y[307] * y[127] * y[2]) / (1 + (y[307] * y[127] * y[2]))
    r10 = (13.7 * y[307] * y[94] * y[2]) / (1 + (y[307] * y[94] * y[2]))
    r12 = (13.7 * y[308] * y[164] *y[2]) / (1 + (y[308] * y[164] *y[2]))
    r13 = (13.7 * y[308] * y[164] *y[2]) / (1 + (y[308] * y[164] *y[2]))
    r22 = (13.7 * y[315] * y[70] * y[2]) / (1 + (y[315] * y[70] * y[2]))
    r24 = (13.7 * y[317] * y[56] * y[2]) / (1 + (y[317] * y[56] * y[2]))
    r26 = (13.7 * y[317] * y[117] * y[2]) / (1 + (y[317] * y[117] * y[2]))
    r29 = (13.7 * y[318] * y[86] * y[2]) / (1 + (y[318] * y[86] * y[2]))
    r116 = (13.7 * y[346] * y[2] * y[0]) / (1 + (y[346] * y[2] * y[0]))
    return (r14 + r17) - (r1 + r2 + r3 + r4 + r5 + r6 + r7 + r8 + r9 + r10 + r12 + r13 + r22 + r24 + r26 + r29 + r116)
 
def C00004(t, y):
    r1 = (13.7 * y[305] * y[107] * y[2] * y[0]) / (1 + (y[305] * y[107] * y[2] * y[0]))
    r2 = (13.7 * y[305] * y[133] * y[0] * y[2]) / (1 + (y[305] * y[133] * y[0] * y[2]))
    r3 = (13.7 * y[305] * y[107] * y[2]) / (1 + (y[305] * y[107] * y[2]))
    r4 = (13.7 * y[306] * y[62] * y[2]) / (1 + (y[306] * y[62] * y[2]))
    r5 = (13.7 * y[306] * y[190] * y[2]) / (1 + (y[306] * y[190] * y[2]))
    r6 = (13.7 * y[306] * y[185] * y[2]) / (1 + (y[306] * y[185] * y[2]))
    r7 = (13.7 * y[307] * y[147] * y[2]) / (1 + (y[307] * y[147] * y[2]))
    r8 = (13.7 * y[307] * y[146] * y[2]) / (1 + (y[307] * y[146] * y[2]))
    r9 = (13.7 * y[307] * y[127] * y[2]) / (1 + (y[307] * y[127] * y[2]))
    r10 = (13.7 * y[307] * y[94] * y[2]) / (1 + (y[307] * y[94] * y[2]))
    r12 = (13.7 * y[308] * y[164] *y[2]) / (1 + (y[308] * y[164] *y[2]))
    r13 = (13.7 * y[308] * y[164] *y[2]) / (1 + (y[308] * y[164] *y[2]))
    r22 = (13.7 * y[315] * y[70] * y[2]) / (1 + (y[315] * y[70] * y[2]))
    r24 = (13.7 * y[317] * y[56] * y[2]) / (1 + (y[317] * y[56] * y[2]))
    r26 = (13.7 * y[317] * y[117] * y[2]) / (1 + (y[317] * y[117] * y[2]))
    r29 = (13.7 * y[318] * y[86] * y[2]) / (1 + (y[318] * y[86] * y[2]))
    r14 = (13.7 * y[308] *  y[43] * y[9] * y[3] * y[36]) / (1 + (y[308] *  y[43] * y[9] * y[3] * y[36]))
    r17 = (13.7 * y[311] * y[3] * y[202] * y[36]) / (1 + (y[311] * y[3] * y[202] * y[36]))
    r117 = (13.7 * y[346] * y[3] * y[0]) / (1 + (y[346] * y[3] * y[0]))
    return (r1 + r2 + r3 + r4 + r5 + r6 + r7 + r8 + r9 + r10 + r12 + r13 + r22 + r24 + r26 + r29) - (r14 + r17 + r117)
 
def C00005(t, y):
    r25 = (13.7 * y[317] * y[56] * y[5]) / (1 + (y[317] * y[56] * y[5]))
    r27 = (13.7 * y[317] * y[117] * y[5] ) / (1 + (y[317] * y[117] * y[5] ))
    r28 = (13.7 * y[318] * y[86] * y[5]) / (1 + (y[318] * y[86] * y[5]))
    return (r25 + r27 + r28) - (0)
 
def C00006(t, y):
    r25 = (13.7 * y[317] * y[56] * y[5]) / (1 + (y[317] * y[56] * y[5]))
    r27 = (13.7 * y[317] * y[117] * y[5] ) / (1 + (y[317] * y[117] * y[5] ))
    r28 = (13.7 * y[318] * y[86] * y[5]) / (1 + (y[318] * y[86] * y[5]))
    return (0) - (r25 + r27 + r28)
 
def C00008(t, y):
    r37 = (13.7 * y[326] * y[1] * y[18]) / (1 + (y[326] * y[1] * y[18]))
    r38 = (13.7 * y[326] * y[1] * y[64]) / (1 + (y[326] * y[1] * y[64]))
    r39 = (13.7 * y[326] * y[1] * y[72]) / (1 + (y[326] * y[1] * y[72]))
    r40 = (13.7 * y[326] * y[1] * y[18]) / (1 + (y[326] * y[1] * y[18]))
    r41 = (13.7 * y[326] * y[1] * y[64]) / (1 + (y[326] * y[1] * y[64]))
    r42 = (13.7 * y[326] * y[1] * y[72]) / (1 + (y[326] * y[1] * y[72]))
    r43 = (13.7 * y[327] * y[1] * y[12]) / (1 + (y[327] * y[1] * y[12]))
    r44 = (13.7 * y[327] * y[1] * y[129]) / (1 + (y[327] * y[1] * y[129]))
    r45 = (13.7 * y[328] * y[1] * y[25]) / (1 + (y[328] * y[1] * y[25]))
    r46 = (13.7 * y[329] * y[1] * y[82]) / (1 + (y[329] * y[1] * y[82]))
    r47 = (13.7 * y[329] * y[1] * y[83]) / (1 + (y[329] * y[1] * y[83]))
    r119 = (13.7 * y[347] * y[1] * y[0]) / (1 + (y[347] * y[1] * y[0]))
    r120 = (13.7 * y[347] * y[1] * y[0]) / (1 + (y[347] * y[1] * y[0]))
    r154 = (13.7 * y[365] * y[1] * y[22] * y[8]) / (1 + (y[365] * y[1] * y[22] * y[8]))
    r155 = (13.7 * y[365] * y[1] * y[90] * y[8]) / (1 + (y[365] * y[1] * y[90] * y[8]))
    r156 = (13.7 * y[366] * y[1] * y[17] * y[11]) / (1 + (y[366] * y[1] * y[17] * y[11]))
    r157 = (13.7 * y[367] * y[1] * y[155] * y[17]) / (1 + (y[367] * y[1] * y[155] * y[17]))
    r158 = (13.7 * y[367] * y[1] * y[41] * y[17]) / (1 + (y[367] * y[1] * y[41] * y[17]))
    r159 = (13.7 * y[367] * y[1] * y[66] * y[17]) / (1 + (y[367] * y[1] * y[66] * y[17]))
    r160 = (13.7 * y[367] * y[1] * y[109] * y[17]) / (1 + (y[367] * y[1] * y[109] * y[17]))
    r161 = (13.7 * y[367] * y[1] * y[188] * y[17]) / (1 + (y[367] * y[1] * y[188] * y[17]))
    r162 = (13.7 * y[368] * y[1] * y[17] * y[39]) / (1 + (y[368] * y[1] * y[17] * y[39]))
    r163 = (13.7 * y[368] * y[1] * y[17] * y[139]) / (1 + (y[368] * y[1] * y[17] * y[139]))
    r164 = (13.7 * y[369] * y[1] *  y[49]) / (1 + (y[369] * y[1] *  y[49]))
    r166 = (13.7 * y[370] * y[1] * y[34] * y[11]) / (1 + (y[370] * y[1] * y[34] * y[11]))
    r167 = (13.7 * y[370] * y[1] * y[34] * y[30] * y[0]) / (1 + (y[370] * y[1] * y[34] * y[30] * y[0]))
    r172 = (13.7 * y[372] * y[1] * y[40] * y[75]) / (1 + (y[372] * y[1] * y[40] * y[75]))
    r173 = (13.7 * y[372] * y[1] * y[75] * y[51] * y[36]) / (1 + (y[372] * y[1] * y[75] * y[51] * y[36]))
    return (r37 + r38 + r39 + r40 + r41 + r42 + r43 + r44 + r45 + r46 + r47 + r119 + r120 + r154 + r155 + r156 + r157 + r158 + r159 + r160 + r161 + r162 + r163 + r164 + r166 + r167 + r172 + r173) - (0)
 
def C00009(t, y):
    r34 = (13.7 * y[323] * y[60] * y[35]) / (1 + (y[323] * y[60] * y[35]))
    r69 = (13.7 * y[337] * y[93] *y[0]) / (1 + (y[337] * y[93] *y[0]))
    r119 = (13.7 * y[347] * y[1] * y[0]) / (1 + (y[347] * y[1] * y[0]))
    r120 = (13.7 * y[347] * y[1] * y[0]) / (1 + (y[347] * y[1] * y[0]))
    r127 = (13.7 * y[354] * y[165]) / (1 + (y[354] * y[165]))
    r154 = (13.7 * y[365] * y[1] * y[22] * y[8]) / (1 + (y[365] * y[1] * y[22] * y[8]))
    r155 = (13.7 * y[365] * y[1] * y[90] * y[8]) / (1 + (y[365] * y[1] * y[90] * y[8]))
    r156 = (13.7 * y[366] * y[1] * y[17] * y[11]) / (1 + (y[366] * y[1] * y[17] * y[11]))
    r157 = (13.7 * y[367] * y[1] * y[155] * y[17]) / (1 + (y[367] * y[1] * y[155] * y[17]))
    r158 = (13.7 * y[367] * y[1] * y[41] * y[17]) / (1 + (y[367] * y[1] * y[41] * y[17]))
    r159 = (13.7 * y[367] * y[1] * y[66] * y[17]) / (1 + (y[367] * y[1] * y[66] * y[17]))
    r160 = (13.7 * y[367] * y[1] * y[109] * y[17]) / (1 + (y[367] * y[1] * y[109] * y[17]))
    r161 = (13.7 * y[367] * y[1] * y[188] * y[17]) / (1 + (y[367] * y[1] * y[188] * y[17]))
    r162 = (13.7 * y[368] * y[1] * y[17] * y[39]) / (1 + (y[368] * y[1] * y[17] * y[39]))
    r163 = (13.7 * y[368] * y[1] * y[17] * y[139]) / (1 + (y[368] * y[1] * y[17] * y[139]))
    r164 = (13.7 * y[369] * y[1] *  y[49]) / (1 + (y[369] * y[1] *  y[49]))
    r166 = (13.7 * y[370] * y[1] * y[34] * y[11]) / (1 + (y[370] * y[1] * y[34] * y[11]))
    r167 = (13.7 * y[370] * y[1] * y[34] * y[30] * y[0]) / (1 + (y[370] * y[1] * y[34] * y[30] * y[0]))
    r172 = (13.7 * y[372] * y[1] * y[40] * y[75]) / (1 + (y[372] * y[1] * y[40] * y[75]))
    r173 = (13.7 * y[372] * y[1] * y[75] * y[51] * y[36]) / (1 + (y[372] * y[1] * y[75] * y[51] * y[36]))
    return (r34 + r69 + r119 + r120 + r127 + r154 + r155 + r156 + r157 + r158 + r159 + r160 + r161 + r162 + r163 + r164 + r166 + r167 + r172 + r173) - (0)
 
def C00010(t, y):
    r152 = (13.7 * y[364] * y[1] * y[97] * y[8]) / (1 + (y[364] * y[1] * y[97] * y[8]))
    r153 = (13.7 * y[364] * y[1] * y[68] * y[8]) / (1 + (y[364] * y[1] * y[68] * y[8]))
    r154 = (13.7 * y[365] * y[1] * y[22] * y[8]) / (1 + (y[365] * y[1] * y[22] * y[8]))
    r155 = (13.7 * y[365] * y[1] * y[90] * y[8]) / (1 + (y[365] * y[1] * y[90] * y[8]))
    return (0) - (r152 + r153 + r154 + r155)
 
def C00011(t, y):
    r13 = (13.7 * y[308] * y[164] *y[2]) / (1 + (y[308] * y[164] *y[2]))
    r22 = (13.7 * y[315] * y[70] * y[2]) / (1 + (y[315] * y[70] * y[2]))
    r125 = (13.7 * y[352] * y[102] ) / (1 + (y[352] * y[102] ))
    r126 = (13.7 * y[353] * y[166]) / (1 + (y[353] * y[166]))
    r11 = (13.7 * y[308] * y[65] * y[9]) / (1 + (y[308] * y[65] * y[9]))
    r14 = (13.7 * y[308] *  y[43] * y[9] * y[3] * y[36]) / (1 + (y[308] *  y[43] * y[9] * y[3] * y[36]))
    r36 = (13.7 * y[325] * y[121] * y[10] * y[9]) / (1 + (y[325] * y[121] * y[10] * y[9]))
    return (r13 + r22 + r125 + r126) - (r11 + r14 + r36)
 
def C00013(t, y):
    r48 = (13.7 * y[330] * y[199] * y[29]) / (1 + (y[330] * y[199] * y[29]))
    r49 = (13.7 * y[331] * y[101] * y[20] ) / (1 + (y[331] * y[101] * y[20] ))
    r50 = (13.7 * y[331] * y[48] * y[20]) / (1 + (y[331] * y[48] * y[20]))
    r51 = (13.7 * y[331] * y[74] * y[20]) / (1 + (y[331] * y[74] * y[20]))
    r52 = (13.7 * y[331] * y[88] * y[20]) / (1 + (y[331] * y[88] * y[20]))
    r53 = (13.7 * y[331] * y[89] * y[20]) / (1 + (y[331] * y[89] * y[20]))
    r55 = (13.7 * y[331] * y[101]* y[20] ) / (1 + (y[331] * y[101]* y[20] ))
    r56 = (13.7 * y[331] * y[48] * y[20]) / (1 + (y[331] * y[48] * y[20]))
    r57 = (13.7 * y[331] * y[74] * y[20]) / (1 + (y[331] * y[74] * y[20]))
    r58 = (13.7 * y[331] * y[88] * y[20]) / (1 + (y[331] * y[88] * y[20]))
    r59 = (13.7 * y[331] * y[89] * y[20]) / (1 + (y[331] * y[89] * y[20]))
    r61 = (13.7 * y[332] * y[135] * y[29] * y[1]) / (1 + (y[332] * y[135] * y[29] * y[1]))
    r62 = (13.7 * y[332] * y[135] * y[29]) / (1 + (y[332] * y[135] * y[29]))
    r63 = (13.7 * y[332] * y[213] * y[29]) / (1 + (y[332] * y[213] * y[29]))
    r64 = (13.7 * y[332] * y[214] * y[1]) / (1 + (y[332] * y[214] * y[1]))
    r149 = (13.7 * y[361] * y[1] * y[19] * y[131]) / (1 + (y[361] * y[1] * y[19] * y[131]))
    r150 = (13.7 * y[362] * y[1] * y[56] * y[132]) / (1 + (y[362] * y[1] * y[56] * y[132]))
    r151 = (13.7 * y[363] * y[1] * y[21] * y[130]) / (1 + (y[363] * y[1] * y[21] * y[130]))
    r152 = (13.7 * y[364] * y[1] * y[97] * y[8]) / (1 + (y[364] * y[1] * y[97] * y[8]))
    r153 = (13.7 * y[364] * y[1] * y[68] * y[8]) / (1 + (y[364] * y[1] * y[68] * y[8]))
    r169 = (13.7 * y[371] * y[1] * y[98] * y[11]) / (1 + (y[371] * y[1] * y[98] * y[11]))
    r170 = (13.7 * y[371] * y[1] * y[98] * y[30] * y[0]) / (1 + (y[371] * y[1] * y[98] * y[30] * y[0]))
    r171 = (13.7 * y[371] * y[208] * y[1] * y[30] * y[0]) / (1 + (y[371] * y[208] * y[1] * y[30] * y[0]))
    r35 = (13.7 * y[324] * y[163] * y[10]) / (1 + (y[324] * y[163] * y[10]))
    r36 = (13.7 * y[325] * y[121] * y[10] * y[9]) / (1 + (y[325] * y[121] * y[10] * y[9]))
    return (r48 + r49 + r50 + r51 + r52 + r53 + r55 + r56 + r57 + r58 + r59 + r61 + r62 + r63 + r64 + r149 + r150 + r151 + r152 + r153 + r169 + r170 + r171) - (r35 + r36)
 
def C00014(t, y):
    r128 = (13.7 * y[355] * y[31]) / (1 + (y[355] * y[31]))
    r130 = (13.7 * y[355] * y[216] * y[0]) / (1 + (y[355] * y[216] * y[0]))
    r132 = (13.7 * y[355] * y[170]) / (1 + (y[355] * y[170]))
    r133 = (13.7 * y[356] * y[145] * y[0]) / (1 + (y[356] * y[145] * y[0]))
    r134 = (13.7 * y[356] * y[137] * y[0]) / (1 + (y[356] * y[137] * y[0]))
    r135 = (13.7 * y[356] * y[91] * y[0] ) / (1 + (y[356] * y[91] * y[0] ))
    r136 = (13.7 * y[356] * y[143] * y[0]) / (1 + (y[356] * y[143] * y[0]))
    r137 = (13.7 * y[356] * y[145] * y[0]) / (1 + (y[356] * y[145] * y[0]))
    r138 = (13.7 * y[356] * y[39] * y[0]) / (1 + (y[356] * y[39] * y[0]))
    r139 = (13.7 * y[356] * y[180] * y[0]) / (1 + (y[356] * y[180] * y[0]))
    r140 = (13.7 * y[356] * y[178] * y[0]) / (1 + (y[356] * y[178] * y[0]))
    r165 = (13.7 * y[370] * y[30] * y[0]) / (1 + (y[370] * y[30] * y[0]))
    r168 = (13.7 * y[371] * y[30] * y[0]) / (1 + (y[371] * y[30] * y[0]))
    r156 = (13.7 * y[366] * y[1] * y[17] * y[11]) / (1 + (y[366] * y[1] * y[17] * y[11]))
    r166 = (13.7 * y[370] * y[1] * y[34] * y[11]) / (1 + (y[370] * y[1] * y[34] * y[11]))
    r169 = (13.7 * y[371] * y[1] * y[98] * y[11]) / (1 + (y[371] * y[1] * y[98] * y[11]))
    return (r128 + r130 + r132 + r133 + r134 + r135 + r136 + r137 + r138 + r139 + r140 + r165 + r168) - (r156 + r166 + r169)
 
def C00017(t, y):
    r69 = (13.7 * y[337] * y[93] *y[0]) / (1 + (y[337] * y[93] *y[0]))
    r43 = (13.7 * y[327] * y[1] * y[12]) / (1 + (y[327] * y[1] * y[12]))
    return (r69) - (r43)
 
def C00019(t, y):
    r31 = (13.7 * y[320] * y[13] * y[171] * y[172]) / (1 + (y[320] * y[13] * y[171] * y[172]))
    r32 = (13.7 * y[321] * y[13] * y[138] ) / (1 + (y[321] * y[13] * y[138] ))
    r33 = (13.7 * y[322] * y[13] * y[105]) / (1 + (y[322] * y[13] * y[105]))
    return (0) - (r31 + r32 + r33)
 
def C00020(t, y):
    r116 = (13.7 * y[346] * y[2] * y[0]) / (1 + (y[346] * y[2] * y[0]))
    r117 = (13.7 * y[346] * y[3] * y[0]) / (1 + (y[346] * y[3] * y[0]))
    r118 = (13.7 * y[346] * y[106] * y[0]) / (1 + (y[346] * y[106] * y[0]))
    r149 = (13.7 * y[361] * y[1] * y[19] * y[131]) / (1 + (y[361] * y[1] * y[19] * y[131]))
    r150 = (13.7 * y[362] * y[1] * y[56] * y[132]) / (1 + (y[362] * y[1] * y[56] * y[132]))
    r151 = (13.7 * y[363] * y[1] * y[21] * y[130]) / (1 + (y[363] * y[1] * y[21] * y[130]))
    r152 = (13.7 * y[364] * y[1] * y[97] * y[8]) / (1 + (y[364] * y[1] * y[97] * y[8]))
    r153 = (13.7 * y[364] * y[1] * y[68] * y[8]) / (1 + (y[364] * y[1] * y[68] * y[8]))
    r169 = (13.7 * y[371] * y[1] * y[98] * y[11]) / (1 + (y[371] * y[1] * y[98] * y[11]))
    r170 = (13.7 * y[371] * y[1] * y[98] * y[30] * y[0]) / (1 + (y[371] * y[1] * y[98] * y[30] * y[0]))
    r171 = (13.7 * y[371] * y[208] * y[1] * y[30] * y[0]) / (1 + (y[371] * y[208] * y[1] * y[30] * y[0]))
    return (r116 + r117 + r118 + r149 + r150 + r151 + r152 + r153 + r169 + r170 + r171) - (0)
 
def C00021(t, y):
    r32 = (13.7 * y[321] * y[13] * y[138] ) / (1 + (y[321] * y[13] * y[138] ))
    r33 = (13.7 * y[322] * y[13] * y[105]) / (1 + (y[322] * y[13] * y[105]))
    r103 = (13.7 * y[340] * y[15] * y[0]) / (1 + (y[340] * y[15] * y[0]))
    return (r32 + r33) - (r103)
 
def C00022(t, y):
    r4 = (13.7 * y[306] * y[62] * y[2]) / (1 + (y[306] * y[62] * y[2]))
    r128 = (13.7 * y[355] * y[31]) / (1 + (y[355] * y[31]))
    r130 = (13.7 * y[355] * y[216] * y[0]) / (1 + (y[355] * y[216] * y[0]))
    r133 = (13.7 * y[356] * y[145] * y[0]) / (1 + (y[356] * y[145] * y[0]))
    r134 = (13.7 * y[356] * y[137] * y[0]) / (1 + (y[356] * y[137] * y[0]))
    r135 = (13.7 * y[356] * y[91] * y[0] ) / (1 + (y[356] * y[91] * y[0] ))
    r136 = (13.7 * y[356] * y[143] * y[0]) / (1 + (y[356] * y[143] * y[0]))
    r137 = (13.7 * y[356] * y[145] * y[0]) / (1 + (y[356] * y[145] * y[0]))
    r138 = (13.7 * y[356] * y[39] * y[0]) / (1 + (y[356] * y[39] * y[0]))
    r139 = (13.7 * y[356] * y[180] * y[0]) / (1 + (y[356] * y[180] * y[0]))
    r140 = (13.7 * y[356] * y[178] * y[0]) / (1 + (y[356] * y[178] * y[0]))
    return (r4 + r128 + r130 + r133 + r134 + r135 + r136 + r137 + r138 + r139 + r140) - (0)
 
def C00025(t, y):
    r165 = (13.7 * y[370] * y[30] * y[0]) / (1 + (y[370] * y[30] * y[0]))
    r167 = (13.7 * y[370] * y[1] * y[34] * y[30] * y[0]) / (1 + (y[370] * y[1] * y[34] * y[30] * y[0]))
    r168 = (13.7 * y[371] * y[30] * y[0]) / (1 + (y[371] * y[30] * y[0]))
    r170 = (13.7 * y[371] * y[1] * y[98] * y[30] * y[0]) / (1 + (y[371] * y[1] * y[98] * y[30] * y[0]))
    r171 = (13.7 * y[371] * y[208] * y[1] * y[30] * y[0]) / (1 + (y[371] * y[208] * y[1] * y[30] * y[0]))
    r156 = (13.7 * y[366] * y[1] * y[17] * y[11]) / (1 + (y[366] * y[1] * y[17] * y[11]))
    r157 = (13.7 * y[367] * y[1] * y[155] * y[17]) / (1 + (y[367] * y[1] * y[155] * y[17]))
    r158 = (13.7 * y[367] * y[1] * y[41] * y[17]) / (1 + (y[367] * y[1] * y[41] * y[17]))
    r159 = (13.7 * y[367] * y[1] * y[66] * y[17]) / (1 + (y[367] * y[1] * y[66] * y[17]))
    r160 = (13.7 * y[367] * y[1] * y[109] * y[17]) / (1 + (y[367] * y[1] * y[109] * y[17]))
    r161 = (13.7 * y[367] * y[1] * y[188] * y[17]) / (1 + (y[367] * y[1] * y[188] * y[17]))
    r162 = (13.7 * y[368] * y[1] * y[17] * y[39]) / (1 + (y[368] * y[1] * y[17] * y[39]))
    r163 = (13.7 * y[368] * y[1] * y[17] * y[139]) / (1 + (y[368] * y[1] * y[17] * y[139]))
    return (r165 + r167 + r168 + r170 + r171) - (r156 + r157 + r158 + r159 + r160 + r161 + r162 + r163)
 
def C00031(t, y):
    r70 = (13.7 * y[338] * y[67] * y[0]) / (1 + (y[338] * y[67] * y[0]))
    r81 = (13.7 * y[338] * y[230] * y[0]) / (1 + (y[338] * y[230] * y[0]))
    r85 = (13.7 * y[338] * y[67] * y[0]) / (1 + (y[338] * y[67] * y[0]))
    r96 = (13.7 * y[338] * y[230] * y[0]) / (1 + (y[338] * y[230] * y[0]))
    r37 = (13.7 * y[326] * y[1] * y[18]) / (1 + (y[326] * y[1] * y[18]))
    r40 = (13.7 * y[326] * y[1] * y[18]) / (1 + (y[326] * y[1] * y[18]))
    return (r70 + r81 + r85 + r96) - (r37 + r40)
 
def C00037(t, y):
    r106 = (13.7 * y[341] * y[128] * y[0]) / (1 + (y[341] * y[128] * y[0]))
    r107 = (13.7 * y[341] * y[183] * y[0]) / (1 + (y[341] * y[183] * y[0]))
    r149 = (13.7 * y[361] * y[1] * y[19] * y[131]) / (1 + (y[361] * y[1] * y[19] * y[131]))
    return (r106 + r107) - (r149)
 
def C00039(t, y):
    r49 = (13.7 * y[331] * y[101] * y[20] ) / (1 + (y[331] * y[101] * y[20] ))
    r50 = (13.7 * y[331] * y[48] * y[20]) / (1 + (y[331] * y[48] * y[20]))
    r51 = (13.7 * y[331] * y[74] * y[20]) / (1 + (y[331] * y[74] * y[20]))
    r52 = (13.7 * y[331] * y[88] * y[20]) / (1 + (y[331] * y[88] * y[20]))
    r53 = (13.7 * y[331] * y[89] * y[20]) / (1 + (y[331] * y[89] * y[20]))
    r55 = (13.7 * y[331] * y[101]* y[20] ) / (1 + (y[331] * y[101]* y[20] ))
    r56 = (13.7 * y[331] * y[48] * y[20]) / (1 + (y[331] * y[48] * y[20]))
    r57 = (13.7 * y[331] * y[74] * y[20]) / (1 + (y[331] * y[74] * y[20]))
    r58 = (13.7 * y[331] * y[88] * y[20]) / (1 + (y[331] * y[88] * y[20]))
    r59 = (13.7 * y[331] * y[89] * y[20]) / (1 + (y[331] * y[89] * y[20]))
    r49 = (13.7 * y[331] * y[101] * y[20] ) / (1 + (y[331] * y[101] * y[20] ))
    r50 = (13.7 * y[331] * y[48] * y[20]) / (1 + (y[331] * y[48] * y[20]))
    r51 = (13.7 * y[331] * y[74] * y[20]) / (1 + (y[331] * y[74] * y[20]))
    r52 = (13.7 * y[331] * y[88] * y[20]) / (1 + (y[331] * y[88] * y[20]))
    r53 = (13.7 * y[331] * y[89] * y[20]) / (1 + (y[331] * y[89] * y[20]))
    r55 = (13.7 * y[331] * y[101]* y[20] ) / (1 + (y[331] * y[101]* y[20] ))
    r56 = (13.7 * y[331] * y[48] * y[20]) / (1 + (y[331] * y[48] * y[20]))
    r57 = (13.7 * y[331] * y[74] * y[20]) / (1 + (y[331] * y[74] * y[20]))
    r58 = (13.7 * y[331] * y[88] * y[20]) / (1 + (y[331] * y[88] * y[20]))
    r59 = (13.7 * y[331] * y[89] * y[20]) / (1 + (y[331] * y[89] * y[20]))
    return (r49 + r50 + r51 + r52 + r53 + r55 + r56 + r57 + r58 + r59) - (r49 + r50 + r51 + r52 + r53 + r55 + r56 + r57 + r58 + r59)
 
def C00041(t, y):
    r151 = (13.7 * y[363] * y[1] * y[21] * y[130]) / (1 + (y[363] * y[1] * y[21] * y[130]))
    return (0) - (r151)
 
def C00042(t, y):
    r23 = (13.7 * y[316] * y[78] * y[45]) / (1 + (y[316] * y[78] * y[45]))
    r154 = (13.7 * y[365] * y[1] * y[22] * y[8]) / (1 + (y[365] * y[1] * y[22] * y[8]))
    return (r23) - (r154)
 
def C00044(t, y):
    r111 = (13.7 * y[345] * y[23] * y[0]) / (1 + (y[345] * y[23] * y[0]))
    r112 = (13.7 * y[345] * y[23] * y[0]) / (1 + (y[345] * y[23] * y[0]))
    return (0) - (r111 + r112)
 
def C00047(t, y):
    r125 = (13.7 * y[352] * y[102] ) / (1 + (y[352] * y[102] ))
    return (r125) - (0)
 
def C00049(t, y):
    r45 = (13.7 * y[328] * y[1] * y[25]) / (1 + (y[328] * y[1] * y[25]))
    return (0) - (r45)
 
def C00051(t, y):
    r18 = (13.7 * y[312] * y[26] * y[202]) / (1 + (y[312] * y[26] * y[202]))
    return (0) - (r18)
 
def C00052(t, y):
    r145 = (13.7 * y[360] * y[27]) / (1 + (y[360] * y[27]))
    r147 = (13.7 * y[360] * y[27]) / (1 + (y[360] * y[27]))
    return (0) - (r145 + r147)
 
def C00058(t, y):
    r111 = (13.7 * y[345] * y[23] * y[0]) / (1 + (y[345] * y[23] * y[0]))
    r114 = (13.7 * y[345] * y[186] * y[0]) / (1 + (y[345] * y[186] * y[0]))
    return (r111 + r114) - (0)
 
def C00063(t, y):
    r166 = (13.7 * y[370] * y[1] * y[34] * y[11]) / (1 + (y[370] * y[1] * y[34] * y[11]))
    r167 = (13.7 * y[370] * y[1] * y[34] * y[30] * y[0]) / (1 + (y[370] * y[1] * y[34] * y[30] * y[0]))
    r48 = (13.7 * y[330] * y[199] * y[29]) / (1 + (y[330] * y[199] * y[29]))
    r61 = (13.7 * y[332] * y[135] * y[29] * y[1]) / (1 + (y[332] * y[135] * y[29] * y[1]))
    r62 = (13.7 * y[332] * y[135] * y[29]) / (1 + (y[332] * y[135] * y[29]))
    r63 = (13.7 * y[332] * y[213] * y[29]) / (1 + (y[332] * y[213] * y[29]))
    return (r166 + r167) - (r48 + r61 + r62 + r63)
 
def C00064(t, y):
    r156 = (13.7 * y[366] * y[1] * y[17] * y[11]) / (1 + (y[366] * y[1] * y[17] * y[11]))
    r165 = (13.7 * y[370] * y[30] * y[0]) / (1 + (y[370] * y[30] * y[0]))
    r167 = (13.7 * y[370] * y[1] * y[34] * y[30] * y[0]) / (1 + (y[370] * y[1] * y[34] * y[30] * y[0]))
    r168 = (13.7 * y[371] * y[30] * y[0]) / (1 + (y[371] * y[30] * y[0]))
    r170 = (13.7 * y[371] * y[1] * y[98] * y[30] * y[0]) / (1 + (y[371] * y[1] * y[98] * y[30] * y[0]))
    r171 = (13.7 * y[371] * y[208] * y[1] * y[30] * y[0]) / (1 + (y[371] * y[208] * y[1] * y[30] * y[0]))
    return (r156) - (r165 + r167 + r168 + r170 + r171)
 
def C00065(t, y):
    r128 = (13.7 * y[355] * y[31]) / (1 + (y[355] * y[31]))
    r129 = (13.7 * y[355] * y[31]) / (1 + (y[355] * y[31]))
    return (0) - (r128 + r129)
 
def C00066(t, y):
    r65 = (13.7 * y[333] * y[158] * y[0]) / (1 + (y[333] * y[158] * y[0]))
    return (r65) - (0)
 
def C00073(t, y):
    r31 = (13.7 * y[320] * y[13] * y[171] * y[172]) / (1 + (y[320] * y[13] * y[171] * y[172]))
    return (r31) - (0)
 
def C00075(t, y):
    r166 = (13.7 * y[370] * y[1] * y[34] * y[11]) / (1 + (y[370] * y[1] * y[34] * y[11]))
    r167 = (13.7 * y[370] * y[1] * y[34] * y[30] * y[0]) / (1 + (y[370] * y[1] * y[34] * y[30] * y[0]))
    return (0) - (r166 + r167)
 
def C00077(t, y):
    r34 = (13.7 * y[323] * y[60] * y[35]) / (1 + (y[323] * y[60] * y[35]))
    return (0) - (r34)
 
def C00080(t, y):
    r1 = (13.7 * y[305] * y[107] * y[2] * y[0]) / (1 + (y[305] * y[107] * y[2] * y[0]))
    r2 = (13.7 * y[305] * y[133] * y[0] * y[2]) / (1 + (y[305] * y[133] * y[0] * y[2]))
    r3 = (13.7 * y[305] * y[107] * y[2]) / (1 + (y[305] * y[107] * y[2]))
    r4 = (13.7 * y[306] * y[62] * y[2]) / (1 + (y[306] * y[62] * y[2]))
    r5 = (13.7 * y[306] * y[190] * y[2]) / (1 + (y[306] * y[190] * y[2]))
    r6 = (13.7 * y[306] * y[185] * y[2]) / (1 + (y[306] * y[185] * y[2]))
    r7 = (13.7 * y[307] * y[147] * y[2]) / (1 + (y[307] * y[147] * y[2]))
    r8 = (13.7 * y[307] * y[146] * y[2]) / (1 + (y[307] * y[146] * y[2]))
    r9 = (13.7 * y[307] * y[127] * y[2]) / (1 + (y[307] * y[127] * y[2]))
    r10 = (13.7 * y[307] * y[94] * y[2]) / (1 + (y[307] * y[94] * y[2]))
    r12 = (13.7 * y[308] * y[164] *y[2]) / (1 + (y[308] * y[164] *y[2]))
    r13 = (13.7 * y[308] * y[164] *y[2]) / (1 + (y[308] * y[164] *y[2]))
    r22 = (13.7 * y[315] * y[70] * y[2]) / (1 + (y[315] * y[70] * y[2]))
    r24 = (13.7 * y[317] * y[56] * y[2]) / (1 + (y[317] * y[56] * y[2]))
    r25 = (13.7 * y[317] * y[56] * y[5]) / (1 + (y[317] * y[56] * y[5]))
    r26 = (13.7 * y[317] * y[117] * y[2]) / (1 + (y[317] * y[117] * y[2]))
    r27 = (13.7 * y[317] * y[117] * y[5] ) / (1 + (y[317] * y[117] * y[5] ))
    r28 = (13.7 * y[318] * y[86] * y[5]) / (1 + (y[318] * y[86] * y[5]))
    r29 = (13.7 * y[318] * y[86] * y[2]) / (1 + (y[318] * y[86] * y[2]))
    r14 = (13.7 * y[308] *  y[43] * y[9] * y[3] * y[36]) / (1 + (y[308] *  y[43] * y[9] * y[3] * y[36]))
    r17 = (13.7 * y[311] * y[3] * y[202] * y[36]) / (1 + (y[311] * y[3] * y[202] * y[36]))
    r173 = (13.7 * y[372] * y[1] * y[75] * y[51] * y[36]) / (1 + (y[372] * y[1] * y[75] * y[51] * y[36]))
    return (r1 + r2 + r3 + r4 + r5 + r6 + r7 + r8 + r9 + r10 + r12 + r13 + r22 + r24 + r25 + r26 + r27 + r28 + r29) - (r14 + r17 + r173)
 
def C00091(t, y):
    r154 = (13.7 * y[365] * y[1] * y[22] * y[8]) / (1 + (y[365] * y[1] * y[22] * y[8]))
    return (r154) - (0)
 
def C00092(t, y):
    r37 = (13.7 * y[326] * y[1] * y[18]) / (1 + (y[326] * y[1] * y[18]))
    r40 = (13.7 * y[326] * y[1] * y[18]) / (1 + (y[326] * y[1] * y[18]))
    return (r37 + r40) - (0)
 
def C00097(t, y):
    r106 = (13.7 * y[341] * y[128] * y[0]) / (1 + (y[341] * y[128] * y[0]))
    r138 = (13.7 * y[356] * y[39] * y[0]) / (1 + (y[356] * y[39] * y[0]))
    r162 = (13.7 * y[368] * y[1] * y[17] * y[39]) / (1 + (y[368] * y[1] * y[17] * y[39]))
    return (r106) - (r138 + r162)
 
def C00100(t, y):
    r172 = (13.7 * y[372] * y[1] * y[40] * y[75]) / (1 + (y[372] * y[1] * y[40] * y[75]))
    return (0) - (r172)
 
def C00101(t, y):
    r158 = (13.7 * y[367] * y[1] * y[41] * y[17]) / (1 + (y[367] * y[1] * y[41] * y[17]))
    return (0) - (r158)
 
def C00108(t, y):
    r35 = (13.7 * y[324] * y[163] * y[10]) / (1 + (y[324] * y[163] * y[10]))
    return (r35) - (0)
 
def C00109(t, y):
    r5 = (13.7 * y[306] * y[190] * y[2]) / (1 + (y[306] * y[190] * y[2]))
    r14 = (13.7 * y[308] *  y[43] * y[9] * y[3] * y[36]) / (1 + (y[308] *  y[43] * y[9] * y[3] * y[36]))
    return (r5) - (r14)
 
def C00119(t, y):
    r35 = (13.7 * y[324] * y[163] * y[10]) / (1 + (y[324] * y[163] * y[10]))
    r36 = (13.7 * y[325] * y[121] * y[10] * y[9]) / (1 + (y[325] * y[121] * y[10] * y[9]))
    return (r35 + r36) - (0)
 
def C00122(t, y):
    r23 = (13.7 * y[316] * y[78] * y[45]) / (1 + (y[316] * y[78] * y[45]))
    return (0) - (r23)
 
def C00124(t, y):
    r71 = (13.7 * y[338] * y[184] * y[0]) / (1 + (y[338] * y[184] * y[0]))
    r72 = (13.7 * y[338] * y[67] * y[0]) / (1 + (y[338] * y[67] * y[0]))
    r73 = (13.7 * y[338] * y[123] * y[0]) / (1 + (y[338] * y[123] * y[0]))
    r74 = (13.7 * y[338] * y[169] * y[0]) / (1 + (y[338] * y[169] * y[0]))
    r76 = (13.7 * y[338] * y[193] * y[0]) / (1 + (y[338] * y[193] * y[0]))
    r77 = (13.7 * y[338] * y[225] * y[0]) / (1 + (y[338] * y[225] * y[0]))
    r78 = (13.7 * y[338] * y[223] * y[0]) / (1 + (y[338] * y[223] * y[0]))
    r79 = (13.7 * y[338] * y[230] * y[0]) / (1 + (y[338] * y[230] * y[0]))
    r80 = (13.7 * y[338] * y[221] * y[0]) / (1 + (y[338] * y[221] * y[0]))
    r83 = (13.7 * y[338] * y[233] * y[0]) / (1 + (y[338] * y[233] * y[0]))
    r84 = (13.7 * y[338] * y[228] * y[0]) / (1 + (y[338] * y[228] * y[0]))
    r86 = (13.7 * y[338] * y[184] * y[0]) / (1 + (y[338] * y[184] * y[0]))
    r87 = (13.7 * y[338] * y[67] * y[0]) / (1 + (y[338] * y[67] * y[0]))
    r88 = (13.7 * y[338] * y[123] * y[0]) / (1 + (y[338] * y[123] * y[0]))
    r89 = (13.7 * y[338] * y[169] * y[0]) / (1 + (y[338] * y[169] * y[0]))
    r91 = (13.7 * y[338] * y[193] * y[0]) / (1 + (y[338] * y[193] * y[0]))
    r92 = (13.7 * y[338] * y[225] * y[0]) / (1 + (y[338] * y[225] * y[0]))
    r93 = (13.7 * y[338] * y[223] * y[0]) / (1 + (y[338] * y[223] * y[0]))
    r94 = (13.7 * y[338] * y[230] * y[0]) / (1 + (y[338] * y[230] * y[0]))
    r95 = (13.7 * y[338] * y[221] * y[0]) / (1 + (y[338] * y[221] * y[0]))
    r98 = (13.7 * y[338] * y[233] * y[0]) / (1 + (y[338] * y[233] * y[0]))
    r99 = (13.7 * y[338] * y[228] * y[0]) / (1 + (y[338] * y[228] * y[0]))
    return (r71 + r72 + r73 + r74 + r76 + r77 + r78 + r79 + r80 + r83 + r84 + r86 + r87 + r88 + r89 + r91 + r92 + r93 + r94 + r95 + r98 + r99) - (0)
 
def C00127(t, y):
    r18 = (13.7 * y[312] * y[26] * y[202]) / (1 + (y[312] * y[26] * y[202]))
    return (r18) - (0)
 
def C00131(t, y):
    r50 = (13.7 * y[331] * y[48] * y[20]) / (1 + (y[331] * y[48] * y[20]))
    r56 = (13.7 * y[331] * y[48] * y[20]) / (1 + (y[331] * y[48] * y[20]))
    return (0) - (r50 + r56)
 
def C00133(t, y):
    r164 = (13.7 * y[369] * y[1] *  y[49]) / (1 + (y[369] * y[1] *  y[49]))
    return (0) - (r164)
 
def C00135(t, y):
    r1 = (13.7 * y[305] * y[107] * y[2] * y[0]) / (1 + (y[305] * y[107] * y[2] * y[0]))
    r2 = (13.7 * y[305] * y[133] * y[0] * y[2]) / (1 + (y[305] * y[133] * y[0] * y[2]))
    return (r1 + r2) - (0)
 
def C00136(t, y):
    r173 = (13.7 * y[372] * y[1] * y[75] * y[51] * y[36]) / (1 + (y[372] * y[1] * y[75] * y[51] * y[36]))
    return (0) - (r173)
 
def C00143(t, y):
    r28 = (13.7 * y[318] * y[86] * y[5]) / (1 + (y[318] * y[86] * y[5]))
    r29 = (13.7 * y[318] * y[86] * y[2]) / (1 + (y[318] * y[86] * y[2]))
    return (r28 + r29) - (0)
 
def C00144(t, y):
    r169 = (13.7 * y[371] * y[1] * y[98] * y[11]) / (1 + (y[371] * y[1] * y[98] * y[11]))
    r170 = (13.7 * y[371] * y[1] * y[98] * y[30] * y[0]) / (1 + (y[371] * y[1] * y[98] * y[30] * y[0]))
    return (r169 + r170) - (0)
 
def C00145(t, y):
    r133 = (13.7 * y[356] * y[145] * y[0]) / (1 + (y[356] * y[145] * y[0]))
    return (r133) - (0)
 
def C00147(t, y):
    r103 = (13.7 * y[340] * y[15] * y[0]) / (1 + (y[340] * y[15] * y[0]))
    r104 = (13.7 * y[340] * y[61] * y[0]) / (1 + (y[340] * y[61] * y[0]))
    r105 = (13.7 * y[340] * y[173] * y[0]) / (1 + (y[340] * y[173] * y[0]))
    return (r103 + r104 + r105) - (0)
 
def C00148(t, y):
    r24 = (13.7 * y[317] * y[56] * y[2]) / (1 + (y[317] * y[56] * y[2]))
    r25 = (13.7 * y[317] * y[56] * y[5]) / (1 + (y[317] * y[56] * y[5]))
    r150 = (13.7 * y[362] * y[1] * y[56] * y[132]) / (1 + (y[362] * y[1] * y[56] * y[132]))
    return (0) - (r24 + r25 + r150)
 
def C00154(t, y):
    r153 = (13.7 * y[364] * y[1] * y[68] * y[8]) / (1 + (y[364] * y[1] * y[68] * y[8]))
    return (r153) - (0)
 
def C00155(t, y):
    r134 = (13.7 * y[356] * y[137] * y[0]) / (1 + (y[356] * y[137] * y[0]))
    return (r134) - (0)
 
def C00161(t, y):
    r132 = (13.7 * y[355] * y[170]) / (1 + (y[355] * y[170]))
    return (r132) - (0)
 
def C00169(t, y):
    r34 = (13.7 * y[323] * y[60] * y[35]) / (1 + (y[323] * y[60] * y[35]))
    return (0) - (r34)
 
def C00170(t, y):
    r104 = (13.7 * y[340] * y[61] * y[0]) / (1 + (y[340] * y[61] * y[0]))
    return (0) - (r104)
 
def C00186(t, y):
    r4 = (13.7 * y[306] * y[62] * y[2]) / (1 + (y[306] * y[62] * y[2]))
    return (0) - (r4)
 
def C00197(t, y):
    r141 = (13.7 * y[357] * y[118] * y[95]) / (1 + (y[357] * y[118] * y[95]))
    r142 = (13.7 * y[357] * y[96]) / (1 + (y[357] * y[96]))
    r143 = (13.7 * y[358] * y[96]) / (1 + (y[358] * y[96]))
    return (r141 + r142 + r143) - (0)
 
def C00221(t, y):
    r75 = (13.7 * y[338] * y[177] * y[0]) / (1 + (y[338] * y[177] * y[0]))
    r82 = (13.7 * y[338] * y[232] * y[0]) / (1 + (y[338] * y[232] * y[0]))
    r90 = (13.7 * y[338] * y[177] * y[0]) / (1 + (y[338] * y[177] * y[0]))
    r97 = (13.7 * y[338] * y[232] * y[0]) / (1 + (y[338] * y[232] * y[0]))
    r38 = (13.7 * y[326] * y[1] * y[64]) / (1 + (y[326] * y[1] * y[64]))
    r41 = (13.7 * y[326] * y[1] * y[64]) / (1 + (y[326] * y[1] * y[64]))
    return (r75 + r82 + r90 + r97) - (r38 + r41)
 
def C00233(t, y):
    r13 = (13.7 * y[308] * y[164] *y[2]) / (1 + (y[308] * y[164] *y[2]))
    r11 = (13.7 * y[308] * y[65] * y[9]) / (1 + (y[308] * y[65] * y[9]))
    return (r13) - (r11)
 
def C00234(t, y):
    r159 = (13.7 * y[367] * y[1] * y[66] * y[17]) / (1 + (y[367] * y[1] * y[66] * y[17]))
    return (0) - (r159)
 
def C00243(t, y):
    r70 = (13.7 * y[338] * y[67] * y[0]) / (1 + (y[338] * y[67] * y[0]))
    r72 = (13.7 * y[338] * y[67] * y[0]) / (1 + (y[338] * y[67] * y[0]))
    r85 = (13.7 * y[338] * y[67] * y[0]) / (1 + (y[338] * y[67] * y[0]))
    r87 = (13.7 * y[338] * y[67] * y[0]) / (1 + (y[338] * y[67] * y[0]))
    return (0) - (r70 + r72 + r85 + r87)
 
def C00249(t, y):
    r153 = (13.7 * y[364] * y[1] * y[68] * y[8]) / (1 + (y[364] * y[1] * y[68] * y[8]))
    return (0) - (r153)
 
def C00251(t, y):
    r144 = (13.7 * y[359] * y[69]) / (1 + (y[359] * y[69]))
    return (0) - (r144)
 
def C00254(t, y):
    r144 = (13.7 * y[359] * y[69]) / (1 + (y[359] * y[69]))
    r22 = (13.7 * y[315] * y[70] * y[2]) / (1 + (y[315] * y[70] * y[2]))
    return (r144) - (r22)
 
def C00266(t, y):
    r9 = (13.7 * y[307] * y[127] * y[2]) / (1 + (y[307] * y[127] * y[2]))
    return (r9) - (0)
 
def C00267(t, y):
    r72 = (13.7 * y[338] * y[67] * y[0]) / (1 + (y[338] * y[67] * y[0]))
    r79 = (13.7 * y[338] * y[230] * y[0]) / (1 + (y[338] * y[230] * y[0]))
    r87 = (13.7 * y[338] * y[67] * y[0]) / (1 + (y[338] * y[67] * y[0]))
    r94 = (13.7 * y[338] * y[230] * y[0]) / (1 + (y[338] * y[230] * y[0]))
    r39 = (13.7 * y[326] * y[1] * y[72]) / (1 + (y[326] * y[1] * y[72]))
    r42 = (13.7 * y[326] * y[1] * y[72]) / (1 + (y[326] * y[1] * y[72]))
    return (r72 + r79 + r87 + r94) - (r39 + r42)
 
def C00283(t, y):
    r138 = (13.7 * y[356] * y[39] * y[0]) / (1 + (y[356] * y[39] * y[0]))
    return (r138) - (0)
 
def C00286(t, y):
    r51 = (13.7 * y[331] * y[74] * y[20]) / (1 + (y[331] * y[74] * y[20]))
    r57 = (13.7 * y[331] * y[74] * y[20]) / (1 + (y[331] * y[74] * y[20]))
    return (0) - (r51 + r57)
 
def C00288(t, y):
    r172 = (13.7 * y[372] * y[1] * y[40] * y[75]) / (1 + (y[372] * y[1] * y[40] * y[75]))
    r173 = (13.7 * y[372] * y[1] * y[75] * y[51] * y[36]) / (1 + (y[372] * y[1] * y[75] * y[51] * y[36]))
    return (0) - (r172 + r173)
 
def C00295(t, y):
    r23 = (13.7 * y[316] * y[78] * y[45]) / (1 + (y[316] * y[78] * y[45]))
    return (r23) - (0)
 
def C00327(t, y):
    r34 = (13.7 * y[323] * y[60] * y[35]) / (1 + (y[323] * y[60] * y[35]))
    return (r34) - (0)
 
def C00337(t, y):
    r23 = (13.7 * y[316] * y[78] * y[45]) / (1 + (y[316] * y[78] * y[45]))
    return (0) - (r23)
 
def C00342(t, y):
    r30 = (13.7 * y[319] * y[148] * y[80] * y[0]) / (1 + (y[319] * y[148] * y[80] * y[0]))
    r15 = (13.7 * y[309] * y[79] * y[202]) / (1 + (y[309] * y[79] * y[202]))
    return (r30) - (r15)
 
def C00343(t, y):
    r15 = (13.7 * y[309] * y[79] * y[202]) / (1 + (y[309] * y[79] * y[202]))
    r30 = (13.7 * y[319] * y[148] * y[80] * y[0]) / (1 + (y[319] * y[148] * y[80] * y[0]))
    return (r15) - (r30)
 
def C00363(t, y):
    r46 = (13.7 * y[329] * y[1] * y[82]) / (1 + (y[329] * y[1] * y[82]))
    return (r46) - (0)
 
def C00364(t, y):
    r46 = (13.7 * y[329] * y[1] * y[82]) / (1 + (y[329] * y[1] * y[82]))
    return (0) - (r46)
 
def C00365(t, y):
    r47 = (13.7 * y[329] * y[1] * y[83]) / (1 + (y[329] * y[1] * y[83]))
    return (0) - (r47)
 
def C00415(t, y):
    r160 = (13.7 * y[367] * y[1] * y[109] * y[17]) / (1 + (y[367] * y[1] * y[109] * y[17]))
    return (r160) - (0)
 
def C00424(t, y):
    r7 = (13.7 * y[307] * y[147] * y[2]) / (1 + (y[307] * y[147] * y[2]))
    r10 = (13.7 * y[307] * y[94] * y[2]) / (1 + (y[307] * y[94] * y[2]))
    return (r7 + r10) - (0)
 
def C00440(t, y):
    r28 = (13.7 * y[318] * y[86] * y[5]) / (1 + (y[318] * y[86] * y[5]))
    r29 = (13.7 * y[318] * y[86] * y[2]) / (1 + (y[318] * y[86] * y[2]))
    return (0) - (r28 + r29)
 
def C00455(t, y):
    r116 = (13.7 * y[346] * y[2] * y[0]) / (1 + (y[346] * y[2] * y[0]))
    return (r116) - (0)
 
def C00458(t, y):
    r52 = (13.7 * y[331] * y[88] * y[20]) / (1 + (y[331] * y[88] * y[20]))
    r58 = (13.7 * y[331] * y[88] * y[20]) / (1 + (y[331] * y[88] * y[20]))
    return (0) - (r52 + r58)
 
def C00459(t, y):
    r53 = (13.7 * y[331] * y[89] * y[20]) / (1 + (y[331] * y[89] * y[20]))
    r59 = (13.7 * y[331] * y[89] * y[20]) / (1 + (y[331] * y[89] * y[20]))
    return (0) - (r53 + r59)
 
def C00490(t, y):
    r155 = (13.7 * y[365] * y[1] * y[90] * y[8]) / (1 + (y[365] * y[1] * y[90] * y[8]))
    return (0) - (r155)
 
def C00491(t, y):
    r135 = (13.7 * y[356] * y[91] * y[0] ) / (1 + (y[356] * y[91] * y[0] ))
    return (0) - (r135)
 
def C00531(t, y):
    r155 = (13.7 * y[365] * y[1] * y[90] * y[8]) / (1 + (y[365] * y[1] * y[90] * y[8]))
    return (r155) - (0)
 
def C00562(t, y):
    r43 = (13.7 * y[327] * y[1] * y[12]) / (1 + (y[327] * y[1] * y[12]))
    r69 = (13.7 * y[337] * y[93] *y[0]) / (1 + (y[337] * y[93] *y[0]))
    return (r43) - (r69)
 
def C00583(t, y):
    r10 = (13.7 * y[307] * y[94] * y[2]) / (1 + (y[307] * y[94] * y[2]))
    return (0) - (r10)
 
def C00615(t, y):
    r141 = (13.7 * y[357] * y[118] * y[95]) / (1 + (y[357] * y[118] * y[95]))
    return (0) - (r141)
 
def C00631(t, y):
    r142 = (13.7 * y[357] * y[96]) / (1 + (y[357] * y[96]))
    r143 = (13.7 * y[358] * y[96]) / (1 + (y[358] * y[96]))
    return (0) - (r142 + r143)
 
def C00638(t, y):
    r152 = (13.7 * y[364] * y[1] * y[97] * y[8]) / (1 + (y[364] * y[1] * y[97] * y[8]))
    return (0) - (r152)
 
def C00655(t, y):
    r169 = (13.7 * y[371] * y[1] * y[98] * y[11]) / (1 + (y[371] * y[1] * y[98] * y[11]))
    r170 = (13.7 * y[371] * y[1] * y[98] * y[30] * y[0]) / (1 + (y[371] * y[1] * y[98] * y[30] * y[0]))
    return (0) - (r169 + r170)
 
def C00668(t, y):
    r39 = (13.7 * y[326] * y[1] * y[72]) / (1 + (y[326] * y[1] * y[72]))
    r42 = (13.7 * y[326] * y[1] * y[72]) / (1 + (y[326] * y[1] * y[72]))
    return (r39 + r42) - (0)
 
def C00669(t, y):
    r162 = (13.7 * y[368] * y[1] * y[17] * y[39]) / (1 + (y[368] * y[1] * y[17] * y[39]))
    return (r162) - (0)
 
def C00677(t, y):
    r49 = (13.7 * y[331] * y[101] * y[20] ) / (1 + (y[331] * y[101] * y[20] ))
    r55 = (13.7 * y[331] * y[101]* y[20] ) / (1 + (y[331] * y[101]* y[20] ))
    return (0) - (r49 + r55)
 
def C00680(t, y):
    r125 = (13.7 * y[352] * y[102] ) / (1 + (y[352] * y[102] ))
    return (0) - (r125)
 
def C00683(t, y):
    r172 = (13.7 * y[372] * y[1] * y[40] * y[75]) / (1 + (y[372] * y[1] * y[40] * y[75]))
    return (r172) - (0)
 
def C00812(t, y):
    r136 = (13.7 * y[356] * y[143] * y[0]) / (1 + (y[356] * y[143] * y[0]))
    return (r136) - (0)
 
def C00821(t, y):
    r33 = (13.7 * y[322] * y[13] * y[105]) / (1 + (y[322] * y[13] * y[105]))
    return (0) - (r33)
 
def C00857(t, y):
    r118 = (13.7 * y[346] * y[106] * y[0]) / (1 + (y[346] * y[106] * y[0]))
    return (0) - (r118)
 
def C00860(t, y):
    r1 = (13.7 * y[305] * y[107] * y[2] * y[0]) / (1 + (y[305] * y[107] * y[2] * y[0]))
    r3 = (13.7 * y[305] * y[107] * y[2]) / (1 + (y[305] * y[107] * y[2]))
    return (0) - (r1 + r3)
 
def C00886(t, y):
    r151 = (13.7 * y[363] * y[1] * y[21] * y[130]) / (1 + (y[363] * y[1] * y[21] * y[130]))
    return (r151) - (0)
 
def C00921(t, y):
    r160 = (13.7 * y[367] * y[1] * y[109] * y[17]) / (1 + (y[367] * y[1] * y[109] * y[17]))
    return (0) - (r160)
 
def C00935(t, y):
    r146 = (13.7 * y[360] * y[110]) / (1 + (y[360] * y[110]))
    r148 = (13.7 * y[360] * y[110]) / (1 + (y[360] * y[110]))
    return (0) - (r146 + r148)
 
def C00937(t, y):
    r8 = (13.7 * y[307] * y[146] * y[2]) / (1 + (y[307] * y[146] * y[2]))
    return (r8) - (0)
 
def C00944(t, y):
    r127 = (13.7 * y[354] * y[165]) / (1 + (y[354] * y[165]))
    return (r127) - (0)
 
def C00957(t, y):
    r6 = (13.7 * y[306] * y[185] * y[2]) / (1 + (y[306] * y[185] * y[2]))
    return (r6) - (0)
 
def C00962(t, y):
    r70 = (13.7 * y[338] * y[67] * y[0]) / (1 + (y[338] * y[67] * y[0]))
    r81 = (13.7 * y[338] * y[230] * y[0]) / (1 + (y[338] * y[230] * y[0]))
    r85 = (13.7 * y[338] * y[67] * y[0]) / (1 + (y[338] * y[67] * y[0]))
    r96 = (13.7 * y[338] * y[230] * y[0]) / (1 + (y[338] * y[230] * y[0]))
    return (r70 + r81 + r85 + r96) - (0)
 
def C00993(t, y):
    r164 = (13.7 * y[369] * y[1] *  y[49]) / (1 + (y[369] * y[1] *  y[49]))
    return (r164) - (0)
 
def C01074(t, y):
    r100 = (13.7 * y[339] * y[235] * y[0] ) / (1 + (y[339] * y[235] * y[0] ))
    return (r100) - (0)
 
def C01157(t, y):
    r26 = (13.7 * y[317] * y[117] * y[2]) / (1 + (y[317] * y[117] * y[2]))
    r27 = (13.7 * y[317] * y[117] * y[5] ) / (1 + (y[317] * y[117] * y[5] ))
    return (0) - (r26 + r27)
 
def C01159(t, y):
    r141 = (13.7 * y[357] * y[118] * y[95]) / (1 + (y[357] * y[118] * y[95]))
    return (0) - (r141)
 
def C01172(t, y):
    r38 = (13.7 * y[326] * y[1] * y[64]) / (1 + (y[326] * y[1] * y[64]))
    r41 = (13.7 * y[326] * y[1] * y[64]) / (1 + (y[326] * y[1] * y[64]))
    return (r38 + r41) - (0)
 
def C01179(t, y):
    r22 = (13.7 * y[315] * y[70] * y[2]) / (1 + (y[315] * y[70] * y[2]))
    return (r22) - (0)
 
def C01185(t, y):
    r118 = (13.7 * y[346] * y[106] * y[0]) / (1 + (y[346] * y[106] * y[0]))
    r36 = (13.7 * y[325] * y[121] * y[10] * y[9]) / (1 + (y[325] * y[121] * y[10] * y[9]))
    return (r118) - (r36)
 
def C01190(t, y):
    r73 = (13.7 * y[338] * y[123] * y[0]) / (1 + (y[338] * y[123] * y[0]))
    r88 = (13.7 * y[338] * y[123] * y[0]) / (1 + (y[338] * y[123] * y[0]))
    return (r73 + r88) - (0)
 
def C01290(t, y):
    r73 = (13.7 * y[338] * y[123] * y[0]) / (1 + (y[338] * y[123] * y[0]))
    r88 = (13.7 * y[338] * y[123] * y[0]) / (1 + (y[338] * y[123] * y[0]))
    return (0) - (r73 + r88)
 
def C01335(t, y):
    r15 = (13.7 * y[309] * y[79] * y[202]) / (1 + (y[309] * y[79] * y[202]))
    r16 = (13.7 * y[310] * y[195] * y[202]) / (1 + (y[310] * y[195] * y[202]))
    r17 = (13.7 * y[311] * y[3] * y[202] * y[36]) / (1 + (y[311] * y[3] * y[202] * y[36]))
    r18 = (13.7 * y[312] * y[26] * y[202]) / (1 + (y[312] * y[26] * y[202]))
    r19 = (13.7 * y[313] * y[210] * y[202]) / (1 + (y[313] * y[210] * y[202]))
    r20 = (13.7 * y[313] * y[205] * y[202]) / (1 + (y[313] * y[205] * y[202]))
    return (r15 + r16 + r17 + r18 + r19 + r20) - (0)
 
def C01336(t, y):
    r137 = (13.7 * y[356] * y[145] * y[0]) / (1 + (y[356] * y[145] * y[0]))
    return (r137) - (0)
 
def C01346(t, y):
    r47 = (13.7 * y[329] * y[1] * y[83]) / (1 + (y[329] * y[1] * y[83]))
    return (r47) - (0)
 
def C01380(t, y):
    r9 = (13.7 * y[307] * y[127] * y[2]) / (1 + (y[307] * y[127] * y[2]))
    return (0) - (r9)
 
def C01419(t, y):
    r106 = (13.7 * y[341] * y[128] * y[0]) / (1 + (y[341] * y[128] * y[0]))
    return (0) - (r106)
 
def C01609(t, y):
    r44 = (13.7 * y[327] * y[1] * y[129]) / (1 + (y[327] * y[1] * y[129]))
    return (0) - (r44)
 
def C01635(t, y):
    r151 = (13.7 * y[363] * y[1] * y[21] * y[130]) / (1 + (y[363] * y[1] * y[21] * y[130]))
    return (0) - (r151)
 
def C01642(t, y):
    r149 = (13.7 * y[361] * y[1] * y[19] * y[131]) / (1 + (y[361] * y[1] * y[19] * y[131]))
    return (0) - (r149)
 
def C01649(t, y):
    r150 = (13.7 * y[362] * y[1] * y[56] * y[132]) / (1 + (y[362] * y[1] * y[56] * y[132]))
    return (0) - (r150)
 
def C01929(t, y):
    r3 = (13.7 * y[305] * y[107] * y[2]) / (1 + (y[305] * y[107] * y[2]))
    r2 = (13.7 * y[305] * y[133] * y[0] * y[2]) / (1 + (y[305] * y[133] * y[0] * y[2]))
    return (r3) - (r2)
 
def C01962(t, y):
    r135 = (13.7 * y[356] * y[91] * y[0] ) / (1 + (y[356] * y[91] * y[0] ))
    return (r135) - (0)
 
def C02211(t, y):
    r61 = (13.7 * y[332] * y[135] * y[29] * y[1]) / (1 + (y[332] * y[135] * y[29] * y[1]))
    r62 = (13.7 * y[332] * y[135] * y[29]) / (1 + (y[332] * y[135] * y[29]))
    return (0) - (r61 + r62)
 
def C02218(t, y):
    r129 = (13.7 * y[355] * y[31]) / (1 + (y[355] * y[31]))
    r131 = (13.7 * y[355] * y[136]) / (1 + (y[355] * y[136]))
    return (r129) - (r131)
 
def C02291(t, y):
    r134 = (13.7 * y[356] * y[137] * y[0]) / (1 + (y[356] * y[137] * y[0]))
    return (0) - (r134)
 
def C02341(t, y):
    r32 = (13.7 * y[321] * y[13] * y[138] ) / (1 + (y[321] * y[13] * y[138] ))
    return (0) - (r32)
 
def C02356(t, y):
    r163 = (13.7 * y[368] * y[1] * y[17] * y[139]) / (1 + (y[368] * y[1] * y[17] * y[139]))
    return (0) - (r163)
 
def C02412(t, y):
    r149 = (13.7 * y[361] * y[1] * y[19] * y[131]) / (1 + (y[361] * y[1] * y[19] * y[131]))
    return (r149) - (0)
 
def C02702(t, y):
    r150 = (13.7 * y[362] * y[1] * y[56] * y[132]) / (1 + (y[362] * y[1] * y[56] * y[132]))
    return (r150) - (0)
 
def C02729(t, y):
    r44 = (13.7 * y[327] * y[1] * y[129]) / (1 + (y[327] * y[1] * y[129]))
    return (r44) - (0)
 
def C02749(t, y):
    r136 = (13.7 * y[356] * y[143] * y[0]) / (1 + (y[356] * y[143] * y[0]))
    return (0) - (r136)
 
def C02843(t, y):
    r152 = (13.7 * y[364] * y[1] * y[97] * y[8]) / (1 + (y[364] * y[1] * y[97] * y[8]))
    return (r152) - (0)
 
def C02882(t, y):
    r133 = (13.7 * y[356] * y[145] * y[0]) / (1 + (y[356] * y[145] * y[0]))
    r137 = (13.7 * y[356] * y[145] * y[0]) / (1 + (y[356] * y[145] * y[0]))
    return (0) - (r133 + r137)
 
def C02912(t, y):
    r8 = (13.7 * y[307] * y[146] * y[2]) / (1 + (y[307] * y[146] * y[2]))
    return (0) - (r8)
 
def C02917(t, y):
    r7 = (13.7 * y[307] * y[147] * y[2]) / (1 + (y[307] * y[147] * y[2]))
    return (0) - (r7)
 
def C03023(t, y):
    r30 = (13.7 * y[319] * y[148] * y[80] * y[0]) / (1 + (y[319] * y[148] * y[80] * y[0]))
    return (0) - (r30)
 
def C03082(t, y):
    r45 = (13.7 * y[328] * y[1] * y[25]) / (1 + (y[328] * y[1] * y[25]))
    return (r45) - (0)
 
def C03089(t, y):
    r104 = (13.7 * y[340] * y[61] * y[0]) / (1 + (y[340] * y[61] * y[0]))
    return (r104) - (0)
 
def C03373(t, y):
    r126 = (13.7 * y[353] * y[166]) / (1 + (y[353] * y[166]))
    return (r126) - (0)
 
def C03391(t, y):
    r33 = (13.7 * y[322] * y[13] * y[105]) / (1 + (y[322] * y[13] * y[105]))
    return (r33) - (0)
 
def C03523(t, y):
    r65 = (13.7 * y[333] * y[158] * y[0]) / (1 + (y[333] * y[158] * y[0]))
    return (r65) - (0)
 
def C03539(t, y):
    r103 = (13.7 * y[340] * y[15] * y[0]) / (1 + (y[340] * y[15] * y[0]))
    return (r103) - (0)
 
def C03541(t, y):
    r157 = (13.7 * y[367] * y[1] * y[155] * y[17]) / (1 + (y[367] * y[1] * y[155] * y[17]))
    r157 = (13.7 * y[367] * y[1] * y[155] * y[17]) / (1 + (y[367] * y[1] * y[155] * y[17]))
    return (r157) - (r157)
 
def C03722(t, y):
    r36 = (13.7 * y[325] * y[121] * y[10] * y[9]) / (1 + (y[325] * y[121] * y[10] * y[9]))
    return (r36) - (0)
 
def C03733(t, y):
    r145 = (13.7 * y[360] * y[27]) / (1 + (y[360] * y[27]))
    r147 = (13.7 * y[360] * y[27]) / (1 + (y[360] * y[27]))
    return (r145 + r147) - (0)
 
def C03880(t, y):
    r65 = (13.7 * y[333] * y[158] * y[0]) / (1 + (y[333] * y[158] * y[0]))
    return (0) - (r65)
 
def C03912(t, y):
    r24 = (13.7 * y[317] * y[56] * y[2]) / (1 + (y[317] * y[56] * y[2]))
    r25 = (13.7 * y[317] * y[56] * y[5]) / (1 + (y[317] * y[56] * y[5]))
    return (r24 + r25) - (0)
 
def C04236(t, y):
    r11 = (13.7 * y[308] * y[65] * y[9]) / (1 + (y[308] * y[65] * y[9]))
    r12 = (13.7 * y[308] * y[164] *y[2]) / (1 + (y[308] * y[164] *y[2]))
    return (r11 + r12) - (0)
 
def C04262(t, y):
    r141 = (13.7 * y[357] * y[118] * y[95]) / (1 + (y[357] * y[118] * y[95]))
    return (r141) - (0)
 
def C04281(t, y):
    r26 = (13.7 * y[317] * y[117] * y[2]) / (1 + (y[317] * y[117] * y[2]))
    r27 = (13.7 * y[317] * y[117] * y[5] ) / (1 + (y[317] * y[117] * y[5] ))
    return (r26 + r27) - (0)
 
def C04302(t, y):
    r35 = (13.7 * y[324] * y[163] * y[10]) / (1 + (y[324] * y[163] * y[10]))
    return (0) - (r35)
 
def C04411(t, y):
    r12 = (13.7 * y[308] * y[164] *y[2]) / (1 + (y[308] * y[164] *y[2]))
    r13 = (13.7 * y[308] * y[164] *y[2]) / (1 + (y[308] * y[164] *y[2]))
    return (0) - (r12 + r13)
 
def C04691(t, y):
    r127 = (13.7 * y[354] * y[165]) / (1 + (y[354] * y[165]))
    return (0) - (r127)
 
def C04751(t, y):
    r126 = (13.7 * y[353] * y[166]) / (1 + (y[353] * y[166]))
    return (0) - (r126)
 
def C04884(t, y):
    r74 = (13.7 * y[338] * y[169] * y[0]) / (1 + (y[338] * y[169] * y[0]))
    r89 = (13.7 * y[338] * y[169] * y[0]) / (1 + (y[338] * y[169] * y[0]))
    return (r74 + r89) - (0)
 
def C04895(t, y):
    r111 = (13.7 * y[345] * y[23] * y[0]) / (1 + (y[345] * y[23] * y[0]))
    r113 = (13.7 * y[345] * y[168] * y[0]) / (1 + (y[345] * y[168] * y[0]))
    return (r111) - (r113)
 
def C04911(t, y):
    r74 = (13.7 * y[338] * y[169] * y[0]) / (1 + (y[338] * y[169] * y[0]))
    r89 = (13.7 * y[338] * y[169] * y[0]) / (1 + (y[338] * y[169] * y[0]))
    return (0) - (r74 + r89)
 
def C05167(t, y):
    r132 = (13.7 * y[355] * y[170]) / (1 + (y[355] * y[170]))
    return (0) - (r132)
 
def C05196(t, y):
    r31 = (13.7 * y[320] * y[13] * y[171] * y[172]) / (1 + (y[320] * y[13] * y[171] * y[172]))
    return (0) - (r31)
 
def C05197(t, y):
    r31 = (13.7 * y[320] * y[13] * y[171] * y[172]) / (1 + (y[320] * y[13] * y[171] * y[172]))
    return (0) - (r31)
 
def C05198(t, y):
    r31 = (13.7 * y[320] * y[13] * y[171] * y[172]) / (1 + (y[320] * y[13] * y[171] * y[172]))
    r105 = (13.7 * y[340] * y[173] * y[0]) / (1 + (y[340] * y[173] * y[0]))
    return (r31) - (r105)
 
def C05199(t, y):
    r31 = (13.7 * y[320] * y[13] * y[171] * y[172]) / (1 + (y[320] * y[13] * y[171] * y[172]))
    return (r31) - (0)
 
def C05312(t, y):
    r31 = (13.7 * y[320] * y[13] * y[171] * y[172]) / (1 + (y[320] * y[13] * y[171] * y[172]))
    return (r31) - (0)
 
def C05394(t, y):
    r75 = (13.7 * y[338] * y[177] * y[0]) / (1 + (y[338] * y[177] * y[0]))
    r82 = (13.7 * y[338] * y[232] * y[0]) / (1 + (y[338] * y[232] * y[0]))
    r90 = (13.7 * y[338] * y[177] * y[0]) / (1 + (y[338] * y[177] * y[0]))
    r97 = (13.7 * y[338] * y[232] * y[0]) / (1 + (y[338] * y[232] * y[0]))
    return (r75 + r82 + r90 + r97) - (0)
 
def C05403(t, y):
    r75 = (13.7 * y[338] * y[177] * y[0]) / (1 + (y[338] * y[177] * y[0]))
    r90 = (13.7 * y[338] * y[177] * y[0]) / (1 + (y[338] * y[177] * y[0]))
    return (0) - (r75 + r90)
 
def C05689(t, y):
    r140 = (13.7 * y[356] * y[178] * y[0]) / (1 + (y[356] * y[178] * y[0]))
    return (0) - (r140)
 
def C05698(t, y):
    r139 = (13.7 * y[356] * y[180] * y[0]) / (1 + (y[356] * y[180] * y[0]))
    return (r139) - (0)
 
def C05699(t, y):
    r139 = (13.7 * y[356] * y[180] * y[0]) / (1 + (y[356] * y[180] * y[0]))
    return (0) - (r139)
 
def C05703(t, y):
    r140 = (13.7 * y[356] * y[178] * y[0]) / (1 + (y[356] * y[178] * y[0]))
    return (r140) - (0)
 
def C05726(t, y):
    r107 = (13.7 * y[341] * y[183] * y[0]) / (1 + (y[341] * y[183] * y[0]))
    return (r107) - (0)
 
def C05729(t, y):
    r107 = (13.7 * y[341] * y[183] * y[0]) / (1 + (y[341] * y[183] * y[0]))
    return (0) - (r107)
 
def C05796(t, y):
    r71 = (13.7 * y[338] * y[184] * y[0]) / (1 + (y[338] * y[184] * y[0]))
    r86 = (13.7 * y[338] * y[184] * y[0]) / (1 + (y[338] * y[184] * y[0]))
    r71 = (13.7 * y[338] * y[184] * y[0]) / (1 + (y[338] * y[184] * y[0]))
    r86 = (13.7 * y[338] * y[184] * y[0]) / (1 + (y[338] * y[184] * y[0]))
    return (r71 + r86) - (r71 + r86)
 
def C05823(t, y):
    r6 = (13.7 * y[306] * y[185] * y[2]) / (1 + (y[306] * y[185] * y[2]))
    return (0) - (r6)
 
def C05922(t, y):
    r112 = (13.7 * y[345] * y[23] * y[0]) / (1 + (y[345] * y[23] * y[0]))
    r114 = (13.7 * y[345] * y[186] * y[0]) / (1 + (y[345] * y[186] * y[0]))
    return (r112) - (r114)
 
def C05923(t, y):
    r114 = (13.7 * y[345] * y[186] * y[0]) / (1 + (y[345] * y[186] * y[0]))
    r115 = (13.7 * y[345] * y[187]) / (1 + (y[345] * y[187]))
    return (r114) - (r115)
 
def C05928(t, y):
    r159 = (13.7 * y[367] * y[1] * y[66] * y[17]) / (1 + (y[367] * y[1] * y[66] * y[17]))
    r161 = (13.7 * y[367] * y[1] * y[188] * y[17]) / (1 + (y[367] * y[1] * y[188] * y[17]))
    return (r159) - (r161)
 
def C05929(t, y):
    r161 = (13.7 * y[367] * y[1] * y[188] * y[17]) / (1 + (y[367] * y[1] * y[188] * y[17]))
    return (r161) - (0)
 
def C05984(t, y):
    r5 = (13.7 * y[306] * y[190] * y[2]) / (1 + (y[306] * y[190] * y[2]))
    return (0) - (r5)
 
def C06032(t, y):
    r14 = (13.7 * y[308] *  y[43] * y[9] * y[3] * y[36]) / (1 + (y[308] *  y[43] * y[9] * y[3] * y[36]))
    return (r14) - (0)
 
def C06135(t, y):
    r76 = (13.7 * y[338] * y[193] * y[0]) / (1 + (y[338] * y[193] * y[0]))
    r91 = (13.7 * y[338] * y[193] * y[0]) / (1 + (y[338] * y[193] * y[0]))
    return (r76 + r91) - (0)
 
def C06136(t, y):
    r76 = (13.7 * y[338] * y[193] * y[0]) / (1 + (y[338] * y[193] * y[0]))
    r91 = (13.7 * y[338] * y[193] * y[0]) / (1 + (y[338] * y[193] * y[0]))
    return (0) - (r76 + r91)
 
def C06148(t, y):
    r113 = (13.7 * y[345] * y[168] * y[0]) / (1 + (y[345] * y[168] * y[0]))
    r115 = (13.7 * y[345] * y[187]) / (1 + (y[345] * y[187]))
    return (r113 + r115) - (0)
 
def C07292(t, y):
    r16 = (13.7 * y[310] * y[195] * y[202]) / (1 + (y[310] * y[195] * y[202]))
    return (0) - (r16)
 
def C07293(t, y):
    r16 = (13.7 * y[310] * y[195] * y[202]) / (1 + (y[310] * y[195] * y[202]))
    return (r16) - (0)
 
def C09332(t, y):
    r158 = (13.7 * y[367] * y[1] * y[41] * y[17]) / (1 + (y[367] * y[1] * y[41] * y[17]))
    return (r158) - (0)
 
def C11039(t, y):
    r54 = (13.7 * y[331] * y[198]) / (1 + (y[331] * y[198]))
    r60 = (13.7 * y[331] * y[198]) / (1 + (y[331] * y[198]))
    return (0) - (r54 + r60)
 
def C11434(t, y):
    r48 = (13.7 * y[330] * y[199] * y[29]) / (1 + (y[330] * y[199] * y[29]))
    return (0) - (r48)
 
def C11435(t, y):
    r48 = (13.7 * y[330] * y[199] * y[29]) / (1 + (y[330] * y[199] * y[29]))
    return (r48) - (0)
 
def C11514(t, y):
    r32 = (13.7 * y[321] * y[13] * y[138] ) / (1 + (y[321] * y[13] * y[138] ))
    return (r32) - (0)
 
def C15498(t, y):
    r15 = (13.7 * y[309] * y[79] * y[202]) / (1 + (y[309] * y[79] * y[202]))
    r16 = (13.7 * y[310] * y[195] * y[202]) / (1 + (y[310] * y[195] * y[202]))
    r17 = (13.7 * y[311] * y[3] * y[202] * y[36]) / (1 + (y[311] * y[3] * y[202] * y[36]))
    r18 = (13.7 * y[312] * y[26] * y[202]) / (1 + (y[312] * y[26] * y[202]))
    r19 = (13.7 * y[313] * y[210] * y[202]) / (1 + (y[313] * y[210] * y[202]))
    r20 = (13.7 * y[313] * y[205] * y[202]) / (1 + (y[313] * y[205] * y[202]))
    return (0) - (r15 + r16 + r17 + r18 + r19 + r20)
 
def C15653(t, y):
    r30 = (13.7 * y[319] * y[148] * y[80] * y[0]) / (1 + (y[319] * y[148] * y[80] * y[0]))
    return (r30) - (0)
 
def C15972(t, y):
    r20 = (13.7 * y[313] * y[205] * y[202]) / (1 + (y[313] * y[205] * y[202]))
    return (r20) - (0)
 
def C15973(t, y):
    r20 = (13.7 * y[313] * y[205] * y[202]) / (1 + (y[313] * y[205] * y[202]))
    return (0) - (r20)
 
def C16237(t, y):
    r19 = (13.7 * y[313] * y[210] * y[202]) / (1 + (y[313] * y[210] * y[202]))
    return (r19) - (0)
 
def C16265(t, y):
    r101 = (13.7 * y[339] * y[234] * y[0]) / (1 + (y[339] * y[234] * y[0]))
    return (r101) - (0)
 
def C16618(t, y):
    r171 = (13.7 * y[371] * y[208] * y[1] * y[30] * y[0]) / (1 + (y[371] * y[208] * y[1] * y[30] * y[0]))
    return (0) - (r171)
 
def C16619(t, y):
    r171 = (13.7 * y[371] * y[208] * y[1] * y[30] * y[0]) / (1 + (y[371] * y[208] * y[1] * y[30] * y[0]))
    return (r171) - (0)
 
def C16832(t, y):
    r19 = (13.7 * y[313] * y[210] * y[202]) / (1 + (y[313] * y[210] * y[202]))
    return (0) - (r19)
 
def C18026(t, y):
    r173 = (13.7 * y[372] * y[1] * y[75] * y[51] * y[36]) / (1 + (y[372] * y[1] * y[75] * y[51] * y[36]))
    return (r173) - (0)
 
def C18094(t, y):
    r146 = (13.7 * y[360] * y[110]) / (1 + (y[360] * y[110]))
    r148 = (13.7 * y[360] * y[110]) / (1 + (y[360] * y[110]))
    return (r146 + r148) - (0)
 
def C19078(t, y):
    r62 = (13.7 * y[332] * y[135] * y[29]) / (1 + (y[332] * y[135] * y[29]))
    r63 = (13.7 * y[332] * y[213] * y[29]) / (1 + (y[332] * y[213] * y[29]))
    return (r62) - (r63)
 
def C19080(t, y):
    r63 = (13.7 * y[332] * y[213] * y[29]) / (1 + (y[332] * y[213] * y[29]))
    r64 = (13.7 * y[332] * y[214] * y[1]) / (1 + (y[332] * y[214] * y[1]))
    return (r63) - (r64)
 
def C19085(t, y):
    r61 = (13.7 * y[332] * y[135] * y[29] * y[1]) / (1 + (y[332] * y[135] * y[29] * y[1]))
    r64 = (13.7 * y[332] * y[214] * y[1]) / (1 + (y[332] * y[214] * y[1]))
    return (r61 + r64) - (0)
 
def C20904(t, y):
    r131 = (13.7 * y[355] * y[136]) / (1 + (y[355] * y[136]))
    r130 = (13.7 * y[355] * y[216] * y[0]) / (1 + (y[355] * y[216] * y[0]))
    return (r131) - (r130)
 
def C21015(t, y):
    r163 = (13.7 * y[368] * y[1] * y[17] * y[139]) / (1 + (y[368] * y[1] * y[17] * y[139]))
    return (r163) - (0)
 
def C21031(t, y):
    r54 = (13.7 * y[331] * y[198]) / (1 + (y[331] * y[198]))
    r60 = (13.7 * y[331] * y[198]) / (1 + (y[331] * y[198]))
    return (r54 + r60) - (0)
 
def C21113(t, y):
    r117 = (13.7 * y[346] * y[3] * y[0]) / (1 + (y[346] * y[3] * y[0]))
    return (r117) - (0)
 
def C22288(t, y):
    r105 = (13.7 * y[340] * y[173] * y[0]) / (1 + (y[340] * y[173] * y[0]))
    return (r105) - (0)
 
def G00092(t, y):
    r80 = (13.7 * y[338] * y[221] * y[0]) / (1 + (y[338] * y[221] * y[0]))
    r95 = (13.7 * y[338] * y[221] * y[0]) / (1 + (y[338] * y[221] * y[0]))
    return (0) - (r80 + r95)
 
def G00109(t, y):
    r78 = (13.7 * y[338] * y[223] * y[0]) / (1 + (y[338] * y[223] * y[0]))
    r93 = (13.7 * y[338] * y[223] * y[0]) / (1 + (y[338] * y[223] * y[0]))
    return (r78 + r93) - (0)
 
def G00110(t, y):
    r78 = (13.7 * y[338] * y[223] * y[0]) / (1 + (y[338] * y[223] * y[0]))
    r93 = (13.7 * y[338] * y[223] * y[0]) / (1 + (y[338] * y[223] * y[0]))
    return (0) - (r78 + r93)
 
def G00123(t, y):
    r77 = (13.7 * y[338] * y[225] * y[0]) / (1 + (y[338] * y[225] * y[0]))
    r92 = (13.7 * y[338] * y[225] * y[0]) / (1 + (y[338] * y[225] * y[0]))
    return (r77 + r92) - (0)
 
def G00124(t, y):
    r77 = (13.7 * y[338] * y[225] * y[0]) / (1 + (y[338] * y[225] * y[0]))
    r92 = (13.7 * y[338] * y[225] * y[0]) / (1 + (y[338] * y[225] * y[0]))
    return (0) - (r77 + r92)
 
def G00526(t, y):
    r102 = (13.7 * y[339] * y[231] * y[0] ) / (1 + (y[339] * y[231] * y[0] ))
    return (r102) - (0)
 
def G00872(t, y):
    r100 = (13.7 * y[339] * y[235] * y[0] ) / (1 + (y[339] * y[235] * y[0] ))
    r101 = (13.7 * y[339] * y[234] * y[0]) / (1 + (y[339] * y[234] * y[0]))
    return (r100 + r101) - (0)
 
def G01977(t, y):
    r84 = (13.7 * y[338] * y[228] * y[0]) / (1 + (y[338] * y[228] * y[0]))
    r99 = (13.7 * y[338] * y[228] * y[0]) / (1 + (y[338] * y[228] * y[0]))
    return (0) - (r84 + r99)
 
def G10238(t, y):
    r80 = (13.7 * y[338] * y[221] * y[0]) / (1 + (y[338] * y[221] * y[0]))
    r95 = (13.7 * y[338] * y[221] * y[0]) / (1 + (y[338] * y[221] * y[0]))
    return (r80 + r95) - (0)
 
def G10504(t, y):
    r79 = (13.7 * y[338] * y[230] * y[0]) / (1 + (y[338] * y[230] * y[0]))
    r81 = (13.7 * y[338] * y[230] * y[0]) / (1 + (y[338] * y[230] * y[0]))
    r94 = (13.7 * y[338] * y[230] * y[0]) / (1 + (y[338] * y[230] * y[0]))
    r96 = (13.7 * y[338] * y[230] * y[0]) / (1 + (y[338] * y[230] * y[0]))
    return (0) - (r79 + r81 + r94 + r96)
 
def G10505(t, y):
    r102 = (13.7 * y[339] * y[231] * y[0] ) / (1 + (y[339] * y[231] * y[0] ))
    r102 = (13.7 * y[339] * y[231] * y[0] ) / (1 + (y[339] * y[231] * y[0] ))
    return (r102) - (r102)
 
def G10531(t, y):
    r82 = (13.7 * y[338] * y[232] * y[0]) / (1 + (y[338] * y[232] * y[0]))
    r97 = (13.7 * y[338] * y[232] * y[0]) / (1 + (y[338] * y[232] * y[0]))
    return (0) - (r82 + r97)
 
def G10534(t, y):
    r83 = (13.7 * y[338] * y[233] * y[0]) / (1 + (y[338] * y[233] * y[0]))
    r98 = (13.7 * y[338] * y[233] * y[0]) / (1 + (y[338] * y[233] * y[0]))
    r83 = (13.7 * y[338] * y[233] * y[0]) / (1 + (y[338] * y[233] * y[0]))
    r98 = (13.7 * y[338] * y[233] * y[0]) / (1 + (y[338] * y[233] * y[0]))
    return (r83 + r98) - (r83 + r98)
 
def G12336(t, y):
    r101 = (13.7 * y[339] * y[234] * y[0]) / (1 + (y[339] * y[234] * y[0]))
    return (0) - (r101)
 
def G13043(t, y):
    r100 = (13.7 * y[339] * y[235] * y[0] ) / (1 + (y[339] * y[235] * y[0] ))
    return (0) - (r100)
 
def G13073(t, y):
    r84 = (13.7 * y[338] * y[228] * y[0]) / (1 + (y[338] * y[228] * y[0]))
    r99 = (13.7 * y[338] * y[228] * y[0]) / (1 + (y[338] * y[228] * y[0]))
    return (r84 + r99) - (0)
 
def E1_1_1_23_mRNA(t, y):
    mRNA1 = 0.00292 - (0.0093 * y[237])
    return (mRNA1) - (0)
 
def E1_1_1_27_mRNA(t, y):
    mRNA2 = 0.00292 - (0.0093 * y[238])
    return (mRNA2) - (0)
 
def E1_1_1_77_mRNA(t, y):
    mRNA3 = 0.00292 - (0.0093 * y[239])
    return (mRNA3) - (0)
 
def E1_1_1_85_mRNA(t, y):
    mRNA4 = 0.00292 - (0.0093 * y[240])
    return (mRNA4) - (0)
 
def E1_11_1_24_mRNA(t, y):
    mRNA5 = 0.00292 - (0.0093 * y[241])
    return (mRNA5) - (0)
 
def E1_11_1_25_mRNA(t, y):
    mRNA6 = 0.00292 - (0.0093 * y[242])
    return (mRNA6) - (0)
 
def E1_11_1_26_mRNA(t, y):
    mRNA7 = 0.00292 - (0.0093 * y[243])
    return (mRNA7) - (0)
 
def E1_11_1_27_mRNA(t, y):
    mRNA8 = 0.00292 - (0.0093 * y[244])
    return (mRNA8) - (0)
 
def E1_11_1_28_mRNA(t, y):
    mRNA9 = 0.00292 - (0.0093 * y[245])
    return (mRNA9) - (0)
 
def E1_11_1_29_mRNA(t, y):
    mRNA10 = 0.00292 - (0.0093 * y[246])
    return (mRNA10) - (0)
 
def E1_3_1_12_mRNA(t, y):
    mRNA11 = 0.00292 - (0.0093 * y[247])
    return (mRNA11) - (0)
 
def E1_3_98_1_mRNA(t, y):
    mRNA12 = 0.00292 - (0.0093 * y[248])
    return (mRNA12) - (0)
 
def E1_5_1_2_mRNA(t, y):
    mRNA13 = 0.00292 - (0.0093 * y[249])
    return (mRNA13) - (0)
 
def E1_5_1_20_mRNA(t, y):
    mRNA14 = 0.00292 - (0.0093 * y[250])
    return (mRNA14) - (0)
 
def E1_8_4_12_mRNA(t, y):
    mRNA15 = 0.00292 - (0.0093 * y[251])
    return (mRNA15) - (0)
 
def E1_97_1_4_mRNA(t, y):
    mRNA16 = 0.00292 - (0.0093 * y[252])
    return (mRNA16) - (0)
 
def E2_1_1_144_mRNA(t, y):
    mRNA17 = 0.00292 - (0.0093 * y[253])
    return (mRNA17) - (0)
 
def E2_1_1_72_mRNA(t, y):
    mRNA18 = 0.00292 - (0.0093 * y[254])
    return (mRNA18) - (0)
 
def E2_1_3_3_mRNA(t, y):
    mRNA19 = 0.00292 - (0.0093 * y[255])
    return (mRNA19) - (0)
 
def E2_4_2_18_mRNA(t, y):
    mRNA20 = 0.00292 - (0.0093 * y[256])
    return (mRNA20) - (0)
 
def E2_4_2_19_mRNA(t, y):
    mRNA21 = 0.00292 - (0.0093 * y[257])
    return (mRNA21) - (0)
 
def E2_7_1_2_mRNA(t, y):
    mRNA22 = 0.00292 - (0.0093 * y[258])
    return (mRNA22) - (0)
 
def E2_7_11_1_mRNA(t, y):
    mRNA23 = 0.00292 - (0.0093 * y[259])
    return (mRNA23) - (0)
 
def E2_7_2_4_mRNA(t, y):
    mRNA24 = 0.00292 - (0.0093 * y[260])
    return (mRNA24) - (0)
 
def E2_7_4_9_mRNA(t, y):
    mRNA25 = 0.00292 - (0.0093 * y[261])
    return (mRNA25) - (0)
 
def E2_7_7_60_mRNA(t, y):
    mRNA26 = 0.00292 - (0.0093 * y[262])
    return (mRNA26) - (0)
 
def E2_7_7_7_mRNA(t, y):
    mRNA27 = 0.00292 - (0.0093 * y[263])
    return (mRNA27) - (0)
 
def E2_7_7_72_mRNA(t, y):
    mRNA28 = 0.00292 - (0.0093 * y[264])
    return (mRNA28) - (0)
 
def E3_1_1_29_mRNA(t, y):
    mRNA29 = 0.00292 - (0.0093 * y[265])
    return (mRNA29) - (0)
 
def E3_1_11_6_mRNA(t, y):
    mRNA30 = 0.00292 - (0.0093 * y[266])
    return (mRNA30) - (0)
 
def E3_1_26_3_mRNA(t, y):
    mRNA31 = 0.00292 - (0.0093 * y[267])
    return (mRNA31) - (0)
 
def E3_1_26_4_mRNA(t, y):
    mRNA32 = 0.00292 - (0.0093 * y[268])
    return (mRNA32) - (0)
 
def E3_1_3_16_mRNA(t, y):
    mRNA33 = 0.00292 - (0.0093 * y[269])
    return (mRNA33) - (0)
 
def E3_2_1_23_mRNA(t, y):
    mRNA34 = 0.00292 - (0.0093 * y[270])
    return (mRNA34) - (0)
 
def E3_2_1_35_mRNA(t, y):
    mRNA35 = 0.00292 - (0.0093 * y[271])
    return (mRNA35) - (0)
 
def E3_2_2_9_mRNA(t, y):
    mRNA36 = 0.00292 - (0.0093 * y[272])
    return (mRNA36) - (0)
 
def E3_4_11_2_mRNA(t, y):
    mRNA37 = 0.00292 - (0.0093 * y[273])
    return (mRNA37) - (0)
 
def E3_4_21_53_mRNA(t, y):
    mRNA38 = 0.00292 - (0.0093 * y[274])
    return (mRNA38) - (0)
 
def E3_4_21_92_mRNA(t, y):
    mRNA39 = 0.00292 - (0.0093 * y[275])
    return (mRNA39) - (0)
 
def E3_4_24_76_mRNA(t, y):
    mRNA40 = 0.00292 - (0.0093 * y[276])
    return (mRNA40) - (0)
 
def E3_5_4_16_mRNA(t, y):
    mRNA41 = 0.00292 - (0.0093 * y[277])
    return (mRNA41) - (0)
 
def E3_6_1_22_mRNA(t, y):
    mRNA42 = 0.00292 - (0.0093 * y[278])
    return (mRNA42) - (0)
 
def E7_1_2_2_mRNA(t, y):
    mRNA43 = 0.00292 - (0.0093 * y[279])
    return (mRNA43) - (0)
 
def E3_6_3_17_mRNA(t, y):
    mRNA44 = 0.00292 - (0.0093 * y[280])
    return (mRNA44) - (0)
 
def E7_2_2_14_mRNA(t, y):
    mRNA45 = 0.00292 - (0.0093 * y[281])
    return (mRNA45) - (0)
 
def E7_3_2_2_mRNA(t, y):
    mRNA46 = 0.00292 - (0.0093 * y[282])
    return (mRNA46) - (0)
 
def E7_2_2_12_mRNA(t, y):
    mRNA47 = 0.00292 - (0.0093 * y[283])
    return (mRNA47) - (0)
 
def E4_1_1_20_mRNA(t, y):
    mRNA48 = 0.00292 - (0.0093 * y[284])
    return (mRNA48) - (0)
 
def E4_1_1_21_mRNA(t, y):
    mRNA49 = 0.00292 - (0.0093 * y[285])
    return (mRNA49) - (0)
 
def E4_2_3_4_mRNA(t, y):
    mRNA50 = 0.00292 - (0.0093 * y[286])
    return (mRNA50) - (0)
 
def E4_3_1_17_mRNA(t, y):
    mRNA51 = 0.00292 - (0.0093 * y[287])
    return (mRNA51) - (0)
 
def E4_4_1_13_mRNA(t, y):
    mRNA52 = 0.00292 - (0.0093 * y[288])
    return (mRNA52) - (0)
 
def E5_4_2_11_mRNA(t, y):
    mRNA53 = 0.00292 - (0.0093 * y[289])
    return (mRNA53) - (0)
 
def E5_4_2_12_mRNA(t, y):
    mRNA54 = 0.00292 - (0.0093 * y[290])
    return (mRNA54) - (0)
 
def E5_4_99_5_mRNA(t, y):
    mRNA55 = 0.00292 - (0.0093 * y[291])
    return (mRNA55) - (0)
 
def E5_4_99_9_mRNA(t, y):
    mRNA56 = 0.00292 - (0.0093 * y[292])
    return (mRNA56) - (0)
 
def E6_1_1_14_mRNA(t, y):
    mRNA57 = 0.00292 - (0.0093 * y[293])
    return (mRNA57) - (0)
 
def E6_1_1_15_mRNA(t, y):
    mRNA58 = 0.00292 - (0.0093 * y[294])
    return (mRNA58) - (0)
 
def E6_1_1_7_mRNA(t, y):
    mRNA59 = 0.00292 - (0.0093 * y[295])
    return (mRNA59) - (0)
 
def E6_2_1_3_mRNA(t, y):
    mRNA60 = 0.00292 - (0.0093 * y[296])
    return (mRNA60) - (0)
 
def E6_2_1_5_mRNA(t, y):
    mRNA61 = 0.00292 - (0.0093 * y[297])
    return (mRNA61) - (0)
 
def E6_3_1_2_mRNA(t, y):
    mRNA62 = 0.00292 - (0.0093 * y[298])
    return (mRNA62) - (0)
 
def E6_3_2_17_mRNA(t, y):
    mRNA63 = 0.00292 - (0.0093 * y[299])
    return (mRNA63) - (0)
 
def E6_3_2_2_mRNA(t, y):
    mRNA64 = 0.00292 - (0.0093 * y[300])
    return (mRNA64) - (0)
 
def E6_3_2_4_mRNA(t, y):
    mRNA65 = 0.00292 - (0.0093 * y[301])
    return (mRNA65) - (0)
 
def E6_3_4_2_mRNA(t, y):
    mRNA66 = 0.00292 - (0.0093 * y[302])
    return (mRNA66) - (0)
 
def E6_3_5_2_mRNA(t, y):
    mRNA67 = 0.00292 - (0.0093 * y[303])
    return (mRNA67) - (0)
 
def E6_4_1_3_mRNA(t, y):
    mRNA68 = 0.00292 - (0.0093 * y[304])
    return (mRNA68) - (0)
 
def E1_1_1_23(t, y):
    Peptide1 = (0.278 * y[237]) - (0.00000278 * y[305])
    return (Peptide1) - (0)
 
def E1_1_1_27(t, y):
    Peptide2 = (0.278 * y[238]) - (0.00000278 * y[306])
    return (Peptide2) - (0)
 
def E1_1_1_77(t, y):
    Peptide3 = (0.278 * y[239]) - (0.00000278 * y[307])
    return (Peptide3) - (0)
 
def E1_1_1_85(t, y):
    Peptide4 = (0.278 * y[240]) - (0.00000278 * y[308])
    return (Peptide4) - (0)
 
def E1_11_1_24(t, y):
    Peptide5 = (0.278 * y[241]) - (0.00000278 * y[309])
    return (Peptide5) - (0)
 
def E1_11_1_25(t, y):
    Peptide6 = (0.278 * y[242]) - (0.00000278 * y[310])
    return (Peptide6) - (0)
 
def E1_11_1_26(t, y):
    Peptide7 = (0.278 * y[243]) - (0.00000278 * y[311])
    return (Peptide7) - (0)
 
def E1_11_1_27(t, y):
    Peptide8 = (0.278 * y[244]) - (0.00000278 * y[312])
    return (Peptide8) - (0)
 
def E1_11_1_28(t, y):
    Peptide9 = (0.278 * y[245]) - (0.00000278 * y[313])
    return (Peptide9) - (0)
 
def E1_11_1_29(t, y):
    Peptide10 = (0.278 * y[246]) - (0.00000278 * y[314])
    return (Peptide10) - (0)
 
def E1_3_1_12(t, y):
    Peptide11 = (0.278 * y[247]) - (0.00000278 * y[315])
    return (Peptide11) - (0)
 
def E1_3_98_1(t, y):
    Peptide12 = (0.278 * y[248]) - (0.00000278 * y[316])
    return (Peptide12) - (0)
 
def E1_5_1_2(t, y):
    Peptide13 = (0.278 * y[249]) - (0.00000278 * y[317])
    return (Peptide13) - (0)
 
def E1_5_1_20(t, y):
    Peptide14 = (0.278 * y[250]) - (0.00000278 * y[318])
    return (Peptide14) - (0)
 
def E1_8_4_12(t, y):
    Peptide15 = (0.278 * y[251]) - (0.00000278 * y[319])
    return (Peptide15) - (0)
 
def E1_97_1_4(t, y):
    Peptide16 = (0.278 * y[252]) - (0.00000278 * y[320])
    return (Peptide16) - (0)
 
def E2_1_1_144(t, y):
    Peptide17 = (0.278 * y[253]) - (0.00000278 * y[321])
    return (Peptide17) - (0)
 
def E2_1_1_72(t, y):
    Peptide18 = (0.278 * y[254]) - (0.00000278 * y[322])
    return (Peptide18) - (0)
 
def E2_1_3_3(t, y):
    Peptide19 = (0.278 * y[255]) - (0.00000278 * y[323])
    return (Peptide19) - (0)
 
def E2_4_2_18(t, y):
    Peptide20 = (0.278 * y[256]) - (0.00000278 * y[324])
    return (Peptide20) - (0)
 
def E2_4_2_19(t, y):
    Peptide21 = (0.278 * y[257]) - (0.00000278 * y[325])
    return (Peptide21) - (0)
 
def E2_7_1_2(t, y):
    Peptide22 = (0.278 * y[258]) - (0.00000278 * y[326])
    return (Peptide22) - (0)
 
def E2_7_11_1(t, y):
    Peptide23 = (0.278 * y[259]) - (0.00000278 * y[327])
    return (Peptide23) - (0)
 
def E2_7_2_4(t, y):
    Peptide24 = (0.278 * y[260]) - (0.00000278 * y[328])
    return (Peptide24) - (0)
 
def E2_7_4_9(t, y):
    Peptide25 = (0.278 * y[261]) - (0.00000278 * y[329])
    return (Peptide25) - (0)
 
def E2_7_7_60(t, y):
    Peptide26 = (0.278 * y[262]) - (0.00000278 * y[330])
    return (Peptide26) - (0)
 
def E2_7_7_7(t, y):
    Peptide27 = (0.278 * y[263]) - (0.00000278 * y[331])
    return (Peptide27) - (0)
 
def E2_7_7_72(t, y):
    Peptide28 = (0.278 * y[264]) - (0.00000278 * y[332])
    return (Peptide28) - (0)
 
def E3_1_1_29(t, y):
    Peptide29 = (0.278 * y[265]) - (0.00000278 * y[333])
    return (Peptide29) - (0)
 
def E3_1_11_6(t, y):
    Peptide30 = (0.278 * y[266]) - (0.00000278 * y[334])
    return (Peptide30) - (0)
 
def E3_1_26_3(t, y):
    Peptide31 = (0.278 * y[267]) - (0.00000278 * y[335])
    return (Peptide31) - (0)
 
def E3_1_26_4(t, y):
    Peptide32 = (0.278 * y[268]) - (0.00000278 * y[336])
    return (Peptide32) - (0)
 
def E3_1_3_16(t, y):
    Peptide33 = (0.278 * y[269]) - (0.00000278 * y[337])
    return (Peptide33) - (0)
 
def E3_2_1_23(t, y):
    Peptide34 = (0.278 * y[270]) - (0.00000278 * y[338])
    return (Peptide34) - (0)
 
def E3_2_1_35(t, y):
    Peptide35 = (0.278 * y[271]) - (0.00000278 * y[339])
    return (Peptide35) - (0)
 
def E3_2_2_9(t, y):
    Peptide36 = (0.278 * y[272]) - (0.00000278 * y[340])
    return (Peptide36) - (0)
 
def E3_4_11_2(t, y):
    Peptide37 = (0.278 * y[273]) - (0.00000278 * y[341])
    return (Peptide37) - (0)
 
def E3_4_21_53(t, y):
    Peptide38 = (0.278 * y[274]) - (0.00000278 * y[342])
    return (Peptide38) - (0)
 
def E3_4_21_92(t, y):
    Peptide39 = (0.278 * y[275]) - (0.00000278 * y[343])
    return (Peptide39) - (0)
 
def E3_4_24_76(t, y):
    Peptide40 = (0.278 * y[276]) - (0.00000278 * y[344])
    return (Peptide40) - (0)
 
def E3_5_4_16(t, y):
    Peptide41 = (0.278 * y[277]) - (0.00000278 * y[345])
    return (Peptide41) - (0)
 
def E3_6_1_22(t, y):
    Peptide42 = (0.278 * y[278]) - (0.00000278 * y[346])
    return (Peptide42) - (0)
 
def E7_1_2_2(t, y):
    Peptide43 = (0.278 * y[279]) - (0.00000278 * y[347])
    return (Peptide43) - (0)
 
def E3_6_3_17(t, y):
    Peptide44 = (0.278 * y[280]) - (0.00000278 * y[348])
    return (Peptide44) - (0)
 
def E7_2_2_14(t, y):
    Peptide45 = (0.278 * y[281]) - (0.00000278 * y[349])
    return (Peptide45) - (0)
 
def E7_3_2_2(t, y):
    Peptide46 = (0.278 * y[282]) - (0.00000278 * y[350])
    return (Peptide46) - (0)
 
def E7_2_2_12(t, y):
    Peptide47 = (0.278 * y[283]) - (0.00000278 * y[351])
    return (Peptide47) - (0)
 
def E4_1_1_20(t, y):
    Peptide48 = (0.278 * y[284]) - (0.00000278 * y[352])
    return (Peptide48) - (0)
 
def E4_1_1_21(t, y):
    Peptide49 = (0.278 * y[285]) - (0.00000278 * y[353])
    return (Peptide49) - (0)
 
def E4_2_3_4(t, y):
    Peptide50 = (0.278 * y[286]) - (0.00000278 * y[354])
    return (Peptide50) - (0)
 
def E4_3_1_17(t, y):
    Peptide51 = (0.278 * y[287]) - (0.00000278 * y[355])
    return (Peptide51) - (0)
 
def E4_4_1_13(t, y):
    Peptide52 = (0.278 * y[288]) - (0.00000278 * y[356])
    return (Peptide52) - (0)
 
def E5_4_2_11(t, y):
    Peptide53 = (0.278 * y[289]) - (0.00000278 * y[357])
    return (Peptide53) - (0)
 
def E5_4_2_12(t, y):
    Peptide54 = (0.278 * y[290]) - (0.00000278 * y[358])
    return (Peptide54) - (0)
 
def E5_4_99_5(t, y):
    Peptide55 = (0.278 * y[291]) - (0.00000278 * y[359])
    return (Peptide55) - (0)
 
def E5_4_99_9(t, y):
    Peptide56 = (0.278 * y[292]) - (0.00000278 * y[360])
    return (Peptide56) - (0)
 
def E6_1_1_14(t, y):
    Peptide57 = (0.278 * y[293]) - (0.00000278 * y[361])
    return (Peptide57) - (0)
 
def E6_1_1_15(t, y):
    Peptide58 = (0.278 * y[294]) - (0.00000278 * y[362])
    return (Peptide58) - (0)
 
def E6_1_1_7(t, y):
    Peptide59 = (0.278 * y[295]) - (0.00000278 * y[363])
    return (Peptide59) - (0)
 
def E6_2_1_3(t, y):
    Peptide60 = (0.278 * y[296]) - (0.00000278 * y[364])
    return (Peptide60) - (0)
 
def E6_2_1_5(t, y):
    Peptide61 = (0.278 * y[297]) - (0.00000278 * y[365])
    return (Peptide61) - (0)
 
def E6_3_1_2(t, y):
    Peptide62 = (0.278 * y[298]) - (0.00000278 * y[366])
    return (Peptide62) - (0)
 
def E6_3_2_17(t, y):
    Peptide63 = (0.278 * y[299]) - (0.00000278 * y[367])
    return (Peptide63) - (0)
 
def E6_3_2_2(t, y):
    Peptide64 = (0.278 * y[300]) - (0.00000278 * y[368])
    return (Peptide64) - (0)
 
def E6_3_2_4(t, y):
    Peptide65 = (0.278 * y[301]) - (0.00000278 * y[369])
    return (Peptide65) - (0)
 
def E6_3_4_2(t, y):
    Peptide66 = (0.278 * y[302]) - (0.00000278 * y[370])
    return (Peptide66) - (0)
 
def E6_3_5_2(t, y):
    Peptide67 = (0.278 * y[303]) - (0.00000278 * y[371])
    return (Peptide67) - (0)
 
def E6_4_1_3(t, y):
    Peptide68 = (0.278 * y[304]) - (0.00000278 * y[372])
    return (Peptide68) - (0)
 
def boundary_checker(y, boundary, type):
    '''
    Private function - called by ODE solvers to perform boundary checking 
    of variable values and reset them to specific values if the original 
    values fall out of the boundary values.
    
    Boundary parameter takes the form of a dictionary with variable number 
    as key and a list of [<boundary value>, <value to set if boundary is 
    exceeded>]. For example, the following dictionary for lower boundary 
    (type = 'lower') {'1': [0.0, 0.0], '5': [2.0, 2.0]} will set the lower 
    boundary of variable y[0] and [5] to 0.0 and 2.0 respectively. This 
    also allows for setting to a different value - for example, {'1': [0.0, 
    1.0]} will set variable y[0] to 2.0 if the original y[0] value is 
    negative.
    
    @param y: values for variables
    @type y: list
    @param boundary: set of values for boundary of variables
    @type boundary: dictionary
    @param type: the type of boundary to be checked, either 'upper' (upper 
    boundary) or 'lower' (lower boundary)
    '''
    for k in list(boundary.keys()):
        if y[int(k)] < boundary[k][0] and type == 'lower':
            y[int(k)] = boundary[k][1]
        if y[int(k)] > boundary[k][0] and type == 'upper':
            y[int(k)] = boundary[k][1]
    return y

def RK4(funcs, x0, y0, step, xmax, nonODEfunc=None,
        lower_bound=None, upper_bound=None,
        overflow=1e100, zerodivision=1e100):
    '''
    Generator to integrate a system of ODEs, y' = f(x, y), using fourth
    order Runge-Kutta method.
    
    A function (as nonODEfunc parameter) can be included to modify one or 
    more variables (y0 list). This function will not be an ODE (not a 
    dy/dt). This can be used to consolidate the modification of one or 
    more variables at each ODE solving step. For example, y[0] = y[1] / y[2] 
    can be written as 
    
    >>> def modifying_function(y, step):
            y[0] = y[1] / y[2]
            return y
    
    This function must take 'y' (variable list) and 'step' (time step) as 
    parameters and must return 'y' (the modified variable list). This 
    function will execute before boundary checking at each time step.
    
    Upper and lower boundaries of one or more variable can be set using 
    upper_bound and lower_bound parameters respectively. These parameters 
    takes the form of a dictionary with variable number as key and a list 
    of [<boundary value>, <value to set if boundary is exceeded>]. For 
    example, the following dictionary for lower boundary {'1': [0.0, 0.0], 
    '5': [2.0, 2.0]} will set the lower boundary of variable y[0] and y[5] 
    to 0.0 and 2.0 respectively. This also allows for setting to a different 
    value - for example, {'1': [0.0, 1.0]} will set variable y[0] to 2.0 if 
    the original y[0] value is negative.
    
    @param funcs: system of differential equations
    @type funcs: list
    @param x0: initial value of x-axis, which is usually starting time
    @type x0: float
    @param y0: initial values for variables
    @type y0: list
    @param step: step size on the x-axis (also known as step in calculus)
    @type step: float
    @param xmax: maximum value of x-axis, which is usually ending time
    @type xmax: float
    @param nonODEfunc: a function to modify the variable list (y0)
    @type nonODEfunc: function
    @param lower_bound: set of values for lower boundary of variables
    @type lower_bound: dictionary
    @param upper_bound: set of values for upper boundary of variables
    @type upper_bound: dictionary
    @param overflow: value (usually a large value) to assign in event of 
    over flow error (usually caused by a large number) during integration. 
    Default = 1e100.
    @type overflow: float
    @param zerodivision: value (usually a large value) to assign in event 
    of zero division error, which results in positive infinity, during 
    integration. Default = 1e100.
    @type zerodivision: float
    '''
    yield [x0] + y0
    def solver(funcs, x0, y0, step):
        n = len(funcs)
        f1, f2, f3, f4 = [0]*n, [0]*n, [0]*n, [0]*n
        y1 = [0]*n
        for i in range(n):
            try: f1[i] = funcs[i](x0, y0)
            except TypeError: pass
            except ZeroDivisionError: f1[i] = zerodivision
            except OverflowError: f1[i] = overflow
        for j in range(n):
            y1[j] = y0[j] + (0.5*step*f1[j])
        for i in range(n):
            try: f2[i] = funcs[i]((x0+(0.5*step)), y1)
            except TypeError: pass
            except ZeroDivisionError: f2[i] = zerodivision
            except OverflowError: f2[i] = overflow
        for j in range(n):
            y1[j] = y0[j] + (0.5*step*f2[j])
        for i in range(n):
            try: f3[i] = funcs[i]((x0+(0.5*step)), y1)
            except TypeError: pass
            except ZeroDivisionError: f3[i] = zerodivision
            except OverflowError: f3[i] = overflow
        for j in range(n):
            y1[j] = y0[j] + (step*f3[j])
        for i in range(n):
            try: f4[i] = funcs[i]((x0+step), y1)
            except TypeError: pass
            except ZeroDivisionError: f4[i] = zerodivision
            except OverflowError: f4[i] = overflow
        for i in range(n):
            try: y1[i] = y0[i] + (step * \
                    (f1[i] + (2.0*f2[i]) + (2.0*f3[i]) + f4[i]) / 6.0)
            except TypeError: pass
            except ZeroDivisionError: y1[i] = zerodivision
            except OverflowError: y1[i] = overflow
        return y1
    while x0 < xmax:
        y1 = solver(funcs, x0, y0, step)
        if nonODEfunc:
            y1 = nonODEfunc(y1, step)
        if lower_bound: 
            y1 = boundary_checker(y1, lower_bound, 'lower')
        if upper_bound: 
            y1 = boundary_checker(y1, upper_bound, 'upper')
        y0 = y1
        x0 = x0 + step
        yield [x0] + y0
        
ODE = list(range(373))
ODE[0] = C00001
ODE[1] = C00002
ODE[2] = C00003
ODE[3] = C00004
ODE[4] = C00005
ODE[5] = C00006
ODE[6] = C00008
ODE[7] = C00009
ODE[8] = C00010
ODE[9] = C00011
ODE[10] = C00013
ODE[11] = C00014
ODE[12] = C00017
ODE[13] = C00019
ODE[14] = C00020
ODE[15] = C00021
ODE[16] = C00022
ODE[17] = C00025
ODE[18] = C00031
ODE[19] = C00037
ODE[20] = C00039
ODE[21] = C00041
ODE[22] = C00042
ODE[23] = C00044
ODE[24] = C00047
ODE[25] = C00049
ODE[26] = C00051
ODE[27] = C00052
ODE[28] = C00058
ODE[29] = C00063
ODE[30] = C00064
ODE[31] = C00065
ODE[32] = C00066
ODE[33] = C00073
ODE[34] = C00075
ODE[35] = C00077
ODE[36] = C00080
ODE[37] = C00091
ODE[38] = C00092
ODE[39] = C00097
ODE[40] = C00100
ODE[41] = C00101
ODE[42] = C00108
ODE[43] = C00109
ODE[44] = C00119
ODE[45] = C00122
ODE[46] = C00124
ODE[47] = C00127
ODE[48] = C00131
ODE[49] = C00133
ODE[50] = C00135
ODE[51] = C00136
ODE[52] = C00143
ODE[53] = C00144
ODE[54] = C00145
ODE[55] = C00147
ODE[56] = C00148
ODE[57] = C00154
ODE[58] = C00155
ODE[59] = C00161
ODE[60] = C00169
ODE[61] = C00170
ODE[62] = C00186
ODE[63] = C00197
ODE[64] = C00221
ODE[65] = C00233
ODE[66] = C00234
ODE[67] = C00243
ODE[68] = C00249
ODE[69] = C00251
ODE[70] = C00254
ODE[71] = C00266
ODE[72] = C00267
ODE[73] = C00283
ODE[74] = C00286
ODE[75] = C00288
ODE[76] = C00295
ODE[77] = C00327
ODE[78] = C00337
ODE[79] = C00342
ODE[80] = C00343
ODE[81] = C00363
ODE[82] = C00364
ODE[83] = C00365
ODE[84] = C00415
ODE[85] = C00424
ODE[86] = C00440
ODE[87] = C00455
ODE[88] = C00458
ODE[89] = C00459
ODE[90] = C00490
ODE[91] = C00491
ODE[92] = C00531
ODE[93] = C00562
ODE[94] = C00583
ODE[95] = C00615
ODE[96] = C00631
ODE[97] = C00638
ODE[98] = C00655
ODE[99] = C00668
ODE[100] = C00669
ODE[101] = C00677
ODE[102] = C00680
ODE[103] = C00683
ODE[104] = C00812
ODE[105] = C00821
ODE[106] = C00857
ODE[107] = C00860
ODE[108] = C00886
ODE[109] = C00921
ODE[110] = C00935
ODE[111] = C00937
ODE[112] = C00944
ODE[113] = C00957
ODE[114] = C00962
ODE[115] = C00993
ODE[116] = C01074
ODE[117] = C01157
ODE[118] = C01159
ODE[119] = C01172
ODE[120] = C01179
ODE[121] = C01185
ODE[122] = C01190
ODE[123] = C01290
ODE[124] = C01335
ODE[125] = C01336
ODE[126] = C01346
ODE[127] = C01380
ODE[128] = C01419
ODE[129] = C01609
ODE[130] = C01635
ODE[131] = C01642
ODE[132] = C01649
ODE[133] = C01929
ODE[134] = C01962
ODE[135] = C02211
ODE[136] = C02218
ODE[137] = C02291
ODE[138] = C02341
ODE[139] = C02356
ODE[140] = C02412
ODE[141] = C02702
ODE[142] = C02729
ODE[143] = C02749
ODE[144] = C02843
ODE[145] = C02882
ODE[146] = C02912
ODE[147] = C02917
ODE[148] = C03023
ODE[149] = C03082
ODE[150] = C03089
ODE[151] = C03373
ODE[152] = C03391
ODE[153] = C03523
ODE[154] = C03539
ODE[155] = C03541
ODE[156] = C03722
ODE[157] = C03733
ODE[158] = C03880
ODE[159] = C03912
ODE[160] = C04236
ODE[161] = C04262
ODE[162] = C04281
ODE[163] = C04302
ODE[164] = C04411
ODE[165] = C04691
ODE[166] = C04751
ODE[167] = C04884
ODE[168] = C04895
ODE[169] = C04911
ODE[170] = C05167
ODE[171] = C05196
ODE[172] = C05197
ODE[173] = C05198
ODE[174] = C05199
ODE[175] = C05312
ODE[176] = C05394
ODE[177] = C05403
ODE[178] = C05689
ODE[179] = C05698
ODE[180] = C05699
ODE[181] = C05703
ODE[182] = C05726
ODE[183] = C05729
ODE[184] = C05796
ODE[185] = C05823
ODE[186] = C05922
ODE[187] = C05923
ODE[188] = C05928
ODE[189] = C05929
ODE[190] = C05984
ODE[191] = C06032
ODE[192] = C06135
ODE[193] = C06136
ODE[194] = C06148
ODE[195] = C07292
ODE[196] = C07293
ODE[197] = C09332
ODE[198] = C11039
ODE[199] = C11434
ODE[200] = C11435
ODE[201] = C11514
ODE[202] = C15498
ODE[203] = C15653
ODE[204] = C15972
ODE[205] = C15973
ODE[206] = C16237
ODE[207] = C16265
ODE[208] = C16618
ODE[209] = C16619
ODE[210] = C16832
ODE[211] = C18026
ODE[212] = C18094
ODE[213] = C19078
ODE[214] = C19080
ODE[215] = C19085
ODE[216] = C20904
ODE[217] = C21015
ODE[218] = C21031
ODE[219] = C21113
ODE[220] = C22288
ODE[221] = G00092
ODE[222] = G00109
ODE[223] = G00110
ODE[224] = G00123
ODE[225] = G00124
ODE[226] = G00526
ODE[227] = G00872
ODE[228] = G01977
ODE[229] = G10238
ODE[230] = G10504
ODE[231] = G10505
ODE[232] = G10531
ODE[233] = G10534
ODE[234] = G12336
ODE[235] = G13043
ODE[236] = G13073
ODE[237] = E1_1_1_23_mRNA
ODE[238] = E1_1_1_27_mRNA
ODE[239] = E1_1_1_77_mRNA
ODE[240] = E1_1_1_85_mRNA
ODE[241] = E1_11_1_24_mRNA
ODE[242] = E1_11_1_25_mRNA
ODE[243] = E1_11_1_26_mRNA
ODE[244] = E1_11_1_27_mRNA
ODE[245] = E1_11_1_28_mRNA
ODE[246] = E1_11_1_29_mRNA
ODE[247] = E1_3_1_12_mRNA
ODE[248] = E1_3_98_1_mRNA
ODE[249] = E1_5_1_2_mRNA
ODE[250] = E1_5_1_20_mRNA
ODE[251] = E1_8_4_12_mRNA
ODE[252] = E1_97_1_4_mRNA
ODE[253] = E2_1_1_144_mRNA
ODE[254] = E2_1_1_72_mRNA
ODE[255] = E2_1_3_3_mRNA
ODE[256] = E2_4_2_18_mRNA
ODE[257] = E2_4_2_19_mRNA
ODE[258] = E2_7_1_2_mRNA
ODE[259] = E2_7_11_1_mRNA
ODE[260] = E2_7_2_4_mRNA
ODE[261] = E2_7_4_9_mRNA
ODE[262] = E2_7_7_60_mRNA
ODE[263] = E2_7_7_7_mRNA
ODE[264] = E2_7_7_72_mRNA
ODE[265] = E3_1_1_29_mRNA
ODE[266] = E3_1_11_6_mRNA
ODE[267] = E3_1_26_3_mRNA
ODE[268] = E3_1_26_4_mRNA
ODE[269] = E3_1_3_16_mRNA
ODE[270] = E3_2_1_23_mRNA
ODE[271] = E3_2_1_35_mRNA
ODE[272] = E3_2_2_9_mRNA
ODE[273] = E3_4_11_2_mRNA
ODE[274] = E3_4_21_53_mRNA
ODE[275] = E3_4_21_92_mRNA
ODE[276] = E3_4_24_76_mRNA
ODE[277] = E3_5_4_16_mRNA
ODE[278] = E3_6_1_22_mRNA
ODE[279] = E7_1_2_2_mRNA
ODE[280] = E3_6_3_17_mRNA
ODE[281] = E7_2_2_14_mRNA
ODE[282] = E7_3_2_2_mRNA
ODE[283] = E7_2_2_12_mRNA
ODE[284] = E4_1_1_20_mRNA
ODE[285] = E4_1_1_21_mRNA
ODE[286] = E4_2_3_4_mRNA
ODE[287] = E4_3_1_17_mRNA
ODE[288] = E4_4_1_13_mRNA
ODE[289] = E5_4_2_11_mRNA
ODE[290] = E5_4_2_12_mRNA
ODE[291] = E5_4_99_5_mRNA
ODE[292] = E5_4_99_9_mRNA
ODE[293] = E6_1_1_14_mRNA
ODE[294] = E6_1_1_15_mRNA
ODE[295] = E6_1_1_7_mRNA
ODE[296] = E6_2_1_3_mRNA
ODE[297] = E6_2_1_5_mRNA
ODE[298] = E6_3_1_2_mRNA
ODE[299] = E6_3_2_17_mRNA
ODE[300] = E6_3_2_2_mRNA
ODE[301] = E6_3_2_4_mRNA
ODE[302] = E6_3_4_2_mRNA
ODE[303] = E6_3_5_2_mRNA
ODE[304] = E6_4_1_3_mRNA
ODE[305] = E1_1_1_23
ODE[306] = E1_1_1_27
ODE[307] = E1_1_1_77
ODE[308] = E1_1_1_85
ODE[309] = E1_11_1_24
ODE[310] = E1_11_1_25
ODE[311] = E1_11_1_26
ODE[312] = E1_11_1_27
ODE[313] = E1_11_1_28
ODE[314] = E1_11_1_29
ODE[315] = E1_3_1_12
ODE[316] = E1_3_98_1
ODE[317] = E1_5_1_2
ODE[318] = E1_5_1_20
ODE[319] = E1_8_4_12
ODE[320] = E1_97_1_4
ODE[321] = E2_1_1_144
ODE[322] = E2_1_1_72
ODE[323] = E2_1_3_3
ODE[324] = E2_4_2_18
ODE[325] = E2_4_2_19
ODE[326] = E2_7_1_2
ODE[327] = E2_7_11_1
ODE[328] = E2_7_2_4
ODE[329] = E2_7_4_9
ODE[330] = E2_7_7_60
ODE[331] = E2_7_7_7
ODE[332] = E2_7_7_72
ODE[333] = E3_1_1_29
ODE[334] = E3_1_11_6
ODE[335] = E3_1_26_3
ODE[336] = E3_1_26_4
ODE[337] = E3_1_3_16
ODE[338] = E3_2_1_23
ODE[339] = E3_2_1_35
ODE[340] = E3_2_2_9
ODE[341] = E3_4_11_2
ODE[342] = E3_4_21_53
ODE[343] = E3_4_21_92
ODE[344] = E3_4_24_76
ODE[345] = E3_5_4_16
ODE[346] = E3_6_1_22
ODE[347] = E7_1_2_2
ODE[348] = E3_6_3_17
ODE[349] = E7_2_2_14
ODE[350] = E7_3_2_2
ODE[351] = E7_2_2_12
ODE[352] = E4_1_1_20
ODE[353] = E4_1_1_21
ODE[354] = E4_2_3_4
ODE[355] = E4_3_1_17
ODE[356] = E4_4_1_13
ODE[357] = E5_4_2_11
ODE[358] = E5_4_2_12
ODE[359] = E5_4_99_5
ODE[360] = E5_4_99_9
ODE[361] = E6_1_1_14
ODE[362] = E6_1_1_15
ODE[363] = E6_1_1_7
ODE[364] = E6_2_1_3
ODE[365] = E6_2_1_5
ODE[366] = E6_3_1_2
ODE[367] = E6_3_2_17
ODE[368] = E6_3_2_2
ODE[369] = E6_3_2_4
ODE[370] = E6_3_4_2
ODE[371] = E6_3_5_2
ODE[372] = E6_4_1_3
 
y = list(range(373))
y[0] = 1000    # C00001 : Water
y[1] = 1000    # C00002 : ATP
y[2] = 1000    # C00003 : NAD+
y[3] = 1000    # C00004 : NADH
y[4] = 1000    # C00005 : NADPH
y[5] = 1000    # C00006 : NADP+
y[6] = 1000    # C00008 : ADP
y[7] = 1    # C00009 : Orthophosphate
y[8] = 1    # C00010 : Coenzyme A
y[9] = 1000    # C00011 : Carbon dioxide
y[10] = 1    # C00013 : Diphosphate
y[11] = 1000    # C00014 : NH3
y[12] = 1    # C00017 : Protein
y[13] = 1    # C00019 : S-Adenosyl-L-methionine
y[14] = 1    # C00020 : Adenosine 5'-monophosphate
y[15] = 1    # C00021 : S-Adenosyl-L-homocysteine
y[16] = 1    # C00022 : Pyruvate
y[17] = 1000    # C00025 : L-Glutamate
y[18] = 1000    # C00031 : D-Glucose
y[19] = 1000    # C00037 : Glycine
y[20] = 1    # C00039 : DNA
y[21] = 1000    # C00041 : L-Alanine
y[22] = 1    # C00042 : Succinate
y[23] = 1    # C00044 : GTP
y[24] = 1000    # C00047 : L-Lysine
y[25] = 1000    # C00049 : L-Asparate
y[26] = 1    # C00051 : Glutathione
y[27] = 1    # C00052 : UDP-alpha-D-galactose
y[28] = 1    # C00058 : Formate
y[29] = 1    # C00063 : CTP
y[30] = 1000    # C00064 : L-Glutamine
y[31] = 1000    # C00065 : L-Serine
y[32] = 1    # C00066 : tRNA
y[33] = 1000    # C00073 : L-Methionine
y[34] = 1    # C00075 : UTP
y[35] = 1    # C00077 : L-Ornithine
y[36] = 1    # C00080 : Hydron
y[37] = 1    # C00091 : Succinyl-CoA
y[38] = 1    # C00092 : D-Glucose 6-phosphate
y[39] = 1000    # C00097 : L-Cysteine
y[40] = 1    # C00100 : Propanoyl-CoA
y[41] = 1    # C00101 : Tetrahydrofolate
y[42] = 1    # C00108 : Anthranilate
y[43] = 1    # C00109 : 2-Oxobutanoate
y[44] = 1    # C00119 : 5-Phospho-alpha-D-ribose 1-diphosphate
y[45] = 1    # C00122 : Fumarate
y[46] = 1    # C00124 : D-Galactose
y[47] = 1    # C00127 : Glutathione disulfide
y[48] = 1    # C00131 : dATP
y[49] = 1000    # C00133 : D-Alanine
y[50] = 1000    # C00135 : L-Histidine
y[51] = 1    # C00136 : Butanoyl-CoA
y[52] = 1    # C00143 : 5,10-Methylenetetrahydrofolate
y[53] = 1    # C00144 : Guanosine monophosphate
y[54] = 1    # C00145 : Thiol
y[55] = 1    # C00147 : Adenine
y[56] = 1000    # C00148 : L-Proline
y[57] = 1    # C00154 : Palmitoyl-CoA
y[58] = 1    # C00155 : L-Homocysteine
y[59] = 1    # C00161 : 2-Oxo acid
y[60] = 1    # C00169 : Carbamoyl phosphate
y[61] = 1    # C00170 : 5'-Methylthioadenosine
y[62] = 1    # C00186 : L-Lactate
y[63] = 1    # C00197 : 3-Phospho-D-glycerate
y[64] = 1    # C00221 : beta-D-Glucose
y[65] = 1    # C00233 : 4-Methyl-2-oxopentanoate
y[66] = 1    # C00234 : 10-Formyltetrahydrofolate
y[67] = 1    # C00243 : Lactose
y[68] = 1    # C00249 : Hexadecanoic acid
y[69] = 1    # C00251 : Chorismate
y[70] = 1    # C00254 : Prephenate
y[71] = 1    # C00266 : Glycolaldehyde
y[72] = 1    # C00267 : alpha-D-Glucose
y[73] = 1    # C00283 : Hydrogen sulfide
y[74] = 1    # C00286 : dGTP
y[75] = 1    # C00288 : HCO3-
y[76] = 1    # C00295 : Orotate
y[77] = 1    # C00327 : L-Citrulline
y[78] = 1    # C00337 : L-Dihydroorotate
y[79] = 1    # C00342 : Thioredoxin
y[80] = 1    # C00343 : Thioredoxin disulfide
y[81] = 1    # C00363 : Deoxythymidine 5'-diphosphate
y[82] = 1    # C00364 : Thymidine 5'-phosphate
y[83] = 1    # C00365 : Deoxyuridylic acid
y[84] = 1    # C00415 : Dihydrofolate
y[85] = 1    # C00424 : L-Lactaldehyde
y[86] = 1    # C00440 : 5-Methyltetrahydrofolate
y[87] = 1    # C00455 : Nicotinamide D-ribonucleotide
y[88] = 1    # C00458 : Deoxycytidine 5'-triphosphate
y[89] = 1    # C00459 : Deoxythymidine triphosphate
y[90] = 1    # C00490 : Itaconate
y[91] = 1    # C00491 : L-Cystine
y[92] = 1    # C00531 : Itaconyl-CoA
y[93] = 1    # C00562 : Phosphoprotein
y[94] = 1    # C00583 : Propane-1,2-diol
y[95] = 1    # C00615 : Protein histidine
y[96] = 1    # C00631 : 2-Phospho-D-glycerate
y[97] = 1    # C00638 : Long-chain fatty acid
y[98] = 1    # C00655 : Xanthosine 5'-phosphate
y[99] = 1    # C00668 : alpha-D-Glucose 6-phosphate
y[100] = 1    # C00669 : gamma-L-Glutamyl-L-cysteine
y[101] = 1    # C00677 : Deoxynucleoside triphosphate
y[102] = 1    # C00680 : meso-2,6-Diaminoheptanedioate
y[103] = 1    # C00683 : (S)-Methylmalonyl-CoA
y[104] = 1    # C00812 : Alkyl thiol
y[105] = 1    # C00821 : DNA adenine
y[106] = 1    # C00857 : Deamino-NAD+
y[107] = 1    # C00860 : L-Histidinol
y[108] = 1    # C00886 : L-Alanyl-tRNA
y[109] = 1    # C00921 : Dihydropteroate
y[110] = 1    # C00935 : UDP-L-arabinose
y[111] = 1    # C00937 : D-Lactaldehyde
y[112] = 1    # C00944 : 3-Dehydroquinate
y[113] = 1    # C00957 : Mercaptopyruvate
y[114] = 1    # C00962 : beta-D-Galactose
y[115] = 1    # C00993 : D-Alanyl-D-alanine
y[116] = 1    # C01074 : N-Acetylgalactosamine
y[117] = 1    # C01157 : Hydroxyproline
y[118] = 1    # C01159 : 2,3-Bisphospho-D-glycerate
y[119] = 1    # C01172 : beta-D-Glucose 6-phosphate
y[120] = 1    # C01179 : 3-(4-Hydroxyphenyl)pyruvate
y[121] = 1    # C01185 : Nicotinate D-ribonucleotide
y[122] = 1    # C01190 : Glucosylceramide
y[123] = 1    # C01290 : Lactosylceramide
y[124] = 1    # C01335 : ROH
y[125] = 1    # C01336 : Aryl thiol
y[126] = 1    # C01346 : 2'-Deoxyuridine 5'-diphosphate
y[127] = 1    # C01380 : Ethylene glycol
y[128] = 1    # C01419 : Cys-Gly
y[129] = 1    # C01609 : Protamine
y[130] = 1    # C01635 : tRNA(Ala)
y[131] = 1    # C01642 : tRNA(Gly)
y[132] = 1    # C01649 : tRNA(Pro)
y[133] = 1    # C01929 : L-Histidinal
y[134] = 1    # C01962 : Thiocysteine
y[135] = 1    # C02211 : tRNA precursor
y[136] = 1    # C02218 : Dehydroalanine
y[137] = 1    # C02291 : L-Cystathionine
y[138] = 1    # C02341 : trans-Aconitate
y[139] = 1    # C02356 : (S)-2-Aminobutanoate
y[140] = 1    # C02412 : Glycyl-tRNA(Gly)
y[141] = 1    # C02702 : L-Prolyl-tRNA(Pro)
y[142] = 1    # C02729 : O-Phosphoprotamine
y[143] = 1    # C02749 : S-Alkyl-L-cysteine
y[144] = 1    # C02843 : Long-chain acyl-CoA
y[145] = 1    # C02882 : L-Cysteine-S-conjugate
y[146] = 1    # C02912 : (R)-Propane-1,2-diol
y[147] = 1    # C02917 : (S)-Propane-1,2-diol
y[148] = 1    # C03023 : Peptide-L-methionine
y[149] = 1    # C03082 : 4-Phospho-L-aspartate
y[150] = 1    # C03089 : 5-Methylthio-D-ribose
y[151] = 1    # C03373 : Aminoimidazole ribotide
y[152] = 1    # C03391 : DNA 6-methylaminopurine
y[153] = 1    # C03523 : N-Substituted amino acid
y[154] = 1    # C03539 : S-Ribosyl-L-homocysteine
y[155] = 1    # C03541 : THF-polyglutamate
y[156] = 1    # C03722 : Quinolinate
y[157] = 1    # C03733 : UDP-alpha-D-galactofuranose
y[158] = 1    # C03880 : N-Substituted aminoacyl-tRNA
y[159] = 1    # C03912 : (S)-1-Pyrroline-5-carboxylate
y[160] = 1    # C04236 : (2S)-2-Isopropyl-3-oxosuccinate
y[161] = 1    # C04262 : Protein N(tau)-phospho-L-histidine
y[162] = 1    # C04281 : L-1-Pyrroline-3-hydroxy-5-carboxylate
y[163] = 1    # C04302 : N-(5-Phospho-D-ribosyl)anthranilate
y[164] = 1    # C04411 : (2R,3S)-3-Isopropylmalate
y[165] = 1    # C04691 : 2-Dehydro-3-deoxy-D-arabino-heptonate 7-phosphate
y[166] = 1    # C04751 : 1-(5-Phospho-D-ribosyl)-5-amino-4-imidazolecarboxylate
y[167] = 1    # C04884 : N-Acetyl-D-galactosaminyl-(N-acetylneuraminyl)-D-galactosyl-D-glucosylceramide
y[168] = 1    # C04895 : 7,8-Dihydroneopterin 3'-triphosphate
y[169] = 1    # C04911 : D-Galactosyl-N-acetyl-D-galactosaminyl-(N-acetylneuraminyl)-D-galactosyl-D-glucosylceramide
y[170] = 1    # C05167 : alpha-Amino acid
y[171] = 1    # C05196 : Dihydroflavodoxin
y[172] = 1    # C05197 : Protein glycine
y[173] = 1    # C05198 : 5'-Deoxyadenosine
y[174] = 1    # C05199 : Flavodoxin semiquinone
y[175] = 1    # C05312 : Protein glycin-2-yl radical
y[176] = 1    # C05394 : 3-Keto-beta-D-galactose
y[177] = 1    # C05403 : 3-Ketolactose
y[178] = 1    # C05689 : Se-Methyl-L-selenocysteine
y[179] = 1    # C05698 : Selenohomocysteine
y[180] = 1    # C05699 : L-Selenocystathionine
y[181] = 1    # C05703 : Methaneselenol
y[182] = 1    # C05726 : S-Substituted L-cysteine
y[183] = 1    # C05729 : R-S-Cysteinylglycine
y[184] = 1    # C05796 : Galactan
y[185] = 1    # C05823 : 3-Mercaptolactate
y[186] = 1    # C05922 : Formamidopyrimidine nucleoside triphosphate
y[187] = 1    # C05923 : 2,5-Diaminopyrimidine nucleoside triphosphate
y[188] = 1    # C05928 : (6R)-10-Formyltetrahydropteroyldiglutamate
y[189] = 1    # C05929 : 10-Formyltetrahydrofolylpolyglutamate
y[190] = 1    # C05984 : 2-Hydroxybutanoic acid
y[191] = 1    # C06032 : D-erythro-3-Methylmalate
y[192] = 1    # C06135 : GA2
y[193] = 1    # C06136 : GA1
y[194] = 1    # C06148 : 2,5-Diamino-6-(5'-triphosphoryl-3',4'-trihydroxy-2'-oxopentyl)-amino-4-oxopyrimidine
y[195] = 1    # C07292 : Glutaredoxin
y[196] = 1    # C07293 : Glutaredoxin disulfide
y[197] = 1    # C09332 : THF-L-glutamate
y[198] = 1    # C11039 : 2'-Deoxy-5-hydroxymethylcytidine-5'-triphosphate
y[199] = 1    # C11434 : 2-C-Methyl-D-erythritol 4-phosphate
y[200] = 1    # C11435 : 4-(Cytidine 5'-diphospho)-2-C-methyl-D-erythritol
y[201] = 1    # C11514 : (E)-3-(Methoxycarbonyl)pent-2-enedioate
y[202] = 1    # C15498 : ROOH
y[203] = 1    # C15653 : Peptide-L-methionine (R)-S-oxide
y[204] = 1    # C15972 : Enzyme N6-(lipoyl)lysine
y[205] = 1    # C15973 : Enzyme N6-(dihydrolipoyl)lysine
y[206] = 1    # C16237 : Protein N6-(lipoyl)lysine
y[207] = 1    # C16265 : N-Acetylgalactosamine 4-sulfate
y[208] = 1    # C16618 : 6-Thioxanthine 5'-monophosphate
y[209] = 1    # C16619 : 6-Thioguanosine monophosphate
y[210] = 1    # C16832 : [Protein]-N6-[(R)-dihydrolipoyl]-L-lysine
y[211] = 1    # C18026 : (2S)-Ethylmalonyl-CoA
y[212] = 1    # C18094 : UDP-L-arabinofuranose
y[213] = 1    # C19078 : tRNA with a 3' cytidine
y[214] = 1    # C19080 : tRNA with a 3' CC end
y[215] = 1    # C19085 : tRNA with a 3' CCA end
y[216] = 1    # C20904 : 2-Iminopropanoate
y[217] = 1    # C21015 : gamma-L-Glutamyl-L-2-aminobutyrate
y[218] = 1    # C21031 : 5-Hydroxymethylcytosine in DNA
y[219] = 1    # C21113 : Reduced nicotinamide nucleotide
y[220] = 1    # C22288 : 5-Deoxy-D-ribose
y[221] = 1    # G00092 : Lactosylceramide
y[222] = 1    # G00109 : GM2
y[223] = 1    # G00110 : GM1
y[224] = 1    # G00123 : GA2
y[225] = 1    # G00124 : Asialo-GM1
y[226] = 1    # G00526 : (GlcA)2 (GlcNAc)2
y[227] = 1    # G00872 : DWA-2
y[228] = 1    # G01977 : (Gal)2 (GlcNAc)2 (S)2
y[229] = 1    # G10238 : Glucosylceramide
y[230] = 1    # G10504 : Lactose
y[231] = 1    # G10505 : Hyaluronic acid
y[232] = 1    # G10531 : 3-Ketolactose
y[233] = 1    # G10534 : (Gal)1 (*)2
y[234] = 1    # G12336 : (GalNAc)2 (GlcA)1 (S)2
y[235] = 1    # G13043 : (GalNAc)2 (GlcA)1 (S)1
y[236] = 1    # G13073 : (Gal)1 (GlcNAc)2 (S)2
y[237] = 0    # E1_1_1_23_mRNA : E1_1_1_23_mRNA
y[238] = 0    # E1_1_1_27_mRNA : E1_1_1_27_mRNA
y[239] = 0    # E1_1_1_77_mRNA : E1_1_1_77_mRNA
y[240] = 0    # E1_1_1_85_mRNA : E1_1_1_85_mRNA
y[241] = 0    # E1_11_1_24_mRNA : E1_11_1_24_mRNA
y[242] = 0    # E1_11_1_25_mRNA : E1_11_1_25_mRNA
y[243] = 0    # E1_11_1_26_mRNA : E1_11_1_26_mRNA
y[244] = 0    # E1_11_1_27_mRNA : E1_11_1_27_mRNA
y[245] = 0    # E1_11_1_28_mRNA : E1_11_1_28_mRNA
y[246] = 0    # E1_11_1_29_mRNA : E1_11_1_29_mRNA
y[247] = 0    # E1_3_1_12_mRNA : E1_3_1_12_mRNA
y[248] = 0    # E1_3_98_1_mRNA : E1_3_98_1_mRNA
y[249] = 0    # E1_5_1_2_mRNA : E1_5_1_2_mRNA
y[250] = 0    # E1_5_1_20_mRNA : E1_5_1_20_mRNA
y[251] = 0    # E1_8_4_12_mRNA : E1_8_4_12_mRNA
y[252] = 0    # E1_97_1_4_mRNA : E1_97_1_4_mRNA
y[253] = 0    # E2_1_1_144_mRNA : E2_1_1_144_mRNA
y[254] = 0    # E2_1_1_72_mRNA : E2_1_1_72_mRNA
y[255] = 0    # E2_1_3_3_mRNA : E2_1_3_3_mRNA
y[256] = 0    # E2_4_2_18_mRNA : E2_4_2_18_mRNA
y[257] = 0    # E2_4_2_19_mRNA : E2_4_2_19_mRNA
y[258] = 0    # E2_7_1_2_mRNA : E2_7_1_2_mRNA
y[259] = 0    # E2_7_11_1_mRNA : E2_7_11_1_mRNA
y[260] = 0    # E2_7_2_4_mRNA : E2_7_2_4_mRNA
y[261] = 0    # E2_7_4_9_mRNA : E2_7_4_9_mRNA
y[262] = 0    # E2_7_7_60_mRNA : E2_7_7_60_mRNA
y[263] = 0    # E2_7_7_7_mRNA : E2_7_7_7_mRNA
y[264] = 0    # E2_7_7_72_mRNA : E2_7_7_72_mRNA
y[265] = 0    # E3_1_1_29_mRNA : E3_1_1_29_mRNA
y[266] = 0    # E3_1_11_6_mRNA : E3_1_11_6_mRNA
y[267] = 0    # E3_1_26_3_mRNA : E3_1_26_3_mRNA
y[268] = 0    # E3_1_26_4_mRNA : E3_1_26_4_mRNA
y[269] = 0    # E3_1_3_16_mRNA : E3_1_3_16_mRNA
y[270] = 0    # E3_2_1_23_mRNA : E3_2_1_23_mRNA
y[271] = 0    # E3_2_1_35_mRNA : E3_2_1_35_mRNA
y[272] = 0    # E3_2_2_9_mRNA : E3_2_2_9_mRNA
y[273] = 0    # E3_4_11_2_mRNA : E3_4_11_2_mRNA
y[274] = 0    # E3_4_21_53_mRNA : E3_4_21_53_mRNA
y[275] = 0    # E3_4_21_92_mRNA : E3_4_21_92_mRNA
y[276] = 0    # E3_4_24_76_mRNA : E3_4_24_76_mRNA
y[277] = 0    # E3_5_4_16_mRNA : E3_5_4_16_mRNA
y[278] = 0    # E3_6_1_22_mRNA : E3_6_1_22_mRNA
y[279] = 0    # E7_1_2_2_mRNA : E7_1_2_2_mRNA
y[280] = 0    # E3_6_3_17_mRNA : E3_6_3_17_mRNA
y[281] = 0    # E7_2_2_14_mRNA : E7_2_2_14_mRNA
y[282] = 0    # E7_3_2_2_mRNA : E7_3_2_2_mRNA
y[283] = 0    # E7_2_2_12_mRNA : E7_2_2_12_mRNA
y[284] = 0    # E4_1_1_20_mRNA : E4_1_1_20_mRNA
y[285] = 0    # E4_1_1_21_mRNA : E4_1_1_21_mRNA
y[286] = 0    # E4_2_3_4_mRNA : E4_2_3_4_mRNA
y[287] = 0    # E4_3_1_17_mRNA : E4_3_1_17_mRNA
y[288] = 0    # E4_4_1_13_mRNA : E4_4_1_13_mRNA
y[289] = 0    # E5_4_2_11_mRNA : E5_4_2_11_mRNA
y[290] = 0    # E5_4_2_12_mRNA : E5_4_2_12_mRNA
y[291] = 0    # E5_4_99_5_mRNA : E5_4_99_5_mRNA
y[292] = 0    # E5_4_99_9_mRNA : E5_4_99_9_mRNA
y[293] = 0    # E6_1_1_14_mRNA : E6_1_1_14_mRNA
y[294] = 0    # E6_1_1_15_mRNA : E6_1_1_15_mRNA
y[295] = 0    # E6_1_1_7_mRNA : E6_1_1_7_mRNA
y[296] = 0    # E6_2_1_3_mRNA : E6_2_1_3_mRNA
y[297] = 0    # E6_2_1_5_mRNA : E6_2_1_5_mRNA
y[298] = 0    # E6_3_1_2_mRNA : E6_3_1_2_mRNA
y[299] = 0    # E6_3_2_17_mRNA : E6_3_2_17_mRNA
y[300] = 0    # E6_3_2_2_mRNA : E6_3_2_2_mRNA
y[301] = 0    # E6_3_2_4_mRNA : E6_3_2_4_mRNA
y[302] = 0    # E6_3_4_2_mRNA : E6_3_4_2_mRNA
y[303] = 0    # E6_3_5_2_mRNA : E6_3_5_2_mRNA
y[304] = 0    # E6_4_1_3_mRNA : E6_4_1_3_mRNA
y[305] = 0    # E1_1_1_23 : E1_1_1_23
y[306] = 0    # E1_1_1_27 : E1_1_1_27
y[307] = 0    # E1_1_1_77 : E1_1_1_77
y[308] = 0    # E1_1_1_85 : E1_1_1_85
y[309] = 0    # E1_11_1_24 : E1_11_1_24
y[310] = 0    # E1_11_1_25 : E1_11_1_25
y[311] = 0    # E1_11_1_26 : E1_11_1_26
y[312] = 0    # E1_11_1_27 : E1_11_1_27
y[313] = 0    # E1_11_1_28 : E1_11_1_28
y[314] = 0    # E1_11_1_29 : E1_11_1_29
y[315] = 0    # E1_3_1_12 : E1_3_1_12
y[316] = 0    # E1_3_98_1 : E1_3_98_1
y[317] = 0    # E1_5_1_2 : E1_5_1_2
y[318] = 0    # E1_5_1_20 : E1_5_1_20
y[319] = 0    # E1_8_4_12 : E1_8_4_12
y[320] = 0    # E1_97_1_4 : E1_97_1_4
y[321] = 0    # E2_1_1_144 : E2_1_1_144
y[322] = 0    # E2_1_1_72 : E2_1_1_72
y[323] = 0    # E2_1_3_3 : E2_1_3_3
y[324] = 0    # E2_4_2_18 : E2_4_2_18
y[325] = 0    # E2_4_2_19 : E2_4_2_19
y[326] = 0    # E2_7_1_2 : E2_7_1_2
y[327] = 0    # E2_7_11_1 : E2_7_11_1
y[328] = 0    # E2_7_2_4 : E2_7_2_4
y[329] = 0    # E2_7_4_9 : E2_7_4_9
y[330] = 0    # E2_7_7_60 : E2_7_7_60
y[331] = 0    # E2_7_7_7 : E2_7_7_7
y[332] = 0    # E2_7_7_72 : E2_7_7_72
y[333] = 0    # E3_1_1_29 : E3_1_1_29
y[334] = 0    # E3_1_11_6 : E3_1_11_6
y[335] = 0    # E3_1_26_3 : E3_1_26_3
y[336] = 0    # E3_1_26_4 : E3_1_26_4
y[337] = 0    # E3_1_3_16 : E3_1_3_16
y[338] = 0    # E3_2_1_23 : E3_2_1_23
y[339] = 0    # E3_2_1_35 : E3_2_1_35
y[340] = 0    # E3_2_2_9 : E3_2_2_9
y[341] = 0    # E3_4_11_2 : E3_4_11_2
y[342] = 0    # E3_4_21_53 : E3_4_21_53
y[343] = 0    # E3_4_21_92 : E3_4_21_92
y[344] = 0    # E3_4_24_76 : E3_4_24_76
y[345] = 0    # E3_5_4_16 : E3_5_4_16
y[346] = 0    # E3_6_1_22 : E3_6_1_22
y[347] = 0    # E7_1_2_2 : E7_1_2_2
y[348] = 0    # E3_6_3_17 : E3_6_3_17
y[349] = 0    # E7_2_2_14 : E7_2_2_14
y[350] = 0    # E7_3_2_2 : E7_3_2_2
y[351] = 0    # E7_2_2_12 : E7_2_2_12
y[352] = 0    # E4_1_1_20 : E4_1_1_20
y[353] = 0    # E4_1_1_21 : E4_1_1_21
y[354] = 0    # E4_2_3_4 : E4_2_3_4
y[355] = 0    # E4_3_1_17 : E4_3_1_17
y[356] = 0    # E4_4_1_13 : E4_4_1_13
y[357] = 0    # E5_4_2_11 : E5_4_2_11
y[358] = 0    # E5_4_2_12 : E5_4_2_12
y[359] = 0    # E5_4_99_5 : E5_4_99_5
y[360] = 0    # E5_4_99_9 : E5_4_99_9
y[361] = 0    # E6_1_1_14 : E6_1_1_14
y[362] = 0    # E6_1_1_15 : E6_1_1_15
y[363] = 0    # E6_1_1_7 : E6_1_1_7
y[364] = 0    # E6_2_1_3 : E6_2_1_3
y[365] = 0    # E6_2_1_5 : E6_2_1_5
y[366] = 0    # E6_3_1_2 : E6_3_1_2
y[367] = 0    # E6_3_2_17 : E6_3_2_17
y[368] = 0    # E6_3_2_2 : E6_3_2_2
y[369] = 0    # E6_3_2_4 : E6_3_2_4
y[370] = 0    # E6_3_4_2 : E6_3_4_2
y[371] = 0    # E6_3_5_2 : E6_3_5_2
y[372] = 0    # E6_4_1_3 : E6_4_1_3
 
labels = ['time', 'C00001', 'C00002', 'C00003', 'C00004', 'C00005', 'C00006', 'C00008', 'C00009', 'C00010', 'C00011', 'C00013', 'C00014', 'C00017', 'C00019', 'C00020', 'C00021', 'C00022', 'C00025', 'C00031', 'C00037', 'C00039', 'C00041', 'C00042', 'C00044', 'C00047', 'C00049', 'C00051', 'C00052', 'C00058', 'C00063', 'C00064', 'C00065', 'C00066', 'C00073', 'C00075', 'C00077', 'C00080', 'C00091', 'C00092', 'C00097', 'C00100', 'C00101', 'C00108', 'C00109', 'C00119', 'C00122', 'C00124', 'C00127', 'C00131', 'C00133', 'C00135', 'C00136', 'C00143', 'C00144', 'C00145', 'C00147', 'C00148', 'C00154', 'C00155', 'C00161', 'C00169', 'C00170', 'C00186', 'C00197', 'C00221', 'C00233', 'C00234', 'C00243', 'C00249', 'C00251', 'C00254', 'C00266', 'C00267', 'C00283', 'C00286', 'C00288', 'C00295', 'C00327', 'C00337', 'C00342', 'C00343', 'C00363', 'C00364', 'C00365', 'C00415', 'C00424', 'C00440', 'C00455', 'C00458', 'C00459', 'C00490', 'C00491', 'C00531', 'C00562', 'C00583', 'C00615', 'C00631', 'C00638', 'C00655', 'C00668', 'C00669', 'C00677', 'C00680', 'C00683', 'C00812', 'C00821', 'C00857', 'C00860', 'C00886', 'C00921', 'C00935', 'C00937', 'C00944', 'C00957', 'C00962', 'C00993', 'C01074', 'C01157', 'C01159', 'C01172', 'C01179', 'C01185', 'C01190', 'C01290', 'C01335', 'C01336', 'C01346', 'C01380', 'C01419', 'C01609', 'C01635', 'C01642', 'C01649', 'C01929', 'C01962', 'C02211', 'C02218', 'C02291', 'C02341', 'C02356', 'C02412', 'C02702', 'C02729', 'C02749', 'C02843', 'C02882', 'C02912', 'C02917', 'C03023', 'C03082', 'C03089', 'C03373', 'C03391', 'C03523', 'C03539', 'C03541', 'C03722', 'C03733', 'C03880', 'C03912', 'C04236', 'C04262', 'C04281', 'C04302', 'C04411', 'C04691', 'C04751', 'C04884', 'C04895', 'C04911', 'C05167', 'C05196', 'C05197', 'C05198', 'C05199', 'C05312', 'C05394', 'C05403', 'C05689', 'C05698', 'C05699', 'C05703', 'C05726', 'C05729', 'C05796', 'C05823', 'C05922', 'C05923', 'C05928', 'C05929', 'C05984', 'C06032', 'C06135', 'C06136', 'C06148', 'C07292', 'C07293', 'C09332', 'C11039', 'C11434', 'C11435', 'C11514', 'C15498', 'C15653', 'C15972', 'C15973', 'C16237', 'C16265', 'C16618', 'C16619', 'C16832', 'C18026', 'C18094', 'C19078', 'C19080', 'C19085', 'C20904', 'C21015', 'C21031', 'C21113', 'C22288', 'G00092', 'G00109', 'G00110', 'G00123', 'G00124', 'G00526', 'G00872', 'G01977', 'G10238', 'G10504', 'G10505', 'G10531', 'G10534', 'G12336', 'G13043', 'G13073', 'E1_1_1_23_mRNA', 'E1_1_1_27_mRNA', 'E1_1_1_77_mRNA', 'E1_1_1_85_mRNA', 'E1_11_1_24_mRNA', 'E1_11_1_25_mRNA', 'E1_11_1_26_mRNA', 'E1_11_1_27_mRNA', 'E1_11_1_28_mRNA', 'E1_11_1_29_mRNA', 'E1_3_1_12_mRNA', 'E1_3_98_1_mRNA', 'E1_5_1_2_mRNA', 'E1_5_1_20_mRNA', 'E1_8_4_12_mRNA', 'E1_97_1_4_mRNA', 'E2_1_1_144_mRNA', 'E2_1_1_72_mRNA', 'E2_1_3_3_mRNA', 'E2_4_2_18_mRNA', 'E2_4_2_19_mRNA', 'E2_7_1_2_mRNA', 'E2_7_11_1_mRNA', 'E2_7_2_4_mRNA', 'E2_7_4_9_mRNA', 'E2_7_7_60_mRNA', 'E2_7_7_7_mRNA', 'E2_7_7_72_mRNA', 'E3_1_1_29_mRNA', 'E3_1_11_6_mRNA', 'E3_1_26_3_mRNA', 'E3_1_26_4_mRNA', 'E3_1_3_16_mRNA', 'E3_2_1_23_mRNA', 'E3_2_1_35_mRNA', 'E3_2_2_9_mRNA', 'E3_4_11_2_mRNA', 'E3_4_21_53_mRNA', 'E3_4_21_92_mRNA', 'E3_4_24_76_mRNA', 'E3_5_4_16_mRNA', 'E3_6_1_22_mRNA', 'E7_1_2_2_mRNA', 'E3_6_3_17_mRNA', 'E7_2_2_14_mRNA', 'E7_3_2_2_mRNA', 'E7_2_2_12_mRNA', 'E4_1_1_20_mRNA', 'E4_1_1_21_mRNA', 'E4_2_3_4_mRNA', 'E4_3_1_17_mRNA', 'E4_4_1_13_mRNA', 'E5_4_2_11_mRNA', 'E5_4_2_12_mRNA', 'E5_4_99_5_mRNA', 'E5_4_99_9_mRNA', 'E6_1_1_14_mRNA', 'E6_1_1_15_mRNA', 'E6_1_1_7_mRNA', 'E6_2_1_3_mRNA', 'E6_2_1_5_mRNA', 'E6_3_1_2_mRNA', 'E6_3_2_17_mRNA', 'E6_3_2_2_mRNA', 'E6_3_2_4_mRNA', 'E6_3_4_2_mRNA', 'E6_3_5_2_mRNA', 'E6_4_1_3_mRNA', 'E1_1_1_23', 'E1_1_1_27', 'E1_1_1_77', 'E1_1_1_85', 'E1_11_1_24', 'E1_11_1_25', 'E1_11_1_26', 'E1_11_1_27', 'E1_11_1_28', 'E1_11_1_29', 'E1_3_1_12', 'E1_3_98_1', 'E1_5_1_2', 'E1_5_1_20', 'E1_8_4_12', 'E1_97_1_4', 'E2_1_1_144', 'E2_1_1_72', 'E2_1_3_3', 'E2_4_2_18', 'E2_4_2_19', 'E2_7_1_2', 'E2_7_11_1', 'E2_7_2_4', 'E2_7_4_9', 'E2_7_7_60', 'E2_7_7_7', 'E2_7_7_72', 'E3_1_1_29', 'E3_1_11_6', 'E3_1_26_3', 'E3_1_26_4', 'E3_1_3_16', 'E3_2_1_23', 'E3_2_1_35', 'E3_2_2_9', 'E3_4_11_2', 'E3_4_21_53', 'E3_4_21_92', 'E3_4_24_76', 'E3_5_4_16', 'E3_6_1_22', 'E7_1_2_2', 'E3_6_3_17', 'E7_2_2_14', 'E7_3_2_2', 'E7_2_2_12', 'E4_1_1_20', 'E4_1_1_21', 'E4_2_3_4', 'E4_3_1_17', 'E4_4_1_13', 'E5_4_2_11', 'E5_4_2_12', 'E5_4_99_5', 'E5_4_99_9', 'E6_1_1_14', 'E6_1_1_15', 'E6_1_1_7', 'E6_2_1_3', 'E6_2_1_5', 'E6_3_1_2', 'E6_3_2_17', 'E6_3_2_2', 'E6_3_2_4', 'E6_3_4_2', 'E6_3_5_2', 'E6_4_1_3']
 
lowerbound = {'0': [0.0, 0.0], '1': [0.0, 0.0], '2': [0.0, 0.0], '3': [0.0, 0.0], '4': [0.0, 0.0], '5': [0.0, 0.0], '6': [0.0, 0.0], '7': [0.0, 0.0], '8': [0.0, 0.0], '9': [0.0, 0.0], '10': [0.0, 0.0], '11': [0.0, 0.0], '12': [0.0, 0.0], '13': [0.0, 0.0], '14': [0.0, 0.0], '15': [0.0, 0.0], '16': [0.0, 0.0], '17': [0.0, 0.0], '18': [0.0, 0.0], '19': [0.0, 0.0], '20': [0.0, 0.0], '21': [0.0, 0.0], '22': [0.0, 0.0], '23': [0.0, 0.0], '24': [0.0, 0.0], '25': [0.0, 0.0], '26': [0.0, 0.0], '27': [0.0, 0.0], '28': [0.0, 0.0], '29': [0.0, 0.0], '30': [0.0, 0.0], '31': [0.0, 0.0], '32': [0.0, 0.0], '33': [0.0, 0.0], '34': [0.0, 0.0], '35': [0.0, 0.0], '36': [0.0, 0.0], '37': [0.0, 0.0], '38': [0.0, 0.0], '39': [0.0, 0.0], '40': [0.0, 0.0], '41': [0.0, 0.0], '42': [0.0, 0.0], '43': [0.0, 0.0], '44': [0.0, 0.0], '45': [0.0, 0.0], '46': [0.0, 0.0], '47': [0.0, 0.0], '48': [0.0, 0.0], '49': [0.0, 0.0], '50': [0.0, 0.0], '51': [0.0, 0.0], '52': [0.0, 0.0], '53': [0.0, 0.0], '54': [0.0, 0.0], '55': [0.0, 0.0], '56': [0.0, 0.0], '57': [0.0, 0.0], '58': [0.0, 0.0], '59': [0.0, 0.0], '60': [0.0, 0.0], '61': [0.0, 0.0], '62': [0.0, 0.0], '63': [0.0, 0.0], '64': [0.0, 0.0], '65': [0.0, 0.0], '66': [0.0, 0.0], '67': [0.0, 0.0], '68': [0.0, 0.0], '69': [0.0, 0.0], '70': [0.0, 0.0], '71': [0.0, 0.0], '72': [0.0, 0.0], '73': [0.0, 0.0], '74': [0.0, 0.0], '75': [0.0, 0.0], '76': [0.0, 0.0], '77': [0.0, 0.0], '78': [0.0, 0.0], '79': [0.0, 0.0], '80': [0.0, 0.0], '81': [0.0, 0.0], '82': [0.0, 0.0], '83': [0.0, 0.0], '84': [0.0, 0.0], '85': [0.0, 0.0], '86': [0.0, 0.0], '87': [0.0, 0.0], '88': [0.0, 0.0], '89': [0.0, 0.0], '90': [0.0, 0.0], '91': [0.0, 0.0], '92': [0.0, 0.0], '93': [0.0, 0.0], '94': [0.0, 0.0], '95': [0.0, 0.0], '96': [0.0, 0.0], '97': [0.0, 0.0], '98': [0.0, 0.0], '99': [0.0, 0.0], '100': [0.0, 0.0], '101': [0.0, 0.0], '102': [0.0, 0.0], '103': [0.0, 0.0], '104': [0.0, 0.0], '105': [0.0, 0.0], '106': [0.0, 0.0], '107': [0.0, 0.0], '108': [0.0, 0.0], '109': [0.0, 0.0], '110': [0.0, 0.0], '111': [0.0, 0.0], '112': [0.0, 0.0], '113': [0.0, 0.0], '114': [0.0, 0.0], '115': [0.0, 0.0], '116': [0.0, 0.0], '117': [0.0, 0.0], '118': [0.0, 0.0], '119': [0.0, 0.0], '120': [0.0, 0.0], '121': [0.0, 0.0], '122': [0.0, 0.0], '123': [0.0, 0.0], '124': [0.0, 0.0], '125': [0.0, 0.0], '126': [0.0, 0.0], '127': [0.0, 0.0], '128': [0.0, 0.0], '129': [0.0, 0.0], '130': [0.0, 0.0], '131': [0.0, 0.0], '132': [0.0, 0.0], '133': [0.0, 0.0], '134': [0.0, 0.0], '135': [0.0, 0.0], '136': [0.0, 0.0], '137': [0.0, 0.0], '138': [0.0, 0.0], '139': [0.0, 0.0], '140': [0.0, 0.0], '141': [0.0, 0.0], '142': [0.0, 0.0], '143': [0.0, 0.0], '144': [0.0, 0.0], '145': [0.0, 0.0], '146': [0.0, 0.0], '147': [0.0, 0.0], '148': [0.0, 0.0], '149': [0.0, 0.0], '150': [0.0, 0.0], '151': [0.0, 0.0], '152': [0.0, 0.0], '153': [0.0, 0.0], '154': [0.0, 0.0], '155': [0.0, 0.0], '156': [0.0, 0.0], '157': [0.0, 0.0], '158': [0.0, 0.0], '159': [0.0, 0.0], '160': [0.0, 0.0], '161': [0.0, 0.0], '162': [0.0, 0.0], '163': [0.0, 0.0], '164': [0.0, 0.0], '165': [0.0, 0.0], '166': [0.0, 0.0], '167': [0.0, 0.0], '168': [0.0, 0.0], '169': [0.0, 0.0], '170': [0.0, 0.0], '171': [0.0, 0.0], '172': [0.0, 0.0], '173': [0.0, 0.0], '174': [0.0, 0.0], '175': [0.0, 0.0], '176': [0.0, 0.0], '177': [0.0, 0.0], '178': [0.0, 0.0], '179': [0.0, 0.0], '180': [0.0, 0.0], '181': [0.0, 0.0], '182': [0.0, 0.0], '183': [0.0, 0.0], '184': [0.0, 0.0], '185': [0.0, 0.0], '186': [0.0, 0.0], '187': [0.0, 0.0], '188': [0.0, 0.0], '189': [0.0, 0.0], '190': [0.0, 0.0], '191': [0.0, 0.0], '192': [0.0, 0.0], '193': [0.0, 0.0], '194': [0.0, 0.0], '195': [0.0, 0.0], '196': [0.0, 0.0], '197': [0.0, 0.0], '198': [0.0, 0.0], '199': [0.0, 0.0], '200': [0.0, 0.0], '201': [0.0, 0.0], '202': [0.0, 0.0], '203': [0.0, 0.0], '204': [0.0, 0.0], '205': [0.0, 0.0], '206': [0.0, 0.0], '207': [0.0, 0.0], '208': [0.0, 0.0], '209': [0.0, 0.0], '210': [0.0, 0.0], '211': [0.0, 0.0], '212': [0.0, 0.0], '213': [0.0, 0.0], '214': [0.0, 0.0], '215': [0.0, 0.0], '216': [0.0, 0.0], '217': [0.0, 0.0], '218': [0.0, 0.0], '219': [0.0, 0.0], '220': [0.0, 0.0], '221': [0.0, 0.0], '222': [0.0, 0.0], '223': [0.0, 0.0], '224': [0.0, 0.0], '225': [0.0, 0.0], '226': [0.0, 0.0], '227': [0.0, 0.0], '228': [0.0, 0.0], '229': [0.0, 0.0], '230': [0.0, 0.0], '231': [0.0, 0.0], '232': [0.0, 0.0], '233': [0.0, 0.0], '234': [0.0, 0.0], '235': [0.0, 0.0], '236': [0.0, 0.0], '237': [0.0, 0.0], '238': [0.0, 0.0], '239': [0.0, 0.0], '240': [0.0, 0.0], '241': [0.0, 0.0], '242': [0.0, 0.0], '243': [0.0, 0.0], '244': [0.0, 0.0], '245': [0.0, 0.0], '246': [0.0, 0.0], '247': [0.0, 0.0], '248': [0.0, 0.0], '249': [0.0, 0.0], '250': [0.0, 0.0], '251': [0.0, 0.0], '252': [0.0, 0.0], '253': [0.0, 0.0], '254': [0.0, 0.0], '255': [0.0, 0.0], '256': [0.0, 0.0], '257': [0.0, 0.0], '258': [0.0, 0.0], '259': [0.0, 0.0], '260': [0.0, 0.0], '261': [0.0, 0.0], '262': [0.0, 0.0], '263': [0.0, 0.0], '264': [0.0, 0.0], '265': [0.0, 0.0], '266': [0.0, 0.0], '267': [0.0, 0.0], '268': [0.0, 0.0], '269': [0.0, 0.0], '270': [0.0, 0.0], '271': [0.0, 0.0], '272': [0.0, 0.0], '273': [0.0, 0.0], '274': [0.0, 0.0], '275': [0.0, 0.0], '276': [0.0, 0.0], '277': [0.0, 0.0], '278': [0.0, 0.0], '279': [0.0, 0.0], '280': [0.0, 0.0], '281': [0.0, 0.0], '282': [0.0, 0.0], '283': [0.0, 0.0], '284': [0.0, 0.0], '285': [0.0, 0.0], '286': [0.0, 0.0], '287': [0.0, 0.0], '288': [0.0, 0.0], '289': [0.0, 0.0], '290': [0.0, 0.0], '291': [0.0, 0.0], '292': [0.0, 0.0], '293': [0.0, 0.0], '294': [0.0, 0.0], '295': [0.0, 0.0], '296': [0.0, 0.0], '297': [0.0, 0.0], '298': [0.0, 0.0], '299': [0.0, 0.0], '300': [0.0, 0.0], '301': [0.0, 0.0], '302': [0.0, 0.0], '303': [0.0, 0.0], '304': [0.0, 0.0], '305': [0.0, 0.0], '306': [0.0, 0.0], '307': [0.0, 0.0], '308': [0.0, 0.0], '309': [0.0, 0.0], '310': [0.0, 0.0], '311': [0.0, 0.0], '312': [0.0, 0.0], '313': [0.0, 0.0], '314': [0.0, 0.0], '315': [0.0, 0.0], '316': [0.0, 0.0], '317': [0.0, 0.0], '318': [0.0, 0.0], '319': [0.0, 0.0], '320': [0.0, 0.0], '321': [0.0, 0.0], '322': [0.0, 0.0], '323': [0.0, 0.0], '324': [0.0, 0.0], '325': [0.0, 0.0], '326': [0.0, 0.0], '327': [0.0, 0.0], '328': [0.0, 0.0], '329': [0.0, 0.0], '330': [0.0, 0.0], '331': [0.0, 0.0], '332': [0.0, 0.0], '333': [0.0, 0.0], '334': [0.0, 0.0], '335': [0.0, 0.0], '336': [0.0, 0.0], '337': [0.0, 0.0], '338': [0.0, 0.0], '339': [0.0, 0.0], '340': [0.0, 0.0], '341': [0.0, 0.0], '342': [0.0, 0.0], '343': [0.0, 0.0], '344': [0.0, 0.0], '345': [0.0, 0.0], '346': [0.0, 0.0], '347': [0.0, 0.0], '348': [0.0, 0.0], '349': [0.0, 0.0], '350': [0.0, 0.0], '351': [0.0, 0.0], '352': [0.0, 0.0], '353': [0.0, 0.0], '354': [0.0, 0.0], '355': [0.0, 0.0], '356': [0.0, 0.0], '357': [0.0, 0.0], '358': [0.0, 0.0], '359': [0.0, 0.0], '360': [0.0, 0.0], '361': [0.0, 0.0], '362': [0.0, 0.0], '363': [0.0, 0.0], '364': [0.0, 0.0], '365': [0.0, 0.0], '366': [0.0, 0.0], '367': [0.0, 0.0], '368': [0.0, 0.0], '369': [0.0, 0.0], '370': [0.0, 0.0], '371': [0.0, 0.0], '372': [0.0, 0.0], }
 
upperbound = {'0': [0.001, 0.001], '1': [0.001, 0.001], '2': [0.001, 0.001], '3': [0.001, 0.001], '4': [0.001, 0.001], '5': [0.001, 0.001], '6': [0.001, 0.001], '7': [0.001, 0.001], '8': [0.001, 0.001], '9': [0.001, 0.001], '10': [0.001, 0.001], '11': [0.001, 0.001], '12': [0.001, 0.001], '13': [0.001, 0.001], '14': [0.001, 0.001], '15': [0.001, 0.001], '16': [0.001, 0.001], '17': [0.001, 0.001], '18': [0.001, 0.001], '19': [0.001, 0.001], '20': [0.001, 0.001], '21': [0.001, 0.001], '22': [0.001, 0.001], '23': [0.001, 0.001], '24': [0.001, 0.001], '25': [0.001, 0.001], '26': [0.001, 0.001], '27': [0.001, 0.001], '28': [0.001, 0.001], '29': [0.001, 0.001], '30': [0.001, 0.001], '31': [0.001, 0.001], '32': [0.001, 0.001], '33': [0.001, 0.001], '34': [0.001, 0.001], '35': [0.001, 0.001], '36': [0.001, 0.001], '37': [0.001, 0.001], '38': [0.001, 0.001], '39': [0.001, 0.001], '40': [0.001, 0.001], '41': [0.001, 0.001], '42': [0.001, 0.001], '43': [0.001, 0.001], '44': [0.001, 0.001], '45': [0.001, 0.001], '46': [0.001, 0.001], '47': [0.001, 0.001], '48': [0.001, 0.001], '49': [0.001, 0.001], '50': [0.001, 0.001], '51': [0.001, 0.001], '52': [0.001, 0.001], '53': [0.001, 0.001], '54': [0.001, 0.001], '55': [0.001, 0.001], '56': [0.001, 0.001], '57': [0.001, 0.001], '58': [0.001, 0.001], '59': [0.001, 0.001], '60': [0.001, 0.001], '61': [0.001, 0.001], '62': [0.001, 0.001], '63': [0.001, 0.001], '64': [0.001, 0.001], '65': [0.001, 0.001], '66': [0.001, 0.001], '67': [0.001, 0.001], '68': [0.001, 0.001], '69': [0.001, 0.001], '70': [0.001, 0.001], '71': [0.001, 0.001], '72': [0.001, 0.001], '73': [0.001, 0.001], '74': [0.001, 0.001], '75': [0.001, 0.001], '76': [0.001, 0.001], '77': [0.001, 0.001], '78': [0.001, 0.001], '79': [0.001, 0.001], '80': [0.001, 0.001], '81': [0.001, 0.001], '82': [0.001, 0.001], '83': [0.001, 0.001], '84': [0.001, 0.001], '85': [0.001, 0.001], '86': [0.001, 0.001], '87': [0.001, 0.001], '88': [0.001, 0.001], '89': [0.001, 0.001], '90': [0.001, 0.001], '91': [0.001, 0.001], '92': [0.001, 0.001], '93': [0.001, 0.001], '94': [0.001, 0.001], '95': [0.001, 0.001], '96': [0.001, 0.001], '97': [0.001, 0.001], '98': [0.001, 0.001], '99': [0.001, 0.001], '100': [0.001, 0.001], '101': [0.001, 0.001], '102': [0.001, 0.001], '103': [0.001, 0.001], '104': [0.001, 0.001], '105': [0.001, 0.001], '106': [0.001, 0.001], '107': [0.001, 0.001], '108': [0.001, 0.001], '109': [0.001, 0.001], '110': [0.001, 0.001], '111': [0.001, 0.001], '112': [0.001, 0.001], '113': [0.001, 0.001], '114': [0.001, 0.001], '115': [0.001, 0.001], '116': [0.001, 0.001], '117': [0.001, 0.001], '118': [0.001, 0.001], '119': [0.001, 0.001], '120': [0.001, 0.001], '121': [0.001, 0.001], '122': [0.001, 0.001], '123': [0.001, 0.001], '124': [0.001, 0.001], '125': [0.001, 0.001], '126': [0.001, 0.001], '127': [0.001, 0.001], '128': [0.001, 0.001], '129': [0.001, 0.001], '130': [0.001, 0.001], '131': [0.001, 0.001], '132': [0.001, 0.001], '133': [0.001, 0.001], '134': [0.001, 0.001], '135': [0.001, 0.001], '136': [0.001, 0.001], '137': [0.001, 0.001], '138': [0.001, 0.001], '139': [0.001, 0.001], '140': [0.001, 0.001], '141': [0.001, 0.001], '142': [0.001, 0.001], '143': [0.001, 0.001], '144': [0.001, 0.001], '145': [0.001, 0.001], '146': [0.001, 0.001], '147': [0.001, 0.001], '148': [0.001, 0.001], '149': [0.001, 0.001], '150': [0.001, 0.001], '151': [0.001, 0.001], '152': [0.001, 0.001], '153': [0.001, 0.001], '154': [0.001, 0.001], '155': [0.001, 0.001], '156': [0.001, 0.001], '157': [0.001, 0.001], '158': [0.001, 0.001], '159': [0.001, 0.001], '160': [0.001, 0.001], '161': [0.001, 0.001], '162': [0.001, 0.001], '163': [0.001, 0.001], '164': [0.001, 0.001], '165': [0.001, 0.001], '166': [0.001, 0.001], '167': [0.001, 0.001], '168': [0.001, 0.001], '169': [0.001, 0.001], '170': [0.001, 0.001], '171': [0.001, 0.001], '172': [0.001, 0.001], '173': [0.001, 0.001], '174': [0.001, 0.001], '175': [0.001, 0.001], '176': [0.001, 0.001], '177': [0.001, 0.001], '178': [0.001, 0.001], '179': [0.001, 0.001], '180': [0.001, 0.001], '181': [0.001, 0.001], '182': [0.001, 0.001], '183': [0.001, 0.001], '184': [0.001, 0.001], '185': [0.001, 0.001], '186': [0.001, 0.001], '187': [0.001, 0.001], '188': [0.001, 0.001], '189': [0.001, 0.001], '190': [0.001, 0.001], '191': [0.001, 0.001], '192': [0.001, 0.001], '193': [0.001, 0.001], '194': [0.001, 0.001], '195': [0.001, 0.001], '196': [0.001, 0.001], '197': [0.001, 0.001], '198': [0.001, 0.001], '199': [0.001, 0.001], '200': [0.001, 0.001], '201': [0.001, 0.001], '202': [0.001, 0.001], '203': [0.001, 0.001], '204': [0.001, 0.001], '205': [0.001, 0.001], '206': [0.001, 0.001], '207': [0.001, 0.001], '208': [0.001, 0.001], '209': [0.001, 0.001], '210': [0.001, 0.001], '211': [0.001, 0.001], '212': [0.001, 0.001], '213': [0.001, 0.001], '214': [0.001, 0.001], '215': [0.001, 0.001], '216': [0.001, 0.001], '217': [0.001, 0.001], '218': [0.001, 0.001], '219': [0.001, 0.001], '220': [0.001, 0.001], '221': [0.001, 0.001], '222': [0.001, 0.001], '223': [0.001, 0.001], '224': [0.001, 0.001], '225': [0.001, 0.001], '226': [0.001, 0.001], '227': [0.001, 0.001], '228': [0.001, 0.001], '229': [0.001, 0.001], '230': [0.001, 0.001], '231': [0.001, 0.001], '232': [0.001, 0.001], '233': [0.001, 0.001], '234': [0.001, 0.001], '235': [0.001, 0.001], '236': [0.001, 0.001], '237': [0.001, 0.001], '238': [0.001, 0.001], '239': [0.001, 0.001], '240': [0.001, 0.001], '241': [0.001, 0.001], '242': [0.001, 0.001], '243': [0.001, 0.001], '244': [0.001, 0.001], '245': [0.001, 0.001], '246': [0.001, 0.001], '247': [0.001, 0.001], '248': [0.001, 0.001], '249': [0.001, 0.001], '250': [0.001, 0.001], '251': [0.001, 0.001], '252': [0.001, 0.001], '253': [0.001, 0.001], '254': [0.001, 0.001], '255': [0.001, 0.001], '256': [0.001, 0.001], '257': [0.001, 0.001], '258': [0.001, 0.001], '259': [0.001, 0.001], '260': [0.001, 0.001], '261': [0.001, 0.001], '262': [0.001, 0.001], '263': [0.001, 0.001], '264': [0.001, 0.001], '265': [0.001, 0.001], '266': [0.001, 0.001], '267': [0.001, 0.001], '268': [0.001, 0.001], '269': [0.001, 0.001], '270': [0.001, 0.001], '271': [0.001, 0.001], '272': [0.001, 0.001], '273': [0.001, 0.001], '274': [0.001, 0.001], '275': [0.001, 0.001], '276': [0.001, 0.001], '277': [0.001, 0.001], '278': [0.001, 0.001], '279': [0.001, 0.001], '280': [0.001, 0.001], '281': [0.001, 0.001], '282': [0.001, 0.001], '283': [0.001, 0.001], '284': [0.001, 0.001], '285': [0.001, 0.001], '286': [0.001, 0.001], '287': [0.001, 0.001], '288': [0.001, 0.001], '289': [0.001, 0.001], '290': [0.001, 0.001], '291': [0.001, 0.001], '292': [0.001, 0.001], '293': [0.001, 0.001], '294': [0.001, 0.001], '295': [0.001, 0.001], '296': [0.001, 0.001], '297': [0.001, 0.001], '298': [0.001, 0.001], '299': [0.001, 0.001], '300': [0.001, 0.001], '301': [0.001, 0.001], '302': [0.001, 0.001], '303': [0.001, 0.001], '304': [0.001, 0.001], '305': [0.001, 0.001], '306': [0.001, 0.001], '307': [0.001, 0.001], '308': [0.001, 0.001], '309': [0.001, 0.001], '310': [0.001, 0.001], '311': [0.001, 0.001], '312': [0.001, 0.001], '313': [0.001, 0.001], '314': [0.001, 0.001], '315': [0.001, 0.001], '316': [0.001, 0.001], '317': [0.001, 0.001], '318': [0.001, 0.001], '319': [0.001, 0.001], '320': [0.001, 0.001], '321': [0.001, 0.001], '322': [0.001, 0.001], '323': [0.001, 0.001], '324': [0.001, 0.001], '325': [0.001, 0.001], '326': [0.001, 0.001], '327': [0.001, 0.001], '328': [0.001, 0.001], '329': [0.001, 0.001], '330': [0.001, 0.001], '331': [0.001, 0.001], '332': [0.001, 0.001], '333': [0.001, 0.001], '334': [0.001, 0.001], '335': [0.001, 0.001], '336': [0.001, 0.001], '337': [0.001, 0.001], '338': [0.001, 0.001], '339': [0.001, 0.001], '340': [0.001, 0.001], '341': [0.001, 0.001], '342': [0.001, 0.001], '343': [0.001, 0.001], '344': [0.001, 0.001], '345': [0.001, 0.001], '346': [0.001, 0.001], '347': [0.001, 0.001], '348': [0.001, 0.001], '349': [0.001, 0.001], '350': [0.001, 0.001], '351': [0.001, 0.001], '352': [0.001, 0.001], '353': [0.001, 0.001], '354': [0.001, 0.001], '355': [0.001, 0.001], '356': [0.001, 0.001], '357': [0.001, 0.001], '358': [0.001, 0.001], '359': [0.001, 0.001], '360': [0.001, 0.001], '361': [0.001, 0.001], '362': [0.001, 0.001], '363': [0.001, 0.001], '364': [0.001, 0.001], '365': [0.001, 0.001], '366': [0.001, 0.001], '367': [0.001, 0.001], '368': [0.001, 0.001], '369': [0.001, 0.001], '370': [0.001, 0.001], '371': [0.001, 0.001], '372': [0.001, 0.001], }
 
model = RK4(ODE, 0.0, y, 0.1, 3600, None, lowerbound, upperbound)
