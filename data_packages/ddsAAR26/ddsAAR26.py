''' -------------------------------------
Python ODE script generated by ASModeller
(a package in AdvanceSynToolKit)

Date Time: 2025-10-17 4:8:8:280537

name: Whole Cell Kinetic Model (Enzymatic reactions with enzyme transcriptions and translations) of Desulfovibrio desulfuricans L4 (ddsAAR26)
author: Atoshi Abirami D/O Raj Kumar, Maurice Ling
------------------------------------- '''

def C00001(t, y):
    r19 = (13.7 * y[1010] * y[578] * y[3] * y[67])/(1 + (y[1010] * y[578] * y[3] * y[67]))
    r84 = (13.7 * y[1023] * y[595] * y[107])/(1 + (y[1023] * y[595] * y[107]))
    r85 = (13.7 * y[1024] * y[600] * y[107] * y[67])/(1 + (y[1024] * y[600] * y[107] * y[67]))
    r109 = (13.7 * y[1031] * y[554] * y[9] * y[10] * y[107])/(1 + (y[1031] * y[554] * y[9] * y[10] * y[107]))
    r146 = (13.7 * y[1046] * y[4] * y[67] * y[668])/(1 + (y[1046] * y[4] * y[67] * y[668]))
    r179 = (13.7 * y[1063] * y[401])/(1 + (y[1063] * y[401]))
    r270 = (13.7 * y[1081] * y[357] * y[23])/(1 + (y[1081] * y[357] * y[23]))
    r271 = (13.7 * y[1081] * y[501] * y[23])/(1 + (y[1081] * y[501] * y[23]))
    r278 = (13.7 * y[1081] * y[357] * y[23])/(1 + (y[1081] * y[357] * y[23]))
    r279 = (13.7 * y[1081] * y[501] * y[23])/(1 + (y[1081] * y[501] * y[23]))
    r283 = (13.7 * y[1083] * y[355] * y[9])/(1 + (y[1083] * y[355] * y[9]))
    r302 = (13.7 * y[1087] * y[382] * y[12] * y[23])/(1 + (y[1087] * y[382] * y[12] * y[23]))
    r318 = (13.7 * y[1096] * y[299] * y[219])/(1 + (y[1096] * y[299] * y[219]))
    r331 = (13.7 * y[1100] * y[8] * y[12] * y[18])/(1 + (y[1100] * y[8] * y[12] * y[18]))
    r337 = (13.7 * y[1105] * y[470] * y[613])/(1 + (y[1105] * y[470] * y[613]))
    r345 = (13.7 * y[1110] * y[231] * y[24])/(1 + (y[1110] * y[231] * y[24]))
    r533 = (13.7 * y[1171] * y[13] * y[165])/(1 + (y[1171] * y[13] * y[165]))
    r538 = (13.7 * y[1171] * y[13] * y[165])/(1 + (y[1171] * y[13] * y[165]))
    r543 = (13.7 * y[1171] * y[13] * y[165])/(1 + (y[1171] * y[13] * y[165]))
    r598 = (13.7 * y[1198] * y[264])/(1 + (y[1198] * y[264]))
    r599 = (13.7 * y[1199] * y[228])/(1 + (y[1199] * y[228]))
    r600 = (13.7 * y[1199] * y[394])/(1 + (y[1199] * y[394]))
    r601 = (13.7 * y[1200] * y[114])/(1 + (y[1200] * y[114]))
    r602 = (13.7 * y[1200] * y[114])/(1 + (y[1200] * y[114]))
    r603 = (13.7 * y[1201] * y[56] * y[207])/(1 + (y[1201] * y[56] * y[207]))
    r604 = (13.7 * y[1201] * y[56] * y[207])/(1 + (y[1201] * y[56] * y[207]))
    r606 = (13.7 * y[1201] * y[56] * y[403])/(1 + (y[1201] * y[56] * y[403]))
    r607 = (13.7 * y[1202] * y[194])/(1 + (y[1202] * y[194]))
    r608 = (13.7 * y[1203] * y[212])/(1 + (y[1203] * y[212]))
    r609 = (13.7 * y[1204] * y[253])/(1 + (y[1204] * y[253]))
    r610 = (13.7 * y[1205] * y[77])/(1 + (y[1205] * y[77]))
    r611 = (13.7 * y[1206] * y[154])/(1 + (y[1206] * y[154]))
    r612 = (13.7 * y[1206] * y[250])/(1 + (y[1206] * y[250]))
    r613 = (13.7 * y[1207] * y[297])/(1 + (y[1207] * y[297]))
    r614 = (13.7 * y[1207] * y[459])/(1 + (y[1207] * y[459]))
    r615 = (13.7 * y[1207] * y[460])/(1 + (y[1207] * y[460]))
    r616 = (13.7 * y[1207] * y[461])/(1 + (y[1207] * y[461]))
    r617 = (13.7 * y[1207] * y[463])/(1 + (y[1207] * y[463]))
    r618 = (13.7 * y[1207] * y[468])/(1 + (y[1207] * y[468]))
    r619 = (13.7 * y[1207] * y[517])/(1 + (y[1207] * y[517]))
    r620 = (13.7 * y[1207] * y[527])/(1 + (y[1207] * y[527]))
    r621 = (13.7 * y[1207] * y[681])/(1 + (y[1207] * y[681]))
    r622 = (13.7 * y[1207] * y[685])/(1 + (y[1207] * y[685]))
    r623 = (13.7 * y[1208] * y[213])/(1 + (y[1208] * y[213]))
    r624 = (13.7 * y[1209] * y[427] )/(1 + (y[1209] * y[427] ))
    r625 = (13.7 * y[1209] * y[441])/(1 + (y[1209] * y[441]))
    r626 = (13.7 * y[1209] * y[552])/(1 + (y[1209] * y[552]))
    r633 = (13.7 * y[1213] * y[56])/(1 + (y[1213] * y[56]))
    r638 = (13.7 * y[1213] * y[56])/(1 + (y[1213] * y[56]))
    r654 = (13.7 * y[1218] * y[92] * y[93] * y[13])/(1 + (y[1218] * y[92] * y[93] * y[13]))
    r655 = (13.7 * y[1218] * y[92] * y[93] * y[55])/(1 + (y[1218] * y[92] * y[93] * y[55]))
    r656 = (13.7 * y[1218] * y[93] * y[94] * y[55])/(1 + (y[1218] * y[93] * y[94] * y[55]))
    r657 = (13.7 * y[1219] * y[198] * y[21])/(1 + (y[1219] * y[198] * y[21]))
    r739 = (13.7 * y[1275] * y[671] * y[41] * y[1])/(1 + (y[1275] * y[671] * y[41] * y[1]))
    r743 = (13.7 * y[1277] * y[678] * y[13] * y[1])/(1 + (y[1277] * y[678] * y[13] * y[1]))
    r44 = (13.7 * y[1014] * y[101] * y[2] * y[0])/(1 + (y[1014] * y[101] * y[2] * y[0]))
    r45 = (13.7 * y[1014] * y[465] * y[2] * y[0])/(1 + (y[1014] * y[465] * y[2] * y[0]))
    r46 = (13.7 * y[1015] * y[255] * y[2] * y[0])/(1 + (y[1015] * y[255] * y[2] * y[0]))
    r47 = (13.7 * y[1015] * y[336] * y[0] * y[2])/(1 + (y[1015] * y[336] * y[0] * y[2]))
    r69 = (13.7 * y[1020] * y[426] * y[2] * y[0])/(1 + (y[1020] * y[426] * y[2] * y[0]))
    r70 = (13.7 * y[1020] * y[426] * y[5] * y[0])/(1 + (y[1020] * y[426] * y[5] * y[0]))
    r71 = (13.7 * y[1021] * y[434] * y[175] * y[0])/(1 + (y[1021] * y[434] * y[175] * y[0]))
    r72 = (13.7 * y[1021] * y[132] * y[175] * y[0])/(1 + (y[1021] * y[132] * y[175] * y[0]))
    r73 = (13.7 * y[1021] * y[303] * y[175] * y[0])/(1 + (y[1021] * y[303] * y[175] * y[0]))
    r74 = (13.7 * y[1021] * y[180] * y[175] * y[0])/(1 + (y[1021] * y[180] * y[175] * y[0]))
    r75 = (13.7 * y[1021] * y[243] * y[175] * y[0])/(1 + (y[1021] * y[243] * y[175] * y[0]))
    r76 = (13.7 * y[1021] * y[434] * y[651] * y[0])/(1 + (y[1021] * y[434] * y[651] * y[0]))
    r77 = (13.7 * y[1021] * y[434] * y[387] * y[0])/(1 + (y[1021] * y[434] * y[387] * y[0]))
    r78 = (13.7 * y[1021] * y[712] * y[175] * y[0])/(1 + (y[1021] * y[712] * y[175] * y[0]))
    r79 = (13.7 * y[1022] * y[235] * y[175] * y[0])/(1 + (y[1022] * y[235] * y[175] * y[0]))
    r80 = (13.7 * y[1022] * y[102] * y[175] * y[0])/(1 + (y[1022] * y[102] * y[175] * y[0]))
    r81 = (13.7 * y[1022] * y[164] * y[175] * y[0])/(1 + (y[1022] * y[164] * y[175] * y[0]))
    r82 = (13.7 * y[1022] * y[204] * y[175] * y[0])/(1 + (y[1022] * y[204] * y[175] * y[0]))
    r83 = (13.7 * y[1022] * y[206] * y[175] * y[0])/(1 + (y[1022] * y[206] * y[175] * y[0]))
    r86 = (13.7 * y[1024] * y[143] * y[108] * y[0])/(1 + (y[1024] * y[143] * y[108] * y[0]))
    r87 = (13.7 * y[1025] * y[1] * y[242] * y[107] * y[67] * y[0])/(1 + (y[1025] * y[1] * y[242] * y[107] * y[67] * y[0]))
    r88 = (13.7 * y[1025] * y[1] * y[0] * y[107])/(1 + (y[1025] * y[1] * y[0] * y[107]))
    r93 = (13.7 * y[1025] * y[313] * y[107] * y[67] * y[1] * y[0])/(1 + (y[1025] * y[313] * y[107] * y[67] * y[1] * y[0]))
    r94 = (13.7 * y[1025] * y[1] * y[242] * y[107] * y[67] * y[0])/(1 + (y[1025] * y[1] * y[242] * y[107] * y[67] * y[0]))
    r95 = (13.7 * y[1025] * y[1] * y[0] * y[107])/(1 + (y[1025] * y[1] * y[0] * y[107]))
    r100 = (13.7 * y[1025] * y[313] * y[107] * y[67] * y[1] * y[0])/(1 + (y[1025] * y[313] * y[107] * y[67] * y[1] * y[0]))
    r107 = (13.7 * y[1031] * y[144] * y[0] * y[108])/(1 + (y[1031] * y[144] * y[0] * y[108]))
    r110 = (13.7 * y[1032] * y[60] * y[0] * y[108])/(1 + (y[1032] * y[60] * y[0] * y[108]))
    r111 = (13.7 * y[1032] * y[221] * y[0] * y[108])/(1 + (y[1032] * y[221] * y[0] * y[108]))
    r116 = (13.7 * y[1036] * y[36] * y[2] * y[0])/(1 + (y[1036] * y[36] * y[2] * y[0]))
    r117 = (13.7 * y[1036] * y[484] * y[0] * y[2])/(1 + (y[1036] * y[484] * y[0] * y[2]))
    r118 = (13.7 * y[1036] * y[484] * y[0] * y[5])/(1 + (y[1036] * y[484] * y[0] * y[5]))
    r119 = (13.7 * y[1036] * y[33] * y[0] * y[2])/(1 + (y[1036] * y[33] * y[0] * y[2]))
    r121 = (13.7 * y[1037] * y[23] * y[5] * y[0])/(1 + (y[1037] * y[23] * y[5] * y[0]))
    r122 = (13.7 * y[1037] * y[55] * y[0])/(1 + (y[1037] * y[55] * y[0]))
    r123 = (13.7 * y[1038] * y[23] * y[5] * y[0])/(1 + (y[1038] * y[23] * y[5] * y[0]))
    r124 = (13.7 * y[1038] * y[484] * y[0] * y[2])/(1 + (y[1038] * y[484] * y[0] * y[2]))
    r125 = (13.7 * y[1038] * y[484] * y[0] * y[5])/(1 + (y[1038] * y[484] * y[0] * y[5]))
    r127 = (13.7 * y[1039] * y[43] * y[0] * y[6])/(1 + (y[1039] * y[43] * y[0] * y[6]))
    r137 = (13.7 * y[1044] * y[26] * y[13] * y[0])/(1 + (y[1044] * y[26] * y[13] * y[0]))
    r138 = (13.7 * y[1044] * y[13] * y[2] * y[0])/(1 + (y[1044] * y[13] * y[2] * y[0]))
    r145 = (13.7 * y[1046] * y[311] * y[5] * y[0])/(1 + (y[1046] * y[311] * y[5] * y[0]))
    r147 = (13.7 * y[1047] * y[380] * y[175] * y[0])/(1 + (y[1047] * y[380] * y[175] * y[0]))
    r148 = (13.7 * y[1047] * y[61] * y[175] * y[0])/(1 + (y[1047] * y[61] * y[175] * y[0]))
    r149 = (13.7 * y[1048] * y[380] * y[175] * y[0])/(1 + (y[1048] * y[380] * y[175] * y[0]))
    r150 = (13.7 * y[1049] * y[223] * y[251] * y[0])/(1 + (y[1049] * y[223] * y[251] * y[0]))
    r151 = (13.7 * y[1049] * y[223] * y[251] * y[0])/(1 + (y[1049] * y[223] * y[251] * y[0]))
    r180 = (13.7 * y[1064] * y[110] * y[109] * y[0])/(1 + (y[1064] * y[110] * y[109] * y[0]))
    r183 = (13.7 * y[1065] * y[420] * y[199] * y[0])/(1 + (y[1065] * y[420] * y[199] * y[0]))
    r269 = (13.7 * y[1081] * y[347] * y[0])/(1 + (y[1081] * y[347] * y[0]))
    r277 = (13.7 * y[1081] * y[347] * y[0])/(1 + (y[1081] * y[347] * y[0]))
    r332 = (13.7 * y[1100] * y[1] * y[488] * y[0])/(1 + (y[1100] * y[1] * y[488] * y[0]))
    r333 = (13.7 * y[1101] * y[263] * y[0])/(1 + (y[1101] * y[263] * y[0]))
    r335 = (13.7 * y[1103] * y[410] * y[0] * y[8])/(1 + (y[1103] * y[410] * y[0] * y[8]))
    r499 = (13.7 * y[1155] * y[1] * y[311] * y[0])/(1 + (y[1155] * y[1] * y[311] * y[0]))
    r512 = (13.7 * y[1162] * y[421] * y[0])/(1 + (y[1162] * y[421] * y[0]))
    r513 = (13.7 * y[1163] * y[291] * y[0])/(1 + (y[1163] * y[291] * y[0]))
    r514 = (13.7 * y[1164] * y[179] * y[0])/(1 + (y[1164] * y[179] * y[0]))
    r515 = (13.7 * y[1164] * y[494] * y[0])/(1 + (y[1164] * y[494] * y[0]))
    r516 = (13.7 * y[1164] * y[200] * y[0])/(1 + (y[1164] * y[200] * y[0]))
    r517 = (13.7 * y[1164] * y[179] * y[0])/(1 + (y[1164] * y[179] * y[0]))
    r518 = (13.7 * y[1164] * y[494] * y[0])/(1 + (y[1164] * y[494] * y[0]))
    r519 = (13.7 * y[1164] * y[200] * y[0])/(1 + (y[1164] * y[200] * y[0]))
    r520 = (13.7 * y[1165] * y[356] * y[0])/(1 + (y[1165] * y[356] * y[0]))
    r521 = (13.7 * y[1165] * y[305] * y[0])/(1 + (y[1165] * y[305] * y[0]))
    r522 = (13.7 * y[1165] * y[306] * y[0])/(1 + (y[1165] * y[306] * y[0]))
    r523 = (13.7 * y[1165] * y[562] * y[0])/(1 + (y[1165] * y[562] * y[0]))
    r524 = (13.7 * y[1165] * y[538] * y[0])/(1 + (y[1165] * y[538] * y[0]))
    r525 = (13.7 * y[1166] * y[596] * y[0])/(1 + (y[1166] * y[596] * y[0]))
    r526 = (13.7 * y[1167] * y[658] * y[0] )/(1 + (y[1167] * y[658] * y[0] ))
    r527 = (13.7 * y[1168] * y[308] * y[0])/(1 + (y[1168] * y[308] * y[0]))
    r528 = (13.7 * y[1168] * y[513] * y[0])/(1 + (y[1168] * y[513] * y[0]))
    r529 = (13.7 * y[1169] * y[55] * y[0])/(1 + (y[1169] * y[55] * y[0]))
    r530 = (13.7 * y[1169] * y[248] * y[0])/(1 + (y[1169] * y[248] * y[0]))
    r531 = (13.7 * y[1169] * y[147] * y[0])/(1 + (y[1169] * y[147] * y[0]))
    r532 = (13.7 * y[1170] * y[379] * y[0])/(1 + (y[1170] * y[379] * y[0]))
    r534 = (13.7 * y[1171] * y[72] * y[0])/(1 + (y[1171] * y[72] * y[0]))
    r535 = (13.7 * y[1171] * y[72] * y[0])/(1 + (y[1171] * y[72] * y[0]))
    r536 = (13.7 * y[1171] * y[72] * y[0])/(1 + (y[1171] * y[72] * y[0]))
    r537 = (13.7 * y[1171] * y[147] * y[0])/(1 + (y[1171] * y[147] * y[0]))
    r539 = (13.7 * y[1171] * y[72] * y[0])/(1 + (y[1171] * y[72] * y[0]))
    r540 = (13.7 * y[1171] * y[72] * y[0])/(1 + (y[1171] * y[72] * y[0]))
    r541 = (13.7 * y[1171] * y[72] * y[0])/(1 + (y[1171] * y[72] * y[0]))
    r542 = (13.7 * y[1171] * y[147] * y[0])/(1 + (y[1171] * y[147] * y[0]))
    r544 = (13.7 * y[1171] * y[72] * y[0])/(1 + (y[1171] * y[72] * y[0]))
    r545 = (13.7 * y[1171] * y[72] * y[0])/(1 + (y[1171] * y[72] * y[0]))
    r546 = (13.7 * y[1171] * y[72] * y[0])/(1 + (y[1171] * y[72] * y[0]))
    r547 = (13.7 * y[1171] * y[147] * y[0])/(1 + (y[1171] * y[147] * y[0]))
    r548 = (13.7 * y[1172] * y[593] * y[0])/(1 + (y[1172] * y[593] * y[0]))
    r549 = (13.7 * y[1172] * y[439] * y[0])/(1 + (y[1172] * y[439] * y[0]))
    r550 = (13.7 * y[1173] * y[123] * y[0])/(1 + (y[1173] * y[123] * y[0]))
    r551 = (13.7 * y[1173] * y[123] * y[0])/(1 + (y[1173] * y[123] * y[0]))
    r552 = (13.7 * y[1173] * y[123] * y[0])/(1 + (y[1173] * y[123] * y[0]))
    r553 = (13.7 * y[1174] * y[38] * y[0])/(1 + (y[1174] * y[38] * y[0]))
    r554 = (13.7 * y[1174] * y[38] * y[0])/(1 + (y[1174] * y[38] * y[0]))
    r555 = (13.7 * y[1174] * y[480] * y[0])/(1 + (y[1174] * y[480] * y[0]))
    r556 = (13.7 * y[1174] * y[546] * y[0])/(1 + (y[1174] * y[546] * y[0]))
    r558 = (13.7 * y[1175] * y[367] * y[0])/(1 + (y[1175] * y[367] * y[0]))
    r559 = (13.7 * y[1176] * y[112] * y[0])/(1 + (y[1176] * y[112] * y[0]))
    r560 = (13.7 * y[1177] * y[38] * y[0])/(1 + (y[1177] * y[38] * y[0]))
    r561 = (13.7 * y[1178] * y[300] * y[0])/(1 + (y[1178] * y[300] * y[0]))
    r562 = (13.7 * y[1179] * y[662] * y[0])/(1 + (y[1179] * y[662] * y[0]))
    r563 = (13.7 * y[1180] * y[12] * y[0])/(1 + (y[1180] * y[12] * y[0]))
    r564 = (13.7 * y[1181] * y[206] * y[0])/(1 + (y[1181] * y[206] * y[0]))
    r565 = (13.7 * y[1181] * y[713] * y[0])/(1 + (y[1181] * y[713] * y[0]))
    r566 = (13.7 * y[1182] * y[457] * y[0])/(1 + (y[1182] * y[457] * y[0]))
    r567 = (13.7 * y[1183] * y[130] * y[0])/(1 + (y[1183] * y[130] * y[0]))
    r568 = (13.7 * y[1183] * y[1] * y[0])/(1 + (y[1183] * y[1] * y[0]))
    r569 = (13.7 * y[1183] * y[38] * y[0])/(1 + (y[1183] * y[38] * y[0]))
    r570 = (13.7 * y[1183] * y[54] * y[0])/(1 + (y[1183] * y[54] * y[0]))
    r571 = (13.7 * y[1183] * y[63] * y[0])/(1 + (y[1183] * y[63] * y[0]))
    r572 = (13.7 * y[1183] * y[205] * y[0])/(1 + (y[1183] * y[205] * y[0]))
    r573 = (13.7 * y[1183] * y[2] * y[0])/(1 + (y[1183] * y[2] * y[0]))
    r574 = (13.7 * y[1183] * y[15] * y[0])/(1 + (y[1183] * y[15] * y[0]))
    r575 = (13.7 * y[1183] * y[27] * y[0])/(1 + (y[1183] * y[27] * y[0]))
    r576 = (13.7 * y[1183] * y[254] * y[0])/(1 + (y[1183] * y[254] * y[0]))
    r577 = (13.7 * y[1183] * y[258] * y[0])/(1 + (y[1183] * y[258] * y[0]))
    r591 = (13.7 * y[1193] * y[480] * y[0])/(1 + (y[1193] * y[480] * y[0]))
    r592 = (13.7 * y[1193] * y[480] * y[0])/(1 + (y[1193] * y[480] * y[0]))
    r627 = (13.7 * y[1210] * y[277] * y[0])/(1 + (y[1210] * y[277] * y[0]))
    r628 = (13.7 * y[1210] * y[557] * y[0])/(1 + (y[1210] * y[557] * y[0]))
    r630 = (13.7 * y[1212] * y[565] * y[0])/(1 + (y[1212] * y[565] * y[0]))
    r634 = (13.7 * y[1213] * y[701] * y[0])/(1 + (y[1213] * y[701] * y[0]))
    r639 = (13.7 * y[1213] * y[701] * y[0])/(1 + (y[1213] * y[701] * y[0]))
    r643 = (13.7 * y[1214] * y[702] * y[0])/(1 + (y[1214] * y[702] * y[0]))
    r653 = (13.7 * y[1218] * y[55] * y[0])/(1 + (y[1218] * y[55] * y[0]))
    r660 = (13.7 * y[1222] * y[705] * y[0] )/(1 + (y[1222] * y[705] * y[0] ))
    r740 = (13.7 * y[1276] * y[55] * y[0])/(1 + (y[1276] * y[55] * y[0]))
    r742 = (13.7 * y[1276] * y[1] * y[63] * y[55] * y[0])/(1 + (y[1276] * y[1] * y[63] * y[55] * y[0]))
    r746 = (13.7 * y[1280] * y[1] * y[254] * y[55] * y[0])/(1 + (y[1280] * y[1] * y[254] * y[55] * y[0]))
    r748 = (13.7 * y[1281] * y[55] * y[0])/(1 + (y[1281] * y[55] * y[0]))
    r750 = (13.7 * y[1281] * y[1] * y[230] * y[55] * y[0])/(1 + (y[1281] * y[1] * y[230] * y[55] * y[0]))
    r751 = (13.7 * y[1281] * y[646] * y[1] * y[55] * y[0])/(1 + (y[1281] * y[646] * y[1] * y[55] * y[0]))
    r752 = (13.7 * y[1282] * y[55] * y[0])/(1 + (y[1282] * y[55] * y[0]))
    r754 = (13.7 * y[1282] * y[1] * y[43] * y[55] * y[0])/(1 + (y[1282] * y[1] * y[43] * y[55] * y[0]))
    r755 = (13.7 * y[1283] * y[55] * y[0])/(1 + (y[1283] * y[55] * y[0]))
    r756 = (13.7 * y[1283] * y[1] * y[55] * y[165] * y[0])/(1 + (y[1283] * y[1] * y[55] * y[165] * y[0]))
    r761 = (13.7 * y[1283] * y[55] * y[0])/(1 + (y[1283] * y[55] * y[0]))
    r762 = (13.7 * y[1283] * y[1] * y[55] * y[165] * y[0])/(1 + (y[1283] * y[1] * y[55] * y[165] * y[0]))
    return (r19 + r84 + r85 + r109 + r146 + r179 + r270 + r271 + r278 + r279 + r283 + r302 + r318 + r331 + r337 + r345 + r533 + r538 + r543 + r598 + r599 + r600 + r601 + r602 + r603 + r604 + r606 + r607 + r608 + r609 + r610 + r611 + r612 + r613 + r614 + r615 + r616 + r617 + r618 + r619 + r620 + r621 + r622 + r623 + r624 + r625 + r626 + r633 + r638 + r654 + r655 + r656 + r657 + r739 + r743) - (r44 + r45 + r46 + r47 + r69 + r70 + r71 + r72 + r73 + r74 + r75 + r76 + r77 + r78 + r79 + r80 + r81 + r82 + r83 + r86 + r87 + r88 + r93 + r94 + r95 + r100 + r107 + r110 + r111 + r116 + r117 + r118 + r119 + r121 + r122 + r123 + r124 + r125 + r127 + r137 + r138 + r145 + r147 + r148 + r149 + r150 + r151 + r180 + r183 + r269 + r277 + r332 + r333 + r335 + r499 + r512 + r513 + r514 + r515 + r516 + r517 + r518 + r519 + r520 + r521 + r522 + r523 + r524 + r525 + r526 + r527 + r528 + r529 + r530 + r531 + r532 + r534 + r535 + r536 + r537 + r539 + r540 + r541 + r542 + r544 + r545 + r546 + r547 + r548 + r549 + r550 + r551 + r552 + r553 + r554 + r555 + r556 + r558 + r559 + r560 + r561 + r562 + r563 + r564 + r565 + r566 + r567 + r568 + r569 + r570 + r571 + r572 + r573 + r574 + r575 + r576 + r577 + r591 + r592 + r627 + r628 + r630 + r634 + r639 + r643 + r653 + r660 + r740 + r742 + r746 + r748 + r750 + r751 + r752 + r754 + r755 + r756 + r761 + r762)
 
def C00002(t, y):
    r80 = (13.7 * y[1022] * y[102] * y[175] * y[0])/(1 + (y[1022] * y[102] * y[175] * y[0]))
    r303 = (13.7 * y[1088] * y[366] * y[12])/(1 + (y[1088] * y[366] * y[12]))
    r331 = (13.7 * y[1100] * y[8] * y[12] * y[18])/(1 + (y[1100] * y[8] * y[12] * y[18]))
    r380 = (13.7 * y[1131] * y[1] * y[7])/(1 + (y[1131] * y[1] * y[7]))
    r87 = (13.7 * y[1025] * y[1] * y[242] * y[107] * y[67] * y[0])/(1 + (y[1025] * y[1] * y[242] * y[107] * y[67] * y[0]))
    r88 = (13.7 * y[1025] * y[1] * y[0] * y[107])/(1 + (y[1025] * y[1] * y[0] * y[107]))
    r93 = (13.7 * y[1025] * y[313] * y[107] * y[67] * y[1] * y[0])/(1 + (y[1025] * y[313] * y[107] * y[67] * y[1] * y[0]))
    r94 = (13.7 * y[1025] * y[1] * y[242] * y[107] * y[67] * y[0])/(1 + (y[1025] * y[1] * y[242] * y[107] * y[67] * y[0]))
    r95 = (13.7 * y[1025] * y[1] * y[0] * y[107])/(1 + (y[1025] * y[1] * y[0] * y[107]))
    r100 = (13.7 * y[1025] * y[313] * y[107] * y[67] * y[1] * y[0])/(1 + (y[1025] * y[313] * y[107] * y[67] * y[1] * y[0]))
    r332 = (13.7 * y[1100] * y[1] * y[488] * y[0])/(1 + (y[1100] * y[1] * y[488] * y[0]))
    r349 = (13.7 * y[1112] * y[590] * y[1])/(1 + (y[1112] * y[590] * y[1]))
    r350 = (13.7 * y[1113] * y[1] * y[258])/(1 + (y[1113] * y[1] * y[258]))
    r351 = (13.7 * y[1114] * y[1] * y[136])/(1 + (y[1114] * y[1] * y[136]))
    r352 = (13.7 * y[1114] * y[1] * y[503])/(1 + (y[1114] * y[1] * y[503]))
    r353 = (13.7 * y[1115] * y[1] * y[155])/(1 + (y[1115] * y[1] * y[155]))
    r354 = (13.7 * y[1116] * y[1] * y[91])/(1 + (y[1116] * y[1] * y[91]))
    r355 = (13.7 * y[1117] * y[1] * y[256])/(1 + (y[1117] * y[1] * y[256]))
    r356 = (13.7 * y[1117] * y[1] * y[252])/(1 + (y[1117] * y[1] * y[252]))
    r357 = (13.7 * y[1117] * y[1] * y[428])/(1 + (y[1117] * y[1] * y[428]))
    r358 = (13.7 * y[1118] * y[1] * y[21])/(1 + (y[1118] * y[1] * y[21]))
    r366 = (13.7 * y[1119] * y[1] * y[298])/(1 + (y[1119] * y[1] * y[298]))
    r367 = (13.7 * y[1120] * y[1] * y[443])/(1 + (y[1120] * y[1] * y[443]))
    r368 = (13.7 * y[1121] * y[1] * y[211] )/(1 + (y[1121] * y[1] * y[211] ))
    r369 = (13.7 * y[1122] * y[1] * y[23])/(1 + (y[1122] * y[1] * y[23]))
    r370 = (13.7 * y[1123] * y[1] * y[43])/(1 + (y[1123] * y[1] * y[43]))
    r371 = (13.7 * y[1124] * y[1] * y[150])/(1 + (y[1124] * y[1] * y[150]))
    r372 = (13.7 * y[1125] * y[1] * y[227])/(1 + (y[1125] * y[1] * y[227]))
    r374 = (13.7 * y[1127] * y[1] * y[190])/(1 + (y[1127] * y[1] * y[190]))
    r375 = (13.7 * y[1128] * y[1] * y[273])/(1 + (y[1128] * y[1] * y[273]))
    r376 = (13.7 * y[1129] * y[1] * y[84])/(1 + (y[1129] * y[1] * y[84]))
    r377 = (13.7 * y[1130] * y[1] * y[48])/(1 + (y[1130] * y[1] * y[48]))
    r378 = (13.7 * y[1130] * y[1] * y[145])/(1 + (y[1130] * y[1] * y[145]))
    r379 = (13.7 * y[1131] * y[1] * y[202])/(1 + (y[1131] * y[1] * y[202]))
    r380 = (13.7 * y[1131] * y[1] * y[7])/(1 + (y[1131] * y[1] * y[7]))
    r381 = (13.7 * y[1131] * y[586] * y[1])/(1 + (y[1131] * y[586] * y[1]))
    r382 = (13.7 * y[1131] * y[1] * y[14])/(1 + (y[1131] * y[1] * y[14]))
    r383 = (13.7 * y[1131] * y[1] * y[31])/(1 + (y[1131] * y[1] * y[31]))
    r384 = (13.7 * y[1131] * y[1] * y[89])/(1 + (y[1131] * y[1] * y[89]))
    r385 = (13.7 * y[1131] * y[1] * y[83])/(1 + (y[1131] * y[1] * y[83]))
    r386 = (13.7 * y[1131] * y[1] * y[132])/(1 + (y[1131] * y[1] * y[132]))
    r387 = (13.7 * y[1131] * y[1] * y[180])/(1 + (y[1131] * y[1] * y[180]))
    r388 = (13.7 * y[1131] * y[1] * y[182])/(1 + (y[1131] * y[1] * y[182]))
    r389 = (13.7 * y[1131] * y[1] * y[243])/(1 + (y[1131] * y[1] * y[243]))
    r390 = (13.7 * y[1131] * y[1] * y[303])/(1 + (y[1131] * y[1] * y[303]))
    r391 = (13.7 * y[1131] * y[1] * y[301])/(1 + (y[1131] * y[1] * y[301]))
    r392 = (13.7 * y[1131] * y[724] * y[1])/(1 + (y[1131] * y[724] * y[1]))
    r393 = (13.7 * y[1131] * y[1] * y[710])/(1 + (y[1131] * y[1] * y[710]))
    r394 = (13.7 * y[1131] * y[1] * y[712])/(1 + (y[1131] * y[1] * y[712]))
    r395 = (13.7 * y[1132] * y[1] * y[456])/(1 + (y[1132] * y[1] * y[456]))
    r396 = (13.7 * y[1133] * y[1] * y[111])/(1 + (y[1133] * y[1] * y[111]))
    r397 = (13.7 * y[1133] * y[1] * y[181])/(1 + (y[1133] * y[1] * y[181]))
    r398 = (13.7 * y[1133] * y[723] * y[1])/(1 + (y[1133] * y[723] * y[1]))
    r399 = (13.7 * y[1134] * y[1] * y[183])/(1 + (y[1134] * y[1] * y[183]))
    r400 = (13.7 * y[1134] * y[1] * y[184])/(1 + (y[1134] * y[1] * y[184]))
    r401 = (13.7 * y[1135] * y[1] * y[299])/(1 + (y[1135] * y[1] * y[299]))
    r403 = (13.7 * y[1137] * y[1] * y[52])/(1 + (y[1137] * y[1] * y[52]))
    r406 = (13.7 * y[1140] * y[1] * y[281])/(1 + (y[1140] * y[1] * y[281]))
    r408 = (13.7 * y[1142] * y[1] * y[50])/(1 + (y[1142] * y[1] * y[50]))
    r409 = (13.7 * y[1142] * y[1] * y[509])/(1 + (y[1142] * y[1] * y[509]))
    r412 = (13.7 * y[1144] * y[1] * y[40])/(1 + (y[1144] * y[1] * y[40]))
    r418 = (13.7 * y[1144] * y[1] * y[40])/(1 + (y[1144] * y[1] * y[40]))
    r424 = (13.7 * y[1144] * y[1] * y[40])/(1 + (y[1144] * y[1] * y[40]))
    r430 = (13.7 * y[1144] * y[1] * y[40])/(1 + (y[1144] * y[1] * y[40]))
    r436 = (13.7 * y[1144] * y[1] * y[40])/(1 + (y[1144] * y[1] * y[40]))
    r492 = (13.7 * y[1149] * y[1])/(1 + (y[1149] * y[1]))
    r499 = (13.7 * y[1155] * y[1] * y[311] * y[0])/(1 + (y[1155] * y[1] * y[311] * y[0]))
    r568 = (13.7 * y[1183] * y[1] * y[0])/(1 + (y[1183] * y[1] * y[0]))
    r691 = (13.7 * y[1243] * y[1] * y[69] * y[247])/(1 + (y[1243] * y[1] * y[69] * y[247]))
    r692 = (13.7 * y[1244] * y[1] * y[61] * y[327])/(1 + (y[1244] * y[1] * y[61] * y[327]))
    r693 = (13.7 * y[1244] * y[1] * y[488] * y[327])/(1 + (y[1244] * y[1] * y[488] * y[327]))
    r694 = (13.7 * y[1245] * y[1] * y[56] * y[330])/(1 + (y[1245] * y[1] * y[56] * y[330]))
    r695 = (13.7 * y[1245] * y[1] * y[56] * y[649])/(1 + (y[1245] * y[1] * y[56] * y[649]))
    r696 = (13.7 * y[1246] * y[319] * y[43] * y[1])/(1 + (y[1246] * y[319] * y[43] * y[1]))
    r697 = (13.7 * y[1247] * y[1] * y[33] * y[322])/(1 + (y[1247] * y[1] * y[33] * y[322]))
    r698 = (13.7 * y[1247] * y[1] * y[33] * y[322])/(1 + (y[1247] * y[1] * y[33] * y[322]))
    r699 = (13.7 * y[1248] * y[1] * y[113] * y[329])/(1 + (y[1248] * y[1] * y[113] * y[329]))
    r700 = (13.7 * y[1249] * y[1] * y[78] * y[320])/(1 + (y[1249] * y[1] * y[78] * y[320]))
    r701 = (13.7 * y[1250] * y[321] * y[23] * y[1])/(1 + (y[1250] * y[321] * y[23] * y[1]))
    r702 = (13.7 * y[1251] * y[1] * y[53] * y[317])/(1 + (y[1251] * y[1] * y[53] * y[317]))
    r703 = (13.7 * y[1252] * y[1] * y[65] * y[332])/(1 + (y[1252] * y[1] * y[65] * y[332]))
    r704 = (13.7 * y[1253] * y[1] * y[66] * y[328])/(1 + (y[1253] * y[1] * y[66] * y[328]))
    r705 = (13.7 * y[1253] * y[1] * y[66] * y[328])/(1 + (y[1253] * y[1] * y[66] * y[328]))
    r706 = (13.7 * y[1254] * y[1] * y[105] * y[323])/(1 + (y[1254] * y[1] * y[105] * y[323]))
    r707 = (13.7 * y[1255] * y[1] * y[116] * y[318])/(1 + (y[1255] * y[1] * y[116] * y[318]))
    r708 = (13.7 * y[1256] * y[1] * y[125] * y[331])/(1 + (y[1256] * y[1] * y[125] * y[331]))
    r709 = (13.7 * y[1257] * y[1] * y[97] * y[325])/(1 + (y[1257] * y[1] * y[97] * y[325]))
    r710 = (13.7 * y[1258] * y[1] * y[191] * y[324])/(1 + (y[1258] * y[1] * y[191] * y[324]))
    r711 = (13.7 * y[1259] * y[1] * y[41] * y[326])/(1 + (y[1259] * y[1] * y[41] * y[326]))
    r712 = (13.7 * y[1260] * y[1] * y[36] * y[316])/(1 + (y[1260] * y[1] * y[36] * y[316]))
    r713 = (13.7 * y[1261] * y[1] * y[124] * y[333] )/(1 + (y[1261] * y[1] * y[124] * y[333] ))
    r714 = (13.7 * y[1262] * y[1] * y[30] * y[9])/(1 + (y[1262] * y[1] * y[30] * y[9]))
    r716 = (13.7 * y[1262] * y[1] * y[30])/(1 + (y[1262] * y[1] * y[30]))
    r717 = (13.7 * y[1262] * y[1] * y[119] * y[9])/(1 + (y[1262] * y[1] * y[119] * y[9]))
    r719 = (13.7 * y[1262] * y[1] * y[119])/(1 + (y[1262] * y[1] * y[119]))
    r720 = (13.7 * y[1263] * y[1] * y[633] * y[632])/(1 + (y[1263] * y[1] * y[633] * y[632]))
    r721 = (13.7 * y[1263] * y[1] * y[633] * y[718])/(1 + (y[1263] * y[1] * y[633] * y[718]))
    r722 = (13.7 * y[1263] * y[1] * y[633] * y[719])/(1 + (y[1263] * y[1] * y[633] * y[719]))
    r723 = (13.7 * y[1263] * y[1] * y[633])/(1 + (y[1263] * y[1] * y[633]))
    r725 = (13.7 * y[1263] * y[1] * y[571] * y[719] )/(1 + (y[1263] * y[1] * y[571] * y[719] ))
    r726 = (13.7 * y[1264] * y[1] * y[214] * y[79])/(1 + (y[1264] * y[1] * y[214] * y[79]))
    r727 = (13.7 * y[1265] * y[1] * y[240] * y[236])/(1 + (y[1265] * y[1] * y[240] * y[236]))
    r728 = (13.7 * y[1266] * y[1] * y[103])/(1 + (y[1266] * y[1] * y[103]))
    r730 = (13.7 * y[1268] * y[1] * y[472] * y[43])/(1 + (y[1268] * y[1] * y[472] * y[43]))
    r731 = (13.7 * y[1269] * y[1] * y[271] * y[36])/(1 + (y[1269] * y[1] * y[271] * y[36]))
    r732 = (13.7 * y[1270] * y[1] * y[288] * y[135])/(1 + (y[1270] * y[1] * y[288] * y[135]))
    r733 = (13.7 * y[1271] * y[1] * y[464])/(1 + (y[1271] * y[1] * y[464]))
    r734 = (13.7 * y[1272] * y[1] * y[401] * y[67])/(1 + (y[1272] * y[1] * y[401] * y[67]))
    r735 = (13.7 * y[1273] * y[1] * y[382] * y[33])/(1 + (y[1273] * y[1] * y[382] * y[33]))
    r736 = (13.7 * y[1274] * y[1] * y[95] * y[471])/(1 + (y[1274] * y[1] * y[95] * y[471]))
    r737 = (13.7 * y[1274] * y[1] * y[95])/(1 + (y[1274] * y[1] * y[95]))
    r739 = (13.7 * y[1275] * y[671] * y[41] * y[1])/(1 + (y[1275] * y[671] * y[41] * y[1]))
    r741 = (13.7 * y[1276] * y[1] * y[63] * y[13])/(1 + (y[1276] * y[1] * y[63] * y[13]))
    r742 = (13.7 * y[1276] * y[1] * y[63] * y[55] * y[0])/(1 + (y[1276] * y[1] * y[63] * y[55] * y[0]))
    r743 = (13.7 * y[1277] * y[678] * y[13] * y[1])/(1 + (y[1277] * y[678] * y[13] * y[1]))
    r745 = (13.7 * y[1279] * y[1] * y[171] * y[43])/(1 + (y[1279] * y[1] * y[171] * y[43]))
    r746 = (13.7 * y[1280] * y[1] * y[254] * y[55] * y[0])/(1 + (y[1280] * y[1] * y[254] * y[55] * y[0]))
    r747 = (13.7 * y[1280] * y[1] * y[254] * y[13] )/(1 + (y[1280] * y[1] * y[254] * y[13] ))
    r749 = (13.7 * y[1281] * y[1] * y[230] * y[13])/(1 + (y[1281] * y[1] * y[230] * y[13]))
    r750 = (13.7 * y[1281] * y[1] * y[230] * y[55] * y[0])/(1 + (y[1281] * y[1] * y[230] * y[55] * y[0]))
    r751 = (13.7 * y[1281] * y[646] * y[1] * y[55] * y[0])/(1 + (y[1281] * y[646] * y[1] * y[55] * y[0]))
    r753 = (13.7 * y[1282] * y[1] * y[43] * y[13])/(1 + (y[1282] * y[1] * y[43] * y[13]))
    r754 = (13.7 * y[1282] * y[1] * y[43] * y[55] * y[0])/(1 + (y[1282] * y[1] * y[43] * y[55] * y[0]))
    r756 = (13.7 * y[1283] * y[1] * y[55] * y[165] * y[0])/(1 + (y[1283] * y[1] * y[55] * y[165] * y[0]))
    r757 = (13.7 * y[1283] * y[1] * y[314])/(1 + (y[1283] * y[1] * y[314]))
    r758 = (13.7 * y[1283] * y[1] * y[165])/(1 + (y[1283] * y[1] * y[165]))
    r760 = (13.7 * y[1283] * y[1] * y[165] * y[13])/(1 + (y[1283] * y[1] * y[165] * y[13]))
    r762 = (13.7 * y[1283] * y[1] * y[55] * y[165] * y[0])/(1 + (y[1283] * y[1] * y[55] * y[165] * y[0]))
    r763 = (13.7 * y[1283] * y[1] * y[314])/(1 + (y[1283] * y[1] * y[314]))
    r764 = (13.7 * y[1283] * y[1] * y[165])/(1 + (y[1283] * y[1] * y[165]))
    r766 = (13.7 * y[1283] * y[1] * y[165] * y[13])/(1 + (y[1283] * y[1] * y[165] * y[13]))
    r767 = (13.7 * y[1284] * y[1] * y[21] * y[165])/(1 + (y[1284] * y[1] * y[21] * y[165]))
    return (r80 + r303 + r331 + r380) - (r87 + r88 + r93 + r94 + r95 + r100 + r332 + r349 + r350 + r351 + r352 + r353 + r354 + r355 + r356 + r357 + r358 + r366 + r367 + r368 + r369 + r370 + r371 + r372 + r374 + r375 + r376 + r377 + r378 + r379 + r380 + r381 + r382 + r383 + r384 + r385 + r386 + r387 + r388 + r389 + r390 + r391 + r392 + r393 + r394 + r395 + r396 + r397 + r398 + r399 + r400 + r401 + r403 + r406 + r408 + r409 + r412 + r418 + r424 + r430 + r436 + r492 + r499 + r568 + r691 + r692 + r693 + r694 + r695 + r696 + r697 + r698 + r699 + r700 + r701 + r702 + r703 + r704 + r705 + r706 + r707 + r708 + r709 + r710 + r711 + r712 + r713 + r714 + r716 + r717 + r719 + r720 + r721 + r722 + r723 + r725 + r726 + r727 + r728 + r730 + r731 + r732 + r733 + r734 + r735 + r736 + r737 + r739 + r741 + r742 + r743 + r745 + r746 + r747 + r749 + r750 + r751 + r753 + r754 + r756 + r757 + r758 + r760 + r762 + r763 + r764 + r766 + r767)
 
def C00003(t, y):
    r11 = (13.7 * y[1010] * y[580] * y[3] * y[67])/(1 + (y[1010] * y[580] * y[3] * y[67]))
    r15 = (13.7 * y[1010] * y[634] * y[3] * y[67])/(1 + (y[1010] * y[634] * y[3] * y[67]))
    r19 = (13.7 * y[1010] * y[578] * y[3] * y[67])/(1 + (y[1010] * y[578] * y[3] * y[67]))
    r53 = (13.7 * y[1017] * y[87] * y[10] * y[3] * y[67])/(1 + (y[1017] * y[87] * y[10] * y[3] * y[67]))
    r746 = (13.7 * y[1280] * y[1] * y[254] * y[55] * y[0])/(1 + (y[1280] * y[1] * y[254] * y[55] * y[0]))
    r747 = (13.7 * y[1280] * y[1] * y[254] * y[13] )/(1 + (y[1280] * y[1] * y[254] * y[13] ))
    r1 = (13.7 * y[1010] * y[137] * y[2])/(1 + (y[1010] * y[137] * y[2]))
    r2 = (13.7 * y[1010] * y[208] * y[2])/(1 + (y[1010] * y[208] * y[2]))
    r3 = (13.7 * y[1010] * y[209] * y[2])/(1 + (y[1010] * y[209] * y[2]))
    r4 = (13.7 * y[1010] * y[245] * y[2])/(1 + (y[1010] * y[245] * y[2]))
    r5 = (13.7 * y[1010] * y[496] * y[2])/(1 + (y[1010] * y[496] * y[2]))
    r6 = (13.7 * y[1010] * y[499] * y[2])/(1 + (y[1010] * y[499] * y[2]))
    r7 = (13.7 * y[1010] * y[575] * y[2])/(1 + (y[1010] * y[575] * y[2]))
    r8 = (13.7 * y[1010] * y[576] * y[2])/(1 + (y[1010] * y[576] * y[2]))
    r9 = (13.7 * y[1010] * y[606] * y[2])/(1 + (y[1010] * y[606] * y[2]))
    r10 = (13.7 * y[1010] * y[372] * y[2])/(1 + (y[1010] * y[372] * y[2]))
    r12 = (13.7 * y[1010] * y[640] * y[2])/(1 + (y[1010] * y[640] * y[2]))
    r13 = (13.7 * y[1010] * y[90] * y[2])/(1 + (y[1010] * y[90] * y[2]))
    r16 = (13.7 * y[1010] * y[315] * y[2])/(1 + (y[1010] * y[315] * y[2]))
    r17 = (13.7 * y[1010] * y[642] * y[2])/(1 + (y[1010] * y[642] * y[2]))
    r18 = (13.7 * y[1010] * y[193] * y[2])/(1 + (y[1010] * y[193] * y[2]))
    r44 = (13.7 * y[1014] * y[101] * y[2] * y[0])/(1 + (y[1014] * y[101] * y[2] * y[0]))
    r45 = (13.7 * y[1014] * y[465] * y[2] * y[0])/(1 + (y[1014] * y[465] * y[2] * y[0]))
    r46 = (13.7 * y[1015] * y[255] * y[2] * y[0])/(1 + (y[1015] * y[255] * y[2] * y[0]))
    r47 = (13.7 * y[1015] * y[336] * y[0] * y[2])/(1 + (y[1015] * y[336] * y[0] * y[2]))
    r48 = (13.7 * y[1015] * y[255] * y[2])/(1 + (y[1015] * y[255] * y[2]))
    r51 = (13.7 * y[1017] * y[451] * y[2])/(1 + (y[1017] * y[451] * y[2]))
    r52 = (13.7 * y[1017] * y[451] * y[2])/(1 + (y[1017] * y[451] * y[2]))
    r69 = (13.7 * y[1020] * y[426] * y[2] * y[0])/(1 + (y[1020] * y[426] * y[2] * y[0]))
    r101 = (13.7 * y[1026] * y[70] * y[9] * y[2])/(1 + (y[1026] * y[70] * y[9] * y[2]))
    r102 = (13.7 * y[1026] * y[307] * y[9] * y[2])/(1 + (y[1026] * y[307] * y[9] * y[2]))
    r113 = (13.7 * y[1034] * y[173] * y[2])/(1 + (y[1034] * y[173] * y[2]))
    r115 = (13.7 * y[1035] * y[271] * y[2])/(1 + (y[1035] * y[271] * y[2]))
    r116 = (13.7 * y[1036] * y[36] * y[2] * y[0])/(1 + (y[1036] * y[36] * y[2] * y[0]))
    r117 = (13.7 * y[1036] * y[484] * y[0] * y[2])/(1 + (y[1036] * y[484] * y[0] * y[2]))
    r119 = (13.7 * y[1036] * y[33] * y[0] * y[2])/(1 + (y[1036] * y[33] * y[0] * y[2]))
    r124 = (13.7 * y[1038] * y[484] * y[0] * y[2])/(1 + (y[1038] * y[484] * y[0] * y[2]))
    r130 = (13.7 * y[1041] * y[113] * y[2])/(1 + (y[1041] * y[113] * y[2]))
    r132 = (13.7 * y[1041] * y[282] * y[2])/(1 + (y[1041] * y[282] * y[2]))
    r135 = (13.7 * y[1042] * y[197] * y[2])/(1 + (y[1042] * y[197] * y[2]))
    r138 = (13.7 * y[1044] * y[13] * y[2] * y[0])/(1 + (y[1044] * y[13] * y[2] * y[0]))
    r139 = (13.7 * y[1045] * y[654] * y[2])/(1 + (y[1045] * y[654] * y[2]))
    r140 = (13.7 * y[1045] * y[374] * y[2])/(1 + (y[1045] * y[374] * y[2]))
    r141 = (13.7 * y[1045] * y[624] * y[2])/(1 + (y[1045] * y[624] * y[2]))
    r142 = (13.7 * y[1045] * y[222] * y[2])/(1 + (y[1045] * y[222] * y[2]))
    r573 = (13.7 * y[1183] * y[2] * y[0])/(1 + (y[1183] * y[2] * y[0]))
    r768 = (13.7 * y[1285] * y[2] * y[34] * y[343])/(1 + (y[1285] * y[2] * y[34] * y[343]))
    return (r11 + r15 + r19 + r53 + r746 + r747) - (r1 + r2 + r3 + r4 + r5 + r6 + r7 + r8 + r9 + r10 + r12 + r13 + r16 + r17 + r18 + r44 + r45 + r46 + r47 + r48 + r51 + r52 + r69 + r101 + r102 + r113 + r115 + r116 + r117 + r119 + r124 + r130 + r132 + r135 + r138 + r139 + r140 + r141 + r142 + r573 + r768)
 
def C00004(t, y):
    r1 = (13.7 * y[1010] * y[137] * y[2])/(1 + (y[1010] * y[137] * y[2]))
    r2 = (13.7 * y[1010] * y[208] * y[2])/(1 + (y[1010] * y[208] * y[2]))
    r3 = (13.7 * y[1010] * y[209] * y[2])/(1 + (y[1010] * y[209] * y[2]))
    r4 = (13.7 * y[1010] * y[245] * y[2])/(1 + (y[1010] * y[245] * y[2]))
    r5 = (13.7 * y[1010] * y[496] * y[2])/(1 + (y[1010] * y[496] * y[2]))
    r6 = (13.7 * y[1010] * y[499] * y[2])/(1 + (y[1010] * y[499] * y[2]))
    r7 = (13.7 * y[1010] * y[575] * y[2])/(1 + (y[1010] * y[575] * y[2]))
    r8 = (13.7 * y[1010] * y[576] * y[2])/(1 + (y[1010] * y[576] * y[2]))
    r9 = (13.7 * y[1010] * y[606] * y[2])/(1 + (y[1010] * y[606] * y[2]))
    r10 = (13.7 * y[1010] * y[372] * y[2])/(1 + (y[1010] * y[372] * y[2]))
    r12 = (13.7 * y[1010] * y[640] * y[2])/(1 + (y[1010] * y[640] * y[2]))
    r13 = (13.7 * y[1010] * y[90] * y[2])/(1 + (y[1010] * y[90] * y[2]))
    r16 = (13.7 * y[1010] * y[315] * y[2])/(1 + (y[1010] * y[315] * y[2]))
    r17 = (13.7 * y[1010] * y[642] * y[2])/(1 + (y[1010] * y[642] * y[2]))
    r18 = (13.7 * y[1010] * y[193] * y[2])/(1 + (y[1010] * y[193] * y[2]))
    r44 = (13.7 * y[1014] * y[101] * y[2] * y[0])/(1 + (y[1014] * y[101] * y[2] * y[0]))
    r45 = (13.7 * y[1014] * y[465] * y[2] * y[0])/(1 + (y[1014] * y[465] * y[2] * y[0]))
    r46 = (13.7 * y[1015] * y[255] * y[2] * y[0])/(1 + (y[1015] * y[255] * y[2] * y[0]))
    r47 = (13.7 * y[1015] * y[336] * y[0] * y[2])/(1 + (y[1015] * y[336] * y[0] * y[2]))
    r48 = (13.7 * y[1015] * y[255] * y[2])/(1 + (y[1015] * y[255] * y[2]))
    r51 = (13.7 * y[1017] * y[451] * y[2])/(1 + (y[1017] * y[451] * y[2]))
    r52 = (13.7 * y[1017] * y[451] * y[2])/(1 + (y[1017] * y[451] * y[2]))
    r69 = (13.7 * y[1020] * y[426] * y[2] * y[0])/(1 + (y[1020] * y[426] * y[2] * y[0]))
    r101 = (13.7 * y[1026] * y[70] * y[9] * y[2])/(1 + (y[1026] * y[70] * y[9] * y[2]))
    r102 = (13.7 * y[1026] * y[307] * y[9] * y[2])/(1 + (y[1026] * y[307] * y[9] * y[2]))
    r113 = (13.7 * y[1034] * y[173] * y[2])/(1 + (y[1034] * y[173] * y[2]))
    r115 = (13.7 * y[1035] * y[271] * y[2])/(1 + (y[1035] * y[271] * y[2]))
    r116 = (13.7 * y[1036] * y[36] * y[2] * y[0])/(1 + (y[1036] * y[36] * y[2] * y[0]))
    r117 = (13.7 * y[1036] * y[484] * y[0] * y[2])/(1 + (y[1036] * y[484] * y[0] * y[2]))
    r119 = (13.7 * y[1036] * y[33] * y[0] * y[2])/(1 + (y[1036] * y[33] * y[0] * y[2]))
    r124 = (13.7 * y[1038] * y[484] * y[0] * y[2])/(1 + (y[1038] * y[484] * y[0] * y[2]))
    r130 = (13.7 * y[1041] * y[113] * y[2])/(1 + (y[1041] * y[113] * y[2]))
    r132 = (13.7 * y[1041] * y[282] * y[2])/(1 + (y[1041] * y[282] * y[2]))
    r135 = (13.7 * y[1042] * y[197] * y[2])/(1 + (y[1042] * y[197] * y[2]))
    r138 = (13.7 * y[1044] * y[13] * y[2] * y[0])/(1 + (y[1044] * y[13] * y[2] * y[0]))
    r139 = (13.7 * y[1045] * y[654] * y[2])/(1 + (y[1045] * y[654] * y[2]))
    r140 = (13.7 * y[1045] * y[374] * y[2])/(1 + (y[1045] * y[374] * y[2]))
    r141 = (13.7 * y[1045] * y[624] * y[2])/(1 + (y[1045] * y[624] * y[2]))
    r142 = (13.7 * y[1045] * y[222] * y[2])/(1 + (y[1045] * y[222] * y[2]))
    r11 = (13.7 * y[1010] * y[580] * y[3] * y[67])/(1 + (y[1010] * y[580] * y[3] * y[67]))
    r15 = (13.7 * y[1010] * y[634] * y[3] * y[67])/(1 + (y[1010] * y[634] * y[3] * y[67]))
    r19 = (13.7 * y[1010] * y[578] * y[3] * y[67])/(1 + (y[1010] * y[578] * y[3] * y[67]))
    r53 = (13.7 * y[1017] * y[87] * y[10] * y[3] * y[67])/(1 + (y[1017] * y[87] * y[10] * y[3] * y[67]))
    return (r1 + r2 + r3 + r4 + r5 + r6 + r7 + r8 + r9 + r10 + r12 + r13 + r16 + r17 + r18 + r44 + r45 + r46 + r47 + r48 + r51 + r52 + r69 + r101 + r102 + r113 + r115 + r116 + r117 + r119 + r124 + r130 + r132 + r135 + r138 + r139 + r140 + r141 + r142) - (r11 + r15 + r19 + r53)
 
def C00005(t, y):
    r14 = (13.7 * y[1010] * y[90] * y[5])/(1 + (y[1010] * y[90] * y[5]))
    r20 = (13.7 * y[1011] * y[297] * y[5])/(1 + (y[1011] * y[297] * y[5]))
    r21 = (13.7 * y[1011] * y[459] * y[5])/(1 + (y[1011] * y[459] * y[5]))
    r22 = (13.7 * y[1011] * y[460] * y[5])/(1 + (y[1011] * y[460] * y[5]))
    r23 = (13.7 * y[1011] * y[461] * y[5])/(1 + (y[1011] * y[461] * y[5]))
    r24 = (13.7 * y[1011] * y[463] * y[5])/(1 + (y[1011] * y[463] * y[5]))
    r25 = (13.7 * y[1011] * y[468] * y[5])/(1 + (y[1011] * y[468] * y[5]))
    r26 = (13.7 * y[1011] * y[517] * y[5])/(1 + (y[1011] * y[517] * y[5]))
    r27 = (13.7 * y[1011] * y[527] * y[5])/(1 + (y[1011] * y[527] * y[5]))
    r31 = (13.7 * y[1011] * y[297] * y[5])/(1 + (y[1011] * y[297] * y[5]))
    r32 = (13.7 * y[1011] * y[459] * y[5])/(1 + (y[1011] * y[459] * y[5]))
    r33 = (13.7 * y[1011] * y[460] * y[5])/(1 + (y[1011] * y[460] * y[5]))
    r34 = (13.7 * y[1011] * y[461] * y[5])/(1 + (y[1011] * y[461] * y[5]))
    r35 = (13.7 * y[1011] * y[463] * y[5])/(1 + (y[1011] * y[463] * y[5]))
    r36 = (13.7 * y[1011] * y[468] * y[5])/(1 + (y[1011] * y[468] * y[5]))
    r37 = (13.7 * y[1011] * y[517] * y[5])/(1 + (y[1011] * y[517] * y[5]))
    r38 = (13.7 * y[1011] * y[527] * y[5])/(1 + (y[1011] * y[527] * y[5]))
    r42 = (13.7 * y[1012] * y[393] * y[5])/(1 + (y[1012] * y[393] * y[5]))
    r43 = (13.7 * y[1013] * y[454] * y[5])/(1 + (y[1013] * y[454] * y[5]))
    r49 = (13.7 * y[1016] * y[589] * y[5])/(1 + (y[1016] * y[589] * y[5]))
    r54 = (13.7 * y[1018] * y[441] * y[5])/(1 + (y[1018] * y[441] * y[5]))
    r56 = (13.7 * y[1018] * y[441] * y[5])/(1 + (y[1018] * y[441] * y[5]))
    r57 = (13.7 * y[1018] * y[552] * y[5])/(1 + (y[1018] * y[552] * y[5]))
    r70 = (13.7 * y[1020] * y[426] * y[5] * y[0])/(1 + (y[1020] * y[426] * y[5] * y[0]))
    r103 = (13.7 * y[1027] * y[198] * y[8] * y[5])/(1 + (y[1027] * y[198] * y[8] * y[5]))
    r104 = (13.7 * y[1028] * y[293] * y[8] * y[5])/(1 + (y[1028] * y[293] * y[8] * y[5]))
    r105 = (13.7 * y[1029] * y[283] * y[8] * y[5])/(1 + (y[1029] * y[283] * y[8] * y[5]))
    r114 = (13.7 * y[1035] * y[271] * y[5])/(1 + (y[1035] * y[271] * y[5]))
    r118 = (13.7 * y[1036] * y[484] * y[0] * y[5])/(1 + (y[1036] * y[484] * y[0] * y[5]))
    r120 = (13.7 * y[1037] * y[23] * y[5])/(1 + (y[1037] * y[23] * y[5]))
    r121 = (13.7 * y[1037] * y[23] * y[5] * y[0])/(1 + (y[1037] * y[23] * y[5] * y[0]))
    r123 = (13.7 * y[1038] * y[23] * y[5] * y[0])/(1 + (y[1038] * y[23] * y[5] * y[0]))
    r125 = (13.7 * y[1038] * y[484] * y[0] * y[5])/(1 + (y[1038] * y[484] * y[0] * y[5]))
    r131 = (13.7 * y[1041] * y[113] * y[5])/(1 + (y[1041] * y[113] * y[5]))
    r133 = (13.7 * y[1041] * y[282] * y[5])/(1 + (y[1041] * y[282] * y[5]))
    r134 = (13.7 * y[1042] * y[197] * y[5])/(1 + (y[1042] * y[197] * y[5]))
    r136 = (13.7 * y[1043] * y[652] * y[5])/(1 + (y[1043] * y[652] * y[5]))
    r143 = (13.7 * y[1046] * y[174] * y[5])/(1 + (y[1046] * y[174] * y[5]))
    r144 = (13.7 * y[1046] * y[78] * y[44] * y[5])/(1 + (y[1046] * y[78] * y[44] * y[5]))
    r145 = (13.7 * y[1046] * y[311] * y[5] * y[0])/(1 + (y[1046] * y[311] * y[5] * y[0]))
    r28 = (13.7 * y[1011] * y[627] * y[4] * y[67])/(1 + (y[1011] * y[627] * y[4] * y[67]))
    r29 = (13.7 * y[1011] * y[680] * y[4] * y[67])/(1 + (y[1011] * y[680] * y[4] * y[67]))
    r30 = (13.7 * y[1011] * y[684] * y[4] * y[67])/(1 + (y[1011] * y[684] * y[4] * y[67]))
    r39 = (13.7 * y[1011] * y[627] * y[4] * y[67])/(1 + (y[1011] * y[627] * y[4] * y[67]))
    r40 = (13.7 * y[1011] * y[680] * y[4] * y[67])/(1 + (y[1011] * y[680] * y[4] * y[67]))
    r41 = (13.7 * y[1011] * y[684] * y[4] * y[67])/(1 + (y[1011] * y[684] * y[4] * y[67]))
    r55 = (13.7 * y[1018] * y[260] * y[4] * y[67])/(1 + (y[1018] * y[260] * y[4] * y[67]))
    r106 = (13.7 * y[1030] * y[376] * y[4] * y[67])/(1 + (y[1030] * y[376] * y[4] * y[67]))
    r146 = (13.7 * y[1046] * y[4] * y[67] * y[668])/(1 + (y[1046] * y[4] * y[67] * y[668]))
    return (r14 + r20 + r21 + r22 + r23 + r24 + r25 + r26 + r27 + r31 + r32 + r33 + r34 + r35 + r36 + r37 + r38 + r42 + r43 + r49 + r54 + r56 + r57 + r70 + r103 + r104 + r105 + r114 + r118 + r120 + r121 + r123 + r125 + r131 + r133 + r134 + r136 + r143 + r144 + r145) - (r28 + r29 + r30 + r39 + r40 + r41 + r55 + r106 + r146)
 
def C00006(t, y):
    r28 = (13.7 * y[1011] * y[627] * y[4] * y[67])/(1 + (y[1011] * y[627] * y[4] * y[67]))
    r29 = (13.7 * y[1011] * y[680] * y[4] * y[67])/(1 + (y[1011] * y[680] * y[4] * y[67]))
    r30 = (13.7 * y[1011] * y[684] * y[4] * y[67])/(1 + (y[1011] * y[684] * y[4] * y[67]))
    r39 = (13.7 * y[1011] * y[627] * y[4] * y[67])/(1 + (y[1011] * y[627] * y[4] * y[67]))
    r40 = (13.7 * y[1011] * y[680] * y[4] * y[67])/(1 + (y[1011] * y[680] * y[4] * y[67]))
    r41 = (13.7 * y[1011] * y[684] * y[4] * y[67])/(1 + (y[1011] * y[684] * y[4] * y[67]))
    r55 = (13.7 * y[1018] * y[260] * y[4] * y[67])/(1 + (y[1018] * y[260] * y[4] * y[67]))
    r106 = (13.7 * y[1030] * y[376] * y[4] * y[67])/(1 + (y[1030] * y[376] * y[4] * y[67]))
    r146 = (13.7 * y[1046] * y[4] * y[67] * y[668])/(1 + (y[1046] * y[4] * y[67] * y[668]))
    r14 = (13.7 * y[1010] * y[90] * y[5])/(1 + (y[1010] * y[90] * y[5]))
    r20 = (13.7 * y[1011] * y[297] * y[5])/(1 + (y[1011] * y[297] * y[5]))
    r21 = (13.7 * y[1011] * y[459] * y[5])/(1 + (y[1011] * y[459] * y[5]))
    r22 = (13.7 * y[1011] * y[460] * y[5])/(1 + (y[1011] * y[460] * y[5]))
    r23 = (13.7 * y[1011] * y[461] * y[5])/(1 + (y[1011] * y[461] * y[5]))
    r24 = (13.7 * y[1011] * y[463] * y[5])/(1 + (y[1011] * y[463] * y[5]))
    r25 = (13.7 * y[1011] * y[468] * y[5])/(1 + (y[1011] * y[468] * y[5]))
    r26 = (13.7 * y[1011] * y[517] * y[5])/(1 + (y[1011] * y[517] * y[5]))
    r27 = (13.7 * y[1011] * y[527] * y[5])/(1 + (y[1011] * y[527] * y[5]))
    r31 = (13.7 * y[1011] * y[297] * y[5])/(1 + (y[1011] * y[297] * y[5]))
    r32 = (13.7 * y[1011] * y[459] * y[5])/(1 + (y[1011] * y[459] * y[5]))
    r33 = (13.7 * y[1011] * y[460] * y[5])/(1 + (y[1011] * y[460] * y[5]))
    r34 = (13.7 * y[1011] * y[461] * y[5])/(1 + (y[1011] * y[461] * y[5]))
    r35 = (13.7 * y[1011] * y[463] * y[5])/(1 + (y[1011] * y[463] * y[5]))
    r36 = (13.7 * y[1011] * y[468] * y[5])/(1 + (y[1011] * y[468] * y[5]))
    r37 = (13.7 * y[1011] * y[517] * y[5])/(1 + (y[1011] * y[517] * y[5]))
    r38 = (13.7 * y[1011] * y[527] * y[5])/(1 + (y[1011] * y[527] * y[5]))
    r42 = (13.7 * y[1012] * y[393] * y[5])/(1 + (y[1012] * y[393] * y[5]))
    r43 = (13.7 * y[1013] * y[454] * y[5])/(1 + (y[1013] * y[454] * y[5]))
    r49 = (13.7 * y[1016] * y[589] * y[5])/(1 + (y[1016] * y[589] * y[5]))
    r54 = (13.7 * y[1018] * y[441] * y[5])/(1 + (y[1018] * y[441] * y[5]))
    r56 = (13.7 * y[1018] * y[441] * y[5])/(1 + (y[1018] * y[441] * y[5]))
    r57 = (13.7 * y[1018] * y[552] * y[5])/(1 + (y[1018] * y[552] * y[5]))
    r70 = (13.7 * y[1020] * y[426] * y[5] * y[0])/(1 + (y[1020] * y[426] * y[5] * y[0]))
    r103 = (13.7 * y[1027] * y[198] * y[8] * y[5])/(1 + (y[1027] * y[198] * y[8] * y[5]))
    r104 = (13.7 * y[1028] * y[293] * y[8] * y[5])/(1 + (y[1028] * y[293] * y[8] * y[5]))
    r105 = (13.7 * y[1029] * y[283] * y[8] * y[5])/(1 + (y[1029] * y[283] * y[8] * y[5]))
    r114 = (13.7 * y[1035] * y[271] * y[5])/(1 + (y[1035] * y[271] * y[5]))
    r118 = (13.7 * y[1036] * y[484] * y[0] * y[5])/(1 + (y[1036] * y[484] * y[0] * y[5]))
    r120 = (13.7 * y[1037] * y[23] * y[5])/(1 + (y[1037] * y[23] * y[5]))
    r121 = (13.7 * y[1037] * y[23] * y[5] * y[0])/(1 + (y[1037] * y[23] * y[5] * y[0]))
    r123 = (13.7 * y[1038] * y[23] * y[5] * y[0])/(1 + (y[1038] * y[23] * y[5] * y[0]))
    r125 = (13.7 * y[1038] * y[484] * y[0] * y[5])/(1 + (y[1038] * y[484] * y[0] * y[5]))
    r131 = (13.7 * y[1041] * y[113] * y[5])/(1 + (y[1041] * y[113] * y[5]))
    r133 = (13.7 * y[1041] * y[282] * y[5])/(1 + (y[1041] * y[282] * y[5]))
    r134 = (13.7 * y[1042] * y[197] * y[5])/(1 + (y[1042] * y[197] * y[5]))
    r136 = (13.7 * y[1043] * y[652] * y[5])/(1 + (y[1043] * y[652] * y[5]))
    r143 = (13.7 * y[1046] * y[174] * y[5])/(1 + (y[1046] * y[174] * y[5]))
    r144 = (13.7 * y[1046] * y[78] * y[44] * y[5])/(1 + (y[1046] * y[78] * y[44] * y[5]))
    r145 = (13.7 * y[1046] * y[311] * y[5] * y[0])/(1 + (y[1046] * y[311] * y[5] * y[0]))
    return (r28 + r29 + r30 + r39 + r40 + r41 + r55 + r106 + r146) - (r14 + r20 + r21 + r22 + r23 + r24 + r25 + r26 + r27 + r31 + r32 + r33 + r34 + r35 + r36 + r37 + r38 + r42 + r43 + r49 + r54 + r56 + r57 + r70 + r103 + r104 + r105 + r114 + r118 + r120 + r121 + r123 + r125 + r131 + r133 + r134 + r136 + r143 + r144 + r145)
 
def C00007(t, y):
    r126 = (13.7 * y[1039] * y[43] * y[6])/(1 + (y[1039] * y[43] * y[6]))
    r127 = (13.7 * y[1039] * y[43] * y[0] * y[6])/(1 + (y[1039] * y[43] * y[0] * y[6]))
    return (0) - (r126 + r127)
 
def C00008(t, y):
    r72 = (13.7 * y[1021] * y[132] * y[175] * y[0])/(1 + (y[1021] * y[132] * y[175] * y[0]))
    r87 = (13.7 * y[1025] * y[1] * y[242] * y[107] * y[67] * y[0])/(1 + (y[1025] * y[1] * y[242] * y[107] * y[67] * y[0]))
    r88 = (13.7 * y[1025] * y[1] * y[0] * y[107])/(1 + (y[1025] * y[1] * y[0] * y[107]))
    r93 = (13.7 * y[1025] * y[313] * y[107] * y[67] * y[1] * y[0])/(1 + (y[1025] * y[313] * y[107] * y[67] * y[1] * y[0]))
    r94 = (13.7 * y[1025] * y[1] * y[242] * y[107] * y[67] * y[0])/(1 + (y[1025] * y[1] * y[242] * y[107] * y[67] * y[0]))
    r95 = (13.7 * y[1025] * y[1] * y[0] * y[107])/(1 + (y[1025] * y[1] * y[0] * y[107]))
    r100 = (13.7 * y[1025] * y[313] * y[107] * y[67] * y[1] * y[0])/(1 + (y[1025] * y[313] * y[107] * y[67] * y[1] * y[0]))
    r349 = (13.7 * y[1112] * y[590] * y[1])/(1 + (y[1112] * y[590] * y[1]))
    r350 = (13.7 * y[1113] * y[1] * y[258])/(1 + (y[1113] * y[1] * y[258]))
    r351 = (13.7 * y[1114] * y[1] * y[136])/(1 + (y[1114] * y[1] * y[136]))
    r352 = (13.7 * y[1114] * y[1] * y[503])/(1 + (y[1114] * y[1] * y[503]))
    r353 = (13.7 * y[1115] * y[1] * y[155])/(1 + (y[1115] * y[1] * y[155]))
    r354 = (13.7 * y[1116] * y[1] * y[91])/(1 + (y[1116] * y[1] * y[91]))
    r355 = (13.7 * y[1117] * y[1] * y[256])/(1 + (y[1117] * y[1] * y[256]))
    r356 = (13.7 * y[1117] * y[1] * y[252])/(1 + (y[1117] * y[1] * y[252]))
    r357 = (13.7 * y[1117] * y[1] * y[428])/(1 + (y[1117] * y[1] * y[428]))
    r358 = (13.7 * y[1118] * y[1] * y[21])/(1 + (y[1118] * y[1] * y[21]))
    r366 = (13.7 * y[1119] * y[1] * y[298])/(1 + (y[1119] * y[1] * y[298]))
    r367 = (13.7 * y[1120] * y[1] * y[443])/(1 + (y[1120] * y[1] * y[443]))
    r369 = (13.7 * y[1122] * y[1] * y[23])/(1 + (y[1122] * y[1] * y[23]))
    r370 = (13.7 * y[1123] * y[1] * y[43])/(1 + (y[1123] * y[1] * y[43]))
    r371 = (13.7 * y[1124] * y[1] * y[150])/(1 + (y[1124] * y[1] * y[150]))
    r372 = (13.7 * y[1125] * y[1] * y[227])/(1 + (y[1125] * y[1] * y[227]))
    r374 = (13.7 * y[1127] * y[1] * y[190])/(1 + (y[1127] * y[1] * y[190]))
    r375 = (13.7 * y[1128] * y[1] * y[273])/(1 + (y[1128] * y[1] * y[273]))
    r376 = (13.7 * y[1129] * y[1] * y[84])/(1 + (y[1129] * y[1] * y[84]))
    r377 = (13.7 * y[1130] * y[1] * y[48])/(1 + (y[1130] * y[1] * y[48]))
    r378 = (13.7 * y[1130] * y[1] * y[145])/(1 + (y[1130] * y[1] * y[145]))
    r379 = (13.7 * y[1131] * y[1] * y[202])/(1 + (y[1131] * y[1] * y[202]))
    r380 = (13.7 * y[1131] * y[1] * y[7])/(1 + (y[1131] * y[1] * y[7]))
    r381 = (13.7 * y[1131] * y[586] * y[1])/(1 + (y[1131] * y[586] * y[1]))
    r382 = (13.7 * y[1131] * y[1] * y[14])/(1 + (y[1131] * y[1] * y[14]))
    r383 = (13.7 * y[1131] * y[1] * y[31])/(1 + (y[1131] * y[1] * y[31]))
    r384 = (13.7 * y[1131] * y[1] * y[89])/(1 + (y[1131] * y[1] * y[89]))
    r385 = (13.7 * y[1131] * y[1] * y[83])/(1 + (y[1131] * y[1] * y[83]))
    r386 = (13.7 * y[1131] * y[1] * y[132])/(1 + (y[1131] * y[1] * y[132]))
    r387 = (13.7 * y[1131] * y[1] * y[180])/(1 + (y[1131] * y[1] * y[180]))
    r388 = (13.7 * y[1131] * y[1] * y[182])/(1 + (y[1131] * y[1] * y[182]))
    r389 = (13.7 * y[1131] * y[1] * y[243])/(1 + (y[1131] * y[1] * y[243]))
    r390 = (13.7 * y[1131] * y[1] * y[303])/(1 + (y[1131] * y[1] * y[303]))
    r391 = (13.7 * y[1131] * y[1] * y[301])/(1 + (y[1131] * y[1] * y[301]))
    r392 = (13.7 * y[1131] * y[724] * y[1])/(1 + (y[1131] * y[724] * y[1]))
    r393 = (13.7 * y[1131] * y[1] * y[710])/(1 + (y[1131] * y[1] * y[710]))
    r394 = (13.7 * y[1131] * y[1] * y[712])/(1 + (y[1131] * y[1] * y[712]))
    r395 = (13.7 * y[1132] * y[1] * y[456])/(1 + (y[1132] * y[1] * y[456]))
    r396 = (13.7 * y[1133] * y[1] * y[111])/(1 + (y[1133] * y[1] * y[111]))
    r397 = (13.7 * y[1133] * y[1] * y[181])/(1 + (y[1133] * y[1] * y[181]))
    r398 = (13.7 * y[1133] * y[723] * y[1])/(1 + (y[1133] * y[723] * y[1]))
    r399 = (13.7 * y[1134] * y[1] * y[183])/(1 + (y[1134] * y[1] * y[183]))
    r400 = (13.7 * y[1134] * y[1] * y[184])/(1 + (y[1134] * y[1] * y[184]))
    r488 = (13.7 * y[1148] * y[40] * y[8])/(1 + (y[1148] * y[40] * y[8]))
    r727 = (13.7 * y[1265] * y[1] * y[240] * y[236])/(1 + (y[1265] * y[1] * y[240] * y[236]))
    r728 = (13.7 * y[1266] * y[1] * y[103])/(1 + (y[1266] * y[1] * y[103]))
    r730 = (13.7 * y[1268] * y[1] * y[472] * y[43])/(1 + (y[1268] * y[1] * y[472] * y[43]))
    r731 = (13.7 * y[1269] * y[1] * y[271] * y[36])/(1 + (y[1269] * y[1] * y[271] * y[36]))
    r732 = (13.7 * y[1270] * y[1] * y[288] * y[135])/(1 + (y[1270] * y[1] * y[288] * y[135]))
    r733 = (13.7 * y[1271] * y[1] * y[464])/(1 + (y[1271] * y[1] * y[464]))
    r734 = (13.7 * y[1272] * y[1] * y[401] * y[67])/(1 + (y[1272] * y[1] * y[401] * y[67]))
    r735 = (13.7 * y[1273] * y[1] * y[382] * y[33])/(1 + (y[1273] * y[1] * y[382] * y[33]))
    r741 = (13.7 * y[1276] * y[1] * y[63] * y[13])/(1 + (y[1276] * y[1] * y[63] * y[13]))
    r742 = (13.7 * y[1276] * y[1] * y[63] * y[55] * y[0])/(1 + (y[1276] * y[1] * y[63] * y[55] * y[0]))
    r743 = (13.7 * y[1277] * y[678] * y[13] * y[1])/(1 + (y[1277] * y[678] * y[13] * y[1]))
    r756 = (13.7 * y[1283] * y[1] * y[55] * y[165] * y[0])/(1 + (y[1283] * y[1] * y[55] * y[165] * y[0]))
    r757 = (13.7 * y[1283] * y[1] * y[314])/(1 + (y[1283] * y[1] * y[314]))
    r758 = (13.7 * y[1283] * y[1] * y[165])/(1 + (y[1283] * y[1] * y[165]))
    r760 = (13.7 * y[1283] * y[1] * y[165] * y[13])/(1 + (y[1283] * y[1] * y[165] * y[13]))
    r762 = (13.7 * y[1283] * y[1] * y[55] * y[165] * y[0])/(1 + (y[1283] * y[1] * y[55] * y[165] * y[0]))
    r763 = (13.7 * y[1283] * y[1] * y[314])/(1 + (y[1283] * y[1] * y[314]))
    r764 = (13.7 * y[1283] * y[1] * y[165])/(1 + (y[1283] * y[1] * y[165]))
    r766 = (13.7 * y[1283] * y[1] * y[165] * y[13])/(1 + (y[1283] * y[1] * y[165] * y[13]))
    r767 = (13.7 * y[1284] * y[1] * y[21] * y[165])/(1 + (y[1284] * y[1] * y[21] * y[165]))
    r380 = (13.7 * y[1131] * y[1] * y[7])/(1 + (y[1131] * y[1] * y[7]))
    return (r72 + r87 + r88 + r93 + r94 + r95 + r100 + r349 + r350 + r351 + r352 + r353 + r354 + r355 + r356 + r357 + r358 + r366 + r367 + r369 + r370 + r371 + r372 + r374 + r375 + r376 + r377 + r378 + r379 + r380 + r381 + r382 + r383 + r384 + r385 + r386 + r387 + r388 + r389 + r390 + r391 + r392 + r393 + r394 + r395 + r396 + r397 + r398 + r399 + r400 + r488 + r727 + r728 + r730 + r731 + r732 + r733 + r734 + r735 + r741 + r742 + r743 + r756 + r757 + r758 + r760 + r762 + r763 + r764 + r766 + r767) - (r380)
 
def C00009(t, y):
    r87 = (13.7 * y[1025] * y[1] * y[242] * y[107] * y[67] * y[0])/(1 + (y[1025] * y[1] * y[242] * y[107] * y[67] * y[0]))
    r88 = (13.7 * y[1025] * y[1] * y[0] * y[107])/(1 + (y[1025] * y[1] * y[0] * y[107]))
    r93 = (13.7 * y[1025] * y[313] * y[107] * y[67] * y[1] * y[0])/(1 + (y[1025] * y[313] * y[107] * y[67] * y[1] * y[0]))
    r94 = (13.7 * y[1025] * y[1] * y[242] * y[107] * y[67] * y[0])/(1 + (y[1025] * y[1] * y[242] * y[107] * y[67] * y[0]))
    r95 = (13.7 * y[1025] * y[1] * y[0] * y[107])/(1 + (y[1025] * y[1] * y[0] * y[107]))
    r100 = (13.7 * y[1025] * y[313] * y[107] * y[67] * y[1] * y[0])/(1 + (y[1025] * y[313] * y[107] * y[67] * y[1] * y[0]))
    r185 = (13.7 * y[1067] * y[121] * y[43])/(1 + (y[1067] * y[121] * y[43]))
    r186 = (13.7 * y[1068] * y[121] * y[64])/(1 + (y[1068] * y[121] * y[64]))
    r187 = (13.7 * y[1068] * y[121] * y[64])/(1 + (y[1068] * y[121] * y[64]))
    r326 = (13.7 * y[1099] * y[268] * y[163])/(1 + (y[1099] * y[268] * y[163]))
    r330 = (13.7 * y[1099] * y[268] * y[163])/(1 + (y[1099] * y[268] * y[163]))
    r332 = (13.7 * y[1100] * y[1] * y[488] * y[0])/(1 + (y[1100] * y[1] * y[488] * y[0]))
    r334 = (13.7 * y[1102] * y[62] * y[37])/(1 + (y[1102] * y[62] * y[37]))
    r337 = (13.7 * y[1105] * y[470] * y[613])/(1 + (y[1105] * y[470] * y[613]))
    r499 = (13.7 * y[1155] * y[1] * y[311] * y[0])/(1 + (y[1155] * y[1] * y[311] * y[0]))
    r511 = (13.7 * y[1161] * y[572] * y[485])/(1 + (y[1161] * y[572] * y[485]))
    r514 = (13.7 * y[1164] * y[179] * y[0])/(1 + (y[1164] * y[179] * y[0]))
    r515 = (13.7 * y[1164] * y[494] * y[0])/(1 + (y[1164] * y[494] * y[0]))
    r516 = (13.7 * y[1164] * y[200] * y[0])/(1 + (y[1164] * y[200] * y[0]))
    r517 = (13.7 * y[1164] * y[179] * y[0])/(1 + (y[1164] * y[179] * y[0]))
    r518 = (13.7 * y[1164] * y[494] * y[0])/(1 + (y[1164] * y[494] * y[0]))
    r519 = (13.7 * y[1164] * y[200] * y[0])/(1 + (y[1164] * y[200] * y[0]))
    r520 = (13.7 * y[1165] * y[356] * y[0])/(1 + (y[1165] * y[356] * y[0]))
    r521 = (13.7 * y[1165] * y[305] * y[0])/(1 + (y[1165] * y[305] * y[0]))
    r522 = (13.7 * y[1165] * y[306] * y[0])/(1 + (y[1165] * y[306] * y[0]))
    r523 = (13.7 * y[1165] * y[562] * y[0])/(1 + (y[1165] * y[562] * y[0]))
    r524 = (13.7 * y[1165] * y[538] * y[0])/(1 + (y[1165] * y[538] * y[0]))
    r525 = (13.7 * y[1166] * y[596] * y[0])/(1 + (y[1166] * y[596] * y[0]))
    r560 = (13.7 * y[1177] * y[38] * y[0])/(1 + (y[1177] * y[38] * y[0]))
    r563 = (13.7 * y[1180] * y[12] * y[0])/(1 + (y[1180] * y[12] * y[0]))
    r566 = (13.7 * y[1182] * y[457] * y[0])/(1 + (y[1182] * y[457] * y[0]))
    r627 = (13.7 * y[1210] * y[277] * y[0])/(1 + (y[1210] * y[277] * y[0]))
    r628 = (13.7 * y[1210] * y[557] * y[0])/(1 + (y[1210] * y[557] * y[0]))
    r629 = (13.7 * y[1211] * y[296])/(1 + (y[1211] * y[296]))
    r654 = (13.7 * y[1218] * y[92] * y[93] * y[13])/(1 + (y[1218] * y[92] * y[93] * y[13]))
    r655 = (13.7 * y[1218] * y[92] * y[93] * y[55])/(1 + (y[1218] * y[92] * y[93] * y[55]))
    r656 = (13.7 * y[1218] * y[93] * y[94] * y[55])/(1 + (y[1218] * y[93] * y[94] * y[55]))
    r727 = (13.7 * y[1265] * y[1] * y[240] * y[236])/(1 + (y[1265] * y[1] * y[240] * y[236]))
    r728 = (13.7 * y[1266] * y[1] * y[103])/(1 + (y[1266] * y[1] * y[103]))
    r730 = (13.7 * y[1268] * y[1] * y[472] * y[43])/(1 + (y[1268] * y[1] * y[472] * y[43]))
    r731 = (13.7 * y[1269] * y[1] * y[271] * y[36])/(1 + (y[1269] * y[1] * y[271] * y[36]))
    r732 = (13.7 * y[1270] * y[1] * y[288] * y[135])/(1 + (y[1270] * y[1] * y[288] * y[135]))
    r733 = (13.7 * y[1271] * y[1] * y[464])/(1 + (y[1271] * y[1] * y[464]))
    r734 = (13.7 * y[1272] * y[1] * y[401] * y[67])/(1 + (y[1272] * y[1] * y[401] * y[67]))
    r735 = (13.7 * y[1273] * y[1] * y[382] * y[33])/(1 + (y[1273] * y[1] * y[382] * y[33]))
    r741 = (13.7 * y[1276] * y[1] * y[63] * y[13])/(1 + (y[1276] * y[1] * y[63] * y[13]))
    r742 = (13.7 * y[1276] * y[1] * y[63] * y[55] * y[0])/(1 + (y[1276] * y[1] * y[63] * y[55] * y[0]))
    r743 = (13.7 * y[1277] * y[678] * y[13] * y[1])/(1 + (y[1277] * y[678] * y[13] * y[1]))
    r744 = (13.7 * y[1278] * y[38] * y[101] * y[43])/(1 + (y[1278] * y[38] * y[101] * y[43]))
    r756 = (13.7 * y[1283] * y[1] * y[55] * y[165] * y[0])/(1 + (y[1283] * y[1] * y[55] * y[165] * y[0]))
    r759 = (13.7 * y[1283] * y[13] * y[703])/(1 + (y[1283] * y[13] * y[703]))
    r760 = (13.7 * y[1283] * y[1] * y[165] * y[13])/(1 + (y[1283] * y[1] * y[165] * y[13]))
    r762 = (13.7 * y[1283] * y[1] * y[55] * y[165] * y[0])/(1 + (y[1283] * y[1] * y[55] * y[165] * y[0]))
    r765 = (13.7 * y[1283] * y[13] * y[703])/(1 + (y[1283] * y[13] * y[703]))
    r766 = (13.7 * y[1283] * y[1] * y[165] * y[13])/(1 + (y[1283] * y[1] * y[165] * y[13]))
    r767 = (13.7 * y[1284] * y[1] * y[21] * y[165])/(1 + (y[1284] * y[1] * y[21] * y[165]))
    r103 = (13.7 * y[1027] * y[198] * y[8] * y[5])/(1 + (y[1027] * y[198] * y[8] * y[5]))
    r104 = (13.7 * y[1028] * y[293] * y[8] * y[5])/(1 + (y[1028] * y[293] * y[8] * y[5]))
    r105 = (13.7 * y[1029] * y[283] * y[8] * y[5])/(1 + (y[1029] * y[283] * y[8] * y[5]))
    r262 = (13.7 * y[1080] * y[22] * y[8])/(1 + (y[1080] * y[22] * y[8]))
    r263 = (13.7 * y[1080] * y[80] * y[8])/(1 + (y[1080] * y[80] * y[8]))
    r289 = (13.7 * y[1085] * y[614] * y[8])/(1 + (y[1085] * y[614] * y[8]))
    r290 = (13.7 * y[1085] * y[133] * y[8])/(1 + (y[1085] * y[133] * y[8]))
    r291 = (13.7 * y[1085] * y[166] * y[8])/(1 + (y[1085] * y[166] * y[8]))
    r292 = (13.7 * y[1085] * y[187] * y[8])/(1 + (y[1085] * y[187] * y[8]))
    r293 = (13.7 * y[1085] * y[334] * y[8])/(1 + (y[1085] * y[334] * y[8]))
    r294 = (13.7 * y[1085] * y[689] * y[8])/(1 + (y[1085] * y[689] * y[8]))
    r295 = (13.7 * y[1085] * y[172] * y[8])/(1 + (y[1085] * y[172] * y[8]))
    r296 = (13.7 * y[1085] * y[217] * y[8])/(1 + (y[1085] * y[217] * y[8]))
    r297 = (13.7 * y[1085] * y[498] * y[8])/(1 + (y[1085] * y[498] * y[8]))
    r298 = (13.7 * y[1085] * y[386] * y[8])/(1 + (y[1085] * y[386] * y[8]))
    r299 = (13.7 * y[1085] * y[540] * y[8])/(1 + (y[1085] * y[540] * y[8]))
    r331 = (13.7 * y[1100] * y[8] * y[12] * y[18])/(1 + (y[1100] * y[8] * y[12] * y[18]))
    r335 = (13.7 * y[1103] * y[410] * y[0] * y[8])/(1 + (y[1103] * y[410] * y[0] * y[8]))
    r487 = (13.7 * y[1148] * y[40] * y[8])/(1 + (y[1148] * y[40] * y[8]))
    r488 = (13.7 * y[1148] * y[40] * y[8])/(1 + (y[1148] * y[40] * y[8]))
    r489 = (13.7 * y[1148] * y[40] * y[8])/(1 + (y[1148] * y[40] * y[8]))
    r490 = (13.7 * y[1148] * y[40] * y[8])/(1 + (y[1148] * y[40] * y[8]))
    r491 = (13.7 * y[1148] * y[40] * y[8])/(1 + (y[1148] * y[40] * y[8]))
    return (r87 + r88 + r93 + r94 + r95 + r100 + r185 + r186 + r187 + r326 + r330 + r332 + r334 + r337 + r499 + r511 + r514 + r515 + r516 + r517 + r518 + r519 + r520 + r521 + r522 + r523 + r524 + r525 + r560 + r563 + r566 + r627 + r628 + r629 + r654 + r655 + r656 + r727 + r728 + r730 + r731 + r732 + r733 + r734 + r735 + r741 + r742 + r743 + r744 + r756 + r759 + r760 + r762 + r765 + r766 + r767) - (r103 + r104 + r105 + r262 + r263 + r289 + r290 + r291 + r292 + r293 + r294 + r295 + r296 + r297 + r298 + r299 + r331 + r335 + r487 + r488 + r489 + r490 + r491)
 
def C00010(t, y):
    r231 = (13.7 * y[1073] * y[22] * y[23])/(1 + (y[1073] * y[22] * y[23]))
    r232 = (13.7 * y[1074] * y[75] * y[35])/(1 + (y[1074] * y[75] * y[35]))
    r233 = (13.7 * y[1074] * y[224] * y[75])/(1 + (y[1074] * y[224] * y[75]))
    r261 = (13.7 * y[1079] * y[73] * y[158])/(1 + (y[1079] * y[73] * y[158]))
    r262 = (13.7 * y[1080] * y[22] * y[8])/(1 + (y[1080] * y[22] * y[8]))
    r263 = (13.7 * y[1080] * y[80] * y[8])/(1 + (y[1080] * y[80] * y[8]))
    r350 = (13.7 * y[1113] * y[1] * y[258])/(1 + (y[1113] * y[1] * y[258]))
    r101 = (13.7 * y[1026] * y[70] * y[9] * y[2])/(1 + (y[1026] * y[70] * y[9] * y[2]))
    r102 = (13.7 * y[1026] * y[307] * y[9] * y[2])/(1 + (y[1026] * y[307] * y[9] * y[2]))
    r109 = (13.7 * y[1031] * y[554] * y[9] * y[10] * y[107])/(1 + (y[1031] * y[554] * y[9] * y[10] * y[107]))
    r112 = (13.7 * y[1033] * y[1286] * y[9] * y[108])/(1 + (y[1033] * y[1286] * y[9] * y[108]))
    r283 = (13.7 * y[1083] * y[355] * y[9])/(1 + (y[1083] * y[355] * y[9]))
    r497 = (13.7 * y[1153] * y[9] * y[409])/(1 + (y[1153] * y[9] * y[409]))
    r714 = (13.7 * y[1262] * y[1] * y[30] * y[9])/(1 + (y[1262] * y[1] * y[30] * y[9]))
    r715 = (13.7 * y[1262] * y[550] * y[9])/(1 + (y[1262] * y[550] * y[9]))
    r717 = (13.7 * y[1262] * y[1] * y[119] * y[9])/(1 + (y[1262] * y[1] * y[119] * y[9]))
    r718 = (13.7 * y[1262] * y[549] * y[9])/(1 + (y[1262] * y[549] * y[9]))
    return (r231 + r232 + r233 + r261 + r262 + r263 + r350) - (r101 + r102 + r109 + r112 + r283 + r497 + r714 + r715 + r717 + r718)
 
def C00011(t, y):
    r52 = (13.7 * y[1017] * y[451] * y[2])/(1 + (y[1017] * y[451] * y[2]))
    r107 = (13.7 * y[1031] * y[144] * y[0] * y[108])/(1 + (y[1031] * y[144] * y[0] * y[108]))
    r112 = (13.7 * y[1033] * y[1286] * y[9] * y[108])/(1 + (y[1033] * y[1286] * y[9] * y[108]))
    r128 = (13.7 * y[1040] * y[33] * y[340])/(1 + (y[1040] * y[33] * y[340]))
    r129 = (13.7 * y[1040] * y[33] * y[340])/(1 + (y[1040] * y[33] * y[340]))
    r197 = (13.7 * y[1071] * y[21] * y[59])/(1 + (y[1071] * y[21] * y[59]))
    r201 = (13.7 * y[1071] * y[21] * y[87])/(1 + (y[1071] * y[21] * y[87]))
    r204 = (13.7 * y[1071] * y[21] * y[59])/(1 + (y[1071] * y[21] * y[59]))
    r208 = (13.7 * y[1071] * y[21] * y[87])/(1 + (y[1071] * y[21] * y[87]))
    r211 = (13.7 * y[1071] * y[21] * y[59])/(1 + (y[1071] * y[21] * y[59]))
    r215 = (13.7 * y[1071] * y[21] * y[87])/(1 + (y[1071] * y[21] * y[87]))
    r218 = (13.7 * y[1071] * y[21] * y[59])/(1 + (y[1071] * y[21] * y[59]))
    r222 = (13.7 * y[1071] * y[21] * y[87])/(1 + (y[1071] * y[21] * y[87]))
    r225 = (13.7 * y[1071] * y[21] * y[59])/(1 + (y[1071] * y[21] * y[59]))
    r229 = (13.7 * y[1071] * y[21] * y[87])/(1 + (y[1071] * y[21] * y[87]))
    r230 = (13.7 * y[1072] * y[21] * y[93])/(1 + (y[1072] * y[21] * y[93]))
    r235 = (13.7 * y[1075] * y[122] * y[287])/(1 + (y[1075] * y[122] * y[287]))
    r236 = (13.7 * y[1075] * y[425] * y[287])/(1 + (y[1075] * y[425] * y[287]))
    r237 = (13.7 * y[1075] * y[487] * y[287])/(1 + (y[1075] * y[487] * y[287]))
    r238 = (13.7 * y[1075] * y[515] * y[287])/(1 + (y[1075] * y[515] * y[287]))
    r239 = (13.7 * y[1075] * y[519] * y[287])/(1 + (y[1075] * y[519] * y[287]))
    r240 = (13.7 * y[1075] * y[522] * y[287])/(1 + (y[1075] * y[522] * y[287]))
    r241 = (13.7 * y[1075] * y[525] * y[287])/(1 + (y[1075] * y[525] * y[287]))
    r242 = (13.7 * y[1075] * y[531] * y[287])/(1 + (y[1075] * y[531] * y[287]))
    r243 = (13.7 * y[1075] * y[534] * y[287])/(1 + (y[1075] * y[534] * y[287]))
    r244 = (13.7 * y[1075] * y[670] * y[287])/(1 + (y[1075] * y[670] * y[287]))
    r245 = (13.7 * y[1075] * y[683] * y[287])/(1 + (y[1075] * y[683] * y[287]))
    r246 = (13.7 * y[1075] * y[122] * y[287])/(1 + (y[1075] * y[122] * y[287]))
    r247 = (13.7 * y[1075] * y[425] * y[287])/(1 + (y[1075] * y[425] * y[287]))
    r248 = (13.7 * y[1075] * y[487] * y[287])/(1 + (y[1075] * y[487] * y[287]))
    r249 = (13.7 * y[1075] * y[515] * y[287])/(1 + (y[1075] * y[515] * y[287]))
    r250 = (13.7 * y[1075] * y[519] * y[287])/(1 + (y[1075] * y[519] * y[287]))
    r251 = (13.7 * y[1075] * y[522] * y[287])/(1 + (y[1075] * y[522] * y[287]))
    r252 = (13.7 * y[1075] * y[525] * y[287])/(1 + (y[1075] * y[525] * y[287]))
    r253 = (13.7 * y[1075] * y[531] * y[287])/(1 + (y[1075] * y[531] * y[287]))
    r254 = (13.7 * y[1075] * y[534] * y[287])/(1 + (y[1075] * y[534] * y[287]))
    r255 = (13.7 * y[1075] * y[670] * y[287])/(1 + (y[1075] * y[670] * y[287]))
    r256 = (13.7 * y[1075] * y[683] * y[287])/(1 + (y[1075] * y[683] * y[287]))
    r320 = (13.7 * y[1097] * y[473] * y[677])/(1 + (y[1097] * y[473] * y[677]))
    r321 = (13.7 * y[1097] * y[473] * y[676])/(1 + (y[1097] * y[473] * y[676]))
    r536 = (13.7 * y[1171] * y[72] * y[0])/(1 + (y[1171] * y[72] * y[0]))
    r541 = (13.7 * y[1171] * y[72] * y[0])/(1 + (y[1171] * y[72] * y[0]))
    r546 = (13.7 * y[1171] * y[72] * y[0])/(1 + (y[1171] * y[72] * y[0]))
    r578 = (13.7 * y[1184] * y[43])/(1 + (y[1184] * y[43]))
    r579 = (13.7 * y[1185] * y[53])/(1 + (y[1185] * y[53]))
    r580 = (13.7 * y[1186] * y[236])/(1 + (y[1186] * y[236]))
    r581 = (13.7 * y[1187] * y[472])/(1 + (y[1187] * y[472]))
    r582 = (13.7 * y[1188] * y[278])/(1 + (y[1188] * y[278]))
    r583 = (13.7 * y[1189] * y[449])/(1 + (y[1189] * y[449]))
    r584 = (13.7 * y[1190] * y[365])/(1 + (y[1190] * y[365]))
    r585 = (13.7 * y[1191] * y[665])/(1 + (y[1191] * y[665]))
    r586 = (13.7 * y[1191] * y[666])/(1 + (y[1191] * y[666]))
    r611 = (13.7 * y[1206] * y[154])/(1 + (y[1206] * y[154]))
    r612 = (13.7 * y[1206] * y[250])/(1 + (y[1206] * y[250]))
    r50 = (13.7 * y[1017] * y[141] * y[10])/(1 + (y[1017] * y[141] * y[10]))
    r53 = (13.7 * y[1017] * y[87] * y[10] * y[3] * y[67])/(1 + (y[1017] * y[87] * y[10] * y[3] * y[67]))
    r109 = (13.7 * y[1031] * y[554] * y[9] * y[10] * y[107])/(1 + (y[1031] * y[554] * y[9] * y[10] * y[107]))
    r195 = (13.7 * y[1071] * y[260] * y[10])/(1 + (y[1071] * y[260] * y[10]))
    r196 = (13.7 * y[1071] * y[553] * y[10])/(1 + (y[1071] * y[553] * y[10]))
    r202 = (13.7 * y[1071] * y[260] * y[10])/(1 + (y[1071] * y[260] * y[10]))
    r203 = (13.7 * y[1071] * y[553] * y[10])/(1 + (y[1071] * y[553] * y[10]))
    r209 = (13.7 * y[1071] * y[260] * y[10])/(1 + (y[1071] * y[260] * y[10]))
    r210 = (13.7 * y[1071] * y[553] * y[10])/(1 + (y[1071] * y[553] * y[10]))
    r216 = (13.7 * y[1071] * y[260] * y[10])/(1 + (y[1071] * y[260] * y[10]))
    r217 = (13.7 * y[1071] * y[553] * y[10])/(1 + (y[1071] * y[553] * y[10]))
    r223 = (13.7 * y[1071] * y[260] * y[10])/(1 + (y[1071] * y[260] * y[10]))
    r224 = (13.7 * y[1071] * y[553] * y[10])/(1 + (y[1071] * y[553] * y[10]))
    r305 = (13.7 * y[1090] * y[286] * y[12] * y[10])/(1 + (y[1090] * y[286] * y[12] * y[10]))
    return (r52 + r107 + r112 + r128 + r129 + r197 + r201 + r204 + r208 + r211 + r215 + r218 + r222 + r225 + r229 + r230 + r235 + r236 + r237 + r238 + r239 + r240 + r241 + r242 + r243 + r244 + r245 + r246 + r247 + r248 + r249 + r250 + r251 + r252 + r253 + r254 + r255 + r256 + r320 + r321 + r536 + r541 + r546 + r578 + r579 + r580 + r581 + r582 + r583 + r584 + r585 + r586 + r611 + r612) - (r50 + r53 + r109 + r195 + r196 + r202 + r203 + r209 + r210 + r216 + r217 + r223 + r224 + r305)
 
def C00012(t, y):
    r264 = (13.7 * y[1081] * y[389] * y[39])/(1 + (y[1081] * y[389] * y[39]))
    r266 = (13.7 * y[1081] * y[389] * y[149])/(1 + (y[1081] * y[389] * y[149]))
    r268 = (13.7 * y[1081] * y[389] * y[505])/(1 + (y[1081] * y[389] * y[505]))
    r272 = (13.7 * y[1081] * y[389] * y[39])/(1 + (y[1081] * y[389] * y[39]))
    r274 = (13.7 * y[1081] * y[389] * y[149])/(1 + (y[1081] * y[389] * y[149]))
    r276 = (13.7 * y[1081] * y[389] * y[505])/(1 + (y[1081] * y[389] * y[505]))
    return (r264 + r266 + r268 + r272 + r274 + r276) - (0)
 
def C00013(t, y):
    r301 = (13.7 * y[1086] * y[582] * y[94])/(1 + (y[1086] * y[582] * y[94]))
    r311 = (13.7 * y[1093] * y[349] * y[94])/(1 + (y[1093] * y[349] * y[94]))
    r312 = (13.7 * y[1093] * y[644] * y[94])/(1 + (y[1093] * y[644] * y[94]))
    r313 = (13.7 * y[1093] * y[581] * y[94])/(1 + (y[1093] * y[581] * y[94]))
    r317 = (13.7 * y[1096] * y[475] * y[219])/(1 + (y[1096] * y[475] * y[219]))
    r319 = (13.7 * y[1097] * y[473] * y[447])/(1 + (y[1097] * y[473] * y[447]))
    r320 = (13.7 * y[1097] * y[473] * y[677])/(1 + (y[1097] * y[473] * y[677]))
    r321 = (13.7 * y[1097] * y[473] * y[676])/(1 + (y[1097] * y[473] * y[676]))
    r322 = (13.7 * y[1098] * y[201] * y[100])/(1 + (y[1098] * y[201] * y[100]))
    r332 = (13.7 * y[1100] * y[1] * y[488] * y[0])/(1 + (y[1100] * y[1] * y[488] * y[0]))
    r336 = (13.7 * y[1104] * y[143] * y[662])/(1 + (y[1104] * y[143] * y[662]))
    r402 = (13.7 * y[1136] * y[38] * y[229])/(1 + (y[1136] * y[38] * y[229]))
    r403 = (13.7 * y[1137] * y[1] * y[52])/(1 + (y[1137] * y[1] * y[52]))
    r404 = (13.7 * y[1138] * y[63] * y[455])/(1 + (y[1138] * y[63] * y[455]))
    r405 = (13.7 * y[1139] * y[205] * y[82])/(1 + (y[1139] * y[205] * y[82]))
    r406 = (13.7 * y[1140] * y[1] * y[281])/(1 + (y[1140] * y[1] * y[281]))
    r407 = (13.7 * y[1141] * y[54] * y[82])/(1 + (y[1141] * y[54] * y[82]))
    r408 = (13.7 * y[1142] * y[1] * y[50])/(1 + (y[1142] * y[1] * y[50]))
    r409 = (13.7 * y[1142] * y[1] * y[509])/(1 + (y[1142] * y[1] * y[509]))
    r410 = (13.7 * y[1143] * y[54] * y[192])/(1 + (y[1143] * y[54] * y[192]))
    r411 = (13.7 * y[1144] * y[130] * y[40])/(1 + (y[1144] * y[130] * y[40]))
    r412 = (13.7 * y[1144] * y[1] * y[40])/(1 + (y[1144] * y[1] * y[40]))
    r413 = (13.7 * y[1144] * y[38] * y[40])/(1 + (y[1144] * y[38] * y[40]))
    r414 = (13.7 * y[1144] * y[54] * y[40])/(1 + (y[1144] * y[54] * y[40]))
    r415 = (13.7 * y[1144] * y[63] * y[40])/(1 + (y[1144] * y[63] * y[40]))
    r416 = (13.7 * y[1144] * y[130])/(1 + (y[1144] * y[130]))
    r417 = (13.7 * y[1144] * y[130] * y[40])/(1 + (y[1144] * y[130] * y[40]))
    r418 = (13.7 * y[1144] * y[1] * y[40])/(1 + (y[1144] * y[1] * y[40]))
    r419 = (13.7 * y[1144] * y[38] * y[40])/(1 + (y[1144] * y[38] * y[40]))
    r420 = (13.7 * y[1144] * y[54] * y[40])/(1 + (y[1144] * y[54] * y[40]))
    r421 = (13.7 * y[1144] * y[63] * y[40])/(1 + (y[1144] * y[63] * y[40]))
    r422 = (13.7 * y[1144] * y[130])/(1 + (y[1144] * y[130]))
    r423 = (13.7 * y[1144] * y[130] * y[40])/(1 + (y[1144] * y[130] * y[40]))
    r424 = (13.7 * y[1144] * y[1] * y[40])/(1 + (y[1144] * y[1] * y[40]))
    r425 = (13.7 * y[1144] * y[38] * y[40])/(1 + (y[1144] * y[38] * y[40]))
    r426 = (13.7 * y[1144] * y[54] * y[40])/(1 + (y[1144] * y[54] * y[40]))
    r427 = (13.7 * y[1144] * y[63] * y[40])/(1 + (y[1144] * y[63] * y[40]))
    r428 = (13.7 * y[1144] * y[130])/(1 + (y[1144] * y[130]))
    r429 = (13.7 * y[1144] * y[130] * y[40])/(1 + (y[1144] * y[130] * y[40]))
    r430 = (13.7 * y[1144] * y[1] * y[40])/(1 + (y[1144] * y[1] * y[40]))
    r431 = (13.7 * y[1144] * y[38] * y[40])/(1 + (y[1144] * y[38] * y[40]))
    r432 = (13.7 * y[1144] * y[54] * y[40])/(1 + (y[1144] * y[54] * y[40]))
    r433 = (13.7 * y[1144] * y[63] * y[40])/(1 + (y[1144] * y[63] * y[40]))
    r434 = (13.7 * y[1144] * y[130])/(1 + (y[1144] * y[130]))
    r435 = (13.7 * y[1144] * y[130] * y[40])/(1 + (y[1144] * y[130] * y[40]))
    r436 = (13.7 * y[1144] * y[1] * y[40])/(1 + (y[1144] * y[1] * y[40]))
    r437 = (13.7 * y[1144] * y[38] * y[40])/(1 + (y[1144] * y[38] * y[40]))
    r438 = (13.7 * y[1144] * y[54] * y[40])/(1 + (y[1144] * y[54] * y[40]))
    r439 = (13.7 * y[1144] * y[63] * y[40])/(1 + (y[1144] * y[63] * y[40]))
    r440 = (13.7 * y[1144] * y[130])/(1 + (y[1144] * y[130]))
    r441 = (13.7 * y[1145] * y[589] * y[54])/(1 + (y[1145] * y[589] * y[54]))
    r442 = (13.7 * y[1146] * y[38])/(1 + (y[1146] * y[38]))
    r443 = (13.7 * y[1146] * y[38])/(1 + (y[1146] * y[38]))
    r444 = (13.7 * y[1146] * y[38])/(1 + (y[1146] * y[38]))
    r445 = (13.7 * y[1146] * y[38])/(1 + (y[1146] * y[38]))
    r446 = (13.7 * y[1146] * y[38])/(1 + (y[1146] * y[38]))
    r447 = (13.7 * y[1146] * y[38])/(1 + (y[1146] * y[38]))
    r448 = (13.7 * y[1146] * y[38])/(1 + (y[1146] * y[38]))
    r449 = (13.7 * y[1146] * y[38])/(1 + (y[1146] * y[38]))
    r450 = (13.7 * y[1146] * y[38])/(1 + (y[1146] * y[38]))
    r451 = (13.7 * y[1146] * y[38])/(1 + (y[1146] * y[38]))
    r452 = (13.7 * y[1146] * y[38])/(1 + (y[1146] * y[38]))
    r453 = (13.7 * y[1146] * y[38])/(1 + (y[1146] * y[38]))
    r454 = (13.7 * y[1146] * y[38])/(1 + (y[1146] * y[38]))
    r455 = (13.7 * y[1146] * y[38])/(1 + (y[1146] * y[38]))
    r456 = (13.7 * y[1146] * y[38])/(1 + (y[1146] * y[38]))
    r457 = (13.7 * y[1147] * y[235] * y[34])/(1 + (y[1147] * y[235] * y[34]))
    r458 = (13.7 * y[1147] * y[102] * y[34])/(1 + (y[1147] * y[102] * y[34]))
    r459 = (13.7 * y[1147] * y[164] * y[34])/(1 + (y[1147] * y[164] * y[34]))
    r460 = (13.7 * y[1147] * y[204] * y[34])/(1 + (y[1147] * y[204] * y[34]))
    r461 = (13.7 * y[1147] * y[205] * y[34])/(1 + (y[1147] * y[205] * y[34]))
    r463 = (13.7 * y[1147] * y[235] * y[34])/(1 + (y[1147] * y[235] * y[34]))
    r464 = (13.7 * y[1147] * y[102] * y[34])/(1 + (y[1147] * y[102] * y[34]))
    r465 = (13.7 * y[1147] * y[164] * y[34])/(1 + (y[1147] * y[164] * y[34]))
    r466 = (13.7 * y[1147] * y[204] * y[34])/(1 + (y[1147] * y[204] * y[34]))
    r467 = (13.7 * y[1147] * y[205] * y[34])/(1 + (y[1147] * y[205] * y[34]))
    r469 = (13.7 * y[1147] * y[235] * y[34])/(1 + (y[1147] * y[235] * y[34]))
    r470 = (13.7 * y[1147] * y[102] * y[34])/(1 + (y[1147] * y[102] * y[34]))
    r471 = (13.7 * y[1147] * y[164] * y[34])/(1 + (y[1147] * y[164] * y[34]))
    r472 = (13.7 * y[1147] * y[204] * y[34])/(1 + (y[1147] * y[204] * y[34]))
    r473 = (13.7 * y[1147] * y[205] * y[34])/(1 + (y[1147] * y[205] * y[34]))
    r475 = (13.7 * y[1147] * y[235] * y[34])/(1 + (y[1147] * y[235] * y[34]))
    r476 = (13.7 * y[1147] * y[102] * y[34])/(1 + (y[1147] * y[102] * y[34]))
    r477 = (13.7 * y[1147] * y[164] * y[34])/(1 + (y[1147] * y[164] * y[34]))
    r478 = (13.7 * y[1147] * y[204] * y[34])/(1 + (y[1147] * y[204] * y[34]))
    r479 = (13.7 * y[1147] * y[205] * y[34])/(1 + (y[1147] * y[205] * y[34]))
    r481 = (13.7 * y[1147] * y[235] * y[34])/(1 + (y[1147] * y[235] * y[34]))
    r482 = (13.7 * y[1147] * y[102] * y[34])/(1 + (y[1147] * y[102] * y[34]))
    r483 = (13.7 * y[1147] * y[164] * y[34])/(1 + (y[1147] * y[164] * y[34]))
    r484 = (13.7 * y[1147] * y[204] * y[34])/(1 + (y[1147] * y[204] * y[34]))
    r485 = (13.7 * y[1147] * y[205] * y[34])/(1 + (y[1147] * y[205] * y[34]))
    r492 = (13.7 * y[1149] * y[1])/(1 + (y[1149] * y[1]))
    r493 = (13.7 * y[1150] * y[63] * y[82])/(1 + (y[1150] * y[63] * y[82]))
    r564 = (13.7 * y[1181] * y[206] * y[0])/(1 + (y[1181] * y[206] * y[0]))
    r565 = (13.7 * y[1181] * y[713] * y[0])/(1 + (y[1181] * y[713] * y[0]))
    r567 = (13.7 * y[1183] * y[130] * y[0])/(1 + (y[1183] * y[130] * y[0]))
    r568 = (13.7 * y[1183] * y[1] * y[0])/(1 + (y[1183] * y[1] * y[0]))
    r569 = (13.7 * y[1183] * y[38] * y[0])/(1 + (y[1183] * y[38] * y[0]))
    r570 = (13.7 * y[1183] * y[54] * y[0])/(1 + (y[1183] * y[54] * y[0]))
    r571 = (13.7 * y[1183] * y[63] * y[0])/(1 + (y[1183] * y[63] * y[0]))
    r572 = (13.7 * y[1183] * y[205] * y[0])/(1 + (y[1183] * y[205] * y[0]))
    r660 = (13.7 * y[1222] * y[705] * y[0] )/(1 + (y[1222] * y[705] * y[0] ))
    r691 = (13.7 * y[1243] * y[1] * y[69] * y[247])/(1 + (y[1243] * y[1] * y[69] * y[247]))
    r692 = (13.7 * y[1244] * y[1] * y[61] * y[327])/(1 + (y[1244] * y[1] * y[61] * y[327]))
    r693 = (13.7 * y[1244] * y[1] * y[488] * y[327])/(1 + (y[1244] * y[1] * y[488] * y[327]))
    r694 = (13.7 * y[1245] * y[1] * y[56] * y[330])/(1 + (y[1245] * y[1] * y[56] * y[330]))
    r695 = (13.7 * y[1245] * y[1] * y[56] * y[649])/(1 + (y[1245] * y[1] * y[56] * y[649]))
    r696 = (13.7 * y[1246] * y[319] * y[43] * y[1])/(1 + (y[1246] * y[319] * y[43] * y[1]))
    r697 = (13.7 * y[1247] * y[1] * y[33] * y[322])/(1 + (y[1247] * y[1] * y[33] * y[322]))
    r698 = (13.7 * y[1247] * y[1] * y[33] * y[322])/(1 + (y[1247] * y[1] * y[33] * y[322]))
    r699 = (13.7 * y[1248] * y[1] * y[113] * y[329])/(1 + (y[1248] * y[1] * y[113] * y[329]))
    r700 = (13.7 * y[1249] * y[1] * y[78] * y[320])/(1 + (y[1249] * y[1] * y[78] * y[320]))
    r701 = (13.7 * y[1250] * y[321] * y[23] * y[1])/(1 + (y[1250] * y[321] * y[23] * y[1]))
    r702 = (13.7 * y[1251] * y[1] * y[53] * y[317])/(1 + (y[1251] * y[1] * y[53] * y[317]))
    r703 = (13.7 * y[1252] * y[1] * y[65] * y[332])/(1 + (y[1252] * y[1] * y[65] * y[332]))
    r704 = (13.7 * y[1253] * y[1] * y[66] * y[328])/(1 + (y[1253] * y[1] * y[66] * y[328]))
    r705 = (13.7 * y[1253] * y[1] * y[66] * y[328])/(1 + (y[1253] * y[1] * y[66] * y[328]))
    r706 = (13.7 * y[1254] * y[1] * y[105] * y[323])/(1 + (y[1254] * y[1] * y[105] * y[323]))
    r707 = (13.7 * y[1255] * y[1] * y[116] * y[318])/(1 + (y[1255] * y[1] * y[116] * y[318]))
    r708 = (13.7 * y[1256] * y[1] * y[125] * y[331])/(1 + (y[1256] * y[1] * y[125] * y[331]))
    r709 = (13.7 * y[1257] * y[1] * y[97] * y[325])/(1 + (y[1257] * y[1] * y[97] * y[325]))
    r710 = (13.7 * y[1258] * y[1] * y[191] * y[324])/(1 + (y[1258] * y[1] * y[191] * y[324]))
    r711 = (13.7 * y[1259] * y[1] * y[41] * y[326])/(1 + (y[1259] * y[1] * y[41] * y[326]))
    r712 = (13.7 * y[1260] * y[1] * y[36] * y[316])/(1 + (y[1260] * y[1] * y[36] * y[316]))
    r713 = (13.7 * y[1261] * y[1] * y[124] * y[333] )/(1 + (y[1261] * y[1] * y[124] * y[333] ))
    r714 = (13.7 * y[1262] * y[1] * y[30] * y[9])/(1 + (y[1262] * y[1] * y[30] * y[9]))
    r716 = (13.7 * y[1262] * y[1] * y[30])/(1 + (y[1262] * y[1] * y[30]))
    r717 = (13.7 * y[1262] * y[1] * y[119] * y[9])/(1 + (y[1262] * y[1] * y[119] * y[9]))
    r719 = (13.7 * y[1262] * y[1] * y[119])/(1 + (y[1262] * y[1] * y[119]))
    r720 = (13.7 * y[1263] * y[1] * y[633] * y[632])/(1 + (y[1263] * y[1] * y[633] * y[632]))
    r721 = (13.7 * y[1263] * y[1] * y[633] * y[718])/(1 + (y[1263] * y[1] * y[633] * y[718]))
    r722 = (13.7 * y[1263] * y[1] * y[633] * y[719])/(1 + (y[1263] * y[1] * y[633] * y[719]))
    r723 = (13.7 * y[1263] * y[1] * y[633])/(1 + (y[1263] * y[1] * y[633]))
    r725 = (13.7 * y[1263] * y[1] * y[571] * y[719] )/(1 + (y[1263] * y[1] * y[571] * y[719] ))
    r726 = (13.7 * y[1264] * y[1] * y[214] * y[79])/(1 + (y[1264] * y[1] * y[214] * y[79]))
    r729 = (13.7 * y[1267] * y[54] * y[402] * y[78])/(1 + (y[1267] * y[54] * y[402] * y[78]))
    r736 = (13.7 * y[1274] * y[1] * y[95] * y[471])/(1 + (y[1274] * y[1] * y[95] * y[471]))
    r737 = (13.7 * y[1274] * y[1] * y[95])/(1 + (y[1274] * y[1] * y[95]))
    r739 = (13.7 * y[1275] * y[671] * y[41] * y[1])/(1 + (y[1275] * y[671] * y[41] * y[1]))
    r745 = (13.7 * y[1279] * y[1] * y[171] * y[43])/(1 + (y[1279] * y[1] * y[171] * y[43]))
    r746 = (13.7 * y[1280] * y[1] * y[254] * y[55] * y[0])/(1 + (y[1280] * y[1] * y[254] * y[55] * y[0]))
    r747 = (13.7 * y[1280] * y[1] * y[254] * y[13] )/(1 + (y[1280] * y[1] * y[254] * y[13] ))
    r749 = (13.7 * y[1281] * y[1] * y[230] * y[13])/(1 + (y[1281] * y[1] * y[230] * y[13]))
    r750 = (13.7 * y[1281] * y[1] * y[230] * y[55] * y[0])/(1 + (y[1281] * y[1] * y[230] * y[55] * y[0]))
    r751 = (13.7 * y[1281] * y[646] * y[1] * y[55] * y[0])/(1 + (y[1281] * y[646] * y[1] * y[55] * y[0]))
    r753 = (13.7 * y[1282] * y[1] * y[43] * y[13])/(1 + (y[1282] * y[1] * y[43] * y[13]))
    r754 = (13.7 * y[1282] * y[1] * y[43] * y[55] * y[0])/(1 + (y[1282] * y[1] * y[43] * y[55] * y[0]))
    r300 = (13.7 * y[1086] * y[278] * y[12])/(1 + (y[1086] * y[278] * y[12]))
    r302 = (13.7 * y[1087] * y[382] * y[12] * y[23])/(1 + (y[1087] * y[382] * y[12] * y[23]))
    r303 = (13.7 * y[1088] * y[366] * y[12])/(1 + (y[1088] * y[366] * y[12]))
    r304 = (13.7 * y[1089] * y[444] * y[12])/(1 + (y[1089] * y[444] * y[12]))
    r305 = (13.7 * y[1090] * y[286] * y[12] * y[10])/(1 + (y[1090] * y[286] * y[12] * y[10]))
    r308 = (13.7 * y[1093] * y[101] * y[12])/(1 + (y[1093] * y[101] * y[12]))
    r309 = (13.7 * y[1093] * y[111] * y[12])/(1 + (y[1093] * y[111] * y[12]))
    r310 = (13.7 * y[1093] * y[230] * y[12])/(1 + (y[1093] * y[230] * y[12]))
    r314 = (13.7 * y[1094] * y[84] * y[12])/(1 + (y[1094] * y[84] * y[12]))
    r315 = (13.7 * y[1094] * y[84] * y[12])/(1 + (y[1094] * y[84] * y[12]))
    r331 = (13.7 * y[1100] * y[8] * y[12] * y[18])/(1 + (y[1100] * y[8] * y[12] * y[18]))
    r563 = (13.7 * y[1180] * y[12] * y[0])/(1 + (y[1180] * y[12] * y[0]))
    return (r301 + r311 + r312 + r313 + r317 + r319 + r320 + r321 + r322 + r332 + r336 + r402 + r403 + r404 + r405 + r406 + r407 + r408 + r409 + r410 + r411 + r412 + r413 + r414 + r415 + r416 + r417 + r418 + r419 + r420 + r421 + r422 + r423 + r424 + r425 + r426 + r427 + r428 + r429 + r430 + r431 + r432 + r433 + r434 + r435 + r436 + r437 + r438 + r439 + r440 + r441 + r442 + r443 + r444 + r445 + r446 + r447 + r448 + r449 + r450 + r451 + r452 + r453 + r454 + r455 + r456 + r457 + r458 + r459 + r460 + r461 + r463 + r464 + r465 + r466 + r467 + r469 + r470 + r471 + r472 + r473 + r475 + r476 + r477 + r478 + r479 + r481 + r482 + r483 + r484 + r485 + r492 + r493 + r564 + r565 + r567 + r568 + r569 + r570 + r571 + r572 + r660 + r691 + r692 + r693 + r694 + r695 + r696 + r697 + r698 + r699 + r700 + r701 + r702 + r703 + r704 + r705 + r706 + r707 + r708 + r709 + r710 + r711 + r712 + r713 + r714 + r716 + r717 + r719 + r720 + r721 + r722 + r723 + r725 + r726 + r729 + r736 + r737 + r739 + r745 + r746 + r747 + r749 + r750 + r751 + r753 + r754) - (r300 + r302 + r303 + r304 + r305 + r308 + r309 + r310 + r314 + r315 + r331 + r563)
 
def C00014(t, y):
    r87 = (13.7 * y[1025] * y[1] * y[242] * y[107] * y[67] * y[0])/(1 + (y[1025] * y[1] * y[242] * y[107] * y[67] * y[0]))
    r90 = (13.7 * y[1025] * y[493] * y[491] * y[67])/(1 + (y[1025] * y[493] * y[491] * y[67]))
    r94 = (13.7 * y[1025] * y[1] * y[242] * y[107] * y[67] * y[0])/(1 + (y[1025] * y[1] * y[242] * y[107] * y[67] * y[0]))
    r97 = (13.7 * y[1025] * y[493] * y[491] * y[67])/(1 + (y[1025] * y[493] * y[491] * y[67]))
    r116 = (13.7 * y[1036] * y[36] * y[2] * y[0])/(1 + (y[1036] * y[36] * y[2] * y[0]))
    r117 = (13.7 * y[1036] * y[484] * y[0] * y[2])/(1 + (y[1036] * y[484] * y[0] * y[2]))
    r118 = (13.7 * y[1036] * y[484] * y[0] * y[5])/(1 + (y[1036] * y[484] * y[0] * y[5]))
    r119 = (13.7 * y[1036] * y[33] * y[0] * y[2])/(1 + (y[1036] * y[33] * y[0] * y[2]))
    r121 = (13.7 * y[1037] * y[23] * y[5] * y[0])/(1 + (y[1037] * y[23] * y[5] * y[0]))
    r122 = (13.7 * y[1037] * y[55] * y[0])/(1 + (y[1037] * y[55] * y[0]))
    r123 = (13.7 * y[1038] * y[23] * y[5] * y[0])/(1 + (y[1038] * y[23] * y[5] * y[0]))
    r124 = (13.7 * y[1038] * y[484] * y[0] * y[2])/(1 + (y[1038] * y[484] * y[0] * y[2]))
    r125 = (13.7 * y[1038] * y[484] * y[0] * y[5])/(1 + (y[1038] * y[484] * y[0] * y[5]))
    r127 = (13.7 * y[1039] * y[43] * y[0] * y[6])/(1 + (y[1039] * y[43] * y[0] * y[6]))
    r178 = (13.7 * y[1063] * y[292] * y[81])/(1 + (y[1063] * y[292] * y[81]))
    r333 = (13.7 * y[1101] * y[263] * y[0])/(1 + (y[1101] * y[263] * y[0]))
    r529 = (13.7 * y[1169] * y[55] * y[0])/(1 + (y[1169] * y[55] * y[0]))
    r530 = (13.7 * y[1169] * y[248] * y[0])/(1 + (y[1169] * y[248] * y[0]))
    r531 = (13.7 * y[1169] * y[147] * y[0])/(1 + (y[1169] * y[147] * y[0]))
    r534 = (13.7 * y[1171] * y[72] * y[0])/(1 + (y[1171] * y[72] * y[0]))
    r535 = (13.7 * y[1171] * y[72] * y[0])/(1 + (y[1171] * y[72] * y[0]))
    r536 = (13.7 * y[1171] * y[72] * y[0])/(1 + (y[1171] * y[72] * y[0]))
    r537 = (13.7 * y[1171] * y[147] * y[0])/(1 + (y[1171] * y[147] * y[0]))
    r539 = (13.7 * y[1171] * y[72] * y[0])/(1 + (y[1171] * y[72] * y[0]))
    r540 = (13.7 * y[1171] * y[72] * y[0])/(1 + (y[1171] * y[72] * y[0]))
    r541 = (13.7 * y[1171] * y[72] * y[0])/(1 + (y[1171] * y[72] * y[0]))
    r542 = (13.7 * y[1171] * y[147] * y[0])/(1 + (y[1171] * y[147] * y[0]))
    r544 = (13.7 * y[1171] * y[72] * y[0])/(1 + (y[1171] * y[72] * y[0]))
    r545 = (13.7 * y[1171] * y[72] * y[0])/(1 + (y[1171] * y[72] * y[0]))
    r546 = (13.7 * y[1171] * y[72] * y[0])/(1 + (y[1171] * y[72] * y[0]))
    r547 = (13.7 * y[1171] * y[147] * y[0])/(1 + (y[1171] * y[147] * y[0]))
    r559 = (13.7 * y[1176] * y[112] * y[0])/(1 + (y[1176] * y[112] * y[0]))
    r561 = (13.7 * y[1178] * y[300] * y[0])/(1 + (y[1178] * y[300] * y[0]))
    r562 = (13.7 * y[1179] * y[662] * y[0])/(1 + (y[1179] * y[662] * y[0]))
    r630 = (13.7 * y[1212] * y[565] * y[0])/(1 + (y[1212] * y[565] * y[0]))
    r631 = (13.7 * y[1212] * y[244])/(1 + (y[1212] * y[244]))
    r632 = (13.7 * y[1213] * y[56] )/(1 + (y[1213] * y[56] ))
    r634 = (13.7 * y[1213] * y[701] * y[0])/(1 + (y[1213] * y[701] * y[0]))
    r636 = (13.7 * y[1213] * y[484])/(1 + (y[1213] * y[484]))
    r637 = (13.7 * y[1213] * y[56])/(1 + (y[1213] * y[56]))
    r639 = (13.7 * y[1213] * y[701] * y[0])/(1 + (y[1213] * y[701] * y[0]))
    r641 = (13.7 * y[1213] * y[484])/(1 + (y[1213] * y[484]))
    r642 = (13.7 * y[1214] * y[125])/(1 + (y[1214] * y[125]))
    r643 = (13.7 * y[1214] * y[702] * y[0])/(1 + (y[1214] * y[702] * y[0]))
    r645 = (13.7 * y[1214] * y[56])/(1 + (y[1214] * y[56]))
    r646 = (13.7 * y[1214] * y[484])/(1 + (y[1214] * y[484]))
    r647 = (13.7 * y[1215] * y[126])/(1 + (y[1215] * y[126]))
    r648 = (13.7 * y[1215] * y[484])/(1 + (y[1215] * y[484]))
    r653 = (13.7 * y[1218] * y[55] * y[0])/(1 + (y[1218] * y[55] * y[0]))
    r658 = (13.7 * y[1220] * y[675])/(1 + (y[1220] * y[675]))
    r740 = (13.7 * y[1276] * y[55] * y[0])/(1 + (y[1276] * y[55] * y[0]))
    r748 = (13.7 * y[1281] * y[55] * y[0])/(1 + (y[1281] * y[55] * y[0]))
    r752 = (13.7 * y[1282] * y[55] * y[0])/(1 + (y[1282] * y[55] * y[0]))
    r755 = (13.7 * y[1283] * y[55] * y[0])/(1 + (y[1283] * y[55] * y[0]))
    r761 = (13.7 * y[1283] * y[55] * y[0])/(1 + (y[1283] * y[55] * y[0]))
    r137 = (13.7 * y[1044] * y[26] * y[13] * y[0])/(1 + (y[1044] * y[26] * y[13] * y[0]))
    r138 = (13.7 * y[1044] * y[13] * y[2] * y[0])/(1 + (y[1044] * y[13] * y[2] * y[0]))
    r533 = (13.7 * y[1171] * y[13] * y[165])/(1 + (y[1171] * y[13] * y[165]))
    r538 = (13.7 * y[1171] * y[13] * y[165])/(1 + (y[1171] * y[13] * y[165]))
    r543 = (13.7 * y[1171] * y[13] * y[165])/(1 + (y[1171] * y[13] * y[165]))
    r654 = (13.7 * y[1218] * y[92] * y[93] * y[13])/(1 + (y[1218] * y[92] * y[93] * y[13]))
    r741 = (13.7 * y[1276] * y[1] * y[63] * y[13])/(1 + (y[1276] * y[1] * y[63] * y[13]))
    r743 = (13.7 * y[1277] * y[678] * y[13] * y[1])/(1 + (y[1277] * y[678] * y[13] * y[1]))
    r747 = (13.7 * y[1280] * y[1] * y[254] * y[13] )/(1 + (y[1280] * y[1] * y[254] * y[13] ))
    r749 = (13.7 * y[1281] * y[1] * y[230] * y[13])/(1 + (y[1281] * y[1] * y[230] * y[13]))
    r753 = (13.7 * y[1282] * y[1] * y[43] * y[13])/(1 + (y[1282] * y[1] * y[43] * y[13]))
    r759 = (13.7 * y[1283] * y[13] * y[703])/(1 + (y[1283] * y[13] * y[703]))
    r760 = (13.7 * y[1283] * y[1] * y[165] * y[13])/(1 + (y[1283] * y[1] * y[165] * y[13]))
    r765 = (13.7 * y[1283] * y[13] * y[703])/(1 + (y[1283] * y[13] * y[703]))
    r766 = (13.7 * y[1283] * y[1] * y[165] * y[13])/(1 + (y[1283] * y[1] * y[165] * y[13]))
    return (r87 + r90 + r94 + r97 + r116 + r117 + r118 + r119 + r121 + r122 + r123 + r124 + r125 + r127 + r178 + r333 + r529 + r530 + r531 + r534 + r535 + r536 + r537 + r539 + r540 + r541 + r542 + r544 + r545 + r546 + r547 + r559 + r561 + r562 + r630 + r631 + r632 + r634 + r636 + r637 + r639 + r641 + r642 + r643 + r645 + r646 + r647 + r648 + r653 + r658 + r740 + r748 + r752 + r755 + r761) - (r137 + r138 + r533 + r538 + r543 + r654 + r741 + r743 + r747 + r749 + r753 + r759 + r760 + r765 + r766)
 
def C00015(t, y):
    r73 = (13.7 * y[1021] * y[303] * y[175] * y[0])/(1 + (y[1021] * y[303] * y[175] * y[0]))
    r284 = (13.7 * y[1084] * y[477] * y[37])/(1 + (y[1084] * y[477] * y[37]))
    r286 = (13.7 * y[1084] * y[543] * y[37])/(1 + (y[1084] * y[543] * y[37]))
    r361 = (13.7 * y[1118] * y[63] * y[21])/(1 + (y[1118] * y[63] * y[21]))
    r376 = (13.7 * y[1129] * y[1] * y[84])/(1 + (y[1129] * y[1] * y[84]))
    r489 = (13.7 * y[1148] * y[40] * y[8])/(1 + (y[1148] * y[40] * y[8]))
    r382 = (13.7 * y[1131] * y[1] * y[14])/(1 + (y[1131] * y[1] * y[14]))
    return (r73 + r284 + r286 + r361 + r376 + r489) - (r382)
 
def C00016(t, y):
    r403 = (13.7 * y[1137] * y[1] * y[52])/(1 + (y[1137] * y[1] * y[52]))
    r62 = (13.7 * y[1019] * y[75] * y[15])/(1 + (y[1019] * y[75] * y[15]))
    r65 = (13.7 * y[1019] * y[75] * y[15])/(1 + (y[1019] * y[75] * y[15]))
    r68 = (13.7 * y[1019] * y[75] * y[15])/(1 + (y[1019] * y[75] * y[15]))
    r153 = (13.7 * y[1050] * y[19] * y[76] * y[15])/(1 + (y[1050] * y[19] * y[76] * y[15]))
    r156 = (13.7 * y[1050] * y[19] * y[76] * y[15])/(1 + (y[1050] * y[19] * y[76] * y[15]))
    r159 = (13.7 * y[1050] * y[19] * y[76] * y[15])/(1 + (y[1050] * y[19] * y[76] * y[15]))
    r574 = (13.7 * y[1183] * y[15] * y[0])/(1 + (y[1183] * y[15] * y[0]))
    return (r403) - (r62 + r65 + r68 + r153 + r156 + r159 + r574)
 
def C00017(t, y):
    r282 = (13.7 * y[1082] * y[339] * y[16])/(1 + (y[1082] * y[339] * y[16]))
    return (0) - (r282)
 
def C00018(t, y):
    r654 = (13.7 * y[1218] * y[92] * y[93] * y[13])/(1 + (y[1218] * y[92] * y[93] * y[13]))
    r655 = (13.7 * y[1218] * y[92] * y[93] * y[55])/(1 + (y[1218] * y[92] * y[93] * y[55]))
    r656 = (13.7 * y[1218] * y[93] * y[94] * y[55])/(1 + (y[1218] * y[93] * y[94] * y[55]))
    return (r654 + r655 + r656) - (0)
 
def C00019(t, y):
    r161 = (13.7 * y[1051] * y[18] * y[272])/(1 + (y[1051] * y[18] * y[272]))
    r162 = (13.7 * y[1051] * y[18] * y[272])/(1 + (y[1051] * y[18] * y[272]))
    r163 = (13.7 * y[1051] * y[18] * y[612])/(1 + (y[1051] * y[18] * y[612]))
    r164 = (13.7 * y[1051] * y[18] * y[354])/(1 + (y[1051] * y[18] * y[354]))
    r165 = (13.7 * y[1052] * y[18] * y[353])/(1 + (y[1052] * y[18] * y[353]))
    r166 = (13.7 * y[1053] * y[18] * y[568])/(1 + (y[1053] * y[18] * y[568]))
    r167 = (13.7 * y[1053] * y[598] * y[18])/(1 + (y[1053] * y[598] * y[18]))
    r168 = (13.7 * y[1054] * y[18] * y[569])/(1 + (y[1054] * y[18] * y[569]))
    r169 = (13.7 * y[1055] * y[18] * y[146])/(1 + (y[1055] * y[18] * y[146]))
    r170 = (13.7 * y[1056] * y[18] * y[692])/(1 + (y[1056] * y[18] * y[692]))
    r171 = (13.7 * y[1057] * y[18] * y[287])/(1 + (y[1057] * y[18] * y[287]))
    r172 = (13.7 * y[1058] * y[18] * y[338])/(1 + (y[1058] * y[18] * y[338]))
    r173 = (13.7 * y[1059] * y[361] * y[18])/(1 + (y[1059] * y[361] * y[18]))
    r175 = (13.7 * y[1061] * y[18] * y[249])/(1 + (y[1061] * y[18] * y[249]))
    r176 = (13.7 * y[1061] * y[18] * y[249])/(1 + (y[1061] * y[18] * y[249]))
    r177 = (13.7 * y[1062] * y[18] * y[392])/(1 + (y[1062] * y[18] * y[392]))
    r316 = (13.7 * y[1095] * y[18] * y[687])/(1 + (y[1095] * y[18] * y[687]))
    r331 = (13.7 * y[1100] * y[8] * y[12] * y[18])/(1 + (y[1100] * y[8] * y[12] * y[18]))
    r344 = (13.7 * y[1109] * y[18] * y[274] )/(1 + (y[1109] * y[18] * y[274] ))
    r500 = (13.7 * y[1156] * y[335] * y[660] * y[18] * y[491] * y[67])/(1 + (y[1156] * y[335] * y[660] * y[18] * y[491] * y[67]))
    r504 = (13.7 * y[1158] * y[629] * y[716] * y[18] * y[714] * y[67])/(1 + (y[1158] * y[629] * y[716] * y[18] * y[714] * y[67]))
    r505 = (13.7 * y[1158] * y[721] * y[716] * y[18] * y[714] * y[67])/(1 + (y[1158] * y[721] * y[716] * y[18] * y[714] * y[67]))
    r506 = (13.7 * y[1158] * y[720] * y[716] * y[18] * y[714] * y[67])/(1 + (y[1158] * y[720] * y[716] * y[18] * y[714] * y[67]))
    r507 = (13.7 * y[1159] * y[453] * y[660] * y[18])/(1 + (y[1159] * y[453] * y[660] * y[18]))
    r508 = (13.7 * y[1159] * y[453] * y[660] * y[18])/(1 + (y[1159] * y[453] * y[660] * y[18]))
    r509 = (13.7 * y[1159] * y[695] * y[18])/(1 + (y[1159] * y[695] * y[18]))
    r510 = (13.7 * y[1160] * y[696] * y[660] * y[18] * y[28])/(1 + (y[1160] * y[696] * y[660] * y[18] * y[28]))
    r595 = (13.7 * y[1195] * y[396] * y[18])/(1 + (y[1195] * y[396] * y[18]))
    r596 = (13.7 * y[1196] * y[69] * y[18] * y[28])/(1 + (y[1196] * y[69] * y[18] * y[28]))
    r597 = (13.7 * y[1197] * y[38] * y[18] * y[28])/(1 + (y[1197] * y[38] * y[18] * y[28]))
    return (0) - (r161 + r162 + r163 + r164 + r165 + r166 + r167 + r168 + r169 + r170 + r171 + r172 + r173 + r175 + r176 + r177 + r316 + r331 + r344 + r500 + r504 + r505 + r506 + r507 + r508 + r509 + r510 + r595 + r596 + r597)
 
def C00020(t, y):
    r258 = (13.7 * y[1077] * y[691] * y[662])/(1 + (y[1077] * y[691] * y[662]))
    r259 = (13.7 * y[1077] * y[691] * y[662])/(1 + (y[1077] * y[691] * y[662]))
    r401 = (13.7 * y[1135] * y[1] * y[299])/(1 + (y[1135] * y[1] * y[299]))
    r499 = (13.7 * y[1155] * y[1] * y[311] * y[0])/(1 + (y[1155] * y[1] * y[311] * y[0]))
    r568 = (13.7 * y[1183] * y[1] * y[0])/(1 + (y[1183] * y[1] * y[0]))
    r573 = (13.7 * y[1183] * y[2] * y[0])/(1 + (y[1183] * y[2] * y[0]))
    r574 = (13.7 * y[1183] * y[15] * y[0])/(1 + (y[1183] * y[15] * y[0]))
    r576 = (13.7 * y[1183] * y[254] * y[0])/(1 + (y[1183] * y[254] * y[0]))
    r577 = (13.7 * y[1183] * y[258] * y[0])/(1 + (y[1183] * y[258] * y[0]))
    r650 = (13.7 * y[1217] * y[415])/(1 + (y[1217] * y[415]))
    r691 = (13.7 * y[1243] * y[1] * y[69] * y[247])/(1 + (y[1243] * y[1] * y[69] * y[247]))
    r692 = (13.7 * y[1244] * y[1] * y[61] * y[327])/(1 + (y[1244] * y[1] * y[61] * y[327]))
    r693 = (13.7 * y[1244] * y[1] * y[488] * y[327])/(1 + (y[1244] * y[1] * y[488] * y[327]))
    r694 = (13.7 * y[1245] * y[1] * y[56] * y[330])/(1 + (y[1245] * y[1] * y[56] * y[330]))
    r695 = (13.7 * y[1245] * y[1] * y[56] * y[649])/(1 + (y[1245] * y[1] * y[56] * y[649]))
    r696 = (13.7 * y[1246] * y[319] * y[43] * y[1])/(1 + (y[1246] * y[319] * y[43] * y[1]))
    r697 = (13.7 * y[1247] * y[1] * y[33] * y[322])/(1 + (y[1247] * y[1] * y[33] * y[322]))
    r698 = (13.7 * y[1247] * y[1] * y[33] * y[322])/(1 + (y[1247] * y[1] * y[33] * y[322]))
    r699 = (13.7 * y[1248] * y[1] * y[113] * y[329])/(1 + (y[1248] * y[1] * y[113] * y[329]))
    r700 = (13.7 * y[1249] * y[1] * y[78] * y[320])/(1 + (y[1249] * y[1] * y[78] * y[320]))
    r701 = (13.7 * y[1250] * y[321] * y[23] * y[1])/(1 + (y[1250] * y[321] * y[23] * y[1]))
    r702 = (13.7 * y[1251] * y[1] * y[53] * y[317])/(1 + (y[1251] * y[1] * y[53] * y[317]))
    r703 = (13.7 * y[1252] * y[1] * y[65] * y[332])/(1 + (y[1252] * y[1] * y[65] * y[332]))
    r704 = (13.7 * y[1253] * y[1] * y[66] * y[328])/(1 + (y[1253] * y[1] * y[66] * y[328]))
    r705 = (13.7 * y[1253] * y[1] * y[66] * y[328])/(1 + (y[1253] * y[1] * y[66] * y[328]))
    r706 = (13.7 * y[1254] * y[1] * y[105] * y[323])/(1 + (y[1254] * y[1] * y[105] * y[323]))
    r707 = (13.7 * y[1255] * y[1] * y[116] * y[318])/(1 + (y[1255] * y[1] * y[116] * y[318]))
    r708 = (13.7 * y[1256] * y[1] * y[125] * y[331])/(1 + (y[1256] * y[1] * y[125] * y[331]))
    r709 = (13.7 * y[1257] * y[1] * y[97] * y[325])/(1 + (y[1257] * y[1] * y[97] * y[325]))
    r710 = (13.7 * y[1258] * y[1] * y[191] * y[324])/(1 + (y[1258] * y[1] * y[191] * y[324]))
    r711 = (13.7 * y[1259] * y[1] * y[41] * y[326])/(1 + (y[1259] * y[1] * y[41] * y[326]))
    r712 = (13.7 * y[1260] * y[1] * y[36] * y[316])/(1 + (y[1260] * y[1] * y[36] * y[316]))
    r713 = (13.7 * y[1261] * y[1] * y[124] * y[333] )/(1 + (y[1261] * y[1] * y[124] * y[333] ))
    r714 = (13.7 * y[1262] * y[1] * y[30] * y[9])/(1 + (y[1262] * y[1] * y[30] * y[9]))
    r715 = (13.7 * y[1262] * y[550] * y[9])/(1 + (y[1262] * y[550] * y[9]))
    r717 = (13.7 * y[1262] * y[1] * y[119] * y[9])/(1 + (y[1262] * y[1] * y[119] * y[9]))
    r718 = (13.7 * y[1262] * y[549] * y[9])/(1 + (y[1262] * y[549] * y[9]))
    r720 = (13.7 * y[1263] * y[1] * y[633] * y[632])/(1 + (y[1263] * y[1] * y[633] * y[632]))
    r721 = (13.7 * y[1263] * y[1] * y[633] * y[718])/(1 + (y[1263] * y[1] * y[633] * y[718]))
    r722 = (13.7 * y[1263] * y[1] * y[633] * y[719])/(1 + (y[1263] * y[1] * y[633] * y[719]))
    r724 = (13.7 * y[1263] * y[631] * y[632])/(1 + (y[1263] * y[631] * y[632]))
    r725 = (13.7 * y[1263] * y[1] * y[571] * y[719] )/(1 + (y[1263] * y[1] * y[571] * y[719] ))
    r726 = (13.7 * y[1264] * y[1] * y[214] * y[79])/(1 + (y[1264] * y[1] * y[214] * y[79]))
    r736 = (13.7 * y[1274] * y[1] * y[95] * y[471])/(1 + (y[1274] * y[1] * y[95] * y[471]))
    r738 = (13.7 * y[1274] * y[545] * y[563])/(1 + (y[1274] * y[545] * y[563]))
    r739 = (13.7 * y[1275] * y[671] * y[41] * y[1])/(1 + (y[1275] * y[671] * y[41] * y[1]))
    r745 = (13.7 * y[1279] * y[1] * y[171] * y[43])/(1 + (y[1279] * y[1] * y[171] * y[43]))
    r746 = (13.7 * y[1280] * y[1] * y[254] * y[55] * y[0])/(1 + (y[1280] * y[1] * y[254] * y[55] * y[0]))
    r747 = (13.7 * y[1280] * y[1] * y[254] * y[13] )/(1 + (y[1280] * y[1] * y[254] * y[13] ))
    r749 = (13.7 * y[1281] * y[1] * y[230] * y[13])/(1 + (y[1281] * y[1] * y[230] * y[13]))
    r750 = (13.7 * y[1281] * y[1] * y[230] * y[55] * y[0])/(1 + (y[1281] * y[1] * y[230] * y[55] * y[0]))
    r751 = (13.7 * y[1281] * y[646] * y[1] * y[55] * y[0])/(1 + (y[1281] * y[646] * y[1] * y[55] * y[0]))
    r753 = (13.7 * y[1282] * y[1] * y[43] * y[13])/(1 + (y[1282] * y[1] * y[43] * y[13]))
    r754 = (13.7 * y[1282] * y[1] * y[43] * y[55] * y[0])/(1 + (y[1282] * y[1] * y[43] * y[55] * y[0]))
    r768 = (13.7 * y[1285] * y[2] * y[34] * y[343])/(1 + (y[1285] * y[2] * y[34] * y[343]))
    r152 = (13.7 * y[1050] * y[76] * y[26] * y[19])/(1 + (y[1050] * y[76] * y[26] * y[19]))
    r153 = (13.7 * y[1050] * y[19] * y[76] * y[15])/(1 + (y[1050] * y[19] * y[76] * y[15]))
    r154 = (13.7 * y[1050] * y[98] * y[502] * y[19])/(1 + (y[1050] * y[98] * y[502] * y[19]))
    r155 = (13.7 * y[1050] * y[76] * y[26] * y[19])/(1 + (y[1050] * y[76] * y[26] * y[19]))
    r156 = (13.7 * y[1050] * y[19] * y[76] * y[15])/(1 + (y[1050] * y[19] * y[76] * y[15]))
    r157 = (13.7 * y[1050] * y[98] * y[502] * y[19])/(1 + (y[1050] * y[98] * y[502] * y[19]))
    r158 = (13.7 * y[1050] * y[76] * y[26] * y[19])/(1 + (y[1050] * y[76] * y[26] * y[19]))
    r159 = (13.7 * y[1050] * y[19] * y[76] * y[15])/(1 + (y[1050] * y[19] * y[76] * y[15]))
    r160 = (13.7 * y[1050] * y[98] * y[502] * y[19])/(1 + (y[1050] * y[98] * y[502] * y[19]))
    return (r258 + r259 + r401 + r499 + r568 + r573 + r574 + r576 + r577 + r650 + r691 + r692 + r693 + r694 + r695 + r696 + r697 + r698 + r699 + r700 + r701 + r702 + r703 + r704 + r705 + r706 + r707 + r708 + r709 + r710 + r711 + r712 + r713 + r714 + r715 + r717 + r718 + r720 + r721 + r722 + r724 + r725 + r726 + r736 + r738 + r739 + r745 + r746 + r747 + r749 + r750 + r751 + r753 + r754 + r768) - (r152 + r153 + r154 + r155 + r156 + r157 + r158 + r159 + r160)
 
def C00021(t, y):
    r161 = (13.7 * y[1051] * y[18] * y[272])/(1 + (y[1051] * y[18] * y[272]))
    r162 = (13.7 * y[1051] * y[18] * y[272])/(1 + (y[1051] * y[18] * y[272]))
    r163 = (13.7 * y[1051] * y[18] * y[612])/(1 + (y[1051] * y[18] * y[612]))
    r164 = (13.7 * y[1051] * y[18] * y[354])/(1 + (y[1051] * y[18] * y[354]))
    r165 = (13.7 * y[1052] * y[18] * y[353])/(1 + (y[1052] * y[18] * y[353]))
    r166 = (13.7 * y[1053] * y[18] * y[568])/(1 + (y[1053] * y[18] * y[568]))
    r167 = (13.7 * y[1053] * y[598] * y[18])/(1 + (y[1053] * y[598] * y[18]))
    r168 = (13.7 * y[1054] * y[18] * y[569])/(1 + (y[1054] * y[18] * y[569]))
    r169 = (13.7 * y[1055] * y[18] * y[146])/(1 + (y[1055] * y[18] * y[146]))
    r170 = (13.7 * y[1056] * y[18] * y[692])/(1 + (y[1056] * y[18] * y[692]))
    r171 = (13.7 * y[1057] * y[18] * y[287])/(1 + (y[1057] * y[18] * y[287]))
    r172 = (13.7 * y[1058] * y[18] * y[338])/(1 + (y[1058] * y[18] * y[338]))
    r173 = (13.7 * y[1059] * y[361] * y[18])/(1 + (y[1059] * y[361] * y[18]))
    r175 = (13.7 * y[1061] * y[18] * y[249])/(1 + (y[1061] * y[18] * y[249]))
    r176 = (13.7 * y[1061] * y[18] * y[249])/(1 + (y[1061] * y[18] * y[249]))
    r177 = (13.7 * y[1062] * y[18] * y[392])/(1 + (y[1062] * y[18] * y[392]))
    r507 = (13.7 * y[1159] * y[453] * y[660] * y[18])/(1 + (y[1159] * y[453] * y[660] * y[18]))
    r509 = (13.7 * y[1159] * y[695] * y[18])/(1 + (y[1159] * y[695] * y[18]))
    r510 = (13.7 * y[1160] * y[696] * y[660] * y[18] * y[28])/(1 + (y[1160] * y[696] * y[660] * y[18] * y[28]))
    return (r161 + r162 + r163 + r164 + r165 + r166 + r167 + r168 + r169 + r170 + r171 + r172 + r173 + r175 + r176 + r177 + r507 + r509 + r510) - (0)
 
def C00022(t, y):
    r116 = (13.7 * y[1036] * y[36] * y[2] * y[0])/(1 + (y[1036] * y[36] * y[2] * y[0]))
    r195 = (13.7 * y[1071] * y[260] * y[10])/(1 + (y[1071] * y[260] * y[10]))
    r196 = (13.7 * y[1071] * y[553] * y[10])/(1 + (y[1071] * y[553] * y[10]))
    r198 = (13.7 * y[1071] * y[260] * y[59])/(1 + (y[1071] * y[260] * y[59]))
    r199 = (13.7 * y[1071] * y[553] * y[59])/(1 + (y[1071] * y[553] * y[59]))
    r202 = (13.7 * y[1071] * y[260] * y[10])/(1 + (y[1071] * y[260] * y[10]))
    r203 = (13.7 * y[1071] * y[553] * y[10])/(1 + (y[1071] * y[553] * y[10]))
    r205 = (13.7 * y[1071] * y[260] * y[59])/(1 + (y[1071] * y[260] * y[59]))
    r206 = (13.7 * y[1071] * y[553] * y[59])/(1 + (y[1071] * y[553] * y[59]))
    r209 = (13.7 * y[1071] * y[260] * y[10])/(1 + (y[1071] * y[260] * y[10]))
    r210 = (13.7 * y[1071] * y[553] * y[10])/(1 + (y[1071] * y[553] * y[10]))
    r212 = (13.7 * y[1071] * y[260] * y[59])/(1 + (y[1071] * y[260] * y[59]))
    r213 = (13.7 * y[1071] * y[553] * y[59])/(1 + (y[1071] * y[553] * y[59]))
    r216 = (13.7 * y[1071] * y[260] * y[10])/(1 + (y[1071] * y[260] * y[10]))
    r217 = (13.7 * y[1071] * y[553] * y[10])/(1 + (y[1071] * y[553] * y[10]))
    r219 = (13.7 * y[1071] * y[260] * y[59])/(1 + (y[1071] * y[260] * y[59]))
    r220 = (13.7 * y[1071] * y[553] * y[59])/(1 + (y[1071] * y[553] * y[59]))
    r223 = (13.7 * y[1071] * y[260] * y[10])/(1 + (y[1071] * y[260] * y[10]))
    r224 = (13.7 * y[1071] * y[553] * y[10])/(1 + (y[1071] * y[553] * y[10]))
    r226 = (13.7 * y[1071] * y[260] * y[59])/(1 + (y[1071] * y[260] * y[59]))
    r227 = (13.7 * y[1071] * y[553] * y[59])/(1 + (y[1071] * y[553] * y[59]))
    r273 = (13.7 * y[1126] * y[62] * y[225])/(1 + (y[1126] * y[62] * y[225]))
    r630 = (13.7 * y[1212] * y[565] * y[0])/(1 + (y[1212] * y[565] * y[0]))
    r631 = (13.7 * y[1212] * y[244])/(1 + (y[1212] * y[244]))
    r632 = (13.7 * y[1213] * y[56] )/(1 + (y[1213] * y[56] ))
    r634 = (13.7 * y[1213] * y[701] * y[0])/(1 + (y[1213] * y[701] * y[0]))
    r637 = (13.7 * y[1213] * y[56])/(1 + (y[1213] * y[56]))
    r639 = (13.7 * y[1213] * y[701] * y[0])/(1 + (y[1213] * y[701] * y[0]))
    r645 = (13.7 * y[1214] * y[56])/(1 + (y[1214] * y[56]))
    r197 = (13.7 * y[1071] * y[21] * y[59])/(1 + (y[1071] * y[21] * y[59]))
    r201 = (13.7 * y[1071] * y[21] * y[87])/(1 + (y[1071] * y[21] * y[87]))
    r204 = (13.7 * y[1071] * y[21] * y[59])/(1 + (y[1071] * y[21] * y[59]))
    r208 = (13.7 * y[1071] * y[21] * y[87])/(1 + (y[1071] * y[21] * y[87]))
    r211 = (13.7 * y[1071] * y[21] * y[59])/(1 + (y[1071] * y[21] * y[59]))
    r215 = (13.7 * y[1071] * y[21] * y[87])/(1 + (y[1071] * y[21] * y[87]))
    r218 = (13.7 * y[1071] * y[21] * y[59])/(1 + (y[1071] * y[21] * y[59]))
    r222 = (13.7 * y[1071] * y[21] * y[87])/(1 + (y[1071] * y[21] * y[87]))
    r225 = (13.7 * y[1071] * y[21] * y[59])/(1 + (y[1071] * y[21] * y[59]))
    r229 = (13.7 * y[1071] * y[21] * y[87])/(1 + (y[1071] * y[21] * y[87]))
    r230 = (13.7 * y[1072] * y[21] * y[93])/(1 + (y[1072] * y[21] * y[93]))
    r358 = (13.7 * y[1118] * y[1] * y[21])/(1 + (y[1118] * y[1] * y[21]))
    r359 = (13.7 * y[1118] * y[38] * y[21])/(1 + (y[1118] * y[38] * y[21]))
    r360 = (13.7 * y[1118] * y[54] * y[21])/(1 + (y[1118] * y[54] * y[21]))
    r361 = (13.7 * y[1118] * y[63] * y[21])/(1 + (y[1118] * y[63] * y[21]))
    r362 = (13.7 * y[1118] * y[68] * y[21])/(1 + (y[1118] * y[68] * y[21]))
    r363 = (13.7 * y[1118] * y[102] * y[21])/(1 + (y[1118] * y[102] * y[21]))
    r364 = (13.7 * y[1118] * y[164] * y[21])/(1 + (y[1118] * y[164] * y[21]))
    r365 = (13.7 * y[1118] * y[130] * y[21])/(1 + (y[1118] * y[130] * y[21]))
    r657 = (13.7 * y[1219] * y[198] * y[21])/(1 + (y[1219] * y[198] * y[21]))
    r767 = (13.7 * y[1284] * y[1] * y[21] * y[165])/(1 + (y[1284] * y[1] * y[21] * y[165]))
    return (r116 + r195 + r196 + r198 + r199 + r202 + r203 + r205 + r206 + r209 + r210 + r212 + r213 + r216 + r217 + r219 + r220 + r223 + r224 + r226 + r227 + r273 + r630 + r631 + r632 + r634 + r637 + r639 + r645) - (r197 + r201 + r204 + r208 + r211 + r215 + r218 + r222 + r225 + r229 + r230 + r358 + r359 + r360 + r361 + r362 + r363 + r364 + r365 + r657 + r767)
 
def C00024(t, y):
    r101 = (13.7 * y[1026] * y[70] * y[9] * y[2])/(1 + (y[1026] * y[70] * y[9] * y[2]))
    r109 = (13.7 * y[1031] * y[554] * y[9] * y[10] * y[107])/(1 + (y[1031] * y[554] * y[9] * y[10] * y[107]))
    r283 = (13.7 * y[1083] * y[355] * y[9])/(1 + (y[1083] * y[355] * y[9]))
    r714 = (13.7 * y[1262] * y[1] * y[30] * y[9])/(1 + (y[1262] * y[1] * y[30] * y[9]))
    r715 = (13.7 * y[1262] * y[550] * y[9])/(1 + (y[1262] * y[550] * y[9]))
    r231 = (13.7 * y[1073] * y[22] * y[23])/(1 + (y[1073] * y[22] * y[23]))
    r262 = (13.7 * y[1080] * y[22] * y[8])/(1 + (y[1080] * y[22] * y[8]))
    return (r101 + r109 + r283 + r714 + r715) - (r231 + r262)
 
def C00025(t, y):
    r122 = (13.7 * y[1037] * y[55] * y[0])/(1 + (y[1037] * y[55] * y[0]))
    r269 = (13.7 * y[1081] * y[347] * y[0])/(1 + (y[1081] * y[347] * y[0]))
    r277 = (13.7 * y[1081] * y[347] * y[0])/(1 + (y[1081] * y[347] * y[0]))
    r339 = (13.7 * y[1107] * y[55] * y[71])/(1 + (y[1107] * y[55] * y[71]))
    r340 = (13.7 * y[1108] * y[97] * y[24])/(1 + (y[1108] * y[97] * y[24]))
    r341 = (13.7 * y[1108] * y[124] * y[24])/(1 + (y[1108] * y[124] * y[24]))
    r342 = (13.7 * y[1108] * y[191] * y[24])/(1 + (y[1108] * y[191] * y[24]))
    r343 = (13.7 * y[1108] * y[348] * y[24])/(1 + (y[1108] * y[348] * y[24]))
    r345 = (13.7 * y[1110] * y[231] * y[24])/(1 + (y[1110] * y[231] * y[24]))
    r346 = (13.7 * y[1111] * y[276] * y[24])/(1 + (y[1111] * y[276] * y[24]))
    r347 = (13.7 * y[1111] * y[66] * y[24])/(1 + (y[1111] * y[66] * y[24]))
    r348 = (13.7 * y[1111] * y[69] * y[24])/(1 + (y[1111] * y[69] * y[24]))
    r529 = (13.7 * y[1169] * y[55] * y[0])/(1 + (y[1169] * y[55] * y[0]))
    r653 = (13.7 * y[1218] * y[55] * y[0])/(1 + (y[1218] * y[55] * y[0]))
    r655 = (13.7 * y[1218] * y[92] * y[93] * y[55])/(1 + (y[1218] * y[92] * y[93] * y[55]))
    r656 = (13.7 * y[1218] * y[93] * y[94] * y[55])/(1 + (y[1218] * y[93] * y[94] * y[55]))
    r740 = (13.7 * y[1276] * y[55] * y[0])/(1 + (y[1276] * y[55] * y[0]))
    r742 = (13.7 * y[1276] * y[1] * y[63] * y[55] * y[0])/(1 + (y[1276] * y[1] * y[63] * y[55] * y[0]))
    r746 = (13.7 * y[1280] * y[1] * y[254] * y[55] * y[0])/(1 + (y[1280] * y[1] * y[254] * y[55] * y[0]))
    r748 = (13.7 * y[1281] * y[55] * y[0])/(1 + (y[1281] * y[55] * y[0]))
    r750 = (13.7 * y[1281] * y[1] * y[230] * y[55] * y[0])/(1 + (y[1281] * y[1] * y[230] * y[55] * y[0]))
    r751 = (13.7 * y[1281] * y[646] * y[1] * y[55] * y[0])/(1 + (y[1281] * y[646] * y[1] * y[55] * y[0]))
    r752 = (13.7 * y[1282] * y[55] * y[0])/(1 + (y[1282] * y[55] * y[0]))
    r754 = (13.7 * y[1282] * y[1] * y[43] * y[55] * y[0])/(1 + (y[1282] * y[1] * y[43] * y[55] * y[0]))
    r755 = (13.7 * y[1283] * y[55] * y[0])/(1 + (y[1283] * y[55] * y[0]))
    r756 = (13.7 * y[1283] * y[1] * y[55] * y[165] * y[0])/(1 + (y[1283] * y[1] * y[55] * y[165] * y[0]))
    r761 = (13.7 * y[1283] * y[55] * y[0])/(1 + (y[1283] * y[55] * y[0]))
    r762 = (13.7 * y[1283] * y[1] * y[55] * y[165] * y[0])/(1 + (y[1283] * y[1] * y[55] * y[165] * y[0]))
    r120 = (13.7 * y[1037] * y[23] * y[5])/(1 + (y[1037] * y[23] * y[5]))
    r121 = (13.7 * y[1037] * y[23] * y[5] * y[0])/(1 + (y[1037] * y[23] * y[5] * y[0]))
    r123 = (13.7 * y[1038] * y[23] * y[5] * y[0])/(1 + (y[1038] * y[23] * y[5] * y[0]))
    r231 = (13.7 * y[1073] * y[22] * y[23])/(1 + (y[1073] * y[22] * y[23]))
    r260 = (13.7 * y[1078] * y[195] * y[23])/(1 + (y[1078] * y[195] * y[23]))
    r270 = (13.7 * y[1081] * y[357] * y[23])/(1 + (y[1081] * y[357] * y[23]))
    r271 = (13.7 * y[1081] * y[501] * y[23])/(1 + (y[1081] * y[501] * y[23]))
    r278 = (13.7 * y[1081] * y[357] * y[23])/(1 + (y[1081] * y[357] * y[23]))
    r279 = (13.7 * y[1081] * y[501] * y[23])/(1 + (y[1081] * y[501] * y[23]))
    r302 = (13.7 * y[1087] * y[382] * y[12] * y[23])/(1 + (y[1087] * y[382] * y[12] * y[23]))
    r369 = (13.7 * y[1122] * y[1] * y[23])/(1 + (y[1122] * y[1] * y[23]))
    r663 = (13.7 * y[1224] * y[23])/(1 + (y[1224] * y[23]))
    r701 = (13.7 * y[1250] * y[321] * y[23] * y[1])/(1 + (y[1250] * y[321] * y[23] * y[1]))
    return (r122 + r269 + r277 + r339 + r340 + r341 + r342 + r343 + r345 + r346 + r347 + r348 + r529 + r653 + r655 + r656 + r740 + r742 + r746 + r748 + r750 + r751 + r752 + r754 + r755 + r756 + r761 + r762) - (r120 + r121 + r123 + r231 + r260 + r270 + r271 + r278 + r279 + r302 + r369 + r663 + r701)
 
def C00026(t, y):
    r120 = (13.7 * y[1037] * y[23] * y[5])/(1 + (y[1037] * y[23] * y[5]))
    r121 = (13.7 * y[1037] * y[23] * y[5] * y[0])/(1 + (y[1037] * y[23] * y[5] * y[0]))
    r123 = (13.7 * y[1038] * y[23] * y[5] * y[0])/(1 + (y[1038] * y[23] * y[5] * y[0]))
    r340 = (13.7 * y[1108] * y[97] * y[24])/(1 + (y[1108] * y[97] * y[24]))
    r341 = (13.7 * y[1108] * y[124] * y[24])/(1 + (y[1108] * y[124] * y[24]))
    r342 = (13.7 * y[1108] * y[191] * y[24])/(1 + (y[1108] * y[191] * y[24]))
    r343 = (13.7 * y[1108] * y[348] * y[24])/(1 + (y[1108] * y[348] * y[24]))
    r345 = (13.7 * y[1110] * y[231] * y[24])/(1 + (y[1110] * y[231] * y[24]))
    r346 = (13.7 * y[1111] * y[276] * y[24])/(1 + (y[1111] * y[276] * y[24]))
    r347 = (13.7 * y[1111] * y[66] * y[24])/(1 + (y[1111] * y[66] * y[24]))
    r348 = (13.7 * y[1111] * y[69] * y[24])/(1 + (y[1111] * y[69] * y[24]))
    return (r120 + r121 + r123) - (r340 + r341 + r342 + r343 + r345 + r346 + r347 + r348)
 
def C00027(t, y):
    r126 = (13.7 * y[1039] * y[43] * y[6])/(1 + (y[1039] * y[43] * y[6]))
    r127 = (13.7 * y[1039] * y[43] * y[0] * y[6])/(1 + (y[1039] * y[43] * y[0] * y[6]))
    return (r126 + r127) - (0)
 
def C00028(t, y):
    r510 = (13.7 * y[1160] * y[696] * y[660] * y[18] * y[28])/(1 + (y[1160] * y[696] * y[660] * y[18] * y[28]))
    r596 = (13.7 * y[1196] * y[69] * y[18] * y[28])/(1 + (y[1196] * y[69] * y[18] * y[28]))
    r597 = (13.7 * y[1197] * y[38] * y[18] * y[28])/(1 + (y[1197] * y[38] * y[18] * y[28]))
    r137 = (13.7 * y[1044] * y[26] * y[13] * y[0])/(1 + (y[1044] * y[26] * y[13] * y[0]))
    r152 = (13.7 * y[1050] * y[76] * y[26] * y[19])/(1 + (y[1050] * y[76] * y[26] * y[19]))
    r155 = (13.7 * y[1050] * y[76] * y[26] * y[19])/(1 + (y[1050] * y[76] * y[26] * y[19]))
    r158 = (13.7 * y[1050] * y[76] * y[26] * y[19])/(1 + (y[1050] * y[76] * y[26] * y[19]))
    return (r510 + r596 + r597) - (r137 + r152 + r155 + r158)
 
def C00029(t, y):
    r493 = (13.7 * y[1150] * y[63] * y[82])/(1 + (y[1150] * y[63] * y[82]))
    r575 = (13.7 * y[1183] * y[27] * y[0])/(1 + (y[1183] * y[27] * y[0]))
    r667 = (13.7 * y[1228] * y[27])/(1 + (y[1228] * y[27]))
    return (r493) - (r575 + r667)
 
def C00030(t, y):
    r137 = (13.7 * y[1044] * y[26] * y[13] * y[0])/(1 + (y[1044] * y[26] * y[13] * y[0]))
    r152 = (13.7 * y[1050] * y[76] * y[26] * y[19])/(1 + (y[1050] * y[76] * y[26] * y[19]))
    r155 = (13.7 * y[1050] * y[76] * y[26] * y[19])/(1 + (y[1050] * y[76] * y[26] * y[19]))
    r158 = (13.7 * y[1050] * y[76] * y[26] * y[19])/(1 + (y[1050] * y[76] * y[26] * y[19]))
    r510 = (13.7 * y[1160] * y[696] * y[660] * y[18] * y[28])/(1 + (y[1160] * y[696] * y[660] * y[18] * y[28]))
    r596 = (13.7 * y[1196] * y[69] * y[18] * y[28])/(1 + (y[1196] * y[69] * y[18] * y[28]))
    r597 = (13.7 * y[1197] * y[38] * y[18] * y[28])/(1 + (y[1197] * y[38] * y[18] * y[28]))
    return (r137 + r152 + r155 + r158) - (r510 + r596 + r597)
 
def C00031(t, y):
    return (0) - (0)
 
def C00033(t, y):
    r323 = (13.7 * y[1099] * y[266] * y[163])/(1 + (y[1099] * y[266] * y[163]))
    r324 = (13.7 * y[1099] * y[266] * y[311])/(1 + (y[1099] * y[266] * y[311]))
    r325 = (13.7 * y[1099] * y[266] * y[170] * y[174] * y[67])/(1 + (y[1099] * y[266] * y[170] * y[174] * y[67]))
    r327 = (13.7 * y[1099] * y[266] * y[163])/(1 + (y[1099] * y[266] * y[163]))
    r328 = (13.7 * y[1099] * y[266] * y[311])/(1 + (y[1099] * y[266] * y[311]))
    r329 = (13.7 * y[1099] * y[266] * y[170] * y[174] * y[67] )/(1 + (y[1099] * y[266] * y[170] * y[174] * y[67] ))
    r714 = (13.7 * y[1262] * y[1] * y[30] * y[9])/(1 + (y[1262] * y[1] * y[30] * y[9]))
    r716 = (13.7 * y[1262] * y[1] * y[30])/(1 + (y[1262] * y[1] * y[30]))
    return (r323 + r324 + r325 + r327 + r328 + r329) - (r714 + r716)
 
def C00035(t, y):
    r74 = (13.7 * y[1021] * y[180] * y[175] * y[0])/(1 + (y[1021] * y[180] * y[175] * y[0]))
    r359 = (13.7 * y[1118] * y[38] * y[21])/(1 + (y[1118] * y[38] * y[21]))
    r396 = (13.7 * y[1133] * y[1] * y[111])/(1 + (y[1133] * y[1] * y[111]))
    r490 = (13.7 * y[1148] * y[40] * y[8])/(1 + (y[1148] * y[40] * y[8]))
    r744 = (13.7 * y[1278] * y[38] * y[101] * y[43])/(1 + (y[1278] * y[38] * y[101] * y[43]))
    r383 = (13.7 * y[1131] * y[1] * y[31])/(1 + (y[1131] * y[1] * y[31]))
    return (r74 + r359 + r396 + r490 + r744) - (r383)
 
def C00036(t, y):
    r127 = (13.7 * y[1039] * y[43] * y[0] * y[6])/(1 + (y[1039] * y[43] * y[0] * y[6]))
    r767 = (13.7 * y[1284] * y[1] * y[21] * y[165])/(1 + (y[1284] * y[1] * y[21] * y[165]))
    return (r127 + r767) - (0)
 
def C00037(t, y):
    r527 = (13.7 * y[1168] * y[308] * y[0])/(1 + (y[1168] * y[308] * y[0]))
    r528 = (13.7 * y[1168] * y[513] * y[0])/(1 + (y[1168] * y[513] * y[0]))
    r119 = (13.7 * y[1036] * y[33] * y[0] * y[2])/(1 + (y[1036] * y[33] * y[0] * y[2]))
    r128 = (13.7 * y[1040] * y[33] * y[340])/(1 + (y[1040] * y[33] * y[340]))
    r129 = (13.7 * y[1040] * y[33] * y[340])/(1 + (y[1040] * y[33] * y[340]))
    r697 = (13.7 * y[1247] * y[1] * y[33] * y[322])/(1 + (y[1247] * y[1] * y[33] * y[322]))
    r698 = (13.7 * y[1247] * y[1] * y[33] * y[322])/(1 + (y[1247] * y[1] * y[33] * y[322]))
    r735 = (13.7 * y[1273] * y[1] * y[382] * y[33])/(1 + (y[1273] * y[1] * y[382] * y[33]))
    return (r527 + r528) - (r119 + r128 + r129 + r697 + r698 + r735)
 
def C00039(t, y):
    r457 = (13.7 * y[1147] * y[235] * y[34])/(1 + (y[1147] * y[235] * y[34]))
    r458 = (13.7 * y[1147] * y[102] * y[34])/(1 + (y[1147] * y[102] * y[34]))
    r459 = (13.7 * y[1147] * y[164] * y[34])/(1 + (y[1147] * y[164] * y[34]))
    r460 = (13.7 * y[1147] * y[204] * y[34])/(1 + (y[1147] * y[204] * y[34]))
    r461 = (13.7 * y[1147] * y[205] * y[34])/(1 + (y[1147] * y[205] * y[34]))
    r463 = (13.7 * y[1147] * y[235] * y[34])/(1 + (y[1147] * y[235] * y[34]))
    r464 = (13.7 * y[1147] * y[102] * y[34])/(1 + (y[1147] * y[102] * y[34]))
    r465 = (13.7 * y[1147] * y[164] * y[34])/(1 + (y[1147] * y[164] * y[34]))
    r466 = (13.7 * y[1147] * y[204] * y[34])/(1 + (y[1147] * y[204] * y[34]))
    r467 = (13.7 * y[1147] * y[205] * y[34])/(1 + (y[1147] * y[205] * y[34]))
    r469 = (13.7 * y[1147] * y[235] * y[34])/(1 + (y[1147] * y[235] * y[34]))
    r470 = (13.7 * y[1147] * y[102] * y[34])/(1 + (y[1147] * y[102] * y[34]))
    r471 = (13.7 * y[1147] * y[164] * y[34])/(1 + (y[1147] * y[164] * y[34]))
    r472 = (13.7 * y[1147] * y[204] * y[34])/(1 + (y[1147] * y[204] * y[34]))
    r473 = (13.7 * y[1147] * y[205] * y[34])/(1 + (y[1147] * y[205] * y[34]))
    r475 = (13.7 * y[1147] * y[235] * y[34])/(1 + (y[1147] * y[235] * y[34]))
    r476 = (13.7 * y[1147] * y[102] * y[34])/(1 + (y[1147] * y[102] * y[34]))
    r477 = (13.7 * y[1147] * y[164] * y[34])/(1 + (y[1147] * y[164] * y[34]))
    r478 = (13.7 * y[1147] * y[204] * y[34])/(1 + (y[1147] * y[204] * y[34]))
    r479 = (13.7 * y[1147] * y[205] * y[34])/(1 + (y[1147] * y[205] * y[34]))
    r481 = (13.7 * y[1147] * y[235] * y[34])/(1 + (y[1147] * y[235] * y[34]))
    r482 = (13.7 * y[1147] * y[102] * y[34])/(1 + (y[1147] * y[102] * y[34]))
    r483 = (13.7 * y[1147] * y[164] * y[34])/(1 + (y[1147] * y[164] * y[34]))
    r484 = (13.7 * y[1147] * y[204] * y[34])/(1 + (y[1147] * y[204] * y[34]))
    r485 = (13.7 * y[1147] * y[205] * y[34])/(1 + (y[1147] * y[205] * y[34]))
    r768 = (13.7 * y[1285] * y[2] * y[34] * y[343])/(1 + (y[1285] * y[2] * y[34] * y[343]))
    r457 = (13.7 * y[1147] * y[235] * y[34])/(1 + (y[1147] * y[235] * y[34]))
    r458 = (13.7 * y[1147] * y[102] * y[34])/(1 + (y[1147] * y[102] * y[34]))
    r459 = (13.7 * y[1147] * y[164] * y[34])/(1 + (y[1147] * y[164] * y[34]))
    r460 = (13.7 * y[1147] * y[204] * y[34])/(1 + (y[1147] * y[204] * y[34]))
    r461 = (13.7 * y[1147] * y[205] * y[34])/(1 + (y[1147] * y[205] * y[34]))
    r463 = (13.7 * y[1147] * y[235] * y[34])/(1 + (y[1147] * y[235] * y[34]))
    r464 = (13.7 * y[1147] * y[102] * y[34])/(1 + (y[1147] * y[102] * y[34]))
    r465 = (13.7 * y[1147] * y[164] * y[34])/(1 + (y[1147] * y[164] * y[34]))
    r466 = (13.7 * y[1147] * y[204] * y[34])/(1 + (y[1147] * y[204] * y[34]))
    r467 = (13.7 * y[1147] * y[205] * y[34])/(1 + (y[1147] * y[205] * y[34]))
    r469 = (13.7 * y[1147] * y[235] * y[34])/(1 + (y[1147] * y[235] * y[34]))
    r470 = (13.7 * y[1147] * y[102] * y[34])/(1 + (y[1147] * y[102] * y[34]))
    r471 = (13.7 * y[1147] * y[164] * y[34])/(1 + (y[1147] * y[164] * y[34]))
    r472 = (13.7 * y[1147] * y[204] * y[34])/(1 + (y[1147] * y[204] * y[34]))
    r473 = (13.7 * y[1147] * y[205] * y[34])/(1 + (y[1147] * y[205] * y[34]))
    r475 = (13.7 * y[1147] * y[235] * y[34])/(1 + (y[1147] * y[235] * y[34]))
    r476 = (13.7 * y[1147] * y[102] * y[34])/(1 + (y[1147] * y[102] * y[34]))
    r477 = (13.7 * y[1147] * y[164] * y[34])/(1 + (y[1147] * y[164] * y[34]))
    r478 = (13.7 * y[1147] * y[204] * y[34])/(1 + (y[1147] * y[204] * y[34]))
    r479 = (13.7 * y[1147] * y[205] * y[34])/(1 + (y[1147] * y[205] * y[34]))
    r481 = (13.7 * y[1147] * y[235] * y[34])/(1 + (y[1147] * y[235] * y[34]))
    r482 = (13.7 * y[1147] * y[102] * y[34])/(1 + (y[1147] * y[102] * y[34]))
    r483 = (13.7 * y[1147] * y[164] * y[34])/(1 + (y[1147] * y[164] * y[34]))
    r484 = (13.7 * y[1147] * y[204] * y[34])/(1 + (y[1147] * y[204] * y[34]))
    r485 = (13.7 * y[1147] * y[205] * y[34])/(1 + (y[1147] * y[205] * y[34]))
    r768 = (13.7 * y[1285] * y[2] * y[34] * y[343])/(1 + (y[1285] * y[2] * y[34] * y[343]))
    return (r457 + r458 + r459 + r460 + r461 + r463 + r464 + r465 + r466 + r467 + r469 + r470 + r471 + r472 + r473 + r475 + r476 + r477 + r478 + r479 + r481 + r482 + r483 + r484 + r485 + r768) - (r457 + r458 + r459 + r460 + r461 + r463 + r464 + r465 + r466 + r467 + r469 + r470 + r471 + r472 + r473 + r475 + r476 + r477 + r478 + r479 + r481 + r482 + r483 + r484 + r485 + r768)
 
def C00040(t, y):
    r232 = (13.7 * y[1074] * y[75] * y[35])/(1 + (y[1074] * y[75] * y[35]))
    return (0) - (r232)
 
def C00041(t, y):
    r501 = (13.7 * y[1157] * y[621] * y[78])/(1 + (y[1157] * y[621] * y[78]))
    r502 = (13.7 * y[1157] * y[78] * y[368])/(1 + (y[1157] * y[78] * y[368]))
    r532 = (13.7 * y[1170] * y[379] * y[0])/(1 + (y[1170] * y[379] * y[0]))
    r116 = (13.7 * y[1036] * y[36] * y[2] * y[0])/(1 + (y[1036] * y[36] * y[2] * y[0]))
    r661 = (13.7 * y[1223] * y[36])/(1 + (y[1223] * y[36]))
    r662 = (13.7 * y[1223] * y[36])/(1 + (y[1223] * y[36]))
    r712 = (13.7 * y[1260] * y[1] * y[36] * y[316])/(1 + (y[1260] * y[1] * y[36] * y[316]))
    r731 = (13.7 * y[1269] * y[1] * y[271] * y[36])/(1 + (y[1269] * y[1] * y[271] * y[36]))
    return (r501 + r502 + r532) - (r116 + r661 + r662 + r712 + r731)
 
def C00043(t, y):
    r404 = (13.7 * y[1138] * y[63] * y[455])/(1 + (y[1138] * y[63] * y[455]))
    r284 = (13.7 * y[1084] * y[477] * y[37])/(1 + (y[1084] * y[477] * y[37]))
    r286 = (13.7 * y[1084] * y[543] * y[37])/(1 + (y[1084] * y[543] * y[37]))
    r334 = (13.7 * y[1102] * y[62] * y[37])/(1 + (y[1102] * y[62] * y[37]))
    r668 = (13.7 * y[1228] * y[37])/(1 + (y[1228] * y[37]))
    return (r404) - (r284 + r286 + r334 + r668)
 
def C00044(t, y):
    r81 = (13.7 * y[1022] * y[164] * y[175] * y[0])/(1 + (y[1022] * y[164] * y[175] * y[0]))
    r383 = (13.7 * y[1131] * y[1] * y[31])/(1 + (y[1131] * y[1] * y[31]))
    r359 = (13.7 * y[1118] * y[38] * y[21])/(1 + (y[1118] * y[38] * y[21]))
    r402 = (13.7 * y[1136] * y[38] * y[229])/(1 + (y[1136] * y[38] * y[229]))
    r413 = (13.7 * y[1144] * y[38] * y[40])/(1 + (y[1144] * y[38] * y[40]))
    r419 = (13.7 * y[1144] * y[38] * y[40])/(1 + (y[1144] * y[38] * y[40]))
    r425 = (13.7 * y[1144] * y[38] * y[40])/(1 + (y[1144] * y[38] * y[40]))
    r431 = (13.7 * y[1144] * y[38] * y[40])/(1 + (y[1144] * y[38] * y[40]))
    r437 = (13.7 * y[1144] * y[38] * y[40])/(1 + (y[1144] * y[38] * y[40]))
    r442 = (13.7 * y[1146] * y[38])/(1 + (y[1146] * y[38]))
    r443 = (13.7 * y[1146] * y[38])/(1 + (y[1146] * y[38]))
    r444 = (13.7 * y[1146] * y[38])/(1 + (y[1146] * y[38]))
    r445 = (13.7 * y[1146] * y[38])/(1 + (y[1146] * y[38]))
    r446 = (13.7 * y[1146] * y[38])/(1 + (y[1146] * y[38]))
    r447 = (13.7 * y[1146] * y[38])/(1 + (y[1146] * y[38]))
    r448 = (13.7 * y[1146] * y[38])/(1 + (y[1146] * y[38]))
    r449 = (13.7 * y[1146] * y[38])/(1 + (y[1146] * y[38]))
    r450 = (13.7 * y[1146] * y[38])/(1 + (y[1146] * y[38]))
    r451 = (13.7 * y[1146] * y[38])/(1 + (y[1146] * y[38]))
    r452 = (13.7 * y[1146] * y[38])/(1 + (y[1146] * y[38]))
    r453 = (13.7 * y[1146] * y[38])/(1 + (y[1146] * y[38]))
    r454 = (13.7 * y[1146] * y[38])/(1 + (y[1146] * y[38]))
    r455 = (13.7 * y[1146] * y[38])/(1 + (y[1146] * y[38]))
    r456 = (13.7 * y[1146] * y[38])/(1 + (y[1146] * y[38]))
    r553 = (13.7 * y[1174] * y[38] * y[0])/(1 + (y[1174] * y[38] * y[0]))
    r554 = (13.7 * y[1174] * y[38] * y[0])/(1 + (y[1174] * y[38] * y[0]))
    r560 = (13.7 * y[1177] * y[38] * y[0])/(1 + (y[1177] * y[38] * y[0]))
    r569 = (13.7 * y[1183] * y[38] * y[0])/(1 + (y[1183] * y[38] * y[0]))
    r597 = (13.7 * y[1197] * y[38] * y[18] * y[28])/(1 + (y[1197] * y[38] * y[18] * y[28]))
    r744 = (13.7 * y[1278] * y[38] * y[101] * y[43])/(1 + (y[1278] * y[38] * y[101] * y[43]))
    return (r81 + r383) - (r359 + r402 + r413 + r419 + r425 + r431 + r437 + r442 + r443 + r444 + r445 + r446 + r447 + r448 + r449 + r450 + r451 + r452 + r453 + r454 + r455 + r456 + r553 + r554 + r560 + r569 + r597 + r744)
 
def C00045(t, y):
    r264 = (13.7 * y[1081] * y[389] * y[39])/(1 + (y[1081] * y[389] * y[39]))
    r267 = (13.7 * y[1081] * y[345] * y[39])/(1 + (y[1081] * y[345] * y[39]))
    r272 = (13.7 * y[1081] * y[389] * y[39])/(1 + (y[1081] * y[389] * y[39]))
    r275 = (13.7 * y[1081] * y[345] * y[39])/(1 + (y[1081] * y[345] * y[39]))
    return (0) - (r264 + r267 + r272 + r275)
 
def C00046(t, y):
    r411 = (13.7 * y[1144] * y[130] * y[40])/(1 + (y[1144] * y[130] * y[40]))
    r412 = (13.7 * y[1144] * y[1] * y[40])/(1 + (y[1144] * y[1] * y[40]))
    r413 = (13.7 * y[1144] * y[38] * y[40])/(1 + (y[1144] * y[38] * y[40]))
    r414 = (13.7 * y[1144] * y[54] * y[40])/(1 + (y[1144] * y[54] * y[40]))
    r415 = (13.7 * y[1144] * y[63] * y[40])/(1 + (y[1144] * y[63] * y[40]))
    r417 = (13.7 * y[1144] * y[130] * y[40])/(1 + (y[1144] * y[130] * y[40]))
    r418 = (13.7 * y[1144] * y[1] * y[40])/(1 + (y[1144] * y[1] * y[40]))
    r419 = (13.7 * y[1144] * y[38] * y[40])/(1 + (y[1144] * y[38] * y[40]))
    r420 = (13.7 * y[1144] * y[54] * y[40])/(1 + (y[1144] * y[54] * y[40]))
    r421 = (13.7 * y[1144] * y[63] * y[40])/(1 + (y[1144] * y[63] * y[40]))
    r423 = (13.7 * y[1144] * y[130] * y[40])/(1 + (y[1144] * y[130] * y[40]))
    r424 = (13.7 * y[1144] * y[1] * y[40])/(1 + (y[1144] * y[1] * y[40]))
    r425 = (13.7 * y[1144] * y[38] * y[40])/(1 + (y[1144] * y[38] * y[40]))
    r426 = (13.7 * y[1144] * y[54] * y[40])/(1 + (y[1144] * y[54] * y[40]))
    r427 = (13.7 * y[1144] * y[63] * y[40])/(1 + (y[1144] * y[63] * y[40]))
    r429 = (13.7 * y[1144] * y[130] * y[40])/(1 + (y[1144] * y[130] * y[40]))
    r430 = (13.7 * y[1144] * y[1] * y[40])/(1 + (y[1144] * y[1] * y[40]))
    r431 = (13.7 * y[1144] * y[38] * y[40])/(1 + (y[1144] * y[38] * y[40]))
    r432 = (13.7 * y[1144] * y[54] * y[40])/(1 + (y[1144] * y[54] * y[40]))
    r433 = (13.7 * y[1144] * y[63] * y[40])/(1 + (y[1144] * y[63] * y[40]))
    r435 = (13.7 * y[1144] * y[130] * y[40])/(1 + (y[1144] * y[130] * y[40]))
    r436 = (13.7 * y[1144] * y[1] * y[40])/(1 + (y[1144] * y[1] * y[40]))
    r437 = (13.7 * y[1144] * y[38] * y[40])/(1 + (y[1144] * y[38] * y[40]))
    r438 = (13.7 * y[1144] * y[54] * y[40])/(1 + (y[1144] * y[54] * y[40]))
    r439 = (13.7 * y[1144] * y[63] * y[40])/(1 + (y[1144] * y[63] * y[40]))
    r487 = (13.7 * y[1148] * y[40] * y[8])/(1 + (y[1148] * y[40] * y[8]))
    r488 = (13.7 * y[1148] * y[40] * y[8])/(1 + (y[1148] * y[40] * y[8]))
    r489 = (13.7 * y[1148] * y[40] * y[8])/(1 + (y[1148] * y[40] * y[8]))
    r490 = (13.7 * y[1148] * y[40] * y[8])/(1 + (y[1148] * y[40] * y[8]))
    r491 = (13.7 * y[1148] * y[40] * y[8])/(1 + (y[1148] * y[40] * y[8]))
    r411 = (13.7 * y[1144] * y[130] * y[40])/(1 + (y[1144] * y[130] * y[40]))
    r412 = (13.7 * y[1144] * y[1] * y[40])/(1 + (y[1144] * y[1] * y[40]))
    r413 = (13.7 * y[1144] * y[38] * y[40])/(1 + (y[1144] * y[38] * y[40]))
    r414 = (13.7 * y[1144] * y[54] * y[40])/(1 + (y[1144] * y[54] * y[40]))
    r415 = (13.7 * y[1144] * y[63] * y[40])/(1 + (y[1144] * y[63] * y[40]))
    r417 = (13.7 * y[1144] * y[130] * y[40])/(1 + (y[1144] * y[130] * y[40]))
    r418 = (13.7 * y[1144] * y[1] * y[40])/(1 + (y[1144] * y[1] * y[40]))
    r419 = (13.7 * y[1144] * y[38] * y[40])/(1 + (y[1144] * y[38] * y[40]))
    r420 = (13.7 * y[1144] * y[54] * y[40])/(1 + (y[1144] * y[54] * y[40]))
    r421 = (13.7 * y[1144] * y[63] * y[40])/(1 + (y[1144] * y[63] * y[40]))
    r423 = (13.7 * y[1144] * y[130] * y[40])/(1 + (y[1144] * y[130] * y[40]))
    r424 = (13.7 * y[1144] * y[1] * y[40])/(1 + (y[1144] * y[1] * y[40]))
    r425 = (13.7 * y[1144] * y[38] * y[40])/(1 + (y[1144] * y[38] * y[40]))
    r426 = (13.7 * y[1144] * y[54] * y[40])/(1 + (y[1144] * y[54] * y[40]))
    r427 = (13.7 * y[1144] * y[63] * y[40])/(1 + (y[1144] * y[63] * y[40]))
    r429 = (13.7 * y[1144] * y[130] * y[40])/(1 + (y[1144] * y[130] * y[40]))
    r430 = (13.7 * y[1144] * y[1] * y[40])/(1 + (y[1144] * y[1] * y[40]))
    r431 = (13.7 * y[1144] * y[38] * y[40])/(1 + (y[1144] * y[38] * y[40]))
    r432 = (13.7 * y[1144] * y[54] * y[40])/(1 + (y[1144] * y[54] * y[40]))
    r433 = (13.7 * y[1144] * y[63] * y[40])/(1 + (y[1144] * y[63] * y[40]))
    r435 = (13.7 * y[1144] * y[130] * y[40])/(1 + (y[1144] * y[130] * y[40]))
    r436 = (13.7 * y[1144] * y[1] * y[40])/(1 + (y[1144] * y[1] * y[40]))
    r437 = (13.7 * y[1144] * y[38] * y[40])/(1 + (y[1144] * y[38] * y[40]))
    r438 = (13.7 * y[1144] * y[54] * y[40])/(1 + (y[1144] * y[54] * y[40]))
    r439 = (13.7 * y[1144] * y[63] * y[40])/(1 + (y[1144] * y[63] * y[40]))
    r487 = (13.7 * y[1148] * y[40] * y[8])/(1 + (y[1148] * y[40] * y[8]))
    r488 = (13.7 * y[1148] * y[40] * y[8])/(1 + (y[1148] * y[40] * y[8]))
    r489 = (13.7 * y[1148] * y[40] * y[8])/(1 + (y[1148] * y[40] * y[8]))
    r490 = (13.7 * y[1148] * y[40] * y[8])/(1 + (y[1148] * y[40] * y[8]))
    r491 = (13.7 * y[1148] * y[40] * y[8])/(1 + (y[1148] * y[40] * y[8]))
    return (r411 + r412 + r413 + r414 + r415 + r417 + r418 + r419 + r420 + r421 + r423 + r424 + r425 + r426 + r427 + r429 + r430 + r431 + r432 + r433 + r435 + r436 + r437 + r438 + r439 + r487 + r488 + r489 + r490 + r491) - (r411 + r412 + r413 + r414 + r415 + r417 + r418 + r419 + r420 + r421 + r423 + r424 + r425 + r426 + r427 + r429 + r430 + r431 + r432 + r433 + r435 + r436 + r437 + r438 + r439 + r487 + r488 + r489 + r490 + r491)
 
def C00047(t, y):
    r580 = (13.7 * y[1186] * y[236])/(1 + (y[1186] * y[236]))
    r711 = (13.7 * y[1259] * y[1] * y[41] * y[326])/(1 + (y[1259] * y[1] * y[41] * y[326]))
    r739 = (13.7 * y[1275] * y[671] * y[41] * y[1])/(1 + (y[1275] * y[671] * y[41] * y[1]))
    return (r580) - (r711 + r739)
 
def C00048(t, y):
    r119 = (13.7 * y[1036] * y[33] * y[0] * y[2])/(1 + (y[1036] * y[33] * y[0] * y[2]))
    return (r119) - (0)
 
def C00049(t, y):
    r126 = (13.7 * y[1039] * y[43] * y[6])/(1 + (y[1039] * y[43] * y[6]))
    r127 = (13.7 * y[1039] * y[43] * y[0] * y[6])/(1 + (y[1039] * y[43] * y[0] * y[6]))
    r185 = (13.7 * y[1067] * y[121] * y[43])/(1 + (y[1067] * y[121] * y[43]))
    r370 = (13.7 * y[1123] * y[1] * y[43])/(1 + (y[1123] * y[1] * y[43]))
    r578 = (13.7 * y[1184] * y[43])/(1 + (y[1184] * y[43]))
    r696 = (13.7 * y[1246] * y[319] * y[43] * y[1])/(1 + (y[1246] * y[319] * y[43] * y[1]))
    r730 = (13.7 * y[1268] * y[1] * y[472] * y[43])/(1 + (y[1268] * y[1] * y[472] * y[43]))
    r744 = (13.7 * y[1278] * y[38] * y[101] * y[43])/(1 + (y[1278] * y[38] * y[101] * y[43]))
    r745 = (13.7 * y[1279] * y[1] * y[171] * y[43])/(1 + (y[1279] * y[1] * y[171] * y[43]))
    r753 = (13.7 * y[1282] * y[1] * y[43] * y[13])/(1 + (y[1282] * y[1] * y[43] * y[13]))
    r754 = (13.7 * y[1282] * y[1] * y[43] * y[55] * y[0])/(1 + (y[1282] * y[1] * y[43] * y[55] * y[0]))
    return (0) - (r126 + r127 + r185 + r370 + r578 + r696 + r730 + r744 + r745 + r753 + r754)
 
def C00051(t, y):
    r144 = (13.7 * y[1046] * y[78] * y[44] * y[5])/(1 + (y[1046] * y[78] * y[44] * y[5]))
    r265 = (13.7 * y[1081] * y[44] * y[115])/(1 + (y[1081] * y[44] * y[115]))
    return (0) - (r144 + r265)
 
def C00052(t, y):
    r667 = (13.7 * y[1228] * y[27])/(1 + (y[1228] * y[27]))
    return (r667) - (0)
 
def C00053(t, y):
    r351 = (13.7 * y[1114] * y[1] * y[136])/(1 + (y[1114] * y[1] * y[136]))
    return (r351) - (0)
 
def C00054(t, y):
    r497 = (13.7 * y[1153] * y[9] * y[409])/(1 + (y[1153] * y[9] * y[409]))
    return (r497) - (0)
 
def C00055(t, y):
    r496 = (13.7 * y[1152] * y[159] * y[75])/(1 + (y[1152] * y[159] * y[75]))
    r498 = (13.7 * y[1154] * y[159] * y[56])/(1 + (y[1154] * y[159] * y[56]))
    r570 = (13.7 * y[1183] * y[54] * y[0])/(1 + (y[1183] * y[54] * y[0]))
    r729 = (13.7 * y[1267] * y[54] * y[402] * y[78])/(1 + (y[1267] * y[54] * y[402] * y[78]))
    r377 = (13.7 * y[1130] * y[1] * y[48])/(1 + (y[1130] * y[1] * y[48]))
    return (r496 + r498 + r570 + r729) - (r377)
 
def C00058(t, y):
    r548 = (13.7 * y[1172] * y[593] * y[0])/(1 + (y[1172] * y[593] * y[0]))
    r549 = (13.7 * y[1172] * y[439] * y[0])/(1 + (y[1172] * y[439] * y[0]))
    r553 = (13.7 * y[1174] * y[38] * y[0])/(1 + (y[1174] * y[38] * y[0]))
    r556 = (13.7 * y[1174] * y[546] * y[0])/(1 + (y[1174] * y[546] * y[0]))
    r560 = (13.7 * y[1177] * y[38] * y[0])/(1 + (y[1177] * y[38] * y[0]))
    r593 = (13.7 * y[1194] * y[129])/(1 + (y[1194] * y[129]))
    r594 = (13.7 * y[1194] * y[129])/(1 + (y[1194] * y[129]))
    r595 = (13.7 * y[1195] * y[396] * y[18])/(1 + (y[1195] * y[396] * y[18]))
    return (r548 + r549 + r553 + r556 + r560 + r593 + r594 + r595) - (0)
 
def C00059(t, y):
    r408 = (13.7 * y[1142] * y[1] * y[50])/(1 + (y[1142] * y[1] * y[50]))
    return (0) - (r408)
 
def C00060(t, y):
    r110 = (13.7 * y[1032] * y[60] * y[0] * y[108])/(1 + (y[1032] * y[60] * y[0] * y[108]))
    r531 = (13.7 * y[1169] * y[147] * y[0])/(1 + (y[1169] * y[147] * y[0]))
    r537 = (13.7 * y[1171] * y[147] * y[0])/(1 + (y[1171] * y[147] * y[0]))
    r542 = (13.7 * y[1171] * y[147] * y[0])/(1 + (y[1171] * y[147] * y[0]))
    r547 = (13.7 * y[1171] * y[147] * y[0])/(1 + (y[1171] * y[147] * y[0]))
    return (r110 + r531 + r537 + r542 + r547) - (0)
 
def C00061(t, y):
    r353 = (13.7 * y[1115] * y[1] * y[155])/(1 + (y[1115] * y[1] * y[155]))
    r574 = (13.7 * y[1183] * y[15] * y[0])/(1 + (y[1183] * y[15] * y[0]))
    r403 = (13.7 * y[1137] * y[1] * y[52])/(1 + (y[1137] * y[1] * y[52]))
    return (r353 + r574) - (r403)
 
def C00062(t, y):
    r649 = (13.7 * y[1216] * y[400])/(1 + (y[1216] * y[400]))
    r579 = (13.7 * y[1185] * y[53])/(1 + (y[1185] * y[53]))
    r702 = (13.7 * y[1251] * y[1] * y[53] * y[317])/(1 + (y[1251] * y[1] * y[53] * y[317]))
    return (r649) - (r579 + r702)
 
def C00063(t, y):
    r82 = (13.7 * y[1022] * y[204] * y[175] * y[0])/(1 + (y[1022] * y[204] * y[175] * y[0]))
    r384 = (13.7 * y[1131] * y[1] * y[89])/(1 + (y[1131] * y[1] * y[89]))
    r741 = (13.7 * y[1276] * y[1] * y[63] * y[13])/(1 + (y[1276] * y[1] * y[63] * y[13]))
    r742 = (13.7 * y[1276] * y[1] * y[63] * y[55] * y[0])/(1 + (y[1276] * y[1] * y[63] * y[55] * y[0]))
    r360 = (13.7 * y[1118] * y[54] * y[21])/(1 + (y[1118] * y[54] * y[21]))
    r407 = (13.7 * y[1141] * y[54] * y[82])/(1 + (y[1141] * y[54] * y[82]))
    r410 = (13.7 * y[1143] * y[54] * y[192])/(1 + (y[1143] * y[54] * y[192]))
    r414 = (13.7 * y[1144] * y[54] * y[40])/(1 + (y[1144] * y[54] * y[40]))
    r420 = (13.7 * y[1144] * y[54] * y[40])/(1 + (y[1144] * y[54] * y[40]))
    r426 = (13.7 * y[1144] * y[54] * y[40])/(1 + (y[1144] * y[54] * y[40]))
    r432 = (13.7 * y[1144] * y[54] * y[40])/(1 + (y[1144] * y[54] * y[40]))
    r438 = (13.7 * y[1144] * y[54] * y[40])/(1 + (y[1144] * y[54] * y[40]))
    r441 = (13.7 * y[1145] * y[589] * y[54])/(1 + (y[1145] * y[589] * y[54]))
    r570 = (13.7 * y[1183] * y[54] * y[0])/(1 + (y[1183] * y[54] * y[0]))
    r729 = (13.7 * y[1267] * y[54] * y[402] * y[78])/(1 + (y[1267] * y[54] * y[402] * y[78]))
    return (r82 + r384 + r741 + r742) - (r360 + r407 + r410 + r414 + r420 + r426 + r432 + r438 + r441 + r570 + r729)
 
def C00064(t, y):
    r120 = (13.7 * y[1037] * y[23] * y[5])/(1 + (y[1037] * y[23] * y[5]))
    r302 = (13.7 * y[1087] * y[382] * y[12] * y[23])/(1 + (y[1087] * y[382] * y[12] * y[23]))
    r122 = (13.7 * y[1037] * y[55] * y[0])/(1 + (y[1037] * y[55] * y[0]))
    r339 = (13.7 * y[1107] * y[55] * y[71])/(1 + (y[1107] * y[55] * y[71]))
    r529 = (13.7 * y[1169] * y[55] * y[0])/(1 + (y[1169] * y[55] * y[0]))
    r653 = (13.7 * y[1218] * y[55] * y[0])/(1 + (y[1218] * y[55] * y[0]))
    r655 = (13.7 * y[1218] * y[92] * y[93] * y[55])/(1 + (y[1218] * y[92] * y[93] * y[55]))
    r656 = (13.7 * y[1218] * y[93] * y[94] * y[55])/(1 + (y[1218] * y[93] * y[94] * y[55]))
    r740 = (13.7 * y[1276] * y[55] * y[0])/(1 + (y[1276] * y[55] * y[0]))
    r742 = (13.7 * y[1276] * y[1] * y[63] * y[55] * y[0])/(1 + (y[1276] * y[1] * y[63] * y[55] * y[0]))
    r746 = (13.7 * y[1280] * y[1] * y[254] * y[55] * y[0])/(1 + (y[1280] * y[1] * y[254] * y[55] * y[0]))
    r748 = (13.7 * y[1281] * y[55] * y[0])/(1 + (y[1281] * y[55] * y[0]))
    r750 = (13.7 * y[1281] * y[1] * y[230] * y[55] * y[0])/(1 + (y[1281] * y[1] * y[230] * y[55] * y[0]))
    r751 = (13.7 * y[1281] * y[646] * y[1] * y[55] * y[0])/(1 + (y[1281] * y[646] * y[1] * y[55] * y[0]))
    r752 = (13.7 * y[1282] * y[55] * y[0])/(1 + (y[1282] * y[55] * y[0]))
    r754 = (13.7 * y[1282] * y[1] * y[43] * y[55] * y[0])/(1 + (y[1282] * y[1] * y[43] * y[55] * y[0]))
    r755 = (13.7 * y[1283] * y[55] * y[0])/(1 + (y[1283] * y[55] * y[0]))
    r756 = (13.7 * y[1283] * y[1] * y[55] * y[165] * y[0])/(1 + (y[1283] * y[1] * y[55] * y[165] * y[0]))
    r761 = (13.7 * y[1283] * y[55] * y[0])/(1 + (y[1283] * y[55] * y[0]))
    r762 = (13.7 * y[1283] * y[1] * y[55] * y[165] * y[0])/(1 + (y[1283] * y[1] * y[55] * y[165] * y[0]))
    return (r120 + r302) - (r122 + r339 + r529 + r653 + r655 + r656 + r740 + r742 + r746 + r748 + r750 + r751 + r752 + r754 + r755 + r756 + r761 + r762)
 
def C00065(t, y):
    r498 = (13.7 * y[1154] * y[159] * y[56])/(1 + (y[1154] * y[159] * y[56]))
    r603 = (13.7 * y[1201] * y[56] * y[207])/(1 + (y[1201] * y[56] * y[207]))
    r604 = (13.7 * y[1201] * y[56] * y[207])/(1 + (y[1201] * y[56] * y[207]))
    r606 = (13.7 * y[1201] * y[56] * y[403])/(1 + (y[1201] * y[56] * y[403]))
    r632 = (13.7 * y[1213] * y[56] )/(1 + (y[1213] * y[56] ))
    r633 = (13.7 * y[1213] * y[56])/(1 + (y[1213] * y[56]))
    r637 = (13.7 * y[1213] * y[56])/(1 + (y[1213] * y[56]))
    r638 = (13.7 * y[1213] * y[56])/(1 + (y[1213] * y[56]))
    r645 = (13.7 * y[1214] * y[56])/(1 + (y[1214] * y[56]))
    r694 = (13.7 * y[1245] * y[1] * y[56] * y[330])/(1 + (y[1245] * y[1] * y[56] * y[330]))
    r695 = (13.7 * y[1245] * y[1] * y[56] * y[649])/(1 + (y[1245] * y[1] * y[56] * y[649]))
    return (0) - (r498 + r603 + r604 + r606 + r632 + r633 + r637 + r638 + r645 + r694 + r695)
 
def C00066(t, y):
    r512 = (13.7 * y[1162] * y[421] * y[0])/(1 + (y[1162] * y[421] * y[0]))
    return (r512) - (0)
 
def C00067(t, y):
    r181 = (13.7 * y[1064] * y[265])/(1 + (y[1064] * y[265]))
    return (r181) - (0)
 
def C00068(t, y):
    r200 = (13.7 * y[1071] * y[87] * y[483])/(1 + (y[1071] * y[87] * y[483]))
    r207 = (13.7 * y[1071] * y[87] * y[483])/(1 + (y[1071] * y[87] * y[483]))
    r214 = (13.7 * y[1071] * y[87] * y[483])/(1 + (y[1071] * y[87] * y[483]))
    r221 = (13.7 * y[1071] * y[87] * y[483])/(1 + (y[1071] * y[87] * y[483]))
    r228 = (13.7 * y[1071] * y[87] * y[483])/(1 + (y[1071] * y[87] * y[483]))
    r375 = (13.7 * y[1128] * y[1] * y[273])/(1 + (y[1128] * y[1] * y[273]))
    r192 = (13.7 * y[1069] * y[140] * y[59])/(1 + (y[1069] * y[140] * y[59]))
    r193 = (13.7 * y[1069] * y[495] * y[59])/(1 + (y[1069] * y[495] * y[59]))
    r197 = (13.7 * y[1071] * y[21] * y[59])/(1 + (y[1071] * y[21] * y[59]))
    r198 = (13.7 * y[1071] * y[260] * y[59])/(1 + (y[1071] * y[260] * y[59]))
    r199 = (13.7 * y[1071] * y[553] * y[59])/(1 + (y[1071] * y[553] * y[59]))
    r204 = (13.7 * y[1071] * y[21] * y[59])/(1 + (y[1071] * y[21] * y[59]))
    r205 = (13.7 * y[1071] * y[260] * y[59])/(1 + (y[1071] * y[260] * y[59]))
    r206 = (13.7 * y[1071] * y[553] * y[59])/(1 + (y[1071] * y[553] * y[59]))
    r211 = (13.7 * y[1071] * y[21] * y[59])/(1 + (y[1071] * y[21] * y[59]))
    r212 = (13.7 * y[1071] * y[260] * y[59])/(1 + (y[1071] * y[260] * y[59]))
    r213 = (13.7 * y[1071] * y[553] * y[59])/(1 + (y[1071] * y[553] * y[59]))
    r218 = (13.7 * y[1071] * y[21] * y[59])/(1 + (y[1071] * y[21] * y[59]))
    r219 = (13.7 * y[1071] * y[260] * y[59])/(1 + (y[1071] * y[260] * y[59]))
    r220 = (13.7 * y[1071] * y[553] * y[59])/(1 + (y[1071] * y[553] * y[59]))
    r225 = (13.7 * y[1071] * y[21] * y[59])/(1 + (y[1071] * y[21] * y[59]))
    r226 = (13.7 * y[1071] * y[260] * y[59])/(1 + (y[1071] * y[260] * y[59]))
    r227 = (13.7 * y[1071] * y[553] * y[59])/(1 + (y[1071] * y[553] * y[59]))
    return (r200 + r207 + r214 + r221 + r228 + r375) - (r192 + r193 + r197 + r198 + r199 + r204 + r205 + r206 + r211 + r212 + r213 + r218 + r219 + r220 + r225 + r226 + r227)
 
def C00071(t, y):
    r1 = (13.7 * y[1010] * y[137] * y[2])/(1 + (y[1010] * y[137] * y[2]))
    r110 = (13.7 * y[1032] * y[60] * y[0] * y[108])/(1 + (y[1032] * y[60] * y[0] * y[108]))
    return (r1) - (r110)
 
def C00073(t, y):
    r316 = (13.7 * y[1095] * y[18] * y[687])/(1 + (y[1095] * y[18] * y[687]))
    r331 = (13.7 * y[1100] * y[8] * y[12] * y[18])/(1 + (y[1100] * y[8] * y[12] * y[18]))
    r500 = (13.7 * y[1156] * y[335] * y[660] * y[18] * y[491] * y[67])/(1 + (y[1156] * y[335] * y[660] * y[18] * y[491] * y[67]))
    r504 = (13.7 * y[1158] * y[629] * y[716] * y[18] * y[714] * y[67])/(1 + (y[1158] * y[629] * y[716] * y[18] * y[714] * y[67]))
    r505 = (13.7 * y[1158] * y[721] * y[716] * y[18] * y[714] * y[67])/(1 + (y[1158] * y[721] * y[716] * y[18] * y[714] * y[67]))
    r506 = (13.7 * y[1158] * y[720] * y[716] * y[18] * y[714] * y[67])/(1 + (y[1158] * y[720] * y[716] * y[18] * y[714] * y[67]))
    r507 = (13.7 * y[1159] * y[453] * y[660] * y[18])/(1 + (y[1159] * y[453] * y[660] * y[18]))
    r508 = (13.7 * y[1159] * y[453] * y[660] * y[18])/(1 + (y[1159] * y[453] * y[660] * y[18]))
    r510 = (13.7 * y[1160] * y[696] * y[660] * y[18] * y[28])/(1 + (y[1160] * y[696] * y[660] * y[18] * y[28]))
    r595 = (13.7 * y[1195] * y[396] * y[18])/(1 + (y[1195] * y[396] * y[18]))
    r596 = (13.7 * y[1196] * y[69] * y[18] * y[28])/(1 + (y[1196] * y[69] * y[18] * y[28]))
    r597 = (13.7 * y[1197] * y[38] * y[18] * y[28])/(1 + (y[1197] * y[38] * y[18] * y[28]))
    r148 = (13.7 * y[1047] * y[61] * y[175] * y[0])/(1 + (y[1047] * y[61] * y[175] * y[0]))
    r692 = (13.7 * y[1244] * y[1] * y[61] * y[327])/(1 + (y[1244] * y[1] * y[61] * y[327]))
    return (r316 + r331 + r500 + r504 + r505 + r506 + r507 + r508 + r510 + r595 + r596 + r597) - (r148 + r692)
 
def C00074(t, y):
    r358 = (13.7 * y[1118] * y[1] * y[21])/(1 + (y[1118] * y[1] * y[21]))
    r359 = (13.7 * y[1118] * y[38] * y[21])/(1 + (y[1118] * y[38] * y[21]))
    r360 = (13.7 * y[1118] * y[54] * y[21])/(1 + (y[1118] * y[54] * y[21]))
    r361 = (13.7 * y[1118] * y[63] * y[21])/(1 + (y[1118] * y[63] * y[21]))
    r362 = (13.7 * y[1118] * y[68] * y[21])/(1 + (y[1118] * y[68] * y[21]))
    r363 = (13.7 * y[1118] * y[102] * y[21])/(1 + (y[1118] * y[102] * y[21]))
    r364 = (13.7 * y[1118] * y[164] * y[21])/(1 + (y[1118] * y[164] * y[21]))
    r365 = (13.7 * y[1118] * y[130] * y[21])/(1 + (y[1118] * y[130] * y[21]))
    r599 = (13.7 * y[1199] * y[228])/(1 + (y[1199] * y[228]))
    r273 = (13.7 * y[1126] * y[62] * y[225])/(1 + (y[1126] * y[62] * y[225]))
    r334 = (13.7 * y[1102] * y[62] * y[37])/(1 + (y[1102] * y[62] * y[37]))
    return (r358 + r359 + r360 + r361 + r362 + r363 + r364 + r365 + r599) - (r273 + r334)
 
def C00075(t, y):
    r83 = (13.7 * y[1022] * y[206] * y[175] * y[0])/(1 + (y[1022] * y[206] * y[175] * y[0]))
    r382 = (13.7 * y[1131] * y[1] * y[14])/(1 + (y[1131] * y[1] * y[14]))
    r361 = (13.7 * y[1118] * y[63] * y[21])/(1 + (y[1118] * y[63] * y[21]))
    r404 = (13.7 * y[1138] * y[63] * y[455])/(1 + (y[1138] * y[63] * y[455]))
    r415 = (13.7 * y[1144] * y[63] * y[40])/(1 + (y[1144] * y[63] * y[40]))
    r421 = (13.7 * y[1144] * y[63] * y[40])/(1 + (y[1144] * y[63] * y[40]))
    r427 = (13.7 * y[1144] * y[63] * y[40])/(1 + (y[1144] * y[63] * y[40]))
    r433 = (13.7 * y[1144] * y[63] * y[40])/(1 + (y[1144] * y[63] * y[40]))
    r439 = (13.7 * y[1144] * y[63] * y[40])/(1 + (y[1144] * y[63] * y[40]))
    r493 = (13.7 * y[1150] * y[63] * y[82])/(1 + (y[1150] * y[63] * y[82]))
    r571 = (13.7 * y[1183] * y[63] * y[0])/(1 + (y[1183] * y[63] * y[0]))
    r741 = (13.7 * y[1276] * y[1] * y[63] * y[13])/(1 + (y[1276] * y[1] * y[63] * y[13]))
    r742 = (13.7 * y[1276] * y[1] * y[63] * y[55] * y[0])/(1 + (y[1276] * y[1] * y[63] * y[55] * y[0]))
    return (r83 + r382) - (r361 + r404 + r415 + r421 + r427 + r433 + r439 + r493 + r571 + r741 + r742)
 
def C00077(t, y):
    r260 = (13.7 * y[1078] * y[195] * y[23])/(1 + (y[1078] * y[195] * y[23]))
    r186 = (13.7 * y[1068] * y[121] * y[64])/(1 + (y[1068] * y[121] * y[64]))
    r187 = (13.7 * y[1068] * y[121] * y[64])/(1 + (y[1068] * y[121] * y[64]))
    return (r260) - (r186 + r187)
 
def C00078(t, y):
    r603 = (13.7 * y[1201] * y[56] * y[207])/(1 + (y[1201] * y[56] * y[207]))
    r604 = (13.7 * y[1201] * y[56] * y[207])/(1 + (y[1201] * y[56] * y[207]))
    r606 = (13.7 * y[1201] * y[56] * y[403])/(1 + (y[1201] * y[56] * y[403]))
    r703 = (13.7 * y[1252] * y[1] * y[65] * y[332])/(1 + (y[1252] * y[1] * y[65] * y[332]))
    return (r603 + r604 + r606) - (r703)
 
def C00079(t, y):
    r612 = (13.7 * y[1206] * y[250])/(1 + (y[1206] * y[250]))
    r347 = (13.7 * y[1111] * y[66] * y[24])/(1 + (y[1111] * y[66] * y[24]))
    r704 = (13.7 * y[1253] * y[1] * y[66] * y[328])/(1 + (y[1253] * y[1] * y[66] * y[328]))
    r705 = (13.7 * y[1253] * y[1] * y[66] * y[328])/(1 + (y[1253] * y[1] * y[66] * y[328]))
    return (r612) - (r347 + r704 + r705)
 
def C00080(t, y):
    r1 = (13.7 * y[1010] * y[137] * y[2])/(1 + (y[1010] * y[137] * y[2]))
    r2 = (13.7 * y[1010] * y[208] * y[2])/(1 + (y[1010] * y[208] * y[2]))
    r3 = (13.7 * y[1010] * y[209] * y[2])/(1 + (y[1010] * y[209] * y[2]))
    r4 = (13.7 * y[1010] * y[245] * y[2])/(1 + (y[1010] * y[245] * y[2]))
    r5 = (13.7 * y[1010] * y[496] * y[2])/(1 + (y[1010] * y[496] * y[2]))
    r6 = (13.7 * y[1010] * y[499] * y[2])/(1 + (y[1010] * y[499] * y[2]))
    r7 = (13.7 * y[1010] * y[575] * y[2])/(1 + (y[1010] * y[575] * y[2]))
    r8 = (13.7 * y[1010] * y[576] * y[2])/(1 + (y[1010] * y[576] * y[2]))
    r9 = (13.7 * y[1010] * y[606] * y[2])/(1 + (y[1010] * y[606] * y[2]))
    r10 = (13.7 * y[1010] * y[372] * y[2])/(1 + (y[1010] * y[372] * y[2]))
    r12 = (13.7 * y[1010] * y[640] * y[2])/(1 + (y[1010] * y[640] * y[2]))
    r13 = (13.7 * y[1010] * y[90] * y[2])/(1 + (y[1010] * y[90] * y[2]))
    r14 = (13.7 * y[1010] * y[90] * y[5])/(1 + (y[1010] * y[90] * y[5]))
    r16 = (13.7 * y[1010] * y[315] * y[2])/(1 + (y[1010] * y[315] * y[2]))
    r17 = (13.7 * y[1010] * y[642] * y[2])/(1 + (y[1010] * y[642] * y[2]))
    r18 = (13.7 * y[1010] * y[193] * y[2])/(1 + (y[1010] * y[193] * y[2]))
    r20 = (13.7 * y[1011] * y[297] * y[5])/(1 + (y[1011] * y[297] * y[5]))
    r21 = (13.7 * y[1011] * y[459] * y[5])/(1 + (y[1011] * y[459] * y[5]))
    r23 = (13.7 * y[1011] * y[461] * y[5])/(1 + (y[1011] * y[461] * y[5]))
    r24 = (13.7 * y[1011] * y[463] * y[5])/(1 + (y[1011] * y[463] * y[5]))
    r25 = (13.7 * y[1011] * y[468] * y[5])/(1 + (y[1011] * y[468] * y[5]))
    r26 = (13.7 * y[1011] * y[517] * y[5])/(1 + (y[1011] * y[517] * y[5]))
    r27 = (13.7 * y[1011] * y[527] * y[5])/(1 + (y[1011] * y[527] * y[5]))
    r31 = (13.7 * y[1011] * y[297] * y[5])/(1 + (y[1011] * y[297] * y[5]))
    r32 = (13.7 * y[1011] * y[459] * y[5])/(1 + (y[1011] * y[459] * y[5]))
    r34 = (13.7 * y[1011] * y[461] * y[5])/(1 + (y[1011] * y[461] * y[5]))
    r35 = (13.7 * y[1011] * y[463] * y[5])/(1 + (y[1011] * y[463] * y[5]))
    r36 = (13.7 * y[1011] * y[468] * y[5])/(1 + (y[1011] * y[468] * y[5]))
    r37 = (13.7 * y[1011] * y[517] * y[5])/(1 + (y[1011] * y[517] * y[5]))
    r38 = (13.7 * y[1011] * y[527] * y[5])/(1 + (y[1011] * y[527] * y[5]))
    r42 = (13.7 * y[1012] * y[393] * y[5])/(1 + (y[1012] * y[393] * y[5]))
    r43 = (13.7 * y[1013] * y[454] * y[5])/(1 + (y[1013] * y[454] * y[5]))
    r44 = (13.7 * y[1014] * y[101] * y[2] * y[0])/(1 + (y[1014] * y[101] * y[2] * y[0]))
    r45 = (13.7 * y[1014] * y[465] * y[2] * y[0])/(1 + (y[1014] * y[465] * y[2] * y[0]))
    r46 = (13.7 * y[1015] * y[255] * y[2] * y[0])/(1 + (y[1015] * y[255] * y[2] * y[0]))
    r47 = (13.7 * y[1015] * y[336] * y[0] * y[2])/(1 + (y[1015] * y[336] * y[0] * y[2]))
    r48 = (13.7 * y[1015] * y[255] * y[2])/(1 + (y[1015] * y[255] * y[2]))
    r49 = (13.7 * y[1016] * y[589] * y[5])/(1 + (y[1016] * y[589] * y[5]))
    r51 = (13.7 * y[1017] * y[451] * y[2])/(1 + (y[1017] * y[451] * y[2]))
    r52 = (13.7 * y[1017] * y[451] * y[2])/(1 + (y[1017] * y[451] * y[2]))
    r54 = (13.7 * y[1018] * y[441] * y[5])/(1 + (y[1018] * y[441] * y[5]))
    r56 = (13.7 * y[1018] * y[441] * y[5])/(1 + (y[1018] * y[441] * y[5]))
    r57 = (13.7 * y[1018] * y[552] * y[5])/(1 + (y[1018] * y[552] * y[5]))
    r69 = (13.7 * y[1020] * y[426] * y[2] * y[0])/(1 + (y[1020] * y[426] * y[2] * y[0]))
    r70 = (13.7 * y[1020] * y[426] * y[5] * y[0])/(1 + (y[1020] * y[426] * y[5] * y[0]))
    r86 = (13.7 * y[1024] * y[143] * y[108] * y[0])/(1 + (y[1024] * y[143] * y[108] * y[0]))
    r101 = (13.7 * y[1026] * y[70] * y[9] * y[2])/(1 + (y[1026] * y[70] * y[9] * y[2]))
    r102 = (13.7 * y[1026] * y[307] * y[9] * y[2])/(1 + (y[1026] * y[307] * y[9] * y[2]))
    r103 = (13.7 * y[1027] * y[198] * y[8] * y[5])/(1 + (y[1027] * y[198] * y[8] * y[5]))
    r104 = (13.7 * y[1028] * y[293] * y[8] * y[5])/(1 + (y[1028] * y[293] * y[8] * y[5]))
    r105 = (13.7 * y[1029] * y[283] * y[8] * y[5])/(1 + (y[1029] * y[283] * y[8] * y[5]))
    r107 = (13.7 * y[1031] * y[144] * y[0] * y[108])/(1 + (y[1031] * y[144] * y[0] * y[108]))
    r110 = (13.7 * y[1032] * y[60] * y[0] * y[108])/(1 + (y[1032] * y[60] * y[0] * y[108]))
    r111 = (13.7 * y[1032] * y[221] * y[0] * y[108])/(1 + (y[1032] * y[221] * y[0] * y[108]))
    r113 = (13.7 * y[1034] * y[173] * y[2])/(1 + (y[1034] * y[173] * y[2]))
    r114 = (13.7 * y[1035] * y[271] * y[5])/(1 + (y[1035] * y[271] * y[5]))
    r115 = (13.7 * y[1035] * y[271] * y[2])/(1 + (y[1035] * y[271] * y[2]))
    r116 = (13.7 * y[1036] * y[36] * y[2] * y[0])/(1 + (y[1036] * y[36] * y[2] * y[0]))
    r117 = (13.7 * y[1036] * y[484] * y[0] * y[2])/(1 + (y[1036] * y[484] * y[0] * y[2]))
    r118 = (13.7 * y[1036] * y[484] * y[0] * y[5])/(1 + (y[1036] * y[484] * y[0] * y[5]))
    r119 = (13.7 * y[1036] * y[33] * y[0] * y[2])/(1 + (y[1036] * y[33] * y[0] * y[2]))
    r120 = (13.7 * y[1037] * y[23] * y[5])/(1 + (y[1037] * y[23] * y[5]))
    r121 = (13.7 * y[1037] * y[23] * y[5] * y[0])/(1 + (y[1037] * y[23] * y[5] * y[0]))
    r123 = (13.7 * y[1038] * y[23] * y[5] * y[0])/(1 + (y[1038] * y[23] * y[5] * y[0]))
    r124 = (13.7 * y[1038] * y[484] * y[0] * y[2])/(1 + (y[1038] * y[484] * y[0] * y[2]))
    r125 = (13.7 * y[1038] * y[484] * y[0] * y[5])/(1 + (y[1038] * y[484] * y[0] * y[5]))
    r130 = (13.7 * y[1041] * y[113] * y[2])/(1 + (y[1041] * y[113] * y[2]))
    r131 = (13.7 * y[1041] * y[113] * y[5])/(1 + (y[1041] * y[113] * y[5]))
    r132 = (13.7 * y[1041] * y[282] * y[2])/(1 + (y[1041] * y[282] * y[2]))
    r133 = (13.7 * y[1041] * y[282] * y[5])/(1 + (y[1041] * y[282] * y[5]))
    r134 = (13.7 * y[1042] * y[197] * y[5])/(1 + (y[1042] * y[197] * y[5]))
    r135 = (13.7 * y[1042] * y[197] * y[2])/(1 + (y[1042] * y[197] * y[2]))
    r136 = (13.7 * y[1043] * y[652] * y[5])/(1 + (y[1043] * y[652] * y[5]))
    r138 = (13.7 * y[1044] * y[13] * y[2] * y[0])/(1 + (y[1044] * y[13] * y[2] * y[0]))
    r139 = (13.7 * y[1045] * y[654] * y[2])/(1 + (y[1045] * y[654] * y[2]))
    r140 = (13.7 * y[1045] * y[374] * y[2])/(1 + (y[1045] * y[374] * y[2]))
    r141 = (13.7 * y[1045] * y[624] * y[2])/(1 + (y[1045] * y[624] * y[2]))
    r142 = (13.7 * y[1045] * y[222] * y[2])/(1 + (y[1045] * y[222] * y[2]))
    r143 = (13.7 * y[1046] * y[174] * y[5])/(1 + (y[1046] * y[174] * y[5]))
    r145 = (13.7 * y[1046] * y[311] * y[5] * y[0])/(1 + (y[1046] * y[311] * y[5] * y[0]))
    r165 = (13.7 * y[1052] * y[18] * y[353])/(1 + (y[1052] * y[18] * y[353]))
    r299 = (13.7 * y[1085] * y[540] * y[8])/(1 + (y[1085] * y[540] * y[8]))
    r306 = (13.7 * y[1091] * y[286] * y[383])/(1 + (y[1091] * y[286] * y[383]))
    r368 = (13.7 * y[1121] * y[1] * y[211] )/(1 + (y[1121] * y[1] * y[211] ))
    r659 = (13.7 * y[1221] * y[90])/(1 + (y[1221] * y[90]))
    r11 = (13.7 * y[1010] * y[580] * y[3] * y[67])/(1 + (y[1010] * y[580] * y[3] * y[67]))
    r15 = (13.7 * y[1010] * y[634] * y[3] * y[67])/(1 + (y[1010] * y[634] * y[3] * y[67]))
    r19 = (13.7 * y[1010] * y[578] * y[3] * y[67])/(1 + (y[1010] * y[578] * y[3] * y[67]))
    r28 = (13.7 * y[1011] * y[627] * y[4] * y[67])/(1 + (y[1011] * y[627] * y[4] * y[67]))
    r29 = (13.7 * y[1011] * y[680] * y[4] * y[67])/(1 + (y[1011] * y[680] * y[4] * y[67]))
    r30 = (13.7 * y[1011] * y[684] * y[4] * y[67])/(1 + (y[1011] * y[684] * y[4] * y[67]))
    r39 = (13.7 * y[1011] * y[627] * y[4] * y[67])/(1 + (y[1011] * y[627] * y[4] * y[67]))
    r40 = (13.7 * y[1011] * y[680] * y[4] * y[67])/(1 + (y[1011] * y[680] * y[4] * y[67]))
    r41 = (13.7 * y[1011] * y[684] * y[4] * y[67])/(1 + (y[1011] * y[684] * y[4] * y[67]))
    r53 = (13.7 * y[1017] * y[87] * y[10] * y[3] * y[67])/(1 + (y[1017] * y[87] * y[10] * y[3] * y[67]))
    r55 = (13.7 * y[1018] * y[260] * y[4] * y[67])/(1 + (y[1018] * y[260] * y[4] * y[67]))
    r85 = (13.7 * y[1024] * y[600] * y[107] * y[67])/(1 + (y[1024] * y[600] * y[107] * y[67]))
    r87 = (13.7 * y[1025] * y[1] * y[242] * y[107] * y[67] * y[0])/(1 + (y[1025] * y[1] * y[242] * y[107] * y[67] * y[0]))
    r89 = (13.7 * y[1025] * y[491] * y[67])/(1 + (y[1025] * y[491] * y[67]))
    r90 = (13.7 * y[1025] * y[493] * y[491] * y[67])/(1 + (y[1025] * y[493] * y[491] * y[67]))
    r91 = (13.7 * y[1025] * y[242] * y[491] * y[67])/(1 + (y[1025] * y[242] * y[491] * y[67]))
    r92 = (13.7 * y[1025] * y[492] * y[491] * y[67])/(1 + (y[1025] * y[492] * y[491] * y[67]))
    r93 = (13.7 * y[1025] * y[313] * y[107] * y[67] * y[1] * y[0])/(1 + (y[1025] * y[313] * y[107] * y[67] * y[1] * y[0]))
    r94 = (13.7 * y[1025] * y[1] * y[242] * y[107] * y[67] * y[0])/(1 + (y[1025] * y[1] * y[242] * y[107] * y[67] * y[0]))
    r96 = (13.7 * y[1025] * y[491] * y[67])/(1 + (y[1025] * y[491] * y[67]))
    r97 = (13.7 * y[1025] * y[493] * y[491] * y[67])/(1 + (y[1025] * y[493] * y[491] * y[67]))
    r98 = (13.7 * y[1025] * y[242] * y[491] * y[67])/(1 + (y[1025] * y[242] * y[491] * y[67]))
    r99 = (13.7 * y[1025] * y[492] * y[491] * y[67])/(1 + (y[1025] * y[492] * y[491] * y[67]))
    r100 = (13.7 * y[1025] * y[313] * y[107] * y[67] * y[1] * y[0])/(1 + (y[1025] * y[313] * y[107] * y[67] * y[1] * y[0]))
    r106 = (13.7 * y[1030] * y[376] * y[4] * y[67])/(1 + (y[1030] * y[376] * y[4] * y[67]))
    r146 = (13.7 * y[1046] * y[4] * y[67] * y[668])/(1 + (y[1046] * y[4] * y[67] * y[668]))
    r325 = (13.7 * y[1099] * y[266] * y[170] * y[174] * y[67])/(1 + (y[1099] * y[266] * y[170] * y[174] * y[67]))
    r329 = (13.7 * y[1099] * y[266] * y[170] * y[174] * y[67] )/(1 + (y[1099] * y[266] * y[170] * y[174] * y[67] ))
    r500 = (13.7 * y[1156] * y[335] * y[660] * y[18] * y[491] * y[67])/(1 + (y[1156] * y[335] * y[660] * y[18] * y[491] * y[67]))
    r504 = (13.7 * y[1158] * y[629] * y[716] * y[18] * y[714] * y[67])/(1 + (y[1158] * y[629] * y[716] * y[18] * y[714] * y[67]))
    r505 = (13.7 * y[1158] * y[721] * y[716] * y[18] * y[714] * y[67])/(1 + (y[1158] * y[721] * y[716] * y[18] * y[714] * y[67]))
    r506 = (13.7 * y[1158] * y[720] * y[716] * y[18] * y[714] * y[67])/(1 + (y[1158] * y[720] * y[716] * y[18] * y[714] * y[67]))
    r734 = (13.7 * y[1272] * y[1] * y[401] * y[67])/(1 + (y[1272] * y[1] * y[401] * y[67]))
    return (r1 + r2 + r3 + r4 + r5 + r6 + r7 + r8 + r9 + r10 + r12 + r13 + r14 + r16 + r17 + r18 + r20 + r21 + r23 + r24 + r25 + r26 + r27 + r31 + r32 + r34 + r35 + r36 + r37 + r38 + r42 + r43 + r44 + r45 + r46 + r47 + r48 + r49 + r51 + r52 + r54 + r56 + r57 + r69 + r70 + r86 + r101 + r102 + r103 + r104 + r105 + r107 + r110 + r111 + r113 + r114 + r115 + r116 + r117 + r118 + r119 + r120 + r121 + r123 + r124 + r125 + r130 + r131 + r132 + r133 + r134 + r135 + r136 + r138 + r139 + r140 + r141 + r142 + r143 + r145 + r165 + r299 + r306 + r368 + r659) - (r11 + r15 + r19 + r28 + r29 + r30 + r39 + r40 + r41 + r53 + r55 + r85 + r87 + r89 + r90 + r91 + r92 + r93 + r94 + r96 + r97 + r98 + r99 + r100 + r106 + r146 + r325 + r329 + r500 + r504 + r505 + r506 + r734)
 
def C00081(t, y):
    r385 = (13.7 * y[1131] * y[1] * y[83])/(1 + (y[1131] * y[1] * y[83]))
    r362 = (13.7 * y[1118] * y[68] * y[21])/(1 + (y[1118] * y[68] * y[21]))
    return (r385) - (r362)
 
def C00082(t, y):
    r348 = (13.7 * y[1111] * y[69] * y[24])/(1 + (y[1111] * y[69] * y[24]))
    r596 = (13.7 * y[1196] * y[69] * y[18] * y[28])/(1 + (y[1196] * y[69] * y[18] * y[28]))
    r691 = (13.7 * y[1243] * y[1] * y[69] * y[247])/(1 + (y[1243] * y[1] * y[69] * y[247]))
    return (0) - (r348 + r596 + r691)
 
def C00084(t, y):
    r2 = (13.7 * y[1010] * y[208] * y[2])/(1 + (y[1010] * y[208] * y[2]))
    r591 = (13.7 * y[1193] * y[480] * y[0])/(1 + (y[1193] * y[480] * y[0]))
    r592 = (13.7 * y[1193] * y[480] * y[0])/(1 + (y[1193] * y[480] * y[0]))
    r647 = (13.7 * y[1215] * y[126])/(1 + (y[1215] * y[126]))
    r659 = (13.7 * y[1221] * y[90])/(1 + (y[1221] * y[90]))
    r101 = (13.7 * y[1026] * y[70] * y[9] * y[2])/(1 + (y[1026] * y[70] * y[9] * y[2]))
    return (r2 + r591 + r592 + r647 + r659) - (r101)
 
def C00085(t, y):
    r514 = (13.7 * y[1164] * y[179] * y[0])/(1 + (y[1164] * y[179] * y[0]))
    r517 = (13.7 * y[1164] * y[179] * y[0])/(1 + (y[1164] * y[179] * y[0]))
    r680 = (13.7 * y[1236] * y[160])/(1 + (y[1236] * y[160]))
    r189 = (13.7 * y[1069] * y[71] * y[93])/(1 + (y[1069] * y[71] * y[93]))
    r339 = (13.7 * y[1107] * y[55] * y[71])/(1 + (y[1107] * y[55] * y[71]))
    return (r514 + r517 + r680) - (r189 + r339)
 
def C00086(t, y):
    r550 = (13.7 * y[1173] * y[123] * y[0])/(1 + (y[1173] * y[123] * y[0]))
    r551 = (13.7 * y[1173] * y[123] * y[0])/(1 + (y[1173] * y[123] * y[0]))
    r552 = (13.7 * y[1173] * y[123] * y[0])/(1 + (y[1173] * y[123] * y[0]))
    r534 = (13.7 * y[1171] * y[72] * y[0])/(1 + (y[1171] * y[72] * y[0]))
    r535 = (13.7 * y[1171] * y[72] * y[0])/(1 + (y[1171] * y[72] * y[0]))
    r536 = (13.7 * y[1171] * y[72] * y[0])/(1 + (y[1171] * y[72] * y[0]))
    r539 = (13.7 * y[1171] * y[72] * y[0])/(1 + (y[1171] * y[72] * y[0]))
    r540 = (13.7 * y[1171] * y[72] * y[0])/(1 + (y[1171] * y[72] * y[0]))
    r541 = (13.7 * y[1171] * y[72] * y[0])/(1 + (y[1171] * y[72] * y[0]))
    r544 = (13.7 * y[1171] * y[72] * y[0])/(1 + (y[1171] * y[72] * y[0]))
    r545 = (13.7 * y[1171] * y[72] * y[0])/(1 + (y[1171] * y[72] * y[0]))
    r546 = (13.7 * y[1171] * y[72] * y[0])/(1 + (y[1171] * y[72] * y[0]))
    return (r550 + r551 + r552) - (r534 + r535 + r536 + r539 + r540 + r541 + r544 + r545 + r546)
 
def C00091(t, y):
    r261 = (13.7 * y[1079] * y[73] * y[158])/(1 + (y[1079] * y[73] * y[158]))
    return (0) - (r261)
 
def C00092(t, y):
    r684 = (13.7 * y[1239] * y[82])/(1 + (y[1239] * y[82]))
    return (r684) - (0)
 
def C00093(t, y):
    r354 = (13.7 * y[1116] * y[1] * y[91])/(1 + (y[1116] * y[1] * y[91]))
    r60 = (13.7 * y[1019] * y[75] * y[616])/(1 + (y[1019] * y[75] * y[616]))
    r61 = (13.7 * y[1019] * y[75] * y[189])/(1 + (y[1019] * y[75] * y[189]))
    r62 = (13.7 * y[1019] * y[75] * y[15])/(1 + (y[1019] * y[75] * y[15]))
    r63 = (13.7 * y[1019] * y[75] * y[616])/(1 + (y[1019] * y[75] * y[616]))
    r64 = (13.7 * y[1019] * y[75] * y[189])/(1 + (y[1019] * y[75] * y[189]))
    r65 = (13.7 * y[1019] * y[75] * y[15])/(1 + (y[1019] * y[75] * y[15]))
    r66 = (13.7 * y[1019] * y[75] * y[616])/(1 + (y[1019] * y[75] * y[616]))
    r67 = (13.7 * y[1019] * y[75] * y[189])/(1 + (y[1019] * y[75] * y[189]))
    r68 = (13.7 * y[1019] * y[75] * y[15])/(1 + (y[1019] * y[75] * y[15]))
    r232 = (13.7 * y[1074] * y[75] * y[35])/(1 + (y[1074] * y[75] * y[35]))
    r233 = (13.7 * y[1074] * y[224] * y[75])/(1 + (y[1074] * y[224] * y[75]))
    r234 = (13.7 * y[1074] * y[122] * y[75])/(1 + (y[1074] * y[122] * y[75]))
    r496 = (13.7 * y[1152] * y[159] * y[75])/(1 + (y[1152] * y[159] * y[75]))
    return (r354) - (r60 + r61 + r62 + r63 + r64 + r65 + r66 + r67 + r68 + r232 + r233 + r234 + r496)
 
def C00094(t, y):
    r325 = (13.7 * y[1099] * y[266] * y[170] * y[174] * y[67])/(1 + (y[1099] * y[266] * y[170] * y[174] * y[67]))
    r329 = (13.7 * y[1099] * y[266] * y[170] * y[174] * y[67] )/(1 + (y[1099] * y[266] * y[170] * y[174] * y[67] ))
    r152 = (13.7 * y[1050] * y[76] * y[26] * y[19])/(1 + (y[1050] * y[76] * y[26] * y[19]))
    r153 = (13.7 * y[1050] * y[19] * y[76] * y[15])/(1 + (y[1050] * y[19] * y[76] * y[15]))
    r155 = (13.7 * y[1050] * y[76] * y[26] * y[19])/(1 + (y[1050] * y[76] * y[26] * y[19]))
    r156 = (13.7 * y[1050] * y[19] * y[76] * y[15])/(1 + (y[1050] * y[19] * y[76] * y[15]))
    r158 = (13.7 * y[1050] * y[76] * y[26] * y[19])/(1 + (y[1050] * y[76] * y[26] * y[19]))
    r159 = (13.7 * y[1050] * y[19] * y[76] * y[15])/(1 + (y[1050] * y[19] * y[76] * y[15]))
    return (r325 + r329) - (r152 + r153 + r155 + r156 + r158 + r159)
 
def C00096(t, y):
    r402 = (13.7 * y[1136] * y[38] * y[229])/(1 + (y[1136] * y[38] * y[229]))
    r610 = (13.7 * y[1205] * y[77])/(1 + (y[1205] * y[77]))
    return (r402) - (r610)
 
def C00097(t, y):
    r323 = (13.7 * y[1099] * y[266] * y[163])/(1 + (y[1099] * y[266] * y[163]))
    r325 = (13.7 * y[1099] * y[266] * y[170] * y[174] * y[67])/(1 + (y[1099] * y[266] * y[170] * y[174] * y[67]))
    r326 = (13.7 * y[1099] * y[268] * y[163])/(1 + (y[1099] * y[268] * y[163]))
    r327 = (13.7 * y[1099] * y[266] * y[163])/(1 + (y[1099] * y[266] * y[163]))
    r329 = (13.7 * y[1099] * y[266] * y[170] * y[174] * y[67] )/(1 + (y[1099] * y[266] * y[170] * y[174] * y[67] ))
    r330 = (13.7 * y[1099] * y[268] * y[163])/(1 + (y[1099] * y[268] * y[163]))
    r527 = (13.7 * y[1168] * y[308] * y[0])/(1 + (y[1168] * y[308] * y[0]))
    r144 = (13.7 * y[1046] * y[78] * y[44] * y[5])/(1 + (y[1046] * y[78] * y[44] * y[5]))
    r501 = (13.7 * y[1157] * y[621] * y[78])/(1 + (y[1157] * y[621] * y[78]))
    r502 = (13.7 * y[1157] * y[78] * y[368])/(1 + (y[1157] * y[78] * y[368]))
    r700 = (13.7 * y[1249] * y[1] * y[78] * y[320])/(1 + (y[1249] * y[1] * y[78] * y[320]))
    r729 = (13.7 * y[1267] * y[54] * y[402] * y[78])/(1 + (y[1267] * y[54] * y[402] * y[78]))
    return (r323 + r325 + r326 + r327 + r329 + r330 + r527) - (r144 + r501 + r502 + r700 + r729)
 
def C00099(t, y):
    r578 = (13.7 * y[1184] * y[43])/(1 + (y[1184] * y[43]))
    r726 = (13.7 * y[1264] * y[1] * y[214] * y[79])/(1 + (y[1264] * y[1] * y[214] * y[79]))
    return (r578) - (r726)
 
def C00100(t, y):
    r717 = (13.7 * y[1262] * y[1] * y[119] * y[9])/(1 + (y[1262] * y[1] * y[119] * y[9]))
    r718 = (13.7 * y[1262] * y[549] * y[9])/(1 + (y[1262] * y[549] * y[9]))
    r263 = (13.7 * y[1080] * y[80] * y[8])/(1 + (y[1080] * y[80] * y[8]))
    return (r717 + r718) - (r263)
 
def C00101(t, y):
    r180 = (13.7 * y[1064] * y[110] * y[109] * y[0])/(1 + (y[1064] * y[110] * y[109] * y[0]))
    r182 = (13.7 * y[1065] * y[142] * y[420])/(1 + (y[1065] * y[142] * y[420]))
    r183 = (13.7 * y[1065] * y[420] * y[199] * y[0])/(1 + (y[1065] * y[420] * y[199] * y[0]))
    r184 = (13.7 * y[1066] * y[352] * y[142])/(1 + (y[1066] * y[352] * y[142]))
    r178 = (13.7 * y[1063] * y[292] * y[81])/(1 + (y[1063] * y[292] * y[81]))
    return (r180 + r182 + r183 + r184) - (r178)
 
def C00103(t, y):
    r575 = (13.7 * y[1183] * y[27] * y[0])/(1 + (y[1183] * y[27] * y[0]))
    r405 = (13.7 * y[1139] * y[205] * y[82])/(1 + (y[1139] * y[205] * y[82]))
    r407 = (13.7 * y[1141] * y[54] * y[82])/(1 + (y[1141] * y[54] * y[82]))
    r493 = (13.7 * y[1150] * y[63] * y[82])/(1 + (y[1150] * y[63] * y[82]))
    r684 = (13.7 * y[1239] * y[82])/(1 + (y[1239] * y[82]))
    r685 = (13.7 * y[1239] * y[82])/(1 + (y[1239] * y[82]))
    return (r575) - (r405 + r407 + r493 + r684 + r685)
 
def C00104(t, y):
    r362 = (13.7 * y[1118] * y[68] * y[21])/(1 + (y[1118] * y[68] * y[21]))
    r385 = (13.7 * y[1131] * y[1] * y[83])/(1 + (y[1131] * y[1] * y[83]))
    return (r362) - (r385)
 
def C00105(t, y):
    r494 = (13.7 * y[1151] * y[469] * y[663])/(1 + (y[1151] * y[469] * y[663]))
    r495 = (13.7 * y[1151] * y[479] * y[663])/(1 + (y[1151] * y[479] * y[663]))
    r571 = (13.7 * y[1183] * y[63] * y[0])/(1 + (y[1183] * y[63] * y[0]))
    r575 = (13.7 * y[1183] * y[27] * y[0])/(1 + (y[1183] * y[27] * y[0]))
    r582 = (13.7 * y[1188] * y[278])/(1 + (y[1188] * y[278]))
    r314 = (13.7 * y[1094] * y[84] * y[12])/(1 + (y[1094] * y[84] * y[12]))
    r315 = (13.7 * y[1094] * y[84] * y[12])/(1 + (y[1094] * y[84] * y[12]))
    r376 = (13.7 * y[1129] * y[1] * y[84])/(1 + (y[1129] * y[1] * y[84]))
    return (r494 + r495 + r571 + r575 + r582) - (r314 + r315 + r376)
 
def C00106(t, y):
    r314 = (13.7 * y[1094] * y[84] * y[12])/(1 + (y[1094] * y[84] * y[12]))
    r315 = (13.7 * y[1094] * y[84] * y[12])/(1 + (y[1094] * y[84] * y[12]))
    return (r314 + r315) - (0)
 
def C00108(t, y):
    r304 = (13.7 * y[1089] * y[444] * y[12])/(1 + (y[1089] * y[444] * y[12]))
    return (r304) - (0)
 
def C00109(t, y):
    r343 = (13.7 * y[1108] * y[348] * y[24])/(1 + (y[1108] * y[348] * y[24]))
    r642 = (13.7 * y[1214] * y[125])/(1 + (y[1214] * y[125]))
    r643 = (13.7 * y[1214] * y[702] * y[0])/(1 + (y[1214] * y[702] * y[0]))
    r53 = (13.7 * y[1017] * y[87] * y[10] * y[3] * y[67])/(1 + (y[1017] * y[87] * y[10] * y[3] * y[67]))
    r200 = (13.7 * y[1071] * y[87] * y[483])/(1 + (y[1071] * y[87] * y[483]))
    r201 = (13.7 * y[1071] * y[21] * y[87])/(1 + (y[1071] * y[21] * y[87]))
    r207 = (13.7 * y[1071] * y[87] * y[483])/(1 + (y[1071] * y[87] * y[483]))
    r208 = (13.7 * y[1071] * y[21] * y[87])/(1 + (y[1071] * y[21] * y[87]))
    r214 = (13.7 * y[1071] * y[87] * y[483])/(1 + (y[1071] * y[87] * y[483]))
    r215 = (13.7 * y[1071] * y[21] * y[87])/(1 + (y[1071] * y[21] * y[87]))
    r221 = (13.7 * y[1071] * y[87] * y[483])/(1 + (y[1071] * y[87] * y[483]))
    r222 = (13.7 * y[1071] * y[21] * y[87])/(1 + (y[1071] * y[21] * y[87]))
    r228 = (13.7 * y[1071] * y[87] * y[483])/(1 + (y[1071] * y[87] * y[483]))
    r229 = (13.7 * y[1071] * y[21] * y[87])/(1 + (y[1071] * y[21] * y[87]))
    return (r343 + r642 + r643) - (r53 + r200 + r201 + r207 + r208 + r214 + r215 + r221 + r222 + r228 + r229)
 
def C00111(t, y):
    r60 = (13.7 * y[1019] * y[75] * y[616])/(1 + (y[1019] * y[75] * y[616]))
    r61 = (13.7 * y[1019] * y[75] * y[189])/(1 + (y[1019] * y[75] * y[189]))
    r62 = (13.7 * y[1019] * y[75] * y[15])/(1 + (y[1019] * y[75] * y[15]))
    r63 = (13.7 * y[1019] * y[75] * y[616])/(1 + (y[1019] * y[75] * y[616]))
    r64 = (13.7 * y[1019] * y[75] * y[189])/(1 + (y[1019] * y[75] * y[189]))
    r65 = (13.7 * y[1019] * y[75] * y[15])/(1 + (y[1019] * y[75] * y[15]))
    r66 = (13.7 * y[1019] * y[75] * y[616])/(1 + (y[1019] * y[75] * y[616]))
    r67 = (13.7 * y[1019] * y[75] * y[189])/(1 + (y[1019] * y[75] * y[189]))
    r68 = (13.7 * y[1019] * y[75] * y[15])/(1 + (y[1019] * y[75] * y[15]))
    r335 = (13.7 * y[1103] * y[410] * y[0] * y[8])/(1 + (y[1103] * y[410] * y[0] * y[8]))
    r587 = (13.7 * y[1192] * y[179])/(1 + (y[1192] * y[179]))
    r588 = (13.7 * y[1192] * y[494])/(1 + (y[1192] * y[494]))
    r589 = (13.7 * y[1192] * y[200])/(1 + (y[1192] * y[200]))
    r590 = (13.7 * y[1192] * y[275])/(1 + (y[1192] * y[275]))
    r672 = (13.7 * y[1231] * y[93])/(1 + (y[1231] * y[93]))
    return (r60 + r61 + r62 + r63 + r64 + r65 + r66 + r67 + r68 + r335 + r587 + r588 + r589 + r590 + r672) - (0)
 
def C00112(t, y):
    r75 = (13.7 * y[1021] * y[243] * y[175] * y[0])/(1 + (y[1021] * y[243] * y[175] * y[0]))
    r360 = (13.7 * y[1118] * y[54] * y[21])/(1 + (y[1118] * y[54] * y[21]))
    r377 = (13.7 * y[1130] * y[1] * y[48])/(1 + (y[1130] * y[1] * y[48]))
    r491 = (13.7 * y[1148] * y[40] * y[8])/(1 + (y[1148] * y[40] * y[8]))
    r384 = (13.7 * y[1131] * y[1] * y[89])/(1 + (y[1131] * y[1] * y[89]))
    return (r75 + r360 + r377 + r491) - (r384)
 
def C00114(t, y):
    r13 = (13.7 * y[1010] * y[90] * y[2])/(1 + (y[1010] * y[90] * y[2]))
    r14 = (13.7 * y[1010] * y[90] * y[5])/(1 + (y[1010] * y[90] * y[5]))
    r659 = (13.7 * y[1221] * y[90])/(1 + (y[1221] * y[90]))
    return (0) - (r13 + r14 + r659)
 
def C00116(t, y):
    r354 = (13.7 * y[1116] * y[1] * y[91])/(1 + (y[1116] * y[1] * y[91]))
    return (0) - (r354)
 
def C00117(t, y):
    r188 = (13.7 * y[1069] * y[495] * y[93])/(1 + (y[1069] * y[495] * y[93]))
    r193 = (13.7 * y[1069] * y[495] * y[59])/(1 + (y[1069] * y[495] * y[59]))
    r686 = (13.7 * y[1239] * y[226])/(1 + (y[1239] * y[226]))
    r191 = (13.7 * y[1069] * y[603] * y[92])/(1 + (y[1069] * y[603] * y[92]))
    r654 = (13.7 * y[1218] * y[92] * y[93] * y[13])/(1 + (y[1218] * y[92] * y[93] * y[13]))
    r655 = (13.7 * y[1218] * y[92] * y[93] * y[55])/(1 + (y[1218] * y[92] * y[93] * y[55]))
    r678 = (13.7 * y[1235] * y[92] )/(1 + (y[1235] * y[92] ))
    return (r188 + r193 + r686) - (r191 + r654 + r655 + r678)
 
def C00118(t, y):
    r192 = (13.7 * y[1069] * y[140] * y[59])/(1 + (y[1069] * y[140] * y[59]))
    r587 = (13.7 * y[1192] * y[179])/(1 + (y[1192] * y[179]))
    r588 = (13.7 * y[1192] * y[494])/(1 + (y[1192] * y[494]))
    r605 = (13.7 * y[1201] * y[403])/(1 + (y[1201] * y[403]))
    r606 = (13.7 * y[1201] * y[56] * y[403])/(1 + (y[1201] * y[56] * y[403]))
    r188 = (13.7 * y[1069] * y[495] * y[93])/(1 + (y[1069] * y[495] * y[93]))
    r189 = (13.7 * y[1069] * y[71] * y[93])/(1 + (y[1069] * y[71] * y[93]))
    r190 = (13.7 * y[1069] * y[490] * y[93])/(1 + (y[1069] * y[490] * y[93]))
    r230 = (13.7 * y[1072] * y[21] * y[93])/(1 + (y[1072] * y[21] * y[93]))
    r654 = (13.7 * y[1218] * y[92] * y[93] * y[13])/(1 + (y[1218] * y[92] * y[93] * y[13]))
    r655 = (13.7 * y[1218] * y[92] * y[93] * y[55])/(1 + (y[1218] * y[92] * y[93] * y[55]))
    r656 = (13.7 * y[1218] * y[93] * y[94] * y[55])/(1 + (y[1218] * y[93] * y[94] * y[55]))
    r672 = (13.7 * y[1231] * y[93])/(1 + (y[1231] * y[93]))
    return (r192 + r587 + r588 + r605 + r606) - (r188 + r189 + r190 + r230 + r654 + r655 + r656 + r672)
 
def C00119(t, y):
    r300 = (13.7 * y[1086] * y[278] * y[12])/(1 + (y[1086] * y[278] * y[12]))
    r302 = (13.7 * y[1087] * y[382] * y[12] * y[23])/(1 + (y[1087] * y[382] * y[12] * y[23]))
    r303 = (13.7 * y[1088] * y[366] * y[12])/(1 + (y[1088] * y[366] * y[12]))
    r304 = (13.7 * y[1089] * y[444] * y[12])/(1 + (y[1089] * y[444] * y[12]))
    r305 = (13.7 * y[1090] * y[286] * y[12] * y[10])/(1 + (y[1090] * y[286] * y[12] * y[10]))
    r308 = (13.7 * y[1093] * y[101] * y[12])/(1 + (y[1093] * y[101] * y[12]))
    r309 = (13.7 * y[1093] * y[111] * y[12])/(1 + (y[1093] * y[111] * y[12]))
    r310 = (13.7 * y[1093] * y[230] * y[12])/(1 + (y[1093] * y[230] * y[12]))
    r314 = (13.7 * y[1094] * y[84] * y[12])/(1 + (y[1094] * y[84] * y[12]))
    r315 = (13.7 * y[1094] * y[84] * y[12])/(1 + (y[1094] * y[84] * y[12]))
    r301 = (13.7 * y[1086] * y[582] * y[94])/(1 + (y[1086] * y[582] * y[94]))
    r311 = (13.7 * y[1093] * y[349] * y[94])/(1 + (y[1093] * y[349] * y[94]))
    r312 = (13.7 * y[1093] * y[644] * y[94])/(1 + (y[1093] * y[644] * y[94]))
    r313 = (13.7 * y[1093] * y[581] * y[94])/(1 + (y[1093] * y[581] * y[94]))
    r656 = (13.7 * y[1218] * y[93] * y[94] * y[55])/(1 + (y[1218] * y[93] * y[94] * y[55]))
    return (r300 + r302 + r303 + r304 + r305 + r308 + r309 + r310 + r314 + r315) - (r301 + r311 + r312 + r313 + r656)
 
def C00120(t, y):
    r500 = (13.7 * y[1156] * y[335] * y[660] * y[18] * y[491] * y[67])/(1 + (y[1156] * y[335] * y[660] * y[18] * y[491] * y[67]))
    r736 = (13.7 * y[1274] * y[1] * y[95] * y[471])/(1 + (y[1274] * y[1] * y[95] * y[471]))
    r737 = (13.7 * y[1274] * y[1] * y[95])/(1 + (y[1274] * y[1] * y[95]))
    return (r500) - (r736 + r737)
 
def C00122(t, y):
    r601 = (13.7 * y[1200] * y[114])/(1 + (y[1200] * y[114]))
    r602 = (13.7 * y[1200] * y[114])/(1 + (y[1200] * y[114]))
    r649 = (13.7 * y[1216] * y[400])/(1 + (y[1216] * y[400]))
    r650 = (13.7 * y[1217] * y[415])/(1 + (y[1217] * y[415]))
    r651 = (13.7 * y[1217] * y[476])/(1 + (y[1217] * y[476]))
    r652 = (13.7 * y[1217] * y[722])/(1 + (y[1217] * y[722]))
    return (r601 + r602 + r649 + r650 + r651 + r652) - (0)
 
def C00123(t, y):
    r340 = (13.7 * y[1108] * y[97] * y[24])/(1 + (y[1108] * y[97] * y[24]))
    r709 = (13.7 * y[1257] * y[1] * y[97] * y[325])/(1 + (y[1257] * y[1] * y[97] * y[325]))
    return (0) - (r340 + r709)
 
def C00125(t, y):
    r154 = (13.7 * y[1050] * y[98] * y[502] * y[19])/(1 + (y[1050] * y[98] * y[502] * y[19]))
    r157 = (13.7 * y[1050] * y[98] * y[502] * y[19])/(1 + (y[1050] * y[98] * y[502] * y[19]))
    r160 = (13.7 * y[1050] * y[98] * y[502] * y[19])/(1 + (y[1050] * y[98] * y[502] * y[19]))
    return (0) - (r154 + r157 + r160)
 
def C00126(t, y):
    r154 = (13.7 * y[1050] * y[98] * y[502] * y[19])/(1 + (y[1050] * y[98] * y[502] * y[19]))
    r157 = (13.7 * y[1050] * y[98] * y[502] * y[19])/(1 + (y[1050] * y[98] * y[502] * y[19]))
    r160 = (13.7 * y[1050] * y[98] * y[502] * y[19])/(1 + (y[1050] * y[98] * y[502] * y[19]))
    return (r154 + r157 + r160) - (0)
 
def C00129(t, y):
    r85 = (13.7 * y[1024] * y[600] * y[107] * y[67])/(1 + (y[1024] * y[600] * y[107] * y[67]))
    r322 = (13.7 * y[1098] * y[201] * y[100])/(1 + (y[1098] * y[201] * y[100]))
    return (r85) - (r322)
 
def C00130(t, y):
    r44 = (13.7 * y[1014] * y[101] * y[2] * y[0])/(1 + (y[1014] * y[101] * y[2] * y[0]))
    r308 = (13.7 * y[1093] * y[101] * y[12])/(1 + (y[1093] * y[101] * y[12]))
    r744 = (13.7 * y[1278] * y[38] * y[101] * y[43])/(1 + (y[1278] * y[38] * y[101] * y[43]))
    return (0) - (r44 + r308 + r744)
 
def C00131(t, y):
    r386 = (13.7 * y[1131] * y[1] * y[132])/(1 + (y[1131] * y[1] * y[132]))
    r80 = (13.7 * y[1022] * y[102] * y[175] * y[0])/(1 + (y[1022] * y[102] * y[175] * y[0]))
    r363 = (13.7 * y[1118] * y[102] * y[21])/(1 + (y[1118] * y[102] * y[21]))
    r458 = (13.7 * y[1147] * y[102] * y[34])/(1 + (y[1147] * y[102] * y[34]))
    r464 = (13.7 * y[1147] * y[102] * y[34])/(1 + (y[1147] * y[102] * y[34]))
    r470 = (13.7 * y[1147] * y[102] * y[34])/(1 + (y[1147] * y[102] * y[34]))
    r476 = (13.7 * y[1147] * y[102] * y[34])/(1 + (y[1147] * y[102] * y[34]))
    r482 = (13.7 * y[1147] * y[102] * y[34])/(1 + (y[1147] * y[102] * y[34]))
    return (r386) - (r80 + r363 + r458 + r464 + r470 + r476 + r482)
 
def C00133(t, y):
    r661 = (13.7 * y[1223] * y[36])/(1 + (y[1223] * y[36]))
    r662 = (13.7 * y[1223] * y[36])/(1 + (y[1223] * y[36]))
    r728 = (13.7 * y[1266] * y[1] * y[103])/(1 + (y[1266] * y[1] * y[103]))
    return (r661 + r662) - (r728)
 
def C00134(t, y):
    r550 = (13.7 * y[1173] * y[123] * y[0])/(1 + (y[1173] * y[123] * y[0]))
    r551 = (13.7 * y[1173] * y[123] * y[0])/(1 + (y[1173] * y[123] * y[0]))
    r552 = (13.7 * y[1173] * y[123] * y[0])/(1 + (y[1173] * y[123] * y[0]))
    return (r550 + r551 + r552) - (0)
 
def C00135(t, y):
    r46 = (13.7 * y[1015] * y[255] * y[2] * y[0])/(1 + (y[1015] * y[255] * y[2] * y[0]))
    r47 = (13.7 * y[1015] * y[336] * y[0] * y[2])/(1 + (y[1015] * y[336] * y[0] * y[2]))
    r706 = (13.7 * y[1254] * y[1] * y[105] * y[323])/(1 + (y[1254] * y[1] * y[105] * y[323]))
    return (r46 + r47) - (r706)
 
def C00136(t, y):
    r102 = (13.7 * y[1026] * y[307] * y[9] * y[2])/(1 + (y[1026] * y[307] * y[9] * y[2]))
    return (r102) - (0)
 
def C00138(t, y):
    r86 = (13.7 * y[1024] * y[143] * y[108] * y[0])/(1 + (y[1024] * y[143] * y[108] * y[0]))
    r107 = (13.7 * y[1031] * y[144] * y[0] * y[108])/(1 + (y[1031] * y[144] * y[0] * y[108]))
    r110 = (13.7 * y[1032] * y[60] * y[0] * y[108])/(1 + (y[1032] * y[60] * y[0] * y[108]))
    r111 = (13.7 * y[1032] * y[221] * y[0] * y[108])/(1 + (y[1032] * y[221] * y[0] * y[108]))
    r112 = (13.7 * y[1033] * y[1286] * y[9] * y[108])/(1 + (y[1033] * y[1286] * y[9] * y[108]))
    r84 = (13.7 * y[1023] * y[595] * y[107])/(1 + (y[1023] * y[595] * y[107]))
    r85 = (13.7 * y[1024] * y[600] * y[107] * y[67])/(1 + (y[1024] * y[600] * y[107] * y[67]))
    r87 = (13.7 * y[1025] * y[1] * y[242] * y[107] * y[67] * y[0])/(1 + (y[1025] * y[1] * y[242] * y[107] * y[67] * y[0]))
    r88 = (13.7 * y[1025] * y[1] * y[0] * y[107])/(1 + (y[1025] * y[1] * y[0] * y[107]))
    r93 = (13.7 * y[1025] * y[313] * y[107] * y[67] * y[1] * y[0])/(1 + (y[1025] * y[313] * y[107] * y[67] * y[1] * y[0]))
    r94 = (13.7 * y[1025] * y[1] * y[242] * y[107] * y[67] * y[0])/(1 + (y[1025] * y[1] * y[242] * y[107] * y[67] * y[0]))
    r95 = (13.7 * y[1025] * y[1] * y[0] * y[107])/(1 + (y[1025] * y[1] * y[0] * y[107]))
    r100 = (13.7 * y[1025] * y[313] * y[107] * y[67] * y[1] * y[0])/(1 + (y[1025] * y[313] * y[107] * y[67] * y[1] * y[0]))
    r109 = (13.7 * y[1031] * y[554] * y[9] * y[10] * y[107])/(1 + (y[1031] * y[554] * y[9] * y[10] * y[107]))
    return (r86 + r107 + r110 + r111 + r112) - (r84 + r85 + r87 + r88 + r93 + r94 + r95 + r100 + r109)
 
def C00139(t, y):
    r84 = (13.7 * y[1023] * y[595] * y[107])/(1 + (y[1023] * y[595] * y[107]))
    r85 = (13.7 * y[1024] * y[600] * y[107] * y[67])/(1 + (y[1024] * y[600] * y[107] * y[67]))
    r87 = (13.7 * y[1025] * y[1] * y[242] * y[107] * y[67] * y[0])/(1 + (y[1025] * y[1] * y[242] * y[107] * y[67] * y[0]))
    r88 = (13.7 * y[1025] * y[1] * y[0] * y[107])/(1 + (y[1025] * y[1] * y[0] * y[107]))
    r93 = (13.7 * y[1025] * y[313] * y[107] * y[67] * y[1] * y[0])/(1 + (y[1025] * y[313] * y[107] * y[67] * y[1] * y[0]))
    r94 = (13.7 * y[1025] * y[1] * y[242] * y[107] * y[67] * y[0])/(1 + (y[1025] * y[1] * y[242] * y[107] * y[67] * y[0]))
    r95 = (13.7 * y[1025] * y[1] * y[0] * y[107])/(1 + (y[1025] * y[1] * y[0] * y[107]))
    r100 = (13.7 * y[1025] * y[313] * y[107] * y[67] * y[1] * y[0])/(1 + (y[1025] * y[313] * y[107] * y[67] * y[1] * y[0]))
    r109 = (13.7 * y[1031] * y[554] * y[9] * y[10] * y[107])/(1 + (y[1031] * y[554] * y[9] * y[10] * y[107]))
    r86 = (13.7 * y[1024] * y[143] * y[108] * y[0])/(1 + (y[1024] * y[143] * y[108] * y[0]))
    r107 = (13.7 * y[1031] * y[144] * y[0] * y[108])/(1 + (y[1031] * y[144] * y[0] * y[108]))
    r110 = (13.7 * y[1032] * y[60] * y[0] * y[108])/(1 + (y[1032] * y[60] * y[0] * y[108]))
    r111 = (13.7 * y[1032] * y[221] * y[0] * y[108])/(1 + (y[1032] * y[221] * y[0] * y[108]))
    r112 = (13.7 * y[1033] * y[1286] * y[9] * y[108])/(1 + (y[1033] * y[1286] * y[9] * y[108]))
    return (r84 + r85 + r87 + r88 + r93 + r94 + r95 + r100 + r109) - (r86 + r107 + r110 + r111 + r112)
 
def C00141(t, y):
    r181 = (13.7 * y[1064] * y[265])/(1 + (y[1064] * y[265]))
    r283 = (13.7 * y[1083] * y[355] * y[9])/(1 + (y[1083] * y[355] * y[9]))
    r341 = (13.7 * y[1108] * y[124] * y[24])/(1 + (y[1108] * y[124] * y[24]))
    r624 = (13.7 * y[1209] * y[427] )/(1 + (y[1209] * y[427] ))
    r625 = (13.7 * y[1209] * y[441])/(1 + (y[1209] * y[441]))
    r180 = (13.7 * y[1064] * y[110] * y[109] * y[0])/(1 + (y[1064] * y[110] * y[109] * y[0]))
    return (r181 + r283 + r341 + r624 + r625) - (r180)
 
def C00143(t, y):
    r134 = (13.7 * y[1042] * y[197] * y[5])/(1 + (y[1042] * y[197] * y[5]))
    r135 = (13.7 * y[1042] * y[197] * y[2])/(1 + (y[1042] * y[197] * y[2]))
    r178 = (13.7 * y[1063] * y[292] * y[81])/(1 + (y[1063] * y[292] * y[81]))
    r180 = (13.7 * y[1064] * y[110] * y[109] * y[0])/(1 + (y[1064] * y[110] * y[109] * y[0]))
    return (r134 + r135 + r178) - (r180)
 
def C00144(t, y):
    r569 = (13.7 * y[1183] * y[38] * y[0])/(1 + (y[1183] * y[38] * y[0]))
    r749 = (13.7 * y[1281] * y[1] * y[230] * y[13])/(1 + (y[1281] * y[1] * y[230] * y[13]))
    r750 = (13.7 * y[1281] * y[1] * y[230] * y[55] * y[0])/(1 + (y[1281] * y[1] * y[230] * y[55] * y[0]))
    r309 = (13.7 * y[1093] * y[111] * y[12])/(1 + (y[1093] * y[111] * y[12]))
    r396 = (13.7 * y[1133] * y[1] * y[111])/(1 + (y[1133] * y[1] * y[111]))
    return (r569 + r749 + r750) - (r309 + r396)
 
def C00147(t, y):
    r290 = (13.7 * y[1085] * y[133] * y[8])/(1 + (y[1085] * y[133] * y[8]))
    r296 = (13.7 * y[1085] * y[217] * y[8])/(1 + (y[1085] * y[217] * y[8]))
    r316 = (13.7 * y[1095] * y[18] * y[687])/(1 + (y[1095] * y[18] * y[687]))
    r559 = (13.7 * y[1176] * y[112] * y[0])/(1 + (y[1176] * y[112] * y[0]))
    return (r290 + r296 + r316) - (r559)
 
def C00148(t, y):
    r130 = (13.7 * y[1041] * y[113] * y[2])/(1 + (y[1041] * y[113] * y[2]))
    r131 = (13.7 * y[1041] * y[113] * y[5])/(1 + (y[1041] * y[113] * y[5]))
    r699 = (13.7 * y[1248] * y[1] * y[113] * y[329])/(1 + (y[1248] * y[1] * y[113] * y[329]))
    return (0) - (r130 + r131 + r699)
 
def C00149(t, y):
    r601 = (13.7 * y[1200] * y[114])/(1 + (y[1200] * y[114]))
    r602 = (13.7 * y[1200] * y[114])/(1 + (y[1200] * y[114]))
    return (0) - (r601 + r602)
 
def C00151(t, y):
    r265 = (13.7 * y[1081] * y[44] * y[115])/(1 + (y[1081] * y[44] * y[115]))
    return (0) - (r265)
 
def C00152(t, y):
    r753 = (13.7 * y[1282] * y[1] * y[43] * y[13])/(1 + (y[1282] * y[1] * y[43] * y[13]))
    r754 = (13.7 * y[1282] * y[1] * y[43] * y[55] * y[0])/(1 + (y[1282] * y[1] * y[43] * y[55] * y[0]))
    r707 = (13.7 * y[1255] * y[1] * y[116] * y[318])/(1 + (y[1255] * y[1] * y[116] * y[318]))
    return (r753 + r754) - (r707)
 
def C00153(t, y):
    r298 = (13.7 * y[1085] * y[386] * y[8])/(1 + (y[1085] * y[386] * y[8]))
    return (r298) - (0)
 
def C00161(t, y):
    r117 = (13.7 * y[1036] * y[484] * y[0] * y[2])/(1 + (y[1036] * y[484] * y[0] * y[2]))
    r118 = (13.7 * y[1036] * y[484] * y[0] * y[5])/(1 + (y[1036] * y[484] * y[0] * y[5]))
    r124 = (13.7 * y[1038] * y[484] * y[0] * y[2])/(1 + (y[1038] * y[484] * y[0] * y[2]))
    r125 = (13.7 * y[1038] * y[484] * y[0] * y[5])/(1 + (y[1038] * y[484] * y[0] * y[5]))
    r636 = (13.7 * y[1213] * y[484])/(1 + (y[1213] * y[484]))
    r641 = (13.7 * y[1213] * y[484])/(1 + (y[1213] * y[484]))
    r646 = (13.7 * y[1214] * y[484])/(1 + (y[1214] * y[484]))
    return (r117 + r118 + r124 + r125 + r636 + r641 + r646) - (0)
 
def C00163(t, y):
    r717 = (13.7 * y[1262] * y[1] * y[119] * y[9])/(1 + (y[1262] * y[1] * y[119] * y[9]))
    r719 = (13.7 * y[1262] * y[1] * y[119])/(1 + (y[1262] * y[1] * y[119]))
    return (0) - (r717 + r719)
 
def C00166(t, y):
    r347 = (13.7 * y[1111] * y[66] * y[24])/(1 + (y[1111] * y[66] * y[24]))
    r611 = (13.7 * y[1206] * y[154])/(1 + (y[1206] * y[154]))
    return (r347 + r611) - (0)
 
def C00169(t, y):
    r756 = (13.7 * y[1283] * y[1] * y[55] * y[165] * y[0])/(1 + (y[1283] * y[1] * y[55] * y[165] * y[0]))
    r757 = (13.7 * y[1283] * y[1] * y[314])/(1 + (y[1283] * y[1] * y[314]))
    r760 = (13.7 * y[1283] * y[1] * y[165] * y[13])/(1 + (y[1283] * y[1] * y[165] * y[13]))
    r762 = (13.7 * y[1283] * y[1] * y[55] * y[165] * y[0])/(1 + (y[1283] * y[1] * y[55] * y[165] * y[0]))
    r763 = (13.7 * y[1283] * y[1] * y[314])/(1 + (y[1283] * y[1] * y[314]))
    r766 = (13.7 * y[1283] * y[1] * y[165] * y[13])/(1 + (y[1283] * y[1] * y[165] * y[13]))
    r185 = (13.7 * y[1067] * y[121] * y[43])/(1 + (y[1067] * y[121] * y[43]))
    r186 = (13.7 * y[1068] * y[121] * y[64])/(1 + (y[1068] * y[121] * y[64]))
    r187 = (13.7 * y[1068] * y[121] * y[64])/(1 + (y[1068] * y[121] * y[64]))
    return (r756 + r757 + r760 + r762 + r763 + r766) - (r185 + r186 + r187)
 
def C00173(t, y):
    r234 = (13.7 * y[1074] * y[122] * y[75])/(1 + (y[1074] * y[122] * y[75]))
    r235 = (13.7 * y[1075] * y[122] * y[287])/(1 + (y[1075] * y[122] * y[287]))
    r246 = (13.7 * y[1075] * y[122] * y[287])/(1 + (y[1075] * y[122] * y[287]))
    return (0) - (r234 + r235 + r246)
 
def C00179(t, y):
    r579 = (13.7 * y[1185] * y[53])/(1 + (y[1185] * y[53]))
    r550 = (13.7 * y[1173] * y[123] * y[0])/(1 + (y[1173] * y[123] * y[0]))
    r551 = (13.7 * y[1173] * y[123] * y[0])/(1 + (y[1173] * y[123] * y[0]))
    r552 = (13.7 * y[1173] * y[123] * y[0])/(1 + (y[1173] * y[123] * y[0]))
    return (r579) - (r550 + r551 + r552)
 
def C00183(t, y):
    r341 = (13.7 * y[1108] * y[124] * y[24])/(1 + (y[1108] * y[124] * y[24]))
    r713 = (13.7 * y[1261] * y[1] * y[124] * y[333] )/(1 + (y[1261] * y[1] * y[124] * y[333] ))
    return (0) - (r341 + r713)
 
def C00188(t, y):
    r627 = (13.7 * y[1210] * y[277] * y[0])/(1 + (y[1210] * y[277] * y[0]))
    r642 = (13.7 * y[1214] * y[125])/(1 + (y[1214] * y[125]))
    r708 = (13.7 * y[1256] * y[1] * y[125] * y[331])/(1 + (y[1256] * y[1] * y[125] * y[331]))
    return (r627) - (r642 + r708)
 
def C00189(t, y):
    r647 = (13.7 * y[1215] * y[126])/(1 + (y[1215] * y[126]))
    return (0) - (r647)
 
def C00192(t, y):
    r137 = (13.7 * y[1044] * y[26] * y[13] * y[0])/(1 + (y[1044] * y[26] * y[13] * y[0]))
    r138 = (13.7 * y[1044] * y[13] * y[2] * y[0])/(1 + (y[1044] * y[13] * y[2] * y[0]))
    return (r137 + r138) - (0)
 
def C00197(t, y):
    r683 = (13.7 * y[1238] * y[228])/(1 + (y[1238] * y[228]))
    return (r683) - (0)
 
def C00199(t, y):
    r678 = (13.7 * y[1235] * y[92] )/(1 + (y[1235] * y[92] ))
    r593 = (13.7 * y[1194] * y[129])/(1 + (y[1194] * y[129]))
    r594 = (13.7 * y[1194] * y[129])/(1 + (y[1194] * y[129]))
    r665 = (13.7 * y[1226] * y[129])/(1 + (y[1226] * y[129]))
    return (r678) - (r593 + r594 + r665)
 
def C00201(t, y):
    r379 = (13.7 * y[1131] * y[1] * y[202])/(1 + (y[1131] * y[1] * y[202]))
    r365 = (13.7 * y[1118] * y[130] * y[21])/(1 + (y[1118] * y[130] * y[21]))
    r411 = (13.7 * y[1144] * y[130] * y[40])/(1 + (y[1144] * y[130] * y[40]))
    r416 = (13.7 * y[1144] * y[130])/(1 + (y[1144] * y[130]))
    r417 = (13.7 * y[1144] * y[130] * y[40])/(1 + (y[1144] * y[130] * y[40]))
    r422 = (13.7 * y[1144] * y[130])/(1 + (y[1144] * y[130]))
    r423 = (13.7 * y[1144] * y[130] * y[40])/(1 + (y[1144] * y[130] * y[40]))
    r428 = (13.7 * y[1144] * y[130])/(1 + (y[1144] * y[130]))
    r429 = (13.7 * y[1144] * y[130] * y[40])/(1 + (y[1144] * y[130] * y[40]))
    r434 = (13.7 * y[1144] * y[130])/(1 + (y[1144] * y[130]))
    r435 = (13.7 * y[1144] * y[130] * y[40])/(1 + (y[1144] * y[130] * y[40]))
    r440 = (13.7 * y[1144] * y[130])/(1 + (y[1144] * y[130]))
    r567 = (13.7 * y[1183] * y[130] * y[0])/(1 + (y[1183] * y[130] * y[0]))
    return (r379) - (r365 + r411 + r416 + r417 + r422 + r423 + r428 + r429 + r434 + r435 + r440 + r567)
 
def C00203(t, y):
    r668 = (13.7 * y[1228] * y[37])/(1 + (y[1228] * y[37]))
    return (r668) - (0)
 
def C00206(t, y):
    r363 = (13.7 * y[1118] * y[102] * y[21])/(1 + (y[1118] * y[102] * y[21]))
    r72 = (13.7 * y[1021] * y[132] * y[175] * y[0])/(1 + (y[1021] * y[132] * y[175] * y[0]))
    r386 = (13.7 * y[1131] * y[1] * y[132])/(1 + (y[1131] * y[1] * y[132]))
    return (r363) - (r72 + r386)
 
def C00212(t, y):
    r521 = (13.7 * y[1165] * y[305] * y[0])/(1 + (y[1165] * y[305] * y[0]))
    r290 = (13.7 * y[1085] * y[133] * y[8])/(1 + (y[1085] * y[133] * y[8]))
    return (r521) - (r290)
 
def C00215(t, y):
    r567 = (13.7 * y[1183] * y[130] * y[0])/(1 + (y[1183] * y[130] * y[0]))
    return (r567) - (0)
 
def C00217(t, y):
    r530 = (13.7 * y[1169] * y[248] * y[0])/(1 + (y[1169] * y[248] * y[0]))
    r663 = (13.7 * y[1224] * y[23])/(1 + (y[1224] * y[23]))
    r732 = (13.7 * y[1270] * y[1] * y[288] * y[135])/(1 + (y[1270] * y[1] * y[288] * y[135]))
    return (r530 + r663) - (r732)
 
def C00224(t, y):
    r152 = (13.7 * y[1050] * y[76] * y[26] * y[19])/(1 + (y[1050] * y[76] * y[26] * y[19]))
    r153 = (13.7 * y[1050] * y[19] * y[76] * y[15])/(1 + (y[1050] * y[19] * y[76] * y[15]))
    r155 = (13.7 * y[1050] * y[76] * y[26] * y[19])/(1 + (y[1050] * y[76] * y[26] * y[19]))
    r156 = (13.7 * y[1050] * y[19] * y[76] * y[15])/(1 + (y[1050] * y[19] * y[76] * y[15]))
    r158 = (13.7 * y[1050] * y[76] * y[26] * y[19])/(1 + (y[1050] * y[76] * y[26] * y[19]))
    r159 = (13.7 * y[1050] * y[19] * y[76] * y[15])/(1 + (y[1050] * y[19] * y[76] * y[15]))
    r408 = (13.7 * y[1142] * y[1] * y[50])/(1 + (y[1142] * y[1] * y[50]))
    r351 = (13.7 * y[1114] * y[1] * y[136])/(1 + (y[1114] * y[1] * y[136]))
    return (r152 + r153 + r155 + r156 + r158 + r159 + r408) - (r351)
 
def C00226(t, y):
    r1 = (13.7 * y[1010] * y[137] * y[2])/(1 + (y[1010] * y[137] * y[2]))
    return (0) - (r1)
 
def C00227(t, y):
    r262 = (13.7 * y[1080] * y[22] * y[8])/(1 + (y[1080] * y[22] * y[8]))
    return (r262) - (0)
 
def C00229(t, y):
    r234 = (13.7 * y[1074] * y[122] * y[75])/(1 + (y[1074] * y[122] * y[75]))
    r235 = (13.7 * y[1075] * y[122] * y[287])/(1 + (y[1075] * y[122] * y[287]))
    r236 = (13.7 * y[1075] * y[425] * y[287])/(1 + (y[1075] * y[425] * y[287]))
    r237 = (13.7 * y[1075] * y[487] * y[287])/(1 + (y[1075] * y[487] * y[287]))
    r238 = (13.7 * y[1075] * y[515] * y[287])/(1 + (y[1075] * y[515] * y[287]))
    r239 = (13.7 * y[1075] * y[519] * y[287])/(1 + (y[1075] * y[519] * y[287]))
    r240 = (13.7 * y[1075] * y[522] * y[287])/(1 + (y[1075] * y[522] * y[287]))
    r241 = (13.7 * y[1075] * y[525] * y[287])/(1 + (y[1075] * y[525] * y[287]))
    r242 = (13.7 * y[1075] * y[531] * y[287])/(1 + (y[1075] * y[531] * y[287]))
    r243 = (13.7 * y[1075] * y[534] * y[287])/(1 + (y[1075] * y[534] * y[287]))
    r244 = (13.7 * y[1075] * y[670] * y[287])/(1 + (y[1075] * y[670] * y[287]))
    r245 = (13.7 * y[1075] * y[683] * y[287])/(1 + (y[1075] * y[683] * y[287]))
    r246 = (13.7 * y[1075] * y[122] * y[287])/(1 + (y[1075] * y[122] * y[287]))
    r247 = (13.7 * y[1075] * y[425] * y[287])/(1 + (y[1075] * y[425] * y[287]))
    r248 = (13.7 * y[1075] * y[487] * y[287])/(1 + (y[1075] * y[487] * y[287]))
    r249 = (13.7 * y[1075] * y[515] * y[287])/(1 + (y[1075] * y[515] * y[287]))
    r250 = (13.7 * y[1075] * y[519] * y[287])/(1 + (y[1075] * y[519] * y[287]))
    r251 = (13.7 * y[1075] * y[522] * y[287])/(1 + (y[1075] * y[522] * y[287]))
    r252 = (13.7 * y[1075] * y[525] * y[287])/(1 + (y[1075] * y[525] * y[287]))
    r253 = (13.7 * y[1075] * y[531] * y[287])/(1 + (y[1075] * y[531] * y[287]))
    r254 = (13.7 * y[1075] * y[534] * y[287])/(1 + (y[1075] * y[534] * y[287]))
    r255 = (13.7 * y[1075] * y[670] * y[287])/(1 + (y[1075] * y[670] * y[287]))
    r256 = (13.7 * y[1075] * y[683] * y[287])/(1 + (y[1075] * y[683] * y[287]))
    r257 = (13.7 * y[1076] * y[522] * y[632])/(1 + (y[1076] * y[522] * y[632]))
    r497 = (13.7 * y[1153] * y[9] * y[409])/(1 + (y[1153] * y[9] * y[409]))
    return (r234 + r235 + r236 + r237 + r238 + r239 + r240 + r241 + r242 + r243 + r244 + r245 + r246 + r247 + r248 + r249 + r250 + r251 + r252 + r253 + r254 + r255 + r256 + r257 + r497) - (0)
 
def C00231(t, y):
    r188 = (13.7 * y[1069] * y[495] * y[93])/(1 + (y[1069] * y[495] * y[93]))
    r189 = (13.7 * y[1069] * y[71] * y[93])/(1 + (y[1069] * y[71] * y[93]))
    r190 = (13.7 * y[1069] * y[490] * y[93])/(1 + (y[1069] * y[490] * y[93]))
    r665 = (13.7 * y[1226] * y[129])/(1 + (y[1226] * y[129]))
    r192 = (13.7 * y[1069] * y[140] * y[59])/(1 + (y[1069] * y[140] * y[59]))
    return (r188 + r189 + r190 + r665) - (r192)
 
def C00233(t, y):
    r52 = (13.7 * y[1017] * y[451] * y[2])/(1 + (y[1017] * y[451] * y[2]))
    r340 = (13.7 * y[1108] * y[97] * y[24])/(1 + (y[1108] * y[97] * y[24]))
    r50 = (13.7 * y[1017] * y[141] * y[10])/(1 + (y[1017] * y[141] * y[10]))
    return (r52 + r340) - (r50)
 
def C00234(t, y):
    r182 = (13.7 * y[1065] * y[142] * y[420])/(1 + (y[1065] * y[142] * y[420]))
    r184 = (13.7 * y[1066] * y[352] * y[142])/(1 + (y[1066] * y[352] * y[142]))
    return (0) - (r182 + r184)
 
def C00235(t, y):
    r86 = (13.7 * y[1024] * y[143] * y[108] * y[0])/(1 + (y[1024] * y[143] * y[108] * y[0]))
    r336 = (13.7 * y[1104] * y[143] * y[662])/(1 + (y[1104] * y[143] * y[662]))
    return (0) - (r86 + r336)
 
def C00237(t, y):
    r595 = (13.7 * y[1195] * y[396] * y[18])/(1 + (y[1195] * y[396] * y[18]))
    r107 = (13.7 * y[1031] * y[144] * y[0] * y[108])/(1 + (y[1031] * y[144] * y[0] * y[108]))
    return (r595) - (r107)
 
def C00239(t, y):
    r378 = (13.7 * y[1130] * y[1] * y[145])/(1 + (y[1130] * y[1] * y[145]))
    return (0) - (r378)
 
def C00240(t, y):
    r169 = (13.7 * y[1055] * y[18] * y[146])/(1 + (y[1055] * y[18] * y[146]))
    return (0) - (r169)
 
def C00241(t, y):
    r531 = (13.7 * y[1169] * y[147] * y[0])/(1 + (y[1169] * y[147] * y[0]))
    r537 = (13.7 * y[1171] * y[147] * y[0])/(1 + (y[1171] * y[147] * y[0]))
    r542 = (13.7 * y[1171] * y[147] * y[0])/(1 + (y[1171] * y[147] * y[0]))
    r547 = (13.7 * y[1171] * y[147] * y[0])/(1 + (y[1171] * y[147] * y[0]))
    return (0) - (r531 + r537 + r542 + r547)
 
def C00242(t, y):
    r292 = (13.7 * y[1085] * y[187] * y[8])/(1 + (y[1085] * y[187] * y[8]))
    r295 = (13.7 * y[1085] * y[172] * y[8])/(1 + (y[1085] * y[172] * y[8]))
    r307 = (13.7 * y[1092] * y[338] * y[652])/(1 + (y[1092] * y[338] * y[652]))
    r309 = (13.7 * y[1093] * y[111] * y[12])/(1 + (y[1093] * y[111] * y[12]))
    return (r292 + r295 + r307 + r309) - (0)
 
def C00245(t, y):
    r266 = (13.7 * y[1081] * y[389] * y[149])/(1 + (y[1081] * y[389] * y[149]))
    r274 = (13.7 * y[1081] * y[389] * y[149])/(1 + (y[1081] * y[389] * y[149]))
    return (0) - (r266 + r274)
 
def C00246(t, y):
    r371 = (13.7 * y[1124] * y[1] * y[150])/(1 + (y[1124] * y[1] * y[150]))
    return (0) - (r371)
 
def C00248(t, y):
    r142 = (13.7 * y[1045] * y[222] * y[2])/(1 + (y[1045] * y[222] * y[2]))
    return (r142) - (0)
 
def C00251(t, y):
    r629 = (13.7 * y[1211] * y[296])/(1 + (y[1211] * y[296]))
    return (r629) - (0)
 
def C00253(t, y):
    r299 = (13.7 * y[1085] * y[540] * y[8])/(1 + (y[1085] * y[540] * y[8]))
    r306 = (13.7 * y[1091] * y[286] * y[383])/(1 + (y[1091] * y[286] * y[383]))
    return (r299 + r306) - (0)
 
def C00254(t, y):
    r611 = (13.7 * y[1206] * y[154])/(1 + (y[1206] * y[154]))
    return (0) - (r611)
 
def C00255(t, y):
    r338 = (13.7 * y[1106] * y[448])/(1 + (y[1106] * y[448]))
    r353 = (13.7 * y[1115] * y[1] * y[155])/(1 + (y[1115] * y[1] * y[155]))
    return (r338) - (r353)
 
def C00258(t, y):
    r111 = (13.7 * y[1032] * y[221] * y[0] * y[108])/(1 + (y[1032] * y[221] * y[0] * y[108]))
    return (r111) - (0)
 
def C00262(t, y):
    r291 = (13.7 * y[1085] * y[166] * y[8])/(1 + (y[1085] * y[166] * y[8]))
    r297 = (13.7 * y[1085] * y[498] * y[8])/(1 + (y[1085] * y[498] * y[8]))
    r308 = (13.7 * y[1093] * y[101] * y[12])/(1 + (y[1093] * y[101] * y[12]))
    r526 = (13.7 * y[1167] * y[658] * y[0] )/(1 + (y[1167] * y[658] * y[0] ))
    r559 = (13.7 * y[1176] * y[112] * y[0])/(1 + (y[1176] * y[112] * y[0]))
    return (r291 + r297 + r308 + r526 + r559) - (0)
 
def C00263(t, y):
    r261 = (13.7 * y[1079] * y[73] * y[158])/(1 + (y[1079] * y[73] * y[158]))
    return (0) - (r261)
 
def C00269(t, y):
    r410 = (13.7 * y[1143] * y[54] * y[192])/(1 + (y[1143] * y[54] * y[192]))
    r496 = (13.7 * y[1152] * y[159] * y[75])/(1 + (y[1152] * y[159] * y[75]))
    r498 = (13.7 * y[1154] * y[159] * y[56])/(1 + (y[1154] * y[159] * y[56]))
    return (r410) - (r496 + r498)
 
def C00275(t, y):
    r680 = (13.7 * y[1236] * y[160])/(1 + (y[1236] * y[160]))
    r681 = (13.7 * y[1236] * y[160])/(1 + (y[1236] * y[160]))
    return (0) - (r680 + r681)
 
def C00279(t, y):
    r189 = (13.7 * y[1069] * y[71] * y[93])/(1 + (y[1069] * y[71] * y[93]))
    r190 = (13.7 * y[1069] * y[490] * y[93])/(1 + (y[1069] * y[490] * y[93]))
    r589 = (13.7 * y[1192] * y[200])/(1 + (y[1192] * y[200]))
    return (r189 + r190 + r589) - (0)
 
def C00282(t, y):
    r87 = (13.7 * y[1025] * y[1] * y[242] * y[107] * y[67] * y[0])/(1 + (y[1025] * y[1] * y[242] * y[107] * y[67] * y[0]))
    r89 = (13.7 * y[1025] * y[491] * y[67])/(1 + (y[1025] * y[491] * y[67]))
    r94 = (13.7 * y[1025] * y[1] * y[242] * y[107] * y[67] * y[0])/(1 + (y[1025] * y[1] * y[242] * y[107] * y[67] * y[0]))
    r96 = (13.7 * y[1025] * y[491] * y[67])/(1 + (y[1025] * y[491] * y[67]))
    return (r87 + r89 + r94 + r96) - (0)
 
def C00283(t, y):
    r504 = (13.7 * y[1158] * y[629] * y[716] * y[18] * y[714] * y[67])/(1 + (y[1158] * y[629] * y[716] * y[18] * y[714] * y[67]))
    r505 = (13.7 * y[1158] * y[721] * y[716] * y[18] * y[714] * y[67])/(1 + (y[1158] * y[721] * y[716] * y[18] * y[714] * y[67]))
    r506 = (13.7 * y[1158] * y[720] * y[716] * y[18] * y[714] * y[67])/(1 + (y[1158] * y[720] * y[716] * y[18] * y[714] * y[67]))
    r323 = (13.7 * y[1099] * y[266] * y[163])/(1 + (y[1099] * y[266] * y[163]))
    r326 = (13.7 * y[1099] * y[268] * y[163])/(1 + (y[1099] * y[268] * y[163]))
    r327 = (13.7 * y[1099] * y[266] * y[163])/(1 + (y[1099] * y[266] * y[163]))
    r330 = (13.7 * y[1099] * y[268] * y[163])/(1 + (y[1099] * y[268] * y[163]))
    return (r504 + r505 + r506) - (r323 + r326 + r327 + r330)
 
def C00286(t, y):
    r387 = (13.7 * y[1131] * y[1] * y[180])/(1 + (y[1131] * y[1] * y[180]))
    r81 = (13.7 * y[1022] * y[164] * y[175] * y[0])/(1 + (y[1022] * y[164] * y[175] * y[0]))
    r364 = (13.7 * y[1118] * y[164] * y[21])/(1 + (y[1118] * y[164] * y[21]))
    r459 = (13.7 * y[1147] * y[164] * y[34])/(1 + (y[1147] * y[164] * y[34]))
    r465 = (13.7 * y[1147] * y[164] * y[34])/(1 + (y[1147] * y[164] * y[34]))
    r471 = (13.7 * y[1147] * y[164] * y[34])/(1 + (y[1147] * y[164] * y[34]))
    r477 = (13.7 * y[1147] * y[164] * y[34])/(1 + (y[1147] * y[164] * y[34]))
    r483 = (13.7 * y[1147] * y[164] * y[34])/(1 + (y[1147] * y[164] * y[34]))
    return (r387) - (r81 + r364 + r459 + r465 + r471 + r477 + r483)
 
def C00288(t, y):
    r534 = (13.7 * y[1171] * y[72] * y[0])/(1 + (y[1171] * y[72] * y[0]))
    r539 = (13.7 * y[1171] * y[72] * y[0])/(1 + (y[1171] * y[72] * y[0]))
    r544 = (13.7 * y[1171] * y[72] * y[0])/(1 + (y[1171] * y[72] * y[0]))
    r533 = (13.7 * y[1171] * y[13] * y[165])/(1 + (y[1171] * y[13] * y[165]))
    r538 = (13.7 * y[1171] * y[13] * y[165])/(1 + (y[1171] * y[13] * y[165]))
    r543 = (13.7 * y[1171] * y[13] * y[165])/(1 + (y[1171] * y[13] * y[165]))
    r756 = (13.7 * y[1283] * y[1] * y[55] * y[165] * y[0])/(1 + (y[1283] * y[1] * y[55] * y[165] * y[0]))
    r758 = (13.7 * y[1283] * y[1] * y[165])/(1 + (y[1283] * y[1] * y[165]))
    r760 = (13.7 * y[1283] * y[1] * y[165] * y[13])/(1 + (y[1283] * y[1] * y[165] * y[13]))
    r762 = (13.7 * y[1283] * y[1] * y[55] * y[165] * y[0])/(1 + (y[1283] * y[1] * y[55] * y[165] * y[0]))
    r764 = (13.7 * y[1283] * y[1] * y[165])/(1 + (y[1283] * y[1] * y[165]))
    r766 = (13.7 * y[1283] * y[1] * y[165] * y[13])/(1 + (y[1283] * y[1] * y[165] * y[13]))
    r767 = (13.7 * y[1284] * y[1] * y[21] * y[165])/(1 + (y[1284] * y[1] * y[21] * y[165]))
    return (r534 + r539 + r544) - (r533 + r538 + r543 + r756 + r758 + r760 + r762 + r764 + r766 + r767)
 
def C00294(t, y):
    r291 = (13.7 * y[1085] * y[166] * y[8])/(1 + (y[1085] * y[166] * y[8]))
    return (0) - (r291)
 
def C00295(t, y):
    r113 = (13.7 * y[1034] * y[173] * y[2])/(1 + (y[1034] * y[173] * y[2]))
    r300 = (13.7 * y[1086] * y[278] * y[12])/(1 + (y[1086] * y[278] * y[12]))
    return (r113 + r300) - (0)
 
def C00299(t, y):
    r522 = (13.7 * y[1165] * y[306] * y[0])/(1 + (y[1165] * y[306] * y[0]))
    return (r522) - (0)
 
def C00315(t, y):
    r585 = (13.7 * y[1191] * y[665])/(1 + (y[1191] * y[665]))
    return (r585) - (0)
 
def C00320(t, y):
    r325 = (13.7 * y[1099] * y[266] * y[170] * y[174] * y[67])/(1 + (y[1099] * y[266] * y[170] * y[174] * y[67]))
    r329 = (13.7 * y[1099] * y[266] * y[170] * y[174] * y[67] )/(1 + (y[1099] * y[266] * y[170] * y[174] * y[67] ))
    return (0) - (r325 + r329)
 
def C00327(t, y):
    r186 = (13.7 * y[1068] * y[121] * y[64])/(1 + (y[1068] * y[121] * y[64]))
    r187 = (13.7 * y[1068] * y[121] * y[64])/(1 + (y[1068] * y[121] * y[64]))
    r745 = (13.7 * y[1279] * y[1] * y[171] * y[43])/(1 + (y[1279] * y[1] * y[171] * y[43]))
    return (r186 + r187) - (r745)
 
def C00330(t, y):
    r295 = (13.7 * y[1085] * y[172] * y[8])/(1 + (y[1085] * y[172] * y[8]))
    return (0) - (r295)
 
def C00337(t, y):
    r113 = (13.7 * y[1034] * y[173] * y[2])/(1 + (y[1034] * y[173] * y[2]))
    return (0) - (r113)
 
def C00342(t, y):
    r71 = (13.7 * y[1021] * y[434] * y[175] * y[0])/(1 + (y[1021] * y[434] * y[175] * y[0]))
    r72 = (13.7 * y[1021] * y[132] * y[175] * y[0])/(1 + (y[1021] * y[132] * y[175] * y[0]))
    r73 = (13.7 * y[1021] * y[303] * y[175] * y[0])/(1 + (y[1021] * y[303] * y[175] * y[0]))
    r74 = (13.7 * y[1021] * y[180] * y[175] * y[0])/(1 + (y[1021] * y[180] * y[175] * y[0]))
    r75 = (13.7 * y[1021] * y[243] * y[175] * y[0])/(1 + (y[1021] * y[243] * y[175] * y[0]))
    r78 = (13.7 * y[1021] * y[712] * y[175] * y[0])/(1 + (y[1021] * y[712] * y[175] * y[0]))
    r79 = (13.7 * y[1022] * y[235] * y[175] * y[0])/(1 + (y[1022] * y[235] * y[175] * y[0]))
    r80 = (13.7 * y[1022] * y[102] * y[175] * y[0])/(1 + (y[1022] * y[102] * y[175] * y[0]))
    r81 = (13.7 * y[1022] * y[164] * y[175] * y[0])/(1 + (y[1022] * y[164] * y[175] * y[0]))
    r82 = (13.7 * y[1022] * y[204] * y[175] * y[0])/(1 + (y[1022] * y[204] * y[175] * y[0]))
    r83 = (13.7 * y[1022] * y[206] * y[175] * y[0])/(1 + (y[1022] * y[206] * y[175] * y[0]))
    r147 = (13.7 * y[1047] * y[380] * y[175] * y[0])/(1 + (y[1047] * y[380] * y[175] * y[0]))
    r148 = (13.7 * y[1047] * y[61] * y[175] * y[0])/(1 + (y[1047] * y[61] * y[175] * y[0]))
    r149 = (13.7 * y[1048] * y[380] * y[175] * y[0])/(1 + (y[1048] * y[380] * y[175] * y[0]))
    r143 = (13.7 * y[1046] * y[174] * y[5])/(1 + (y[1046] * y[174] * y[5]))
    r325 = (13.7 * y[1099] * y[266] * y[170] * y[174] * y[67])/(1 + (y[1099] * y[266] * y[170] * y[174] * y[67]))
    r329 = (13.7 * y[1099] * y[266] * y[170] * y[174] * y[67] )/(1 + (y[1099] * y[266] * y[170] * y[174] * y[67] ))
    return (r71 + r72 + r73 + r74 + r75 + r78 + r79 + r80 + r81 + r82 + r83 + r147 + r148 + r149) - (r143 + r325 + r329)
 
def C00343(t, y):
    r143 = (13.7 * y[1046] * y[174] * y[5])/(1 + (y[1046] * y[174] * y[5]))
    r325 = (13.7 * y[1099] * y[266] * y[170] * y[174] * y[67])/(1 + (y[1099] * y[266] * y[170] * y[174] * y[67]))
    r329 = (13.7 * y[1099] * y[266] * y[170] * y[174] * y[67] )/(1 + (y[1099] * y[266] * y[170] * y[174] * y[67] ))
    r71 = (13.7 * y[1021] * y[434] * y[175] * y[0])/(1 + (y[1021] * y[434] * y[175] * y[0]))
    r72 = (13.7 * y[1021] * y[132] * y[175] * y[0])/(1 + (y[1021] * y[132] * y[175] * y[0]))
    r73 = (13.7 * y[1021] * y[303] * y[175] * y[0])/(1 + (y[1021] * y[303] * y[175] * y[0]))
    r74 = (13.7 * y[1021] * y[180] * y[175] * y[0])/(1 + (y[1021] * y[180] * y[175] * y[0]))
    r75 = (13.7 * y[1021] * y[243] * y[175] * y[0])/(1 + (y[1021] * y[243] * y[175] * y[0]))
    r78 = (13.7 * y[1021] * y[712] * y[175] * y[0])/(1 + (y[1021] * y[712] * y[175] * y[0]))
    r79 = (13.7 * y[1022] * y[235] * y[175] * y[0])/(1 + (y[1022] * y[235] * y[175] * y[0]))
    r80 = (13.7 * y[1022] * y[102] * y[175] * y[0])/(1 + (y[1022] * y[102] * y[175] * y[0]))
    r81 = (13.7 * y[1022] * y[164] * y[175] * y[0])/(1 + (y[1022] * y[164] * y[175] * y[0]))
    r82 = (13.7 * y[1022] * y[204] * y[175] * y[0])/(1 + (y[1022] * y[204] * y[175] * y[0]))
    r83 = (13.7 * y[1022] * y[206] * y[175] * y[0])/(1 + (y[1022] * y[206] * y[175] * y[0]))
    r147 = (13.7 * y[1047] * y[380] * y[175] * y[0])/(1 + (y[1047] * y[380] * y[175] * y[0]))
    r148 = (13.7 * y[1047] * y[61] * y[175] * y[0])/(1 + (y[1047] * y[61] * y[175] * y[0]))
    r149 = (13.7 * y[1048] * y[380] * y[175] * y[0])/(1 + (y[1048] * y[380] * y[175] * y[0]))
    return (r143 + r325 + r329) - (r71 + r72 + r73 + r74 + r75 + r78 + r79 + r80 + r81 + r82 + r83 + r147 + r148 + r149)
 
def C00345(t, y):
    r513 = (13.7 * y[1163] * y[291] * y[0])/(1 + (y[1163] * y[291] * y[0]))
    return (r513) - (0)
 
def C00350(t, y):
    r584 = (13.7 * y[1190] * y[365])/(1 + (y[1190] * y[365]))
    return (r584) - (0)
 
def C00352(t, y):
    r339 = (13.7 * y[1107] * y[55] * y[71])/(1 + (y[1107] * y[55] * y[71]))
    r682 = (13.7 * y[1237] * y[561])/(1 + (y[1237] * y[561]))
    return (r339 + r682) - (0)
 
def C00354(t, y):
    r514 = (13.7 * y[1164] * y[179] * y[0])/(1 + (y[1164] * y[179] * y[0]))
    r517 = (13.7 * y[1164] * y[179] * y[0])/(1 + (y[1164] * y[179] * y[0]))
    r587 = (13.7 * y[1192] * y[179])/(1 + (y[1192] * y[179]))
    return (0) - (r514 + r517 + r587)
 
def C00361(t, y):
    r364 = (13.7 * y[1118] * y[164] * y[21])/(1 + (y[1118] * y[164] * y[21]))
    r397 = (13.7 * y[1133] * y[1] * y[181])/(1 + (y[1133] * y[1] * y[181]))
    r74 = (13.7 * y[1021] * y[180] * y[175] * y[0])/(1 + (y[1021] * y[180] * y[175] * y[0]))
    r387 = (13.7 * y[1131] * y[1] * y[180])/(1 + (y[1131] * y[1] * y[180]))
    return (r364 + r397) - (r74 + r387)
 
def C00362(t, y):
    r397 = (13.7 * y[1133] * y[1] * y[181])/(1 + (y[1133] * y[1] * y[181]))
    return (0) - (r397)
 
def C00363(t, y):
    r399 = (13.7 * y[1134] * y[1] * y[183])/(1 + (y[1134] * y[1] * y[183]))
    r388 = (13.7 * y[1131] * y[1] * y[182])/(1 + (y[1131] * y[1] * y[182]))
    return (r399) - (r388)
 
def C00364(t, y):
    r572 = (13.7 * y[1183] * y[205] * y[0])/(1 + (y[1183] * y[205] * y[0]))
    r399 = (13.7 * y[1134] * y[1] * y[183])/(1 + (y[1134] * y[1] * y[183]))
    return (r572) - (r399)
 
def C00365(t, y):
    r564 = (13.7 * y[1181] * y[206] * y[0])/(1 + (y[1181] * y[206] * y[0]))
    r400 = (13.7 * y[1134] * y[1] * y[184])/(1 + (y[1134] * y[1] * y[184]))
    return (r564) - (r400)
 
def C00376(t, y):
    r3 = (13.7 * y[1010] * y[209] * y[2])/(1 + (y[1010] * y[209] * y[2]))
    return (r3) - (0)
 
def C00385(t, y):
    r293 = (13.7 * y[1085] * y[334] * y[8])/(1 + (y[1085] * y[334] * y[8]))
    r310 = (13.7 * y[1093] * y[230] * y[12])/(1 + (y[1093] * y[230] * y[12]))
    return (r293 + r310) - (0)
 
def C00387(t, y):
    r523 = (13.7 * y[1165] * y[562] * y[0])/(1 + (y[1165] * y[562] * y[0]))
    r292 = (13.7 * y[1085] * y[187] * y[8])/(1 + (y[1085] * y[187] * y[8]))
    return (r523) - (r292)
 
def C00390(t, y):
    r61 = (13.7 * y[1019] * y[75] * y[189])/(1 + (y[1019] * y[75] * y[189]))
    r64 = (13.7 * y[1019] * y[75] * y[189])/(1 + (y[1019] * y[75] * y[189]))
    r67 = (13.7 * y[1019] * y[75] * y[189])/(1 + (y[1019] * y[75] * y[189]))
    return (r61 + r64 + r67) - (0)
 
def C00399(t, y):
    r61 = (13.7 * y[1019] * y[75] * y[189])/(1 + (y[1019] * y[75] * y[189]))
    r64 = (13.7 * y[1019] * y[75] * y[189])/(1 + (y[1019] * y[75] * y[189]))
    r67 = (13.7 * y[1019] * y[75] * y[189])/(1 + (y[1019] * y[75] * y[189]))
    return (0) - (r61 + r64 + r67)
 
def C00404(t, y):
    r374 = (13.7 * y[1127] * y[1] * y[190])/(1 + (y[1127] * y[1] * y[190]))
    r374 = (13.7 * y[1127] * y[1] * y[190])/(1 + (y[1127] * y[1] * y[190]))
    return (r374) - (r374)
 
def C00407(t, y):
    r342 = (13.7 * y[1108] * y[191] * y[24])/(1 + (y[1108] * y[191] * y[24]))
    r710 = (13.7 * y[1258] * y[1] * y[191] * y[324])/(1 + (y[1258] * y[1] * y[191] * y[324]))
    return (0) - (r342 + r710)
 
def C00416(t, y):
    r410 = (13.7 * y[1143] * y[54] * y[192])/(1 + (y[1143] * y[54] * y[192]))
    return (0) - (r410)
 
def C00418(t, y):
    r18 = (13.7 * y[1010] * y[193] * y[2])/(1 + (y[1010] * y[193] * y[2]))
    return (0) - (r18)
 
def C00430(t, y):
    r607 = (13.7 * y[1202] * y[194])/(1 + (y[1202] * y[194]))
    r688 = (13.7 * y[1240] * y[194])/(1 + (y[1240] * y[194]))
    return (0) - (r607 + r688)
 
def C00437(t, y):
    r260 = (13.7 * y[1078] * y[195] * y[23])/(1 + (y[1078] * y[195] * y[23]))
    return (0) - (r260)
 
def C00438(t, y):
    r185 = (13.7 * y[1067] * y[121] * y[43])/(1 + (y[1067] * y[121] * y[43]))
    return (r185) - (0)
 
def C00440(t, y):
    r134 = (13.7 * y[1042] * y[197] * y[5])/(1 + (y[1042] * y[197] * y[5]))
    r135 = (13.7 * y[1042] * y[197] * y[2])/(1 + (y[1042] * y[197] * y[2]))
    return (0) - (r134 + r135)
 
def C00441(t, y):
    r103 = (13.7 * y[1027] * y[198] * y[8] * y[5])/(1 + (y[1027] * y[198] * y[8] * y[5]))
    r194 = (13.7 * y[1070] * y[198] * y[655])/(1 + (y[1070] * y[198] * y[655]))
    r657 = (13.7 * y[1219] * y[198] * y[21])/(1 + (y[1219] * y[198] * y[21]))
    return (0) - (r103 + r194 + r657)
 
def C00445(t, y):
    r179 = (13.7 * y[1063] * y[401])/(1 + (y[1063] * y[401]))
    r734 = (13.7 * y[1272] * y[1] * y[401] * y[67])/(1 + (y[1272] * y[1] * y[401] * y[67]))
    r183 = (13.7 * y[1065] * y[420] * y[199] * y[0])/(1 + (y[1065] * y[420] * y[199] * y[0]))
    return (r179 + r734) - (r183)
 
def C00447(t, y):
    r516 = (13.7 * y[1164] * y[200] * y[0])/(1 + (y[1164] * y[200] * y[0]))
    r519 = (13.7 * y[1164] * y[200] * y[0])/(1 + (y[1164] * y[200] * y[0]))
    r589 = (13.7 * y[1192] * y[200])/(1 + (y[1192] * y[200]))
    return (0) - (r516 + r519 + r589)
 
def C00448(t, y):
    r322 = (13.7 * y[1098] * y[201] * y[100])/(1 + (y[1098] * y[201] * y[100]))
    return (0) - (r322)
 
def C00454(t, y):
    r365 = (13.7 * y[1118] * y[130] * y[21])/(1 + (y[1118] * y[130] * y[21]))
    r487 = (13.7 * y[1148] * y[40] * y[8])/(1 + (y[1148] * y[40] * y[8]))
    r379 = (13.7 * y[1131] * y[1] * y[202])/(1 + (y[1131] * y[1] * y[202]))
    return (r365 + r487) - (r379)
 
def C00455(t, y):
    r573 = (13.7 * y[1183] * y[2] * y[0])/(1 + (y[1183] * y[2] * y[0]))
    r768 = (13.7 * y[1285] * y[2] * y[34] * y[343])/(1 + (y[1285] * y[2] * y[34] * y[343]))
    return (r573 + r768) - (0)
 
def C00458(t, y):
    r389 = (13.7 * y[1131] * y[1] * y[243])/(1 + (y[1131] * y[1] * y[243]))
    r82 = (13.7 * y[1022] * y[204] * y[175] * y[0])/(1 + (y[1022] * y[204] * y[175] * y[0]))
    r460 = (13.7 * y[1147] * y[204] * y[34])/(1 + (y[1147] * y[204] * y[34]))
    r466 = (13.7 * y[1147] * y[204] * y[34])/(1 + (y[1147] * y[204] * y[34]))
    r472 = (13.7 * y[1147] * y[204] * y[34])/(1 + (y[1147] * y[204] * y[34]))
    r478 = (13.7 * y[1147] * y[204] * y[34])/(1 + (y[1147] * y[204] * y[34]))
    r484 = (13.7 * y[1147] * y[204] * y[34])/(1 + (y[1147] * y[204] * y[34]))
    return (r389) - (r82 + r460 + r466 + r472 + r478 + r484)
 
def C00459(t, y):
    r388 = (13.7 * y[1131] * y[1] * y[182])/(1 + (y[1131] * y[1] * y[182]))
    r405 = (13.7 * y[1139] * y[205] * y[82])/(1 + (y[1139] * y[205] * y[82]))
    r461 = (13.7 * y[1147] * y[205] * y[34])/(1 + (y[1147] * y[205] * y[34]))
    r467 = (13.7 * y[1147] * y[205] * y[34])/(1 + (y[1147] * y[205] * y[34]))
    r473 = (13.7 * y[1147] * y[205] * y[34])/(1 + (y[1147] * y[205] * y[34]))
    r479 = (13.7 * y[1147] * y[205] * y[34])/(1 + (y[1147] * y[205] * y[34]))
    r485 = (13.7 * y[1147] * y[205] * y[34])/(1 + (y[1147] * y[205] * y[34]))
    r572 = (13.7 * y[1183] * y[205] * y[0])/(1 + (y[1183] * y[205] * y[0]))
    return (r388) - (r405 + r461 + r467 + r473 + r479 + r485 + r572)
 
def C00460(t, y):
    r390 = (13.7 * y[1131] * y[1] * y[303])/(1 + (y[1131] * y[1] * y[303]))
    r83 = (13.7 * y[1022] * y[206] * y[175] * y[0])/(1 + (y[1022] * y[206] * y[175] * y[0]))
    r564 = (13.7 * y[1181] * y[206] * y[0])/(1 + (y[1181] * y[206] * y[0]))
    return (r390) - (r83 + r564)
 
def C00463(t, y):
    r605 = (13.7 * y[1201] * y[403])/(1 + (y[1201] * y[403]))
    r603 = (13.7 * y[1201] * y[56] * y[207])/(1 + (y[1201] * y[56] * y[207]))
    r604 = (13.7 * y[1201] * y[56] * y[207])/(1 + (y[1201] * y[56] * y[207]))
    return (r605) - (r603 + r604)
 
def C00469(t, y):
    r2 = (13.7 * y[1010] * y[208] * y[2])/(1 + (y[1010] * y[208] * y[2]))
    return (0) - (r2)
 
def C00473(t, y):
    r3 = (13.7 * y[1010] * y[209] * y[2])/(1 + (y[1010] * y[209] * y[2]))
    return (0) - (r3)
 
def C00475(t, y):
    r524 = (13.7 * y[1165] * y[538] * y[0])/(1 + (y[1165] * y[538] * y[0]))
    return (r524) - (0)
 
def C00493(t, y):
    r368 = (13.7 * y[1121] * y[1] * y[211] )/(1 + (y[1121] * y[1] * y[211] ))
    return (0) - (r368)
 
def C00501(t, y):
    r407 = (13.7 * y[1141] * y[54] * y[82])/(1 + (y[1141] * y[54] * y[82]))
    r608 = (13.7 * y[1203] * y[212])/(1 + (y[1203] * y[212]))
    return (r407) - (r608)
 
def C00502(t, y):
    r623 = (13.7 * y[1208] * y[213])/(1 + (y[1208] * y[213]))
    return (0) - (r623)
 
def C00522(t, y):
    r726 = (13.7 * y[1264] * y[1] * y[214] * y[79])/(1 + (y[1264] * y[1] * y[214] * y[79]))
    return (0) - (r726)
 
def C00526(t, y):
    return (0) - (0)
 
def C00536(t, y):
    r591 = (13.7 * y[1193] * y[480] * y[0])/(1 + (y[1193] * y[480] * y[0]))
    r592 = (13.7 * y[1193] * y[480] * y[0])/(1 + (y[1193] * y[480] * y[0]))
    return (r591 + r592) - (0)
 
def C00559(t, y):
    r296 = (13.7 * y[1085] * y[217] * y[8])/(1 + (y[1085] * y[217] * y[8]))
    return (0) - (r296)
 
def C00565(t, y):
    r659 = (13.7 * y[1221] * y[90])/(1 + (y[1221] * y[90]))
    return (r659) - (0)
 
def C00568(t, y):
    r317 = (13.7 * y[1096] * y[475] * y[219])/(1 + (y[1096] * y[475] * y[219]))
    r318 = (13.7 * y[1096] * y[299] * y[219])/(1 + (y[1096] * y[299] * y[219]))
    return (0) - (r317 + r318)
 
def C00576(t, y):
    r13 = (13.7 * y[1010] * y[90] * y[2])/(1 + (y[1010] * y[90] * y[2]))
    r14 = (13.7 * y[1010] * y[90] * y[5])/(1 + (y[1010] * y[90] * y[5]))
    return (r13 + r14) - (0)
 
def C00577(t, y):
    r590 = (13.7 * y[1192] * y[275])/(1 + (y[1192] * y[275]))
    r111 = (13.7 * y[1032] * y[221] * y[0] * y[108])/(1 + (y[1032] * y[221] * y[0] * y[108]))
    return (r590) - (r111)
 
def C00579(t, y):
    r142 = (13.7 * y[1045] * y[222] * y[2])/(1 + (y[1045] * y[222] * y[2]))
    return (0) - (r142)
 
def C00580(t, y):
    r150 = (13.7 * y[1049] * y[223] * y[251] * y[0])/(1 + (y[1049] * y[223] * y[251] * y[0]))
    r151 = (13.7 * y[1049] * y[223] * y[251] * y[0])/(1 + (y[1049] * y[223] * y[251] * y[0]))
    return (0) - (r150 + r151)
 
def C00605(t, y):
    r233 = (13.7 * y[1074] * y[224] * y[75])/(1 + (y[1074] * y[224] * y[75]))
    return (0) - (r233)
 
def C00615(t, y):
    r273 = (13.7 * y[1126] * y[62] * y[225])/(1 + (y[1126] * y[62] * y[225]))
    return (0) - (r273)
 
def C00620(t, y):
    r289 = (13.7 * y[1085] * y[614] * y[8])/(1 + (y[1085] * y[614] * y[8]))
    r290 = (13.7 * y[1085] * y[133] * y[8])/(1 + (y[1085] * y[133] * y[8]))
    r291 = (13.7 * y[1085] * y[166] * y[8])/(1 + (y[1085] * y[166] * y[8]))
    r292 = (13.7 * y[1085] * y[187] * y[8])/(1 + (y[1085] * y[187] * y[8]))
    r293 = (13.7 * y[1085] * y[334] * y[8])/(1 + (y[1085] * y[334] * y[8]))
    r298 = (13.7 * y[1085] * y[386] * y[8])/(1 + (y[1085] * y[386] * y[8]))
    r299 = (13.7 * y[1085] * y[540] * y[8])/(1 + (y[1085] * y[540] * y[8]))
    r686 = (13.7 * y[1239] * y[226])/(1 + (y[1239] * y[226]))
    return (r289 + r290 + r291 + r292 + r293 + r298 + r299) - (r686)
 
def C00624(t, y):
    r231 = (13.7 * y[1073] * y[22] * y[23])/(1 + (y[1073] * y[22] * y[23]))
    r260 = (13.7 * y[1078] * y[195] * y[23])/(1 + (y[1078] * y[195] * y[23]))
    r372 = (13.7 * y[1125] * y[1] * y[227])/(1 + (y[1125] * y[1] * y[227]))
    return (r231 + r260) - (r372)
 
def C00631(t, y):
    r599 = (13.7 * y[1199] * y[228])/(1 + (y[1199] * y[228]))
    r683 = (13.7 * y[1238] * y[228])/(1 + (y[1238] * y[228]))
    return (0) - (r599 + r683)
 
def C00636(t, y):
    r402 = (13.7 * y[1136] * y[38] * y[229])/(1 + (y[1136] * y[38] * y[229]))
    return (0) - (r402)
 
def C00655(t, y):
    r44 = (13.7 * y[1014] * y[101] * y[2] * y[0])/(1 + (y[1014] * y[101] * y[2] * y[0]))
    r310 = (13.7 * y[1093] * y[230] * y[12])/(1 + (y[1093] * y[230] * y[12]))
    r749 = (13.7 * y[1281] * y[1] * y[230] * y[13])/(1 + (y[1281] * y[1] * y[230] * y[13]))
    r750 = (13.7 * y[1281] * y[1] * y[230] * y[55] * y[0])/(1 + (y[1281] * y[1] * y[230] * y[55] * y[0]))
    return (r44) - (r310 + r749 + r750)
 
def C00666(t, y):
    r345 = (13.7 * y[1110] * y[231] * y[24])/(1 + (y[1110] * y[231] * y[24]))
    r664 = (13.7 * y[1225] * y[231])/(1 + (y[1225] * y[231]))
    return (0) - (r345 + r664)
 
def C00668(t, y):
    r685 = (13.7 * y[1239] * y[82])/(1 + (y[1239] * y[82]))
    return (r685) - (0)
 
def C00671(t, y):
    r342 = (13.7 * y[1108] * y[191] * y[24])/(1 + (y[1108] * y[191] * y[24]))
    r626 = (13.7 * y[1209] * y[552])/(1 + (y[1209] * y[552]))
    return (r342 + r626) - (0)
 
def C00672(t, y):
    r294 = (13.7 * y[1085] * y[689] * y[8])/(1 + (y[1085] * y[689] * y[8]))
    r295 = (13.7 * y[1085] * y[172] * y[8])/(1 + (y[1085] * y[172] * y[8]))
    r296 = (13.7 * y[1085] * y[217] * y[8])/(1 + (y[1085] * y[217] * y[8]))
    r297 = (13.7 * y[1085] * y[498] * y[8])/(1 + (y[1085] * y[498] * y[8]))
    return (r294 + r295 + r296 + r297) - (0)
 
def C00677(t, y):
    r79 = (13.7 * y[1022] * y[235] * y[175] * y[0])/(1 + (y[1022] * y[235] * y[175] * y[0]))
    r457 = (13.7 * y[1147] * y[235] * y[34])/(1 + (y[1147] * y[235] * y[34]))
    r463 = (13.7 * y[1147] * y[235] * y[34])/(1 + (y[1147] * y[235] * y[34]))
    r469 = (13.7 * y[1147] * y[235] * y[34])/(1 + (y[1147] * y[235] * y[34]))
    r475 = (13.7 * y[1147] * y[235] * y[34])/(1 + (y[1147] * y[235] * y[34]))
    r481 = (13.7 * y[1147] * y[235] * y[34])/(1 + (y[1147] * y[235] * y[34]))
    return (0) - (r79 + r457 + r463 + r469 + r475 + r481)
 
def C00680(t, y):
    r664 = (13.7 * y[1225] * y[231])/(1 + (y[1225] * y[231]))
    r580 = (13.7 * y[1186] * y[236])/(1 + (y[1186] * y[236]))
    r727 = (13.7 * y[1265] * y[1] * y[240] * y[236])/(1 + (y[1265] * y[1] * y[240] * y[236]))
    return (r664) - (r580 + r727)
 
def C00681(t, y):
    r232 = (13.7 * y[1074] * y[75] * y[35])/(1 + (y[1074] * y[75] * y[35]))
    r233 = (13.7 * y[1074] * y[224] * y[75])/(1 + (y[1074] * y[224] * y[75]))
    r234 = (13.7 * y[1074] * y[122] * y[75])/(1 + (y[1074] * y[122] * y[75]))
    return (r232 + r233 + r234) - (0)
 
def C00685(t, y):
    r20 = (13.7 * y[1011] * y[297] * y[5])/(1 + (y[1011] * y[297] * y[5]))
    r31 = (13.7 * y[1011] * y[297] * y[5])/(1 + (y[1011] * y[297] * y[5]))
    r235 = (13.7 * y[1075] * y[122] * y[287])/(1 + (y[1075] * y[122] * y[287]))
    r246 = (13.7 * y[1075] * y[122] * y[287])/(1 + (y[1075] * y[122] * y[287]))
    return (r20 + r31 + r235 + r246) - (0)
 
def C00688(t, y):
    r42 = (13.7 * y[1012] * y[393] * y[5])/(1 + (y[1012] * y[393] * y[5]))
    r666 = (13.7 * y[1227] * y[602])/(1 + (y[1227] * y[602]))
    return (r42 + r666) - (0)
 
def C00692(t, y):
    r732 = (13.7 * y[1270] * y[1] * y[288] * y[135])/(1 + (y[1270] * y[1] * y[288] * y[135]))
    r727 = (13.7 * y[1265] * y[1] * y[240] * y[236])/(1 + (y[1265] * y[1] * y[240] * y[236]))
    return (r732) - (r727)
 
def C00693(t, y):
    r613 = (13.7 * y[1207] * y[297])/(1 + (y[1207] * y[297]))
    return (r613) - (0)
 
def C00697(t, y):
    r87 = (13.7 * y[1025] * y[1] * y[242] * y[107] * y[67] * y[0])/(1 + (y[1025] * y[1] * y[242] * y[107] * y[67] * y[0]))
    r91 = (13.7 * y[1025] * y[242] * y[491] * y[67])/(1 + (y[1025] * y[242] * y[491] * y[67]))
    r94 = (13.7 * y[1025] * y[1] * y[242] * y[107] * y[67] * y[0])/(1 + (y[1025] * y[1] * y[242] * y[107] * y[67] * y[0]))
    r98 = (13.7 * y[1025] * y[242] * y[491] * y[67])/(1 + (y[1025] * y[242] * y[491] * y[67]))
    return (0) - (r87 + r91 + r94 + r98)
 
def C00705(t, y):
    r378 = (13.7 * y[1130] * y[1] * y[145])/(1 + (y[1130] * y[1] * y[145]))
    r75 = (13.7 * y[1021] * y[243] * y[175] * y[0])/(1 + (y[1021] * y[243] * y[175] * y[0]))
    r389 = (13.7 * y[1131] * y[1] * y[243])/(1 + (y[1131] * y[1] * y[243]))
    return (r378) - (r75 + r389)
 
def C00716(t, y):
    r631 = (13.7 * y[1212] * y[244])/(1 + (y[1212] * y[244]))
    return (0) - (r631)
 
def C00756(t, y):
    r4 = (13.7 * y[1010] * y[245] * y[2])/(1 + (y[1010] * y[245] * y[2]))
    return (0) - (r4)
 
def C00772(t, y):
    r18 = (13.7 * y[1010] * y[193] * y[2])/(1 + (y[1010] * y[193] * y[2]))
    return (r18) - (0)
 
def C00787(t, y):
    r691 = (13.7 * y[1243] * y[1] * y[69] * y[247])/(1 + (y[1243] * y[1] * y[69] * y[247]))
    return (0) - (r691)
 
def C00819(t, y):
    r530 = (13.7 * y[1169] * y[248] * y[0])/(1 + (y[1169] * y[248] * y[0]))
    return (0) - (r530)
 
def C00821(t, y):
    r175 = (13.7 * y[1061] * y[18] * y[249])/(1 + (y[1061] * y[18] * y[249]))
    r176 = (13.7 * y[1061] * y[18] * y[249])/(1 + (y[1061] * y[18] * y[249]))
    return (0) - (r175 + r176)
 
def C00826(t, y):
    r612 = (13.7 * y[1206] * y[250])/(1 + (y[1206] * y[250]))
    return (0) - (r612)
 
def C00828(t, y):
    r150 = (13.7 * y[1049] * y[223] * y[251] * y[0])/(1 + (y[1049] * y[223] * y[251] * y[0]))
    r151 = (13.7 * y[1049] * y[223] * y[251] * y[0])/(1 + (y[1049] * y[223] * y[251] * y[0]))
    return (0) - (r150 + r151)
 
def C00831(t, y):
    r356 = (13.7 * y[1117] * y[1] * y[252])/(1 + (y[1117] * y[1] * y[252]))
    return (0) - (r356)
 
def C00842(t, y):
    r405 = (13.7 * y[1139] * y[205] * y[82])/(1 + (y[1139] * y[205] * y[82]))
    r609 = (13.7 * y[1204] * y[253])/(1 + (y[1204] * y[253]))
    r669 = (13.7 * y[1228] * y[253])/(1 + (y[1228] * y[253]))
    return (r405) - (r609 + r669)
 
def C00857(t, y):
    r576 = (13.7 * y[1183] * y[254] * y[0])/(1 + (y[1183] * y[254] * y[0]))
    r746 = (13.7 * y[1280] * y[1] * y[254] * y[55] * y[0])/(1 + (y[1280] * y[1] * y[254] * y[55] * y[0]))
    r747 = (13.7 * y[1280] * y[1] * y[254] * y[13] )/(1 + (y[1280] * y[1] * y[254] * y[13] ))
    return (0) - (r576 + r746 + r747)
 
def C00860(t, y):
    r46 = (13.7 * y[1015] * y[255] * y[2] * y[0])/(1 + (y[1015] * y[255] * y[2] * y[0]))
    r48 = (13.7 * y[1015] * y[255] * y[2])/(1 + (y[1015] * y[255] * y[2]))
    return (0) - (r46 + r48)
 
def C00864(t, y):
    r726 = (13.7 * y[1264] * y[1] * y[214] * y[79])/(1 + (y[1264] * y[1] * y[214] * y[79]))
    r355 = (13.7 * y[1117] * y[1] * y[256])/(1 + (y[1117] * y[1] * y[256]))
    return (r726) - (r355)
 
def C00868(t, y):
    r689 = (13.7 * y[1241] * y[257])/(1 + (y[1241] * y[257]))
    return (0) - (r689)
 
def C00882(t, y):
    r406 = (13.7 * y[1140] * y[1] * y[281])/(1 + (y[1140] * y[1] * y[281]))
    r350 = (13.7 * y[1113] * y[1] * y[258])/(1 + (y[1113] * y[1] * y[258]))
    r577 = (13.7 * y[1183] * y[258] * y[0])/(1 + (y[1183] * y[258] * y[0]))
    return (r406) - (r350 + r577)
 
def C00886(t, y):
    r712 = (13.7 * y[1260] * y[1] * y[36] * y[316])/(1 + (y[1260] * y[1] * y[36] * y[316]))
    return (r712) - (0)
 
def C00900(t, y):
    r55 = (13.7 * y[1018] * y[260] * y[4] * y[67])/(1 + (y[1018] * y[260] * y[4] * y[67]))
    r195 = (13.7 * y[1071] * y[260] * y[10])/(1 + (y[1071] * y[260] * y[10]))
    r198 = (13.7 * y[1071] * y[260] * y[59])/(1 + (y[1071] * y[260] * y[59]))
    r202 = (13.7 * y[1071] * y[260] * y[10])/(1 + (y[1071] * y[260] * y[10]))
    r205 = (13.7 * y[1071] * y[260] * y[59])/(1 + (y[1071] * y[260] * y[59]))
    r209 = (13.7 * y[1071] * y[260] * y[10])/(1 + (y[1071] * y[260] * y[10]))
    r212 = (13.7 * y[1071] * y[260] * y[59])/(1 + (y[1071] * y[260] * y[59]))
    r216 = (13.7 * y[1071] * y[260] * y[10])/(1 + (y[1071] * y[260] * y[10]))
    r219 = (13.7 * y[1071] * y[260] * y[59])/(1 + (y[1071] * y[260] * y[59]))
    r223 = (13.7 * y[1071] * y[260] * y[10])/(1 + (y[1071] * y[260] * y[10]))
    r226 = (13.7 * y[1071] * y[260] * y[59])/(1 + (y[1071] * y[260] * y[59]))
    return (0) - (r55 + r195 + r198 + r202 + r205 + r209 + r212 + r216 + r219 + r223 + r226)
 
def C00911(t, y):
    r520 = (13.7 * y[1165] * y[356] * y[0])/(1 + (y[1165] * y[356] * y[0]))
    return (r520) - (0)
 
def C00921(t, y):
    r317 = (13.7 * y[1096] * y[475] * y[219])/(1 + (y[1096] * y[475] * y[219]))
    r318 = (13.7 * y[1096] * y[299] * y[219])/(1 + (y[1096] * y[299] * y[219]))
    return (r317 + r318) - (0)
 
def C00931(t, y):
    r607 = (13.7 * y[1202] * y[194])/(1 + (y[1202] * y[194]))
    r333 = (13.7 * y[1101] * y[263] * y[0])/(1 + (y[1101] * y[263] * y[0]))
    return (r607) - (r333)
 
def C00944(t, y):
    r598 = (13.7 * y[1198] * y[264])/(1 + (y[1198] * y[264]))
    return (0) - (r598)
 
def C00966(t, y):
    r180 = (13.7 * y[1064] * y[110] * y[109] * y[0])/(1 + (y[1064] * y[110] * y[109] * y[0]))
    r181 = (13.7 * y[1064] * y[265])/(1 + (y[1064] * y[265]))
    return (r180) - (r181)
 
def C00979(t, y):
    r323 = (13.7 * y[1099] * y[266] * y[163])/(1 + (y[1099] * y[266] * y[163]))
    r324 = (13.7 * y[1099] * y[266] * y[311])/(1 + (y[1099] * y[266] * y[311]))
    r325 = (13.7 * y[1099] * y[266] * y[170] * y[174] * y[67])/(1 + (y[1099] * y[266] * y[170] * y[174] * y[67]))
    r327 = (13.7 * y[1099] * y[266] * y[163])/(1 + (y[1099] * y[266] * y[163]))
    r328 = (13.7 * y[1099] * y[266] * y[311])/(1 + (y[1099] * y[266] * y[311]))
    r329 = (13.7 * y[1099] * y[266] * y[170] * y[174] * y[67] )/(1 + (y[1099] * y[266] * y[170] * y[174] * y[67] ))
    return (0) - (r323 + r324 + r325 + r327 + r328 + r329)
 
def C00993(t, y):
    r728 = (13.7 * y[1266] * y[1] * y[103])/(1 + (y[1266] * y[1] * y[103]))
    return (r728) - (0)
 
def C01005(t, y):
    r326 = (13.7 * y[1099] * y[268] * y[163])/(1 + (y[1099] * y[268] * y[163]))
    r330 = (13.7 * y[1099] * y[268] * y[163])/(1 + (y[1099] * y[268] * y[163]))
    return (0) - (r326 + r330)
 
def C01024(t, y):
    r333 = (13.7 * y[1101] * y[263] * y[0])/(1 + (y[1101] * y[263] * y[0]))
    return (r333) - (0)
 
def C01037(t, y):
    r344 = (13.7 * y[1109] * y[18] * y[274] )/(1 + (y[1109] * y[18] * y[274] ))
    return (r344) - (0)
 
def C01050(t, y):
    r114 = (13.7 * y[1035] * y[271] * y[5])/(1 + (y[1035] * y[271] * y[5]))
    r115 = (13.7 * y[1035] * y[271] * y[2])/(1 + (y[1035] * y[271] * y[2]))
    r731 = (13.7 * y[1269] * y[1] * y[271] * y[36])/(1 + (y[1269] * y[1] * y[271] * y[36]))
    return (0) - (r114 + r115 + r731)
 
def C01051(t, y):
    r161 = (13.7 * y[1051] * y[18] * y[272])/(1 + (y[1051] * y[18] * y[272]))
    r162 = (13.7 * y[1051] * y[18] * y[272])/(1 + (y[1051] * y[18] * y[272]))
    return (0) - (r161 + r162)
 
def C01081(t, y):
    r319 = (13.7 * y[1097] * y[473] * y[447])/(1 + (y[1097] * y[473] * y[447]))
    r320 = (13.7 * y[1097] * y[473] * y[677])/(1 + (y[1097] * y[473] * y[677]))
    r321 = (13.7 * y[1097] * y[473] * y[676])/(1 + (y[1097] * y[473] * y[676]))
    r375 = (13.7 * y[1128] * y[1] * y[273])/(1 + (y[1128] * y[1] * y[273]))
    return (r319 + r320 + r321) - (r375)
 
def C01092(t, y):
    r344 = (13.7 * y[1109] * y[18] * y[274] )/(1 + (y[1109] * y[18] * y[274] ))
    return (0) - (r344)
 
def C01094(t, y):
    r590 = (13.7 * y[1192] * y[275])/(1 + (y[1192] * y[275]))
    return (0) - (r590)
 
def C01100(t, y):
    r346 = (13.7 * y[1111] * y[276] * y[24])/(1 + (y[1111] * y[276] * y[24]))
    return (0) - (r346)
 
def C01102(t, y):
    r627 = (13.7 * y[1210] * y[277] * y[0])/(1 + (y[1210] * y[277] * y[0]))
    return (0) - (r627)
 
def C01103(t, y):
    r300 = (13.7 * y[1086] * y[278] * y[12])/(1 + (y[1086] * y[278] * y[12]))
    r582 = (13.7 * y[1188] * y[278])/(1 + (y[1188] * y[278]))
    return (0) - (r300 + r582)
 
def C01118(t, y):
    r261 = (13.7 * y[1079] * y[73] * y[158])/(1 + (y[1079] * y[73] * y[158]))
    return (r261) - (0)
 
def C01134(t, y):
    r356 = (13.7 * y[1117] * y[1] * y[252])/(1 + (y[1117] * y[1] * y[252]))
    r577 = (13.7 * y[1183] * y[258] * y[0])/(1 + (y[1183] * y[258] * y[0]))
    r583 = (13.7 * y[1189] * y[449])/(1 + (y[1189] * y[449]))
    return (r356 + r577 + r583) - (0)
 
def C01143(t, y):
    r406 = (13.7 * y[1140] * y[1] * y[281])/(1 + (y[1140] * y[1] * y[281]))
    return (0) - (r406)
 
def C01157(t, y):
    r132 = (13.7 * y[1041] * y[282] * y[2])/(1 + (y[1041] * y[282] * y[2]))
    r133 = (13.7 * y[1041] * y[282] * y[5])/(1 + (y[1041] * y[282] * y[5]))
    return (0) - (r132 + r133)
 
def C01165(t, y):
    r105 = (13.7 * y[1029] * y[283] * y[8] * y[5])/(1 + (y[1029] * y[283] * y[8] * y[5]))
    return (0) - (r105)
 
def C01171(t, y):
    r687 = (13.7 * y[1239] * y[284])/(1 + (y[1239] * y[284]))
    return (0) - (r687)
 
def C01179(t, y):
    r348 = (13.7 * y[1111] * y[69] * y[24])/(1 + (y[1111] * y[69] * y[24]))
    return (r348) - (0)
 
def C01185(t, y):
    r576 = (13.7 * y[1183] * y[254] * y[0])/(1 + (y[1183] * y[254] * y[0]))
    r305 = (13.7 * y[1090] * y[286] * y[12] * y[10])/(1 + (y[1090] * y[286] * y[12] * y[10]))
    r306 = (13.7 * y[1091] * y[286] * y[383])/(1 + (y[1091] * y[286] * y[383]))
    return (r576) - (r305 + r306)
 
def C01209(t, y):
    r171 = (13.7 * y[1057] * y[18] * y[287])/(1 + (y[1057] * y[18] * y[287]))
    r235 = (13.7 * y[1075] * y[122] * y[287])/(1 + (y[1075] * y[122] * y[287]))
    r236 = (13.7 * y[1075] * y[425] * y[287])/(1 + (y[1075] * y[425] * y[287]))
    r237 = (13.7 * y[1075] * y[487] * y[287])/(1 + (y[1075] * y[487] * y[287]))
    r238 = (13.7 * y[1075] * y[515] * y[287])/(1 + (y[1075] * y[515] * y[287]))
    r239 = (13.7 * y[1075] * y[519] * y[287])/(1 + (y[1075] * y[519] * y[287]))
    r240 = (13.7 * y[1075] * y[522] * y[287])/(1 + (y[1075] * y[522] * y[287]))
    r241 = (13.7 * y[1075] * y[525] * y[287])/(1 + (y[1075] * y[525] * y[287]))
    r242 = (13.7 * y[1075] * y[531] * y[287])/(1 + (y[1075] * y[531] * y[287]))
    r243 = (13.7 * y[1075] * y[534] * y[287])/(1 + (y[1075] * y[534] * y[287]))
    r244 = (13.7 * y[1075] * y[670] * y[287])/(1 + (y[1075] * y[670] * y[287]))
    r245 = (13.7 * y[1075] * y[683] * y[287])/(1 + (y[1075] * y[683] * y[287]))
    r246 = (13.7 * y[1075] * y[122] * y[287])/(1 + (y[1075] * y[122] * y[287]))
    r247 = (13.7 * y[1075] * y[425] * y[287])/(1 + (y[1075] * y[425] * y[287]))
    r248 = (13.7 * y[1075] * y[487] * y[287])/(1 + (y[1075] * y[487] * y[287]))
    r249 = (13.7 * y[1075] * y[515] * y[287])/(1 + (y[1075] * y[515] * y[287]))
    r250 = (13.7 * y[1075] * y[519] * y[287])/(1 + (y[1075] * y[519] * y[287]))
    r251 = (13.7 * y[1075] * y[522] * y[287])/(1 + (y[1075] * y[522] * y[287]))
    r252 = (13.7 * y[1075] * y[525] * y[287])/(1 + (y[1075] * y[525] * y[287]))
    r253 = (13.7 * y[1075] * y[531] * y[287])/(1 + (y[1075] * y[531] * y[287]))
    r254 = (13.7 * y[1075] * y[534] * y[287])/(1 + (y[1075] * y[534] * y[287]))
    r255 = (13.7 * y[1075] * y[670] * y[287])/(1 + (y[1075] * y[670] * y[287]))
    r256 = (13.7 * y[1075] * y[683] * y[287])/(1 + (y[1075] * y[683] * y[287]))
    return (0) - (r171 + r235 + r236 + r237 + r238 + r239 + r240 + r241 + r242 + r243 + r244 + r245 + r246 + r247 + r248 + r249 + r250 + r251 + r252 + r253 + r254 + r255 + r256)
 
def C01212(t, y):
    r731 = (13.7 * y[1269] * y[1] * y[271] * y[36])/(1 + (y[1269] * y[1] * y[271] * y[36]))
    r732 = (13.7 * y[1270] * y[1] * y[288] * y[135])/(1 + (y[1270] * y[1] * y[288] * y[135]))
    return (r731) - (r732)
 
def C01219(t, y):
    r608 = (13.7 * y[1203] * y[212])/(1 + (y[1203] * y[212]))
    return (r608) - (0)
 
def C01222(t, y):
    r610 = (13.7 * y[1205] * y[77])/(1 + (y[1205] * y[77]))
    return (r610) - (0)
 
def C01236(t, y):
    r513 = (13.7 * y[1163] * y[291] * y[0])/(1 + (y[1163] * y[291] * y[0]))
    return (0) - (r513)
 
def C01242(t, y):
    r128 = (13.7 * y[1040] * y[33] * y[340])/(1 + (y[1040] * y[33] * y[340]))
    r129 = (13.7 * y[1040] * y[33] * y[340])/(1 + (y[1040] * y[33] * y[340]))
    r178 = (13.7 * y[1063] * y[292] * y[81])/(1 + (y[1063] * y[292] * y[81]))
    return (r128 + r129) - (r178)
 
def C01250(t, y):
    r104 = (13.7 * y[1028] * y[293] * y[8] * y[5])/(1 + (y[1028] * y[293] * y[8] * y[5]))
    return (0) - (r104)
 
def C01267(t, y):
    r346 = (13.7 * y[1111] * y[276] * y[24])/(1 + (y[1111] * y[276] * y[24]))
    return (r346) - (0)
 
def C01268(t, y):
    r43 = (13.7 * y[1013] * y[454] * y[5])/(1 + (y[1013] * y[454] * y[5]))
    r561 = (13.7 * y[1178] * y[300] * y[0])/(1 + (y[1178] * y[300] * y[0]))
    return (r43 + r561) - (0)
 
def C01269(t, y):
    r629 = (13.7 * y[1211] * y[296])/(1 + (y[1211] * y[296]))
    return (0) - (r629)
 
def C01271(t, y):
    r20 = (13.7 * y[1011] * y[297] * y[5])/(1 + (y[1011] * y[297] * y[5]))
    r31 = (13.7 * y[1011] * y[297] * y[5])/(1 + (y[1011] * y[297] * y[5]))
    r613 = (13.7 * y[1207] * y[297])/(1 + (y[1207] * y[297]))
    return (0) - (r20 + r31 + r613)
 
def C01279(t, y):
    r366 = (13.7 * y[1119] * y[1] * y[298])/(1 + (y[1119] * y[1] * y[298]))
    return (0) - (r366)
 
def C01300(t, y):
    r318 = (13.7 * y[1096] * y[299] * y[219])/(1 + (y[1096] * y[299] * y[219]))
    r401 = (13.7 * y[1135] * y[1] * y[299])/(1 + (y[1135] * y[1] * y[299]))
    return (0) - (r318 + r401)
 
def C01304(t, y):
    r560 = (13.7 * y[1177] * y[38] * y[0])/(1 + (y[1177] * y[38] * y[0]))
    r561 = (13.7 * y[1178] * y[300] * y[0])/(1 + (y[1178] * y[300] * y[0]))
    return (r560) - (r561)
 
def C01344(t, y):
    r391 = (13.7 * y[1131] * y[1] * y[301])/(1 + (y[1131] * y[1] * y[301]))
    return (0) - (r391)
 
def C01345(t, y):
    r391 = (13.7 * y[1131] * y[1] * y[301])/(1 + (y[1131] * y[1] * y[301]))
    return (r391) - (0)
 
def C01346(t, y):
    r400 = (13.7 * y[1134] * y[1] * y[184])/(1 + (y[1134] * y[1] * y[184]))
    r73 = (13.7 * y[1021] * y[303] * y[175] * y[0])/(1 + (y[1021] * y[303] * y[175] * y[0]))
    r390 = (13.7 * y[1131] * y[1] * y[303])/(1 + (y[1131] * y[1] * y[303]))
    return (r400) - (r73 + r390)
 
def C01352(t, y):
    r62 = (13.7 * y[1019] * y[75] * y[15])/(1 + (y[1019] * y[75] * y[15]))
    r65 = (13.7 * y[1019] * y[75] * y[15])/(1 + (y[1019] * y[75] * y[15]))
    r68 = (13.7 * y[1019] * y[75] * y[15])/(1 + (y[1019] * y[75] * y[15]))
    r153 = (13.7 * y[1050] * y[19] * y[76] * y[15])/(1 + (y[1050] * y[19] * y[76] * y[15]))
    r156 = (13.7 * y[1050] * y[19] * y[76] * y[15])/(1 + (y[1050] * y[19] * y[76] * y[15]))
    r159 = (13.7 * y[1050] * y[19] * y[76] * y[15])/(1 + (y[1050] * y[19] * y[76] * y[15]))
    return (r62 + r65 + r68 + r153 + r156 + r159) - (0)
 
def C01367(t, y):
    r521 = (13.7 * y[1165] * y[305] * y[0])/(1 + (y[1165] * y[305] * y[0]))
    return (0) - (r521)
 
def C01368(t, y):
    r522 = (13.7 * y[1165] * y[306] * y[0])/(1 + (y[1165] * y[306] * y[0]))
    return (0) - (r522)
 
def C01412(t, y):
    r102 = (13.7 * y[1026] * y[307] * y[9] * y[2])/(1 + (y[1026] * y[307] * y[9] * y[2]))
    return (0) - (r102)
 
def C01419(t, y):
    r265 = (13.7 * y[1081] * y[44] * y[115])/(1 + (y[1081] * y[44] * y[115]))
    r527 = (13.7 * y[1168] * y[308] * y[0])/(1 + (y[1168] * y[308] * y[0]))
    return (r265) - (r527)
 
def C01450(t, y):
    r16 = (13.7 * y[1010] * y[315] * y[2])/(1 + (y[1010] * y[315] * y[2]))
    return (r16) - (0)
 
def C01468(t, y):
    r596 = (13.7 * y[1196] * y[69] * y[18] * y[28])/(1 + (y[1196] * y[69] * y[18] * y[28]))
    return (r596) - (0)
 
def C01528(t, y):
    r145 = (13.7 * y[1046] * y[311] * y[5] * y[0])/(1 + (y[1046] * y[311] * y[5] * y[0]))
    r324 = (13.7 * y[1099] * y[266] * y[311])/(1 + (y[1099] * y[266] * y[311]))
    r328 = (13.7 * y[1099] * y[266] * y[311])/(1 + (y[1099] * y[266] * y[311]))
    r499 = (13.7 * y[1155] * y[1] * y[311] * y[0])/(1 + (y[1155] * y[1] * y[311] * y[0]))
    return (0) - (r145 + r324 + r328 + r499)
 
def C01545(t, y):
    r4 = (13.7 * y[1010] * y[245] * y[2])/(1 + (y[1010] * y[245] * y[2]))
    return (r4) - (0)
 
def C01548(t, y):
    r93 = (13.7 * y[1025] * y[313] * y[107] * y[67] * y[1] * y[0])/(1 + (y[1025] * y[313] * y[107] * y[67] * y[1] * y[0]))
    r100 = (13.7 * y[1025] * y[313] * y[107] * y[67] * y[1] * y[0])/(1 + (y[1025] * y[313] * y[107] * y[67] * y[1] * y[0]))
    return (0) - (r93 + r100)
 
def C01563(t, y):
    r533 = (13.7 * y[1171] * y[13] * y[165])/(1 + (y[1171] * y[13] * y[165]))
    r535 = (13.7 * y[1171] * y[72] * y[0])/(1 + (y[1171] * y[72] * y[0]))
    r538 = (13.7 * y[1171] * y[13] * y[165])/(1 + (y[1171] * y[13] * y[165]))
    r540 = (13.7 * y[1171] * y[72] * y[0])/(1 + (y[1171] * y[72] * y[0]))
    r543 = (13.7 * y[1171] * y[13] * y[165])/(1 + (y[1171] * y[13] * y[165]))
    r545 = (13.7 * y[1171] * y[72] * y[0])/(1 + (y[1171] * y[72] * y[0]))
    r759 = (13.7 * y[1283] * y[13] * y[703])/(1 + (y[1283] * y[13] * y[703]))
    r765 = (13.7 * y[1283] * y[13] * y[703])/(1 + (y[1283] * y[13] * y[703]))
    r757 = (13.7 * y[1283] * y[1] * y[314])/(1 + (y[1283] * y[1] * y[314]))
    r763 = (13.7 * y[1283] * y[1] * y[314])/(1 + (y[1283] * y[1] * y[314]))
    return (r533 + r535 + r538 + r540 + r543 + r545 + r759 + r765) - (r757 + r763)
 
def C01612(t, y):
    r16 = (13.7 * y[1010] * y[315] * y[2])/(1 + (y[1010] * y[315] * y[2]))
    return (0) - (r16)
 
def C01635(t, y):
    r712 = (13.7 * y[1260] * y[1] * y[36] * y[316])/(1 + (y[1260] * y[1] * y[36] * y[316]))
    return (0) - (r712)
 
def C01636(t, y):
    r702 = (13.7 * y[1251] * y[1] * y[53] * y[317])/(1 + (y[1251] * y[1] * y[53] * y[317]))
    return (0) - (r702)
 
def C01637(t, y):
    r707 = (13.7 * y[1255] * y[1] * y[116] * y[318])/(1 + (y[1255] * y[1] * y[116] * y[318]))
    return (0) - (r707)
 
def C01638(t, y):
    r696 = (13.7 * y[1246] * y[319] * y[43] * y[1])/(1 + (y[1246] * y[319] * y[43] * y[1]))
    return (0) - (r696)
 
def C01639(t, y):
    r700 = (13.7 * y[1249] * y[1] * y[78] * y[320])/(1 + (y[1249] * y[1] * y[78] * y[320]))
    return (0) - (r700)
 
def C01641(t, y):
    r106 = (13.7 * y[1030] * y[376] * y[4] * y[67])/(1 + (y[1030] * y[376] * y[4] * y[67]))
    r701 = (13.7 * y[1250] * y[321] * y[23] * y[1])/(1 + (y[1250] * y[321] * y[23] * y[1]))
    return (r106) - (r701)
 
def C01642(t, y):
    r697 = (13.7 * y[1247] * y[1] * y[33] * y[322])/(1 + (y[1247] * y[1] * y[33] * y[322]))
    r698 = (13.7 * y[1247] * y[1] * y[33] * y[322])/(1 + (y[1247] * y[1] * y[33] * y[322]))
    return (0) - (r697 + r698)
 
def C01643(t, y):
    r706 = (13.7 * y[1254] * y[1] * y[105] * y[323])/(1 + (y[1254] * y[1] * y[105] * y[323]))
    return (0) - (r706)
 
def C01644(t, y):
    r710 = (13.7 * y[1258] * y[1] * y[191] * y[324])/(1 + (y[1258] * y[1] * y[191] * y[324]))
    return (0) - (r710)
 
def C01645(t, y):
    r280 = (13.7 * y[1082] * y[339] * y[708])/(1 + (y[1082] * y[339] * y[708]))
    r281 = (13.7 * y[1082] * y[339] * y[653])/(1 + (y[1082] * y[339] * y[653]))
    r282 = (13.7 * y[1082] * y[339] * y[16])/(1 + (y[1082] * y[339] * y[16]))
    r709 = (13.7 * y[1257] * y[1] * y[97] * y[325])/(1 + (y[1257] * y[1] * y[97] * y[325]))
    return (r280 + r281 + r282) - (r709)
 
def C01646(t, y):
    r711 = (13.7 * y[1259] * y[1] * y[41] * y[326])/(1 + (y[1259] * y[1] * y[41] * y[326]))
    return (0) - (r711)
 
def C01647(t, y):
    r692 = (13.7 * y[1244] * y[1] * y[61] * y[327])/(1 + (y[1244] * y[1] * y[61] * y[327]))
    r693 = (13.7 * y[1244] * y[1] * y[488] * y[327])/(1 + (y[1244] * y[1] * y[488] * y[327]))
    return (0) - (r692 + r693)
 
def C01648(t, y):
    r704 = (13.7 * y[1253] * y[1] * y[66] * y[328])/(1 + (y[1253] * y[1] * y[66] * y[328]))
    r705 = (13.7 * y[1253] * y[1] * y[66] * y[328])/(1 + (y[1253] * y[1] * y[66] * y[328]))
    return (0) - (r704 + r705)
 
def C01649(t, y):
    r699 = (13.7 * y[1248] * y[1] * y[113] * y[329])/(1 + (y[1248] * y[1] * y[113] * y[329]))
    return (0) - (r699)
 
def C01650(t, y):
    r694 = (13.7 * y[1245] * y[1] * y[56] * y[330])/(1 + (y[1245] * y[1] * y[56] * y[330]))
    return (0) - (r694)
 
def C01651(t, y):
    r708 = (13.7 * y[1256] * y[1] * y[125] * y[331])/(1 + (y[1256] * y[1] * y[125] * y[331]))
    return (0) - (r708)
 
def C01652(t, y):
    r703 = (13.7 * y[1252] * y[1] * y[65] * y[332])/(1 + (y[1252] * y[1] * y[65] * y[332]))
    return (0) - (r703)
 
def C01653(t, y):
    r713 = (13.7 * y[1261] * y[1] * y[124] * y[333] )/(1 + (y[1261] * y[1] * y[124] * y[333] ))
    return (0) - (r713)
 
def C01762(t, y):
    r293 = (13.7 * y[1085] * y[334] * y[8])/(1 + (y[1085] * y[334] * y[8]))
    return (0) - (r293)
 
def C01909(t, y):
    r500 = (13.7 * y[1156] * y[335] * y[660] * y[18] * y[491] * y[67])/(1 + (y[1156] * y[335] * y[660] * y[18] * y[491] * y[67]))
    return (0) - (r500)
 
def C01929(t, y):
    r48 = (13.7 * y[1015] * y[255] * y[2])/(1 + (y[1015] * y[255] * y[2]))
    r47 = (13.7 * y[1015] * y[336] * y[0] * y[2])/(1 + (y[1015] * y[336] * y[0] * y[2]))
    return (r48) - (r47)
 
def C01931(t, y):
    r711 = (13.7 * y[1259] * y[1] * y[41] * y[326])/(1 + (y[1259] * y[1] * y[41] * y[326]))
    return (r711) - (0)
 
def C01977(t, y):
    r172 = (13.7 * y[1058] * y[18] * y[338])/(1 + (y[1058] * y[18] * y[338]))
    r307 = (13.7 * y[1092] * y[338] * y[652])/(1 + (y[1092] * y[338] * y[652]))
    return (0) - (r172 + r307)
 
def C02047(t, y):
    r709 = (13.7 * y[1257] * y[1] * y[97] * y[325])/(1 + (y[1257] * y[1] * y[97] * y[325]))
    r280 = (13.7 * y[1082] * y[339] * y[708])/(1 + (y[1082] * y[339] * y[708]))
    r281 = (13.7 * y[1082] * y[339] * y[653])/(1 + (y[1082] * y[339] * y[653]))
    r282 = (13.7 * y[1082] * y[339] * y[16])/(1 + (y[1082] * y[339] * y[16]))
    return (r709) - (r280 + r281 + r282)
 
def C02051(t, y):
    r140 = (13.7 * y[1045] * y[374] * y[2])/(1 + (y[1045] * y[374] * y[2]))
    r721 = (13.7 * y[1263] * y[1] * y[633] * y[718])/(1 + (y[1263] * y[1] * y[633] * y[718]))
    r128 = (13.7 * y[1040] * y[33] * y[340])/(1 + (y[1040] * y[33] * y[340]))
    r129 = (13.7 * y[1040] * y[33] * y[340])/(1 + (y[1040] * y[33] * y[340]))
    return (r140 + r721) - (r128 + r129)
 
def C02090(t, y):
    r77 = (13.7 * y[1021] * y[434] * y[387] * y[0])/(1 + (y[1021] * y[434] * y[387] * y[0]))
    return (r77) - (0)
 
def C02097(t, y):
    r669 = (13.7 * y[1228] * y[253])/(1 + (y[1228] * y[253]))
    return (r669) - (0)
 
def C02128(t, y):
    r768 = (13.7 * y[1285] * y[2] * y[34] * y[343])/(1 + (y[1285] * y[2] * y[34] * y[343]))
    return (0) - (r768)
 
def C02163(t, y):
    r702 = (13.7 * y[1251] * y[1] * y[53] * y[317])/(1 + (y[1251] * y[1] * y[53] * y[317]))
    return (r702) - (0)
 
def C02166(t, y):
    r267 = (13.7 * y[1081] * y[345] * y[39])/(1 + (y[1081] * y[345] * y[39]))
    r275 = (13.7 * y[1081] * y[345] * y[39])/(1 + (y[1081] * y[345] * y[39]))
    return (0) - (r267 + r275)
 
def C02218(t, y):
    r633 = (13.7 * y[1213] * y[56])/(1 + (y[1213] * y[56]))
    r638 = (13.7 * y[1213] * y[56])/(1 + (y[1213] * y[56]))
    r635 = (13.7 * y[1213] * y[346])/(1 + (y[1213] * y[346]))
    r640 = (13.7 * y[1213] * y[346])/(1 + (y[1213] * y[346]))
    return (r633 + r638) - (r635 + r640)
 
def C02320(t, y):
    r269 = (13.7 * y[1081] * y[347] * y[0])/(1 + (y[1081] * y[347] * y[0]))
    r277 = (13.7 * y[1081] * y[347] * y[0])/(1 + (y[1081] * y[347] * y[0]))
    return (0) - (r269 + r277)
 
def C02356(t, y):
    r343 = (13.7 * y[1108] * y[348] * y[24])/(1 + (y[1108] * y[348] * y[24]))
    return (0) - (r343)
 
def C02380(t, y):
    r311 = (13.7 * y[1093] * y[349] * y[94])/(1 + (y[1093] * y[349] * y[94]))
    return (0) - (r311)
 
def C02412(t, y):
    r697 = (13.7 * y[1247] * y[1] * y[33] * y[322])/(1 + (y[1247] * y[1] * y[33] * y[322]))
    r698 = (13.7 * y[1247] * y[1] * y[33] * y[322])/(1 + (y[1247] * y[1] * y[33] * y[322]))
    return (r697 + r698) - (0)
 
def C02429(t, y):
    r282 = (13.7 * y[1082] * y[339] * y[16])/(1 + (y[1082] * y[339] * y[16]))
    return (r282) - (0)
 
def C02430(t, y):
    r692 = (13.7 * y[1244] * y[1] * y[61] * y[327])/(1 + (y[1244] * y[1] * y[61] * y[327]))
    r184 = (13.7 * y[1066] * y[352] * y[142])/(1 + (y[1066] * y[352] * y[142]))
    return (r692) - (r184)
 
def C02463(t, y):
    r161 = (13.7 * y[1051] * y[18] * y[272])/(1 + (y[1051] * y[18] * y[272]))
    r163 = (13.7 * y[1051] * y[18] * y[612])/(1 + (y[1051] * y[18] * y[612]))
    r165 = (13.7 * y[1052] * y[18] * y[353])/(1 + (y[1052] * y[18] * y[353]))
    return (r161 + r163) - (r165)
 
def C02469(t, y):
    r164 = (13.7 * y[1051] * y[18] * y[354])/(1 + (y[1051] * y[18] * y[354]))
    return (0) - (r164)
 
def C02504(t, y):
    r283 = (13.7 * y[1083] * y[355] * y[9])/(1 + (y[1083] * y[355] * y[9]))
    return (0) - (r283)
 
def C02508(t, y):
    r520 = (13.7 * y[1165] * y[356] * y[0])/(1 + (y[1165] * y[356] * y[0]))
    return (0) - (r520)
 
def C02512(t, y):
    r270 = (13.7 * y[1081] * y[357] * y[23])/(1 + (y[1081] * y[357] * y[23]))
    r278 = (13.7 * y[1081] * y[357] * y[23])/(1 + (y[1081] * y[357] * y[23]))
    return (0) - (r270 + r278)
 
def C02527(t, y):
    r371 = (13.7 * y[1124] * y[1] * y[150])/(1 + (y[1124] * y[1] * y[150]))
    return (r371) - (0)
 
def C02553(t, y):
    r694 = (13.7 * y[1245] * y[1] * y[56] * y[330])/(1 + (y[1245] * y[1] * y[56] * y[330]))
    return (r694) - (0)
 
def C02554(t, y):
    r713 = (13.7 * y[1261] * y[1] * y[124] * y[333] )/(1 + (y[1261] * y[1] * y[124] * y[333] ))
    return (r713) - (0)
 
def C02583(t, y):
    r173 = (13.7 * y[1059] * y[361] * y[18])/(1 + (y[1059] * y[361] * y[18]))
    return (0) - (r173)
 
def C02637(t, y):
    r598 = (13.7 * y[1198] * y[264])/(1 + (y[1198] * y[264]))
    return (r598) - (0)
 
def C02702(t, y):
    r699 = (13.7 * y[1248] * y[1] * y[113] * y[329])/(1 + (y[1248] * y[1] * y[113] * y[329]))
    return (r699) - (0)
 
def C02713(t, y):
    r532 = (13.7 * y[1170] * y[379] * y[0])/(1 + (y[1170] * y[379] * y[0]))
    return (r532) - (0)
 
def C02737(t, y):
    r498 = (13.7 * y[1154] * y[159] * y[56])/(1 + (y[1154] * y[159] * y[56]))
    r584 = (13.7 * y[1190] * y[365])/(1 + (y[1190] * y[365]))
    return (r498) - (r584)
 
def C02739(t, y):
    r303 = (13.7 * y[1088] * y[366] * y[12])/(1 + (y[1088] * y[366] * y[12]))
    return (0) - (r303)
 
def C02741(t, y):
    r558 = (13.7 * y[1175] * y[367] * y[0])/(1 + (y[1175] * y[367] * y[0]))
    return (0) - (r558)
 
def C02743(t, y):
    r174 = (13.7 * y[1060] * y[438] * y[368])/(1 + (y[1060] * y[438] * y[368]))
    r502 = (13.7 * y[1157] * y[78] * y[368])/(1 + (y[1157] * y[78] * y[368]))
    r503 = (13.7 * y[1157] * y[622] * y[368])/(1 + (y[1157] * y[622] * y[368]))
    return (0) - (r174 + r502 + r503)
 
def C02764(t, y):
    r689 = (13.7 * y[1241] * y[257])/(1 + (y[1241] * y[257]))
    return (r689) - (0)
 
def C02839(t, y):
    r691 = (13.7 * y[1243] * y[1] * y[69] * y[247])/(1 + (y[1243] * y[1] * y[69] * y[247]))
    return (r691) - (0)
 
def C02876(t, y):
    r263 = (13.7 * y[1080] * y[80] * y[8])/(1 + (y[1080] * y[80] * y[8]))
    return (r263) - (0)
 
def C02909(t, y):
    r10 = (13.7 * y[1010] * y[372] * y[2])/(1 + (y[1010] * y[372] * y[2]))
    return (0) - (r10)
 
def C02962(t, y):
    r679 = (13.7 * y[1235] * y[373])/(1 + (y[1235] * y[373]))
    return (0) - (r679)
 
def C02972(t, y):
    r178 = (13.7 * y[1063] * y[292] * y[81])/(1 + (y[1063] * y[292] * y[81]))
    r506 = (13.7 * y[1158] * y[720] * y[716] * y[18] * y[714] * y[67])/(1 + (y[1158] * y[720] * y[716] * y[18] * y[714] * y[67]))
    r140 = (13.7 * y[1045] * y[374] * y[2])/(1 + (y[1045] * y[374] * y[2]))
    return (r178 + r506) - (r140)
 
def C02984(t, y):
    r696 = (13.7 * y[1246] * y[319] * y[43] * y[1])/(1 + (y[1246] * y[319] * y[43] * y[1]))
    return (r696) - (0)
 
def C02987(t, y):
    r701 = (13.7 * y[1250] * y[321] * y[23] * y[1])/(1 + (y[1250] * y[321] * y[23] * y[1]))
    r106 = (13.7 * y[1030] * y[376] * y[4] * y[67])/(1 + (y[1030] * y[376] * y[4] * y[67]))
    return (r701) - (r106)
 
def C02988(t, y):
    r706 = (13.7 * y[1254] * y[1] * y[105] * y[323])/(1 + (y[1254] * y[1] * y[105] * y[323]))
    return (r706) - (0)
 
def C02992(t, y):
    r708 = (13.7 * y[1256] * y[1] * y[125] * y[331])/(1 + (y[1256] * y[1] * y[125] * y[331]))
    return (r708) - (0)
 
def C02999(t, y):
    r532 = (13.7 * y[1170] * y[379] * y[0])/(1 + (y[1170] * y[379] * y[0]))
    return (0) - (r532)
 
def C03023(t, y):
    r147 = (13.7 * y[1047] * y[380] * y[175] * y[0])/(1 + (y[1047] * y[380] * y[175] * y[0]))
    r149 = (13.7 * y[1048] * y[380] * y[175] * y[0])/(1 + (y[1048] * y[380] * y[175] * y[0]))
    return (0) - (r147 + r149)
 
def C03082(t, y):
    r103 = (13.7 * y[1027] * y[198] * y[8] * y[5])/(1 + (y[1027] * y[198] * y[8] * y[5]))
    r370 = (13.7 * y[1123] * y[1] * y[43])/(1 + (y[1123] * y[1] * y[43]))
    return (r103 + r370) - (0)
 
def C03090(t, y):
    r302 = (13.7 * y[1087] * y[382] * y[12] * y[23])/(1 + (y[1087] * y[382] * y[12] * y[23]))
    r735 = (13.7 * y[1273] * y[1] * y[382] * y[33])/(1 + (y[1273] * y[1] * y[382] * y[33]))
    return (0) - (r302 + r735)
 
def C03114(t, y):
    r306 = (13.7 * y[1091] * y[286] * y[383])/(1 + (y[1091] * y[286] * y[383]))
    return (0) - (r306)
 
def C03125(t, y):
    r700 = (13.7 * y[1249] * y[1] * y[78] * y[320])/(1 + (y[1249] * y[1] * y[78] * y[320]))
    return (r700) - (0)
 
def C03127(t, y):
    r710 = (13.7 * y[1258] * y[1] * y[191] * y[324])/(1 + (y[1258] * y[1] * y[191] * y[324]))
    return (r710) - (0)
 
def C03150(t, y):
    r298 = (13.7 * y[1085] * y[386] * y[8])/(1 + (y[1085] * y[386] * y[8]))
    return (0) - (r298)
 
def C03170(t, y):
    r77 = (13.7 * y[1021] * y[434] * y[387] * y[0])/(1 + (y[1021] * y[434] * y[387] * y[0]))
    return (0) - (r77)
 
def C03175(t, y):
    r368 = (13.7 * y[1121] * y[1] * y[211] )/(1 + (y[1121] * y[1] * y[211] ))
    return (r368) - (0)
 
def C03193(t, y):
    r264 = (13.7 * y[1081] * y[389] * y[39])/(1 + (y[1081] * y[389] * y[39]))
    r266 = (13.7 * y[1081] * y[389] * y[149])/(1 + (y[1081] * y[389] * y[149]))
    r268 = (13.7 * y[1081] * y[389] * y[505])/(1 + (y[1081] * y[389] * y[505]))
    r272 = (13.7 * y[1081] * y[389] * y[39])/(1 + (y[1081] * y[389] * y[39]))
    r274 = (13.7 * y[1081] * y[389] * y[149])/(1 + (y[1081] * y[389] * y[149]))
    r276 = (13.7 * y[1081] * y[389] * y[505])/(1 + (y[1081] * y[389] * y[505]))
    return (0) - (r264 + r266 + r268 + r272 + r274 + r276)
 
def C03287(t, y):
    r105 = (13.7 * y[1029] * y[283] * y[8] * y[5])/(1 + (y[1029] * y[283] * y[8] * y[5]))
    r369 = (13.7 * y[1122] * y[1] * y[23])/(1 + (y[1122] * y[1] * y[23]))
    return (r105 + r369) - (0)
 
def C03294(t, y):
    r184 = (13.7 * y[1066] * y[352] * y[142])/(1 + (y[1066] * y[352] * y[142]))
    return (r184) - (0)
 
def C03306(t, y):
    r177 = (13.7 * y[1062] * y[18] * y[392])/(1 + (y[1062] * y[18] * y[392]))
    return (0) - (r177)
 
def C03319(t, y):
    r42 = (13.7 * y[1012] * y[393] * y[5])/(1 + (y[1012] * y[393] * y[5]))
    return (0) - (r42)
 
def C03356(t, y):
    r600 = (13.7 * y[1199] * y[394])/(1 + (y[1199] * y[394]))
    return (0) - (r600)
 
def C03363(t, y):
    r264 = (13.7 * y[1081] * y[389] * y[39])/(1 + (y[1081] * y[389] * y[39]))
    r267 = (13.7 * y[1081] * y[345] * y[39])/(1 + (y[1081] * y[345] * y[39]))
    r272 = (13.7 * y[1081] * y[389] * y[39])/(1 + (y[1081] * y[389] * y[39]))
    r275 = (13.7 * y[1081] * y[345] * y[39])/(1 + (y[1081] * y[345] * y[39]))
    return (r264 + r267 + r272 + r275) - (0)
 
def C03373(t, y):
    r581 = (13.7 * y[1187] * y[472])/(1 + (y[1187] * y[472]))
    r733 = (13.7 * y[1271] * y[1] * y[464])/(1 + (y[1271] * y[1] * y[464]))
    r595 = (13.7 * y[1195] * y[396] * y[18])/(1 + (y[1195] * y[396] * y[18]))
    return (r581 + r733) - (r595)
 
def C03375(t, y):
    r586 = (13.7 * y[1191] * y[666])/(1 + (y[1191] * y[666]))
    return (r586) - (0)
 
def C03391(t, y):
    r175 = (13.7 * y[1061] * y[18] * y[249])/(1 + (y[1061] * y[18] * y[249]))
    r176 = (13.7 * y[1061] * y[18] * y[249])/(1 + (y[1061] * y[18] * y[249]))
    return (r175 + r176) - (0)
 
def C03402(t, y):
    r707 = (13.7 * y[1255] * y[1] * y[116] * y[318])/(1 + (y[1255] * y[1] * y[116] * y[318]))
    return (r707) - (0)
 
def C03406(t, y):
    r745 = (13.7 * y[1279] * y[1] * y[171] * y[43])/(1 + (y[1279] * y[1] * y[171] * y[43]))
    r649 = (13.7 * y[1216] * y[400])/(1 + (y[1216] * y[400]))
    return (r745) - (r649)
 
def C03479(t, y):
    r179 = (13.7 * y[1063] * y[401])/(1 + (y[1063] * y[401]))
    r734 = (13.7 * y[1272] * y[1] * y[401] * y[67])/(1 + (y[1272] * y[1] * y[401] * y[67]))
    return (0) - (r179 + r734)
 
def C03492(t, y):
    r355 = (13.7 * y[1117] * y[1] * y[256])/(1 + (y[1117] * y[1] * y[256]))
    r729 = (13.7 * y[1267] * y[54] * y[402] * y[78])/(1 + (y[1267] * y[54] * y[402] * y[78]))
    return (r355) - (r729)
 
def C03506(t, y):
    r605 = (13.7 * y[1201] * y[403])/(1 + (y[1201] * y[403]))
    r606 = (13.7 * y[1201] * y[56] * y[403])/(1 + (y[1201] * y[56] * y[403]))
    return (0) - (r605 + r606)
 
def C03511(t, y):
    r704 = (13.7 * y[1253] * y[1] * y[66] * y[328])/(1 + (y[1253] * y[1] * y[66] * y[328]))
    r705 = (13.7 * y[1253] * y[1] * y[66] * y[328])/(1 + (y[1253] * y[1] * y[66] * y[328]))
    return (r704 + r705) - (0)
 
def C03512(t, y):
    r703 = (13.7 * y[1252] * y[1] * y[65] * y[332])/(1 + (y[1252] * y[1] * y[65] * y[332]))
    return (r703) - (0)
 
def C03523(t, y):
    r512 = (13.7 * y[1162] * y[421] * y[0])/(1 + (y[1162] * y[421] * y[0]))
    return (r512) - (0)
 
def C03617(t, y):
    r549 = (13.7 * y[1172] * y[439] * y[0])/(1 + (y[1172] * y[439] * y[0]))
    return (r549) - (0)
 
def C03633(t, y):
    r671 = (13.7 * y[1230] * y[416])/(1 + (y[1230] * y[416]))
    return (r671) - (0)
 
def C03688(t, y):
    r497 = (13.7 * y[1153] * y[9] * y[409])/(1 + (y[1153] * y[9] * y[409]))
    return (0) - (r497)
 
def C03722(t, y):
    r305 = (13.7 * y[1090] * y[286] * y[12] * y[10])/(1 + (y[1090] * y[286] * y[12] * y[10]))
    r335 = (13.7 * y[1103] * y[410] * y[0] * y[8])/(1 + (y[1103] * y[410] * y[0] * y[8]))
    return (r305) - (r335)
 
def C03723(t, y):
    r71 = (13.7 * y[1021] * y[434] * y[175] * y[0])/(1 + (y[1021] * y[434] * y[175] * y[0]))
    r76 = (13.7 * y[1021] * y[434] * y[651] * y[0])/(1 + (y[1021] * y[434] * y[651] * y[0]))
    r77 = (13.7 * y[1021] * y[434] * y[387] * y[0])/(1 + (y[1021] * y[434] * y[387] * y[0]))
    return (r71 + r76 + r77) - (0)
 
def C03735(t, y):
    r687 = (13.7 * y[1239] * y[284])/(1 + (y[1239] * y[284]))
    return (r687) - (0)
 
def C03740(t, y):
    r265 = (13.7 * y[1081] * y[44] * y[115])/(1 + (y[1081] * y[44] * y[115]))
    return (r265) - (0)
 
def C03741(t, y):
    r106 = (13.7 * y[1030] * y[376] * y[4] * y[67])/(1 + (y[1030] * y[376] * y[4] * y[67]))
    r688 = (13.7 * y[1240] * y[194])/(1 + (y[1240] * y[194]))
    return (r106 + r688) - (0)
 
def C03794(t, y):
    r744 = (13.7 * y[1278] * y[38] * y[101] * y[43])/(1 + (y[1278] * y[38] * y[101] * y[43]))
    r650 = (13.7 * y[1217] * y[415])/(1 + (y[1217] * y[415]))
    return (r744) - (r650)
 
def C03798(t, y):
    r671 = (13.7 * y[1230] * y[416])/(1 + (y[1230] * y[416]))
    return (0) - (r671)
 
def C03800(t, y):
    r174 = (13.7 * y[1060] * y[438] * y[368])/(1 + (y[1060] * y[438] * y[368]))
    return (r174) - (0)
 
def C03802(t, y):
    r79 = (13.7 * y[1022] * y[235] * y[175] * y[0])/(1 + (y[1022] * y[235] * y[175] * y[0]))
    return (r79) - (0)
 
def C03826(t, y):
    r623 = (13.7 * y[1208] * y[213])/(1 + (y[1208] * y[213]))
    return (r623) - (0)
 
def C03838(t, y):
    r735 = (13.7 * y[1273] * y[1] * y[382] * y[33])/(1 + (y[1273] * y[1] * y[382] * y[33]))
    r182 = (13.7 * y[1065] * y[142] * y[420])/(1 + (y[1065] * y[142] * y[420]))
    r183 = (13.7 * y[1065] * y[420] * y[199] * y[0])/(1 + (y[1065] * y[420] * y[199] * y[0]))
    return (r735) - (r182 + r183)
 
def C03880(t, y):
    r512 = (13.7 * y[1162] * y[421] * y[0])/(1 + (y[1162] * y[421] * y[0]))
    return (0) - (r512)
 
def C03892(t, y):
    r496 = (13.7 * y[1152] * y[159] * y[75])/(1 + (y[1152] * y[159] * y[75]))
    return (r496) - (0)
 
def C03895(t, y):
    r147 = (13.7 * y[1047] * y[380] * y[175] * y[0])/(1 + (y[1047] * y[380] * y[175] * y[0]))
    return (r147) - (0)
 
def C03912(t, y):
    r130 = (13.7 * y[1041] * y[113] * y[2])/(1 + (y[1041] * y[113] * y[2]))
    r131 = (13.7 * y[1041] * y[113] * y[5])/(1 + (y[1041] * y[113] * y[5]))
    return (r130 + r131) - (0)
 
def C03939(t, y):
    r236 = (13.7 * y[1075] * y[425] * y[287])/(1 + (y[1075] * y[425] * y[287]))
    r247 = (13.7 * y[1075] * y[425] * y[287])/(1 + (y[1075] * y[425] * y[287]))
    return (0) - (r236 + r247)
 
def C03972(t, y):
    r345 = (13.7 * y[1110] * y[231] * y[24])/(1 + (y[1110] * y[231] * y[24]))
    r69 = (13.7 * y[1020] * y[426] * y[2] * y[0])/(1 + (y[1020] * y[426] * y[2] * y[0]))
    r70 = (13.7 * y[1020] * y[426] * y[5] * y[0])/(1 + (y[1020] * y[426] * y[5] * y[0]))
    return (r345) - (r69 + r70)
 
def C04039(t, y):
    r55 = (13.7 * y[1018] * y[260] * y[4] * y[67])/(1 + (y[1018] * y[260] * y[4] * y[67]))
    r624 = (13.7 * y[1209] * y[427] )/(1 + (y[1209] * y[427] ))
    return (r55) - (r624)
 
def C04079(t, y):
    r357 = (13.7 * y[1117] * y[1] * y[428])/(1 + (y[1117] * y[1] * y[428]))
    return (0) - (r357)
 
def C04133(t, y):
    r104 = (13.7 * y[1028] * y[293] * y[8] * y[5])/(1 + (y[1028] * y[293] * y[8] * y[5]))
    r372 = (13.7 * y[1125] * y[1] * y[227])/(1 + (y[1125] * y[1] * y[227]))
    return (r104 + r372) - (0)
 
def C04153(t, y):
    r169 = (13.7 * y[1055] * y[18] * y[146])/(1 + (y[1055] * y[18] * y[146]))
    return (r169) - (0)
 
def C04157(t, y):
    r172 = (13.7 * y[1058] * y[18] * y[338])/(1 + (y[1058] * y[18] * y[338]))
    return (r172) - (0)
 
def C04181(t, y):
    r56 = (13.7 * y[1018] * y[441] * y[5])/(1 + (y[1018] * y[441] * y[5]))
    r59 = (13.7 * y[1018] * y[553])/(1 + (y[1018] * y[553]))
    return (r56 + r59) - (0)
 
def C04188(t, y):
    r674 = (13.7 * y[1233] * y[433])/(1 + (y[1233] * y[433]))
    return (0) - (r674)
 
def C04232(t, y):
    r71 = (13.7 * y[1021] * y[434] * y[175] * y[0])/(1 + (y[1021] * y[434] * y[175] * y[0]))
    r76 = (13.7 * y[1021] * y[434] * y[651] * y[0])/(1 + (y[1021] * y[434] * y[651] * y[0]))
    r77 = (13.7 * y[1021] * y[434] * y[387] * y[0])/(1 + (y[1021] * y[434] * y[387] * y[0]))
    return (0) - (r71 + r76 + r77)
 
def C04236(t, y):
    r50 = (13.7 * y[1017] * y[141] * y[10])/(1 + (y[1017] * y[141] * y[10]))
    r51 = (13.7 * y[1017] * y[451] * y[2])/(1 + (y[1017] * y[451] * y[2]))
    return (r50 + r51) - (0)
 
def C04242(t, y):
    r565 = (13.7 * y[1181] * y[713] * y[0])/(1 + (y[1181] * y[713] * y[0]))
    return (r565) - (0)
 
def C04246(t, y):
    r614 = (13.7 * y[1207] * y[459])/(1 + (y[1207] * y[459]))
    return (r614) - (0)
 
def C04250(t, y):
    r174 = (13.7 * y[1060] * y[438] * y[368])/(1 + (y[1060] * y[438] * y[368]))
    return (0) - (r174)
 
def C04258(t, y):
    r549 = (13.7 * y[1172] * y[439] * y[0])/(1 + (y[1172] * y[439] * y[0]))
    return (0) - (r549)
 
def C04261(t, y):
    r273 = (13.7 * y[1126] * y[62] * y[225])/(1 + (y[1126] * y[62] * y[225]))
    return (r273) - (0)
 
def C04272(t, y):
    r54 = (13.7 * y[1018] * y[441] * y[5])/(1 + (y[1018] * y[441] * y[5]))
    r56 = (13.7 * y[1018] * y[441] * y[5])/(1 + (y[1018] * y[441] * y[5]))
    r625 = (13.7 * y[1209] * y[441])/(1 + (y[1209] * y[441]))
    return (0) - (r54 + r56 + r625)
 
def C04281(t, y):
    r132 = (13.7 * y[1041] * y[282] * y[2])/(1 + (y[1041] * y[282] * y[2]))
    r133 = (13.7 * y[1041] * y[282] * y[5])/(1 + (y[1041] * y[282] * y[5]))
    return (r132 + r133) - (0)
 
def C04294(t, y):
    r367 = (13.7 * y[1120] * y[1] * y[443])/(1 + (y[1120] * y[1] * y[443]))
    return (0) - (r367)
 
def C04302(t, y):
    r304 = (13.7 * y[1089] * y[444] * y[12])/(1 + (y[1089] * y[444] * y[12]))
    return (0) - (r304)
 
def C04309(t, y):
    r600 = (13.7 * y[1199] * y[394])/(1 + (y[1199] * y[394]))
    return (r600) - (0)
 
def C04311(t, y):
    r177 = (13.7 * y[1062] * y[18] * y[392])/(1 + (y[1062] * y[18] * y[392]))
    return (r177) - (0)
 
def C04327(t, y):
    r367 = (13.7 * y[1120] * y[1] * y[443])/(1 + (y[1120] * y[1] * y[443]))
    r319 = (13.7 * y[1097] * y[473] * y[447])/(1 + (y[1097] * y[473] * y[447]))
    return (r367) - (r319)
 
def C04332(t, y):
    r337 = (13.7 * y[1105] * y[470] * y[613])/(1 + (y[1105] * y[470] * y[613]))
    r338 = (13.7 * y[1106] * y[448])/(1 + (y[1106] * y[448]))
    return (r337) - (r338)
 
def C04352(t, y):
    r357 = (13.7 * y[1117] * y[1] * y[428])/(1 + (y[1117] * y[1] * y[428]))
    r729 = (13.7 * y[1267] * y[54] * y[402] * y[78])/(1 + (y[1267] * y[54] * y[402] * y[78]))
    r583 = (13.7 * y[1189] * y[449])/(1 + (y[1189] * y[449]))
    return (r357 + r729) - (r583)
 
def C04376(t, y):
    r182 = (13.7 * y[1065] * y[142] * y[420])/(1 + (y[1065] * y[142] * y[420]))
    r183 = (13.7 * y[1065] * y[420] * y[199] * y[0])/(1 + (y[1065] * y[420] * y[199] * y[0]))
    return (r182 + r183) - (0)
 
def C04411(t, y):
    r51 = (13.7 * y[1017] * y[451] * y[2])/(1 + (y[1017] * y[451] * y[2]))
    r52 = (13.7 * y[1017] * y[451] * y[2])/(1 + (y[1017] * y[451] * y[2]))
    return (0) - (r51 + r52)
 
def C04425(t, y):
    r344 = (13.7 * y[1109] * y[18] * y[274] )/(1 + (y[1109] * y[18] * y[274] ))
    return (r344) - (0)
 
def C04432(t, y):
    r336 = (13.7 * y[1104] * y[143] * y[662])/(1 + (y[1104] * y[143] * y[662]))
    r507 = (13.7 * y[1159] * y[453] * y[660] * y[18])/(1 + (y[1159] * y[453] * y[660] * y[18]))
    r508 = (13.7 * y[1159] * y[453] * y[660] * y[18])/(1 + (y[1159] * y[453] * y[660] * y[18]))
    return (r336) - (r507 + r508)
 
def C04454(t, y):
    r43 = (13.7 * y[1013] * y[454] * y[5])/(1 + (y[1013] * y[454] * y[5]))
    return (0) - (r43)
 
def C04501(t, y):
    r404 = (13.7 * y[1138] * y[63] * y[455])/(1 + (y[1138] * y[63] * y[455]))
    return (0) - (r404)
 
def C04556(t, y):
    r366 = (13.7 * y[1119] * y[1] * y[298])/(1 + (y[1119] * y[1] * y[298]))
    r595 = (13.7 * y[1195] * y[396] * y[18])/(1 + (y[1195] * y[396] * y[18]))
    r395 = (13.7 * y[1132] * y[1] * y[456])/(1 + (y[1132] * y[1] * y[456]))
    return (r366 + r595) - (r395)
 
def C04574(t, y):
    r322 = (13.7 * y[1098] * y[201] * y[100])/(1 + (y[1098] * y[201] * y[100]))
    r566 = (13.7 * y[1182] * y[457] * y[0])/(1 + (y[1182] * y[457] * y[0]))
    return (r322) - (r566)
 
def C04582(t, y):
    r674 = (13.7 * y[1233] * y[433])/(1 + (y[1233] * y[433]))
    return (r674) - (0)
 
def C04618(t, y):
    r21 = (13.7 * y[1011] * y[459] * y[5])/(1 + (y[1011] * y[459] * y[5]))
    r32 = (13.7 * y[1011] * y[459] * y[5])/(1 + (y[1011] * y[459] * y[5]))
    r614 = (13.7 * y[1207] * y[459])/(1 + (y[1207] * y[459]))
    return (0) - (r21 + r32 + r614)
 
def C04619(t, y):
    r22 = (13.7 * y[1011] * y[460] * y[5])/(1 + (y[1011] * y[460] * y[5]))
    r33 = (13.7 * y[1011] * y[460] * y[5])/(1 + (y[1011] * y[460] * y[5]))
    r615 = (13.7 * y[1207] * y[460])/(1 + (y[1207] * y[460]))
    return (0) - (r22 + r33 + r615)
 
def C04620(t, y):
    r23 = (13.7 * y[1011] * y[461] * y[5])/(1 + (y[1011] * y[461] * y[5]))
    r34 = (13.7 * y[1011] * y[461] * y[5])/(1 + (y[1011] * y[461] * y[5]))
    r616 = (13.7 * y[1207] * y[461])/(1 + (y[1207] * y[461]))
    return (0) - (r23 + r34 + r616)
 
def C04631(t, y):
    r114 = (13.7 * y[1035] * y[271] * y[5])/(1 + (y[1035] * y[271] * y[5]))
    r115 = (13.7 * y[1035] * y[271] * y[2])/(1 + (y[1035] * y[271] * y[2]))
    r334 = (13.7 * y[1102] * y[62] * y[37])/(1 + (y[1102] * y[62] * y[37]))
    return (r114 + r115 + r334) - (0)
 
def C04633(t, y):
    r24 = (13.7 * y[1011] * y[463] * y[5])/(1 + (y[1011] * y[463] * y[5]))
    r35 = (13.7 * y[1011] * y[463] * y[5])/(1 + (y[1011] * y[463] * y[5]))
    r617 = (13.7 * y[1207] * y[463])/(1 + (y[1207] * y[463]))
    return (0) - (r24 + r35 + r617)
 
def C04640(t, y):
    r733 = (13.7 * y[1271] * y[1] * y[464])/(1 + (y[1271] * y[1] * y[464]))
    return (0) - (r733)
 
def C04646(t, y):
    r311 = (13.7 * y[1093] * y[349] * y[94])/(1 + (y[1093] * y[349] * y[94]))
    r45 = (13.7 * y[1014] * y[465] * y[2] * y[0])/(1 + (y[1014] * y[465] * y[2] * y[0]))
    return (r311) - (r45)
 
def C04677(t, y):
    r651 = (13.7 * y[1217] * y[476])/(1 + (y[1217] * y[476]))
    return (r651) - (0)
 
def C04681(t, y):
    r736 = (13.7 * y[1274] * y[1] * y[95] * y[471])/(1 + (y[1274] * y[1] * y[95] * y[471]))
    return (r736) - (0)
 
def C04688(t, y):
    r25 = (13.7 * y[1011] * y[468] * y[5])/(1 + (y[1011] * y[468] * y[5]))
    r36 = (13.7 * y[1011] * y[468] * y[5])/(1 + (y[1011] * y[468] * y[5]))
    r618 = (13.7 * y[1207] * y[468])/(1 + (y[1207] * y[468]))
    return (0) - (r25 + r36 + r618)
 
def C04702(t, y):
    r494 = (13.7 * y[1151] * y[469] * y[663])/(1 + (y[1151] * y[469] * y[663]))
    return (0) - (r494)
 
def C04732(t, y):
    r338 = (13.7 * y[1106] * y[448])/(1 + (y[1106] * y[448]))
    r337 = (13.7 * y[1105] * y[470] * y[613])/(1 + (y[1105] * y[470] * y[613]))
    return (r338) - (r337)
 
def C04735(t, y):
    r736 = (13.7 * y[1274] * y[1] * y[95] * y[471])/(1 + (y[1274] * y[1] * y[95] * y[471]))
    return (0) - (r736)
 
def C04751(t, y):
    r690 = (13.7 * y[1242] * y[619])/(1 + (y[1242] * y[619]))
    r581 = (13.7 * y[1187] * y[472])/(1 + (y[1187] * y[472]))
    r730 = (13.7 * y[1268] * y[1] * y[472] * y[43])/(1 + (y[1268] * y[1] * y[472] * y[43]))
    return (r690) - (r581 + r730)
 
def C04752(t, y):
    r395 = (13.7 * y[1132] * y[1] * y[456])/(1 + (y[1132] * y[1] * y[456]))
    r319 = (13.7 * y[1097] * y[473] * y[447])/(1 + (y[1097] * y[473] * y[447]))
    r320 = (13.7 * y[1097] * y[473] * y[677])/(1 + (y[1097] * y[473] * y[677]))
    r321 = (13.7 * y[1097] * y[473] * y[676])/(1 + (y[1097] * y[473] * y[676]))
    return (r395) - (r319 + r320 + r321)
 
def C04778(t, y):
    r306 = (13.7 * y[1091] * y[286] * y[383])/(1 + (y[1091] * y[286] * y[383]))
    return (r306) - (0)
 
def C04807(t, y):
    r401 = (13.7 * y[1135] * y[1] * y[299])/(1 + (y[1135] * y[1] * y[299]))
    r317 = (13.7 * y[1096] * y[475] * y[219])/(1 + (y[1096] * y[475] * y[219]))
    return (r401) - (r317)
 
def C04823(t, y):
    r730 = (13.7 * y[1268] * y[1] * y[472] * y[43])/(1 + (y[1268] * y[1] * y[472] * y[43]))
    r651 = (13.7 * y[1217] * y[476])/(1 + (y[1217] * y[476]))
    return (r730) - (r651)
 
def C04851(t, y):
    r494 = (13.7 * y[1151] * y[469] * y[663])/(1 + (y[1151] * y[469] * y[663]))
    r284 = (13.7 * y[1084] * y[477] * y[37])/(1 + (y[1084] * y[477] * y[37]))
    return (r494) - (r284)
 
def C04877(t, y):
    r727 = (13.7 * y[1265] * y[1] * y[240] * y[236])/(1 + (y[1265] * y[1] * y[240] * y[236]))
    return (r727) - (0)
 
def C04882(t, y):
    r495 = (13.7 * y[1151] * y[479] * y[663])/(1 + (y[1151] * y[479] * y[663]))
    return (0) - (r495)
 
def C04895(t, y):
    r553 = (13.7 * y[1174] * y[38] * y[0])/(1 + (y[1174] * y[38] * y[0]))
    r555 = (13.7 * y[1174] * y[480] * y[0])/(1 + (y[1174] * y[480] * y[0]))
    r591 = (13.7 * y[1193] * y[480] * y[0])/(1 + (y[1193] * y[480] * y[0]))
    r592 = (13.7 * y[1193] * y[480] * y[0])/(1 + (y[1193] * y[480] * y[0]))
    return (r553) - (r555 + r591 + r592)
 
def C04896(t, y):
    r558 = (13.7 * y[1175] * y[367] * y[0])/(1 + (y[1175] * y[367] * y[0]))
    r673 = (13.7 * y[1232] * y[481])/(1 + (y[1232] * y[481]))
    return (r558) - (r673)
 
def C04916(t, y):
    r673 = (13.7 * y[1232] * y[481])/(1 + (y[1232] * y[481]))
    return (r673) - (0)
 
def C05125(t, y):
    r197 = (13.7 * y[1071] * y[21] * y[59])/(1 + (y[1071] * y[21] * y[59]))
    r198 = (13.7 * y[1071] * y[260] * y[59])/(1 + (y[1071] * y[260] * y[59]))
    r199 = (13.7 * y[1071] * y[553] * y[59])/(1 + (y[1071] * y[553] * y[59]))
    r204 = (13.7 * y[1071] * y[21] * y[59])/(1 + (y[1071] * y[21] * y[59]))
    r205 = (13.7 * y[1071] * y[260] * y[59])/(1 + (y[1071] * y[260] * y[59]))
    r206 = (13.7 * y[1071] * y[553] * y[59])/(1 + (y[1071] * y[553] * y[59]))
    r211 = (13.7 * y[1071] * y[21] * y[59])/(1 + (y[1071] * y[21] * y[59]))
    r212 = (13.7 * y[1071] * y[260] * y[59])/(1 + (y[1071] * y[260] * y[59]))
    r213 = (13.7 * y[1071] * y[553] * y[59])/(1 + (y[1071] * y[553] * y[59]))
    r218 = (13.7 * y[1071] * y[21] * y[59])/(1 + (y[1071] * y[21] * y[59]))
    r219 = (13.7 * y[1071] * y[260] * y[59])/(1 + (y[1071] * y[260] * y[59]))
    r220 = (13.7 * y[1071] * y[553] * y[59])/(1 + (y[1071] * y[553] * y[59]))
    r225 = (13.7 * y[1071] * y[21] * y[59])/(1 + (y[1071] * y[21] * y[59]))
    r226 = (13.7 * y[1071] * y[260] * y[59])/(1 + (y[1071] * y[260] * y[59]))
    r227 = (13.7 * y[1071] * y[553] * y[59])/(1 + (y[1071] * y[553] * y[59]))
    r200 = (13.7 * y[1071] * y[87] * y[483])/(1 + (y[1071] * y[87] * y[483]))
    r207 = (13.7 * y[1071] * y[87] * y[483])/(1 + (y[1071] * y[87] * y[483]))
    r214 = (13.7 * y[1071] * y[87] * y[483])/(1 + (y[1071] * y[87] * y[483]))
    r221 = (13.7 * y[1071] * y[87] * y[483])/(1 + (y[1071] * y[87] * y[483]))
    r228 = (13.7 * y[1071] * y[87] * y[483])/(1 + (y[1071] * y[87] * y[483]))
    return (r197 + r198 + r199 + r204 + r205 + r206 + r211 + r212 + r213 + r218 + r219 + r220 + r225 + r226 + r227) - (r200 + r207 + r214 + r221 + r228)
 
def C05167(t, y):
    r117 = (13.7 * y[1036] * y[484] * y[0] * y[2])/(1 + (y[1036] * y[484] * y[0] * y[2]))
    r118 = (13.7 * y[1036] * y[484] * y[0] * y[5])/(1 + (y[1036] * y[484] * y[0] * y[5]))
    r124 = (13.7 * y[1038] * y[484] * y[0] * y[2])/(1 + (y[1038] * y[484] * y[0] * y[2]))
    r125 = (13.7 * y[1038] * y[484] * y[0] * y[5])/(1 + (y[1038] * y[484] * y[0] * y[5]))
    r636 = (13.7 * y[1213] * y[484])/(1 + (y[1213] * y[484]))
    r641 = (13.7 * y[1213] * y[484])/(1 + (y[1213] * y[484]))
    r646 = (13.7 * y[1214] * y[484])/(1 + (y[1214] * y[484]))
    r648 = (13.7 * y[1215] * y[484])/(1 + (y[1215] * y[484]))
    return (0) - (r117 + r118 + r124 + r125 + r636 + r641 + r646 + r648)
 
def C05172(t, y):
    r499 = (13.7 * y[1155] * y[1] * y[311] * y[0])/(1 + (y[1155] * y[1] * y[311] * y[0]))
    r511 = (13.7 * y[1161] * y[572] * y[485])/(1 + (y[1161] * y[572] * y[485]))
    return (r499) - (r511)
 
def C05198(t, y):
    r500 = (13.7 * y[1156] * y[335] * y[660] * y[18] * y[491] * y[67])/(1 + (y[1156] * y[335] * y[660] * y[18] * y[491] * y[67]))
    r504 = (13.7 * y[1158] * y[629] * y[716] * y[18] * y[714] * y[67])/(1 + (y[1158] * y[629] * y[716] * y[18] * y[714] * y[67]))
    r505 = (13.7 * y[1158] * y[721] * y[716] * y[18] * y[714] * y[67])/(1 + (y[1158] * y[721] * y[716] * y[18] * y[714] * y[67]))
    r506 = (13.7 * y[1158] * y[720] * y[716] * y[18] * y[714] * y[67])/(1 + (y[1158] * y[720] * y[716] * y[18] * y[714] * y[67]))
    r507 = (13.7 * y[1159] * y[453] * y[660] * y[18])/(1 + (y[1159] * y[453] * y[660] * y[18]))
    r508 = (13.7 * y[1159] * y[453] * y[660] * y[18])/(1 + (y[1159] * y[453] * y[660] * y[18]))
    r510 = (13.7 * y[1160] * y[696] * y[660] * y[18] * y[28])/(1 + (y[1160] * y[696] * y[660] * y[18] * y[28]))
    r595 = (13.7 * y[1195] * y[396] * y[18])/(1 + (y[1195] * y[396] * y[18]))
    r596 = (13.7 * y[1196] * y[69] * y[18] * y[28])/(1 + (y[1196] * y[69] * y[18] * y[28]))
    r597 = (13.7 * y[1197] * y[38] * y[18] * y[28])/(1 + (y[1197] * y[38] * y[18] * y[28]))
    return (r500 + r504 + r505 + r506 + r507 + r508 + r510 + r595 + r596 + r597) - (0)
 
def C05223(t, y):
    r237 = (13.7 * y[1075] * y[487] * y[287])/(1 + (y[1075] * y[487] * y[287]))
    r248 = (13.7 * y[1075] * y[487] * y[287])/(1 + (y[1075] * y[487] * y[287]))
    return (0) - (r237 + r248)
 
def C05335(t, y):
    r332 = (13.7 * y[1100] * y[1] * y[488] * y[0])/(1 + (y[1100] * y[1] * y[488] * y[0]))
    r693 = (13.7 * y[1244] * y[1] * y[488] * y[327])/(1 + (y[1244] * y[1] * y[488] * y[327]))
    return (0) - (r332 + r693)
 
def C05336(t, y):
    r693 = (13.7 * y[1244] * y[1] * y[488] * y[327])/(1 + (y[1244] * y[1] * y[488] * y[327]))
    return (r693) - (0)
 
def C05345(t, y):
    r515 = (13.7 * y[1164] * y[494] * y[0])/(1 + (y[1164] * y[494] * y[0]))
    r518 = (13.7 * y[1164] * y[494] * y[0])/(1 + (y[1164] * y[494] * y[0]))
    r681 = (13.7 * y[1236] * y[160])/(1 + (y[1236] * y[160]))
    r190 = (13.7 * y[1069] * y[490] * y[93])/(1 + (y[1069] * y[490] * y[93]))
    return (r515 + r518 + r681) - (r190)
 
def C05359(t, y):
    r88 = (13.7 * y[1025] * y[1] * y[0] * y[107])/(1 + (y[1025] * y[1] * y[0] * y[107]))
    r95 = (13.7 * y[1025] * y[1] * y[0] * y[107])/(1 + (y[1025] * y[1] * y[0] * y[107]))
    r89 = (13.7 * y[1025] * y[491] * y[67])/(1 + (y[1025] * y[491] * y[67]))
    r90 = (13.7 * y[1025] * y[493] * y[491] * y[67])/(1 + (y[1025] * y[493] * y[491] * y[67]))
    r91 = (13.7 * y[1025] * y[242] * y[491] * y[67])/(1 + (y[1025] * y[242] * y[491] * y[67]))
    r92 = (13.7 * y[1025] * y[492] * y[491] * y[67])/(1 + (y[1025] * y[492] * y[491] * y[67]))
    r96 = (13.7 * y[1025] * y[491] * y[67])/(1 + (y[1025] * y[491] * y[67]))
    r97 = (13.7 * y[1025] * y[493] * y[491] * y[67])/(1 + (y[1025] * y[493] * y[491] * y[67]))
    r98 = (13.7 * y[1025] * y[242] * y[491] * y[67])/(1 + (y[1025] * y[242] * y[491] * y[67]))
    r99 = (13.7 * y[1025] * y[492] * y[491] * y[67])/(1 + (y[1025] * y[492] * y[491] * y[67]))
    r500 = (13.7 * y[1156] * y[335] * y[660] * y[18] * y[491] * y[67])/(1 + (y[1156] * y[335] * y[660] * y[18] * y[491] * y[67]))
    return (r88 + r95) - (r89 + r90 + r91 + r92 + r96 + r97 + r98 + r99 + r500)
 
def C05360(t, y):
    r91 = (13.7 * y[1025] * y[242] * y[491] * y[67])/(1 + (y[1025] * y[242] * y[491] * y[67]))
    r98 = (13.7 * y[1025] * y[242] * y[491] * y[67])/(1 + (y[1025] * y[242] * y[491] * y[67]))
    r92 = (13.7 * y[1025] * y[492] * y[491] * y[67])/(1 + (y[1025] * y[492] * y[491] * y[67]))
    r99 = (13.7 * y[1025] * y[492] * y[491] * y[67])/(1 + (y[1025] * y[492] * y[491] * y[67]))
    return (r91 + r98) - (r92 + r99)
 
def C05361(t, y):
    r92 = (13.7 * y[1025] * y[492] * y[491] * y[67])/(1 + (y[1025] * y[492] * y[491] * y[67]))
    r99 = (13.7 * y[1025] * y[492] * y[491] * y[67])/(1 + (y[1025] * y[492] * y[491] * y[67]))
    r90 = (13.7 * y[1025] * y[493] * y[491] * y[67])/(1 + (y[1025] * y[493] * y[491] * y[67]))
    r97 = (13.7 * y[1025] * y[493] * y[491] * y[67])/(1 + (y[1025] * y[493] * y[491] * y[67]))
    return (r92 + r99) - (r90 + r97)
 
def C05378(t, y):
    r515 = (13.7 * y[1164] * y[494] * y[0])/(1 + (y[1164] * y[494] * y[0]))
    r518 = (13.7 * y[1164] * y[494] * y[0])/(1 + (y[1164] * y[494] * y[0]))
    r588 = (13.7 * y[1192] * y[494])/(1 + (y[1192] * y[494]))
    return (0) - (r515 + r518 + r588)
 
def C05382(t, y):
    r191 = (13.7 * y[1069] * y[603] * y[92])/(1 + (y[1069] * y[603] * y[92]))
    r516 = (13.7 * y[1164] * y[200] * y[0])/(1 + (y[1164] * y[200] * y[0]))
    r519 = (13.7 * y[1164] * y[200] * y[0])/(1 + (y[1164] * y[200] * y[0]))
    r188 = (13.7 * y[1069] * y[495] * y[93])/(1 + (y[1069] * y[495] * y[93]))
    r193 = (13.7 * y[1069] * y[495] * y[59])/(1 + (y[1069] * y[495] * y[59]))
    r675 = (13.7 * y[1234] * y[495])/(1 + (y[1234] * y[495]))
    r676 = (13.7 * y[1234] * y[495])/(1 + (y[1234] * y[495]))
    r677 = (13.7 * y[1234] * y[495])/(1 + (y[1234] * y[495]))
    return (r191 + r516 + r519) - (r188 + r193 + r675 + r676 + r677)
 
def C05444(t, y):
    r5 = (13.7 * y[1010] * y[496] * y[2])/(1 + (y[1010] * y[496] * y[2]))
    return (0) - (r5)
 
def C05445(t, y):
    r5 = (13.7 * y[1010] * y[496] * y[2])/(1 + (y[1010] * y[496] * y[2]))
    return (r5) - (0)
 
def C05512(t, y):
    r297 = (13.7 * y[1085] * y[498] * y[8])/(1 + (y[1085] * y[498] * y[8]))
    return (0) - (r297)
 
def C05576(t, y):
    r6 = (13.7 * y[1010] * y[499] * y[2])/(1 + (y[1010] * y[499] * y[2]))
    return (0) - (r6)
 
def C05577(t, y):
    r6 = (13.7 * y[1010] * y[499] * y[2])/(1 + (y[1010] * y[499] * y[2]))
    return (r6) - (0)
 
def C05670(t, y):
    r271 = (13.7 * y[1081] * y[501] * y[23])/(1 + (y[1081] * y[501] * y[23]))
    r279 = (13.7 * y[1081] * y[501] * y[23])/(1 + (y[1081] * y[501] * y[23]))
    return (0) - (r271 + r279)
 
def C05684(t, y):
    r145 = (13.7 * y[1046] * y[311] * y[5] * y[0])/(1 + (y[1046] * y[311] * y[5] * y[0]))
    r154 = (13.7 * y[1050] * y[98] * y[502] * y[19])/(1 + (y[1050] * y[98] * y[502] * y[19]))
    r157 = (13.7 * y[1050] * y[98] * y[502] * y[19])/(1 + (y[1050] * y[98] * y[502] * y[19]))
    r160 = (13.7 * y[1050] * y[98] * y[502] * y[19])/(1 + (y[1050] * y[98] * y[502] * y[19]))
    return (r145) - (r154 + r157 + r160)
 
def C05686(t, y):
    r154 = (13.7 * y[1050] * y[98] * y[502] * y[19])/(1 + (y[1050] * y[98] * y[502] * y[19]))
    r157 = (13.7 * y[1050] * y[98] * y[502] * y[19])/(1 + (y[1050] * y[98] * y[502] * y[19]))
    r160 = (13.7 * y[1050] * y[98] * y[502] * y[19])/(1 + (y[1050] * y[98] * y[502] * y[19]))
    r409 = (13.7 * y[1142] * y[1] * y[509])/(1 + (y[1142] * y[1] * y[509]))
    r352 = (13.7 * y[1114] * y[1] * y[503])/(1 + (y[1114] * y[1] * y[503]))
    return (r154 + r157 + r160 + r409) - (r352)
 
def C05688(t, y):
    r324 = (13.7 * y[1099] * y[266] * y[311])/(1 + (y[1099] * y[266] * y[311]))
    r328 = (13.7 * y[1099] * y[266] * y[311])/(1 + (y[1099] * y[266] * y[311]))
    return (r324 + r328) - (0)
 
def C05689(t, y):
    r268 = (13.7 * y[1081] * y[389] * y[505])/(1 + (y[1081] * y[389] * y[505]))
    r276 = (13.7 * y[1081] * y[389] * y[505])/(1 + (y[1081] * y[389] * y[505]))
    return (0) - (r268 + r276)
 
def C05691(t, y):
    r332 = (13.7 * y[1100] * y[1] * y[488] * y[0])/(1 + (y[1100] * y[1] * y[488] * y[0]))
    return (r332) - (0)
 
def C05695(t, y):
    r268 = (13.7 * y[1081] * y[389] * y[505])/(1 + (y[1081] * y[389] * y[505]))
    r276 = (13.7 * y[1081] * y[389] * y[505])/(1 + (y[1081] * y[389] * y[505]))
    return (r268 + r276) - (0)
 
def C05696(t, y):
    r352 = (13.7 * y[1114] * y[1] * y[503])/(1 + (y[1114] * y[1] * y[503]))
    return (r352) - (0)
 
def C05697(t, y):
    r409 = (13.7 * y[1142] * y[1] * y[509])/(1 + (y[1142] * y[1] * y[509]))
    return (0) - (r409)
 
def C05703(t, y):
    r146 = (13.7 * y[1046] * y[4] * y[67] * y[668])/(1 + (y[1046] * y[4] * y[67] * y[668]))
    return (r146) - (0)
 
def C05711(t, y):
    r270 = (13.7 * y[1081] * y[357] * y[23])/(1 + (y[1081] * y[357] * y[23]))
    r278 = (13.7 * y[1081] * y[357] * y[23])/(1 + (y[1081] * y[357] * y[23]))
    return (r270 + r278) - (0)
 
def C05726(t, y):
    r528 = (13.7 * y[1168] * y[513] * y[0])/(1 + (y[1168] * y[513] * y[0]))
    return (r528) - (0)
 
def C05729(t, y):
    r269 = (13.7 * y[1081] * y[347] * y[0])/(1 + (y[1081] * y[347] * y[0]))
    r277 = (13.7 * y[1081] * y[347] * y[0])/(1 + (y[1081] * y[347] * y[0]))
    r528 = (13.7 * y[1168] * y[513] * y[0])/(1 + (y[1168] * y[513] * y[0]))
    return (r269 + r277) - (r528)
 
def C05744(t, y):
    r21 = (13.7 * y[1011] * y[459] * y[5])/(1 + (y[1011] * y[459] * y[5]))
    r32 = (13.7 * y[1011] * y[459] * y[5])/(1 + (y[1011] * y[459] * y[5]))
    r236 = (13.7 * y[1075] * y[425] * y[287])/(1 + (y[1075] * y[425] * y[287]))
    r247 = (13.7 * y[1075] * y[425] * y[287])/(1 + (y[1075] * y[425] * y[287]))
    return (r21 + r32 + r236 + r247) - (0)
 
def C05745(t, y):
    r238 = (13.7 * y[1075] * y[515] * y[287])/(1 + (y[1075] * y[515] * y[287]))
    r249 = (13.7 * y[1075] * y[515] * y[287])/(1 + (y[1075] * y[515] * y[287]))
    return (0) - (r238 + r249)
 
def C05746(t, y):
    r26 = (13.7 * y[1011] * y[517] * y[5])/(1 + (y[1011] * y[517] * y[5]))
    r37 = (13.7 * y[1011] * y[517] * y[5])/(1 + (y[1011] * y[517] * y[5]))
    r238 = (13.7 * y[1075] * y[515] * y[287])/(1 + (y[1075] * y[515] * y[287]))
    r249 = (13.7 * y[1075] * y[515] * y[287])/(1 + (y[1075] * y[515] * y[287]))
    return (r26 + r37 + r238 + r249) - (0)
 
def C05747(t, y):
    r26 = (13.7 * y[1011] * y[517] * y[5])/(1 + (y[1011] * y[517] * y[5]))
    r37 = (13.7 * y[1011] * y[517] * y[5])/(1 + (y[1011] * y[517] * y[5]))
    r619 = (13.7 * y[1207] * y[517])/(1 + (y[1207] * y[517]))
    return (0) - (r26 + r37 + r619)
 
def C05748(t, y):
    r619 = (13.7 * y[1207] * y[517])/(1 + (y[1207] * y[517]))
    return (r619) - (0)
 
def C05749(t, y):
    r239 = (13.7 * y[1075] * y[519] * y[287])/(1 + (y[1075] * y[519] * y[287]))
    r250 = (13.7 * y[1075] * y[519] * y[287])/(1 + (y[1075] * y[519] * y[287]))
    return (0) - (r239 + r250)
 
def C05750(t, y):
    r23 = (13.7 * y[1011] * y[461] * y[5])/(1 + (y[1011] * y[461] * y[5]))
    r34 = (13.7 * y[1011] * y[461] * y[5])/(1 + (y[1011] * y[461] * y[5]))
    r239 = (13.7 * y[1075] * y[519] * y[287])/(1 + (y[1075] * y[519] * y[287]))
    r250 = (13.7 * y[1075] * y[519] * y[287])/(1 + (y[1075] * y[519] * y[287]))
    return (r23 + r34 + r239 + r250) - (0)
 
def C05751(t, y):
    r616 = (13.7 * y[1207] * y[461])/(1 + (y[1207] * y[461]))
    return (r616) - (0)
 
def C05752(t, y):
    r240 = (13.7 * y[1075] * y[522] * y[287])/(1 + (y[1075] * y[522] * y[287]))
    r251 = (13.7 * y[1075] * y[522] * y[287])/(1 + (y[1075] * y[522] * y[287]))
    r257 = (13.7 * y[1076] * y[522] * y[632])/(1 + (y[1076] * y[522] * y[632]))
    return (0) - (r240 + r251 + r257)
 
def C05753(t, y):
    r22 = (13.7 * y[1011] * y[460] * y[5])/(1 + (y[1011] * y[460] * y[5]))
    r33 = (13.7 * y[1011] * y[460] * y[5])/(1 + (y[1011] * y[460] * y[5]))
    r240 = (13.7 * y[1075] * y[522] * y[287])/(1 + (y[1075] * y[522] * y[287]))
    r251 = (13.7 * y[1075] * y[522] * y[287])/(1 + (y[1075] * y[522] * y[287]))
    return (r22 + r33 + r240 + r251) - (0)
 
def C05754(t, y):
    r615 = (13.7 * y[1207] * y[460])/(1 + (y[1207] * y[460]))
    return (r615) - (0)
 
def C05755(t, y):
    r241 = (13.7 * y[1075] * y[525] * y[287])/(1 + (y[1075] * y[525] * y[287]))
    r252 = (13.7 * y[1075] * y[525] * y[287])/(1 + (y[1075] * y[525] * y[287]))
    return (0) - (r241 + r252)
 
def C05756(t, y):
    r27 = (13.7 * y[1011] * y[527] * y[5])/(1 + (y[1011] * y[527] * y[5]))
    r38 = (13.7 * y[1011] * y[527] * y[5])/(1 + (y[1011] * y[527] * y[5]))
    r241 = (13.7 * y[1075] * y[525] * y[287])/(1 + (y[1075] * y[525] * y[287]))
    r252 = (13.7 * y[1075] * y[525] * y[287])/(1 + (y[1075] * y[525] * y[287]))
    return (r27 + r38 + r241 + r252) - (0)
 
def C05757(t, y):
    r27 = (13.7 * y[1011] * y[527] * y[5])/(1 + (y[1011] * y[527] * y[5]))
    r38 = (13.7 * y[1011] * y[527] * y[5])/(1 + (y[1011] * y[527] * y[5]))
    r620 = (13.7 * y[1207] * y[527])/(1 + (y[1207] * y[527]))
    return (0) - (r27 + r38 + r620)
 
def C05758(t, y):
    r620 = (13.7 * y[1207] * y[527])/(1 + (y[1207] * y[527]))
    return (r620) - (0)
 
def C05759(t, y):
    r25 = (13.7 * y[1011] * y[468] * y[5])/(1 + (y[1011] * y[468] * y[5]))
    r36 = (13.7 * y[1011] * y[468] * y[5])/(1 + (y[1011] * y[468] * y[5]))
    r237 = (13.7 * y[1075] * y[487] * y[287])/(1 + (y[1075] * y[487] * y[287]))
    r248 = (13.7 * y[1075] * y[487] * y[287])/(1 + (y[1075] * y[487] * y[287]))
    return (r25 + r36 + r237 + r248) - (0)
 
def C05760(t, y):
    r618 = (13.7 * y[1207] * y[468])/(1 + (y[1207] * y[468]))
    return (r618) - (0)
 
def C05761(t, y):
    r242 = (13.7 * y[1075] * y[531] * y[287])/(1 + (y[1075] * y[531] * y[287]))
    r253 = (13.7 * y[1075] * y[531] * y[287])/(1 + (y[1075] * y[531] * y[287]))
    return (0) - (r242 + r253)
 
def C05762(t, y):
    r24 = (13.7 * y[1011] * y[463] * y[5])/(1 + (y[1011] * y[463] * y[5]))
    r35 = (13.7 * y[1011] * y[463] * y[5])/(1 + (y[1011] * y[463] * y[5]))
    r242 = (13.7 * y[1075] * y[531] * y[287])/(1 + (y[1075] * y[531] * y[287]))
    r253 = (13.7 * y[1075] * y[531] * y[287])/(1 + (y[1075] * y[531] * y[287]))
    return (r24 + r35 + r242 + r253) - (0)
 
def C05763(t, y):
    r617 = (13.7 * y[1207] * y[463])/(1 + (y[1207] * y[463]))
    return (r617) - (0)
 
def C05764(t, y):
    r243 = (13.7 * y[1075] * y[534] * y[287])/(1 + (y[1075] * y[534] * y[287]))
    r254 = (13.7 * y[1075] * y[534] * y[287])/(1 + (y[1075] * y[534] * y[287]))
    return (0) - (r243 + r254)
 
def C05772(t, y):
    r165 = (13.7 * y[1052] * y[18] * y[353])/(1 + (y[1052] * y[18] * y[353]))
    return (r165) - (0)
 
def C05778(t, y):
    r164 = (13.7 * y[1051] * y[18] * y[354])/(1 + (y[1051] * y[18] * y[354]))
    return (r164) - (0)
 
def C05819(t, y):
    r150 = (13.7 * y[1049] * y[223] * y[251] * y[0])/(1 + (y[1049] * y[223] * y[251] * y[0]))
    r151 = (13.7 * y[1049] * y[223] * y[251] * y[0])/(1 + (y[1049] * y[223] * y[251] * y[0]))
    return (r150 + r151) - (0)
 
def C05822(t, y):
    r524 = (13.7 * y[1165] * y[538] * y[0])/(1 + (y[1165] * y[538] * y[0]))
    return (0) - (r524)
 
def C05840(t, y):
    r126 = (13.7 * y[1039] * y[43] * y[6])/(1 + (y[1039] * y[43] * y[6]))
    r335 = (13.7 * y[1103] * y[410] * y[0] * y[8])/(1 + (y[1103] * y[410] * y[0] * y[8]))
    return (r126 + r335) - (0)
 
def C05841(t, y):
    r299 = (13.7 * y[1085] * y[540] * y[8])/(1 + (y[1085] * y[540] * y[8]))
    return (0) - (r299)
 
def C05844(t, y):
    r266 = (13.7 * y[1081] * y[389] * y[149])/(1 + (y[1081] * y[389] * y[149]))
    r274 = (13.7 * y[1081] * y[389] * y[149])/(1 + (y[1081] * y[389] * y[149]))
    return (r266 + r274) - (0)
 
def C05893(t, y):
    r284 = (13.7 * y[1084] * y[477] * y[37])/(1 + (y[1084] * y[477] * y[37]))
    return (r284) - (0)
 
def C05897(t, y):
    r495 = (13.7 * y[1151] * y[479] * y[663])/(1 + (y[1151] * y[479] * y[663]))
    r286 = (13.7 * y[1084] * y[543] * y[37])/(1 + (y[1084] * y[543] * y[37]))
    return (r495) - (r286)
 
def C05898(t, y):
    r286 = (13.7 * y[1084] * y[543] * y[37])/(1 + (y[1084] * y[543] * y[37]))
    return (r286) - (0)
 
def C05921(t, y):
    r737 = (13.7 * y[1274] * y[1] * y[95])/(1 + (y[1274] * y[1] * y[95]))
    r738 = (13.7 * y[1274] * y[545] * y[563])/(1 + (y[1274] * y[545] * y[563]))
    return (r737) - (r738)
 
def C05922(t, y):
    r554 = (13.7 * y[1174] * y[38] * y[0])/(1 + (y[1174] * y[38] * y[0]))
    r556 = (13.7 * y[1174] * y[546] * y[0])/(1 + (y[1174] * y[546] * y[0]))
    return (r554) - (r556)
 
def C05923(t, y):
    r556 = (13.7 * y[1174] * y[546] * y[0])/(1 + (y[1174] * y[546] * y[0]))
    r557 = (13.7 * y[1174] * y[547])/(1 + (y[1174] * y[547]))
    return (r556) - (r557)
 
def C05951(t, y):
    r267 = (13.7 * y[1081] * y[345] * y[39])/(1 + (y[1081] * y[345] * y[39]))
    r275 = (13.7 * y[1081] * y[345] * y[39])/(1 + (y[1081] * y[345] * y[39]))
    return (r267 + r275) - (0)
 
def C05983(t, y):
    r719 = (13.7 * y[1262] * y[1] * y[119])/(1 + (y[1262] * y[1] * y[119]))
    r718 = (13.7 * y[1262] * y[549] * y[9])/(1 + (y[1262] * y[549] * y[9]))
    return (r719) - (r718)
 
def C05993(t, y):
    r716 = (13.7 * y[1262] * y[1] * y[30])/(1 + (y[1262] * y[1] * y[30]))
    r715 = (13.7 * y[1262] * y[550] * y[9])/(1 + (y[1262] * y[550] * y[9]))
    return (r716) - (r715)
 
def C06006(t, y):
    r200 = (13.7 * y[1071] * y[87] * y[483])/(1 + (y[1071] * y[87] * y[483]))
    r201 = (13.7 * y[1071] * y[21] * y[87])/(1 + (y[1071] * y[21] * y[87]))
    r207 = (13.7 * y[1071] * y[87] * y[483])/(1 + (y[1071] * y[87] * y[483]))
    r208 = (13.7 * y[1071] * y[21] * y[87])/(1 + (y[1071] * y[21] * y[87]))
    r214 = (13.7 * y[1071] * y[87] * y[483])/(1 + (y[1071] * y[87] * y[483]))
    r215 = (13.7 * y[1071] * y[21] * y[87])/(1 + (y[1071] * y[21] * y[87]))
    r221 = (13.7 * y[1071] * y[87] * y[483])/(1 + (y[1071] * y[87] * y[483]))
    r222 = (13.7 * y[1071] * y[21] * y[87])/(1 + (y[1071] * y[21] * y[87]))
    r228 = (13.7 * y[1071] * y[87] * y[483])/(1 + (y[1071] * y[87] * y[483]))
    r229 = (13.7 * y[1071] * y[21] * y[87])/(1 + (y[1071] * y[21] * y[87]))
    r58 = (13.7 * y[1018] * y[551])/(1 + (y[1018] * y[551]))
    return (r200 + r201 + r207 + r208 + r214 + r215 + r221 + r222 + r228 + r229) - (r58)
 
def C06007(t, y):
    r57 = (13.7 * y[1018] * y[552] * y[5])/(1 + (y[1018] * y[552] * y[5]))
    r626 = (13.7 * y[1209] * y[552])/(1 + (y[1209] * y[552]))
    return (0) - (r57 + r626)
 
def C06010(t, y):
    r54 = (13.7 * y[1018] * y[441] * y[5])/(1 + (y[1018] * y[441] * y[5]))
    r59 = (13.7 * y[1018] * y[553])/(1 + (y[1018] * y[553]))
    r196 = (13.7 * y[1071] * y[553] * y[10])/(1 + (y[1071] * y[553] * y[10]))
    r199 = (13.7 * y[1071] * y[553] * y[59])/(1 + (y[1071] * y[553] * y[59]))
    r203 = (13.7 * y[1071] * y[553] * y[10])/(1 + (y[1071] * y[553] * y[10]))
    r206 = (13.7 * y[1071] * y[553] * y[59])/(1 + (y[1071] * y[553] * y[59]))
    r210 = (13.7 * y[1071] * y[553] * y[10])/(1 + (y[1071] * y[553] * y[10]))
    r213 = (13.7 * y[1071] * y[553] * y[59])/(1 + (y[1071] * y[553] * y[59]))
    r217 = (13.7 * y[1071] * y[553] * y[10])/(1 + (y[1071] * y[553] * y[10]))
    r220 = (13.7 * y[1071] * y[553] * y[59])/(1 + (y[1071] * y[553] * y[59]))
    r224 = (13.7 * y[1071] * y[553] * y[10])/(1 + (y[1071] * y[553] * y[10]))
    r227 = (13.7 * y[1071] * y[553] * y[59])/(1 + (y[1071] * y[553] * y[59]))
    return (r54) - (r59 + r196 + r199 + r203 + r206 + r210 + r213 + r217 + r220 + r224 + r227)
 
def C06020(t, y):
    r109 = (13.7 * y[1031] * y[554] * y[9] * y[10] * y[107])/(1 + (y[1031] * y[554] * y[9] * y[10] * y[107]))
    return (0) - (r109)
 
def C06021(t, y):
    r109 = (13.7 * y[1031] * y[554] * y[9] * y[10] * y[107])/(1 + (y[1031] * y[554] * y[9] * y[10] * y[107]))
    return (r109) - (0)
 
def C06032(t, y):
    r53 = (13.7 * y[1017] * y[87] * y[10] * y[3] * y[67])/(1 + (y[1017] * y[87] * y[10] * y[3] * y[67]))
    return (r53) - (0)
 
def C06055(t, y):
    r628 = (13.7 * y[1210] * y[557] * y[0])/(1 + (y[1210] * y[557] * y[0]))
    return (0) - (r628)
 
def C06056(t, y):
    r628 = (13.7 * y[1210] * y[557] * y[0])/(1 + (y[1210] * y[557] * y[0]))
    return (r628) - (0)
 
def C06114(t, y):
    r271 = (13.7 * y[1081] * y[501] * y[23])/(1 + (y[1081] * y[501] * y[23]))
    r279 = (13.7 * y[1081] * y[501] * y[23])/(1 + (y[1081] * y[501] * y[23]))
    return (r271 + r279) - (0)
 
def C06148(t, y):
    r555 = (13.7 * y[1174] * y[480] * y[0])/(1 + (y[1174] * y[480] * y[0]))
    r557 = (13.7 * y[1174] * y[547])/(1 + (y[1174] * y[547]))
    return (r555 + r557) - (0)
 
def C06156(t, y):
    r682 = (13.7 * y[1237] * y[561])/(1 + (y[1237] * y[561]))
    return (0) - (r682)
 
def C06193(t, y):
    r523 = (13.7 * y[1165] * y[562] * y[0])/(1 + (y[1165] * y[562] * y[0]))
    return (0) - (r523)
 
def C06249(t, y):
    r738 = (13.7 * y[1274] * y[545] * y[563])/(1 + (y[1274] * y[545] * y[563]))
    return (0) - (r738)
 
def C06250(t, y):
    r738 = (13.7 * y[1274] * y[545] * y[563])/(1 + (y[1274] * y[545] * y[563]))
    return (r738) - (0)
 
def C06393(t, y):
    r630 = (13.7 * y[1212] * y[565] * y[0])/(1 + (y[1212] * y[565] * y[0]))
    return (0) - (r630)
 
def C06397(t, y):
    r670 = (13.7 * y[1229] * y[566])/(1 + (y[1229] * y[566]))
    return (0) - (r670)
 
def C06398(t, y):
    r670 = (13.7 * y[1229] * y[566])/(1 + (y[1229] * y[566]))
    return (r670) - (0)
 
def C06406(t, y):
    r166 = (13.7 * y[1053] * y[18] * y[568])/(1 + (y[1053] * y[18] * y[568]))
    return (0) - (r166)
 
def C06407(t, y):
    r166 = (13.7 * y[1053] * y[18] * y[568])/(1 + (y[1053] * y[18] * y[568]))
    r168 = (13.7 * y[1054] * y[18] * y[569])/(1 + (y[1054] * y[18] * y[569]))
    return (r166) - (r168)
 
def C06416(t, y):
    r168 = (13.7 * y[1054] * y[18] * y[569])/(1 + (y[1054] * y[18] * y[569]))
    return (r168) - (0)
 
def C06423(t, y):
    r725 = (13.7 * y[1263] * y[1] * y[571] * y[719] )/(1 + (y[1263] * y[1] * y[571] * y[719] ))
    return (0) - (r725)
 
def C06481(t, y):
    r695 = (13.7 * y[1245] * y[1] * y[56] * y[649])/(1 + (y[1245] * y[1] * y[56] * y[649]))
    r511 = (13.7 * y[1161] * y[572] * y[485])/(1 + (y[1161] * y[572] * y[485]))
    return (r695) - (r511)
 
def C06482(t, y):
    r511 = (13.7 * y[1161] * y[572] * y[485])/(1 + (y[1161] * y[572] * y[485]))
    return (r511) - (0)
 
def C06547(t, y):
    r93 = (13.7 * y[1025] * y[313] * y[107] * y[67] * y[1] * y[0])/(1 + (y[1025] * y[313] * y[107] * y[67] * y[1] * y[0]))
    r100 = (13.7 * y[1025] * y[313] * y[107] * y[67] * y[1] * y[0])/(1 + (y[1025] * y[313] * y[107] * y[67] * y[1] * y[0]))
    return (r93 + r100) - (0)
 
def C06611(t, y):
    r7 = (13.7 * y[1010] * y[575] * y[2])/(1 + (y[1010] * y[575] * y[2]))
    return (0) - (r7)
 
def C06612(t, y):
    r8 = (13.7 * y[1010] * y[576] * y[2])/(1 + (y[1010] * y[576] * y[2]))
    return (0) - (r8)
 
def C06613(t, y):
    r7 = (13.7 * y[1010] * y[575] * y[2])/(1 + (y[1010] * y[575] * y[2]))
    return (r7) - (0)
 
def C06899(t, y):
    r19 = (13.7 * y[1010] * y[578] * y[3] * y[67])/(1 + (y[1010] * y[578] * y[3] * y[67]))
    return (0) - (r19)
 
def C07490(t, y):
    r19 = (13.7 * y[1010] * y[578] * y[3] * y[67])/(1 + (y[1010] * y[578] * y[3] * y[67]))
    return (r19) - (0)
 
def C07645(t, y):
    r11 = (13.7 * y[1010] * y[580] * y[3] * y[67])/(1 + (y[1010] * y[580] * y[3] * y[67]))
    return (0) - (r11)
 
def C07648(t, y):
    r313 = (13.7 * y[1093] * y[581] * y[94])/(1 + (y[1093] * y[581] * y[94]))
    return (0) - (r313)
 
def C07649(t, y):
    r301 = (13.7 * y[1086] * y[582] * y[94])/(1 + (y[1086] * y[582] * y[94]))
    return (0) - (r301)
 
def C07836(t, y):
    r676 = (13.7 * y[1234] * y[495])/(1 + (y[1234] * y[495]))
    return (r676) - (0)
 
def C07838(t, y):
    r525 = (13.7 * y[1166] * y[596] * y[0])/(1 + (y[1166] * y[596] * y[0]))
    return (r525) - (0)
 
def C08492(t, y):
    r15 = (13.7 * y[1010] * y[634] * y[3] * y[67])/(1 + (y[1010] * y[634] * y[3] * y[67]))
    return (r15) - (0)
 
def C11038(t, y):
    r381 = (13.7 * y[1131] * y[586] * y[1])/(1 + (y[1131] * y[586] * y[1]))
    return (0) - (r381)
 
def C11039(t, y):
    r381 = (13.7 * y[1131] * y[586] * y[1])/(1 + (y[1131] * y[586] * y[1]))
    r462 = (13.7 * y[1147] * y[587])/(1 + (y[1147] * y[587]))
    r468 = (13.7 * y[1147] * y[587])/(1 + (y[1147] * y[587]))
    r474 = (13.7 * y[1147] * y[587])/(1 + (y[1147] * y[587]))
    r480 = (13.7 * y[1147] * y[587])/(1 + (y[1147] * y[587]))
    r486 = (13.7 * y[1147] * y[587])/(1 + (y[1147] * y[587]))
    return (r381) - (r462 + r468 + r474 + r480 + r486)
 
def C11143(t, y):
    r150 = (13.7 * y[1049] * y[223] * y[251] * y[0])/(1 + (y[1049] * y[223] * y[251] * y[0]))
    r151 = (13.7 * y[1049] * y[223] * y[251] * y[0])/(1 + (y[1049] * y[223] * y[251] * y[0]))
    return (r150 + r151) - (0)
 
def C11434(t, y):
    r49 = (13.7 * y[1016] * y[589] * y[5])/(1 + (y[1016] * y[589] * y[5]))
    r441 = (13.7 * y[1145] * y[589] * y[54])/(1 + (y[1145] * y[589] * y[54]))
    return (0) - (r49 + r441)
 
def C11435(t, y):
    r441 = (13.7 * y[1145] * y[589] * y[54])/(1 + (y[1145] * y[589] * y[54]))
    r349 = (13.7 * y[1112] * y[590] * y[1])/(1 + (y[1112] * y[590] * y[1]))
    return (r441) - (r349)
 
def C11436(t, y):
    r349 = (13.7 * y[1112] * y[590] * y[1])/(1 + (y[1112] * y[590] * y[1]))
    return (r349) - (0)
 
def C11437(t, y):
    r49 = (13.7 * y[1016] * y[589] * y[5])/(1 + (y[1016] * y[589] * y[5]))
    r230 = (13.7 * y[1072] * y[21] * y[93])/(1 + (y[1072] * y[21] * y[93]))
    return (r49 + r230) - (0)
 
def C11439(t, y):
    r548 = (13.7 * y[1172] * y[593] * y[0])/(1 + (y[1172] * y[593] * y[0]))
    return (0) - (r548)
 
def C11440(t, y):
    r548 = (13.7 * y[1172] * y[593] * y[0])/(1 + (y[1172] * y[593] * y[0]))
    return (r548) - (0)
 
def C11453(t, y):
    r84 = (13.7 * y[1023] * y[595] * y[107])/(1 + (y[1023] * y[595] * y[107]))
    return (0) - (r84)
 
def C11472(t, y):
    r525 = (13.7 * y[1166] * y[596] * y[0])/(1 + (y[1166] * y[596] * y[0]))
    return (0) - (r525)
 
def C11475(t, y):
    r174 = (13.7 * y[1060] * y[438] * y[368])/(1 + (y[1060] * y[438] * y[368]))
    return (r174) - (0)
 
def C11539(t, y):
    r167 = (13.7 * y[1053] * y[598] * y[18])/(1 + (y[1053] * y[598] * y[18]))
    return (0) - (r167)
 
def C11540(t, y):
    r167 = (13.7 * y[1053] * y[598] * y[18])/(1 + (y[1053] * y[598] * y[18]))
    return (r167) - (0)
 
def C11811(t, y):
    r84 = (13.7 * y[1023] * y[595] * y[107])/(1 + (y[1023] * y[595] * y[107]))
    r86 = (13.7 * y[1024] * y[143] * y[108] * y[0])/(1 + (y[1024] * y[143] * y[108] * y[0]))
    r85 = (13.7 * y[1024] * y[600] * y[107] * y[67])/(1 + (y[1024] * y[600] * y[107] * y[67]))
    return (r84 + r86) - (r85)
 
def C11823(t, y):
    r648 = (13.7 * y[1215] * y[484])/(1 + (y[1215] * y[484]))
    return (r648) - (0)
 
def C11907(t, y):
    r609 = (13.7 * y[1204] * y[253])/(1 + (y[1204] * y[253]))
    r666 = (13.7 * y[1227] * y[602])/(1 + (y[1227] * y[602]))
    return (r609) - (r666)
 
def C12214(t, y):
    r191 = (13.7 * y[1069] * y[603] * y[92])/(1 + (y[1069] * y[603] * y[92]))
    return (0) - (r191)
 
def C12215(t, y):
    r191 = (13.7 * y[1069] * y[603] * y[92])/(1 + (y[1069] * y[603] * y[92]))
    return (r191) - (0)
 
def C13378(t, y):
    r192 = (13.7 * y[1069] * y[140] * y[59])/(1 + (y[1069] * y[140] * y[59]))
    r193 = (13.7 * y[1069] * y[495] * y[59])/(1 + (y[1069] * y[495] * y[59]))
    return (r192 + r193) - (0)
 
def C14089(t, y):
    r9 = (13.7 * y[1010] * y[606] * y[2])/(1 + (y[1010] * y[606] * y[2]))
    return (0) - (r9)
 
def C14090(t, y):
    r9 = (13.7 * y[1010] * y[606] * y[2])/(1 + (y[1010] * y[606] * y[2]))
    return (r9) - (0)
 
def C14099(t, y):
    r10 = (13.7 * y[1010] * y[372] * y[2])/(1 + (y[1010] * y[372] * y[2]))
    return (r10) - (0)
 
def C14463(t, y):
    r57 = (13.7 * y[1018] * y[552] * y[5])/(1 + (y[1018] * y[552] * y[5]))
    r58 = (13.7 * y[1018] * y[551])/(1 + (y[1018] * y[551]))
    return (r57 + r58) - (0)
 
def C14818(t, y):
    r504 = (13.7 * y[1158] * y[629] * y[716] * y[18] * y[714] * y[67])/(1 + (y[1158] * y[629] * y[716] * y[18] * y[714] * y[67]))
    r505 = (13.7 * y[1158] * y[721] * y[716] * y[18] * y[714] * y[67])/(1 + (y[1158] * y[721] * y[716] * y[18] * y[714] * y[67]))
    r506 = (13.7 * y[1158] * y[720] * y[716] * y[18] * y[714] * y[67])/(1 + (y[1158] * y[720] * y[716] * y[18] * y[714] * y[67]))
    return (r504 + r505 + r506) - (0)
 
def C15489(t, y):
    r112 = (13.7 * y[1033] * y[1286] * y[9] * y[108])/(1 + (y[1033] * y[1286] * y[9] * y[108]))
    return (r112) - (0)
 
def C15527(t, y):
    r162 = (13.7 * y[1051] * y[18] * y[272])/(1 + (y[1051] * y[18] * y[272]))
    r163 = (13.7 * y[1051] * y[18] * y[612])/(1 + (y[1051] * y[18] * y[612]))
    return (r162) - (r163)
 
def C15556(t, y):
    r593 = (13.7 * y[1194] * y[129])/(1 + (y[1194] * y[129]))
    r594 = (13.7 * y[1194] * y[129])/(1 + (y[1194] * y[129]))
    r337 = (13.7 * y[1105] * y[470] * y[613])/(1 + (y[1105] * y[470] * y[613]))
    return (r593 + r594) - (r337)
 
def C15586(t, y):
    r289 = (13.7 * y[1085] * y[614] * y[8])/(1 + (y[1085] * y[614] * y[8]))
    return (0) - (r289)
 
def C15587(t, y):
    r289 = (13.7 * y[1085] * y[614] * y[8])/(1 + (y[1085] * y[614] * y[8]))
    r294 = (13.7 * y[1085] * y[689] * y[8])/(1 + (y[1085] * y[689] * y[8]))
    return (r289 + r294) - (0)
 
def C15602(t, y):
    r60 = (13.7 * y[1019] * y[75] * y[616])/(1 + (y[1019] * y[75] * y[616]))
    r63 = (13.7 * y[1019] * y[75] * y[616])/(1 + (y[1019] * y[75] * y[616]))
    r66 = (13.7 * y[1019] * y[75] * y[616])/(1 + (y[1019] * y[75] * y[616]))
    return (0) - (r60 + r63 + r66)
 
def C15603(t, y):
    r60 = (13.7 * y[1019] * y[75] * y[616])/(1 + (y[1019] * y[75] * y[616]))
    r63 = (13.7 * y[1019] * y[75] * y[616])/(1 + (y[1019] * y[75] * y[616]))
    r66 = (13.7 * y[1019] * y[75] * y[616])/(1 + (y[1019] * y[75] * y[616]))
    return (r60 + r63 + r66) - (0)
 
def C15653(t, y):
    r149 = (13.7 * y[1048] * y[380] * y[175] * y[0])/(1 + (y[1048] * y[380] * y[175] * y[0]))
    return (r149) - (0)
 
def C15667(t, y):
    r690 = (13.7 * y[1242] * y[619])/(1 + (y[1242] * y[619]))
    return (0) - (r690)
 
def C15809(t, y):
    r596 = (13.7 * y[1196] * y[69] * y[18] * y[28])/(1 + (y[1196] * y[69] * y[18] * y[28]))
    return (r596) - (0)
 
def C15811(t, y):
    r503 = (13.7 * y[1157] * y[622] * y[368])/(1 + (y[1157] * y[622] * y[368]))
    r501 = (13.7 * y[1157] * y[621] * y[78])/(1 + (y[1157] * y[621] * y[78]))
    return (r503) - (r501)
 
def C15812(t, y):
    r501 = (13.7 * y[1157] * y[621] * y[78])/(1 + (y[1157] * y[621] * y[78]))
    r503 = (13.7 * y[1157] * y[622] * y[368])/(1 + (y[1157] * y[622] * y[368]))
    return (r501) - (r503)
 
def C15972(t, y):
    r141 = (13.7 * y[1045] * y[624] * y[2])/(1 + (y[1045] * y[624] * y[2]))
    r722 = (13.7 * y[1263] * y[1] * y[633] * y[719])/(1 + (y[1263] * y[1] * y[633] * y[719]))
    return (r141 + r722) - (0)
 
def C15973(t, y):
    r505 = (13.7 * y[1158] * y[721] * y[716] * y[18] * y[714] * y[67])/(1 + (y[1158] * y[721] * y[716] * y[18] * y[714] * y[67]))
    r141 = (13.7 * y[1045] * y[624] * y[2])/(1 + (y[1045] * y[624] * y[2]))
    return (r505) - (r141)
 
def C15996(t, y):
    r136 = (13.7 * y[1043] * y[652] * y[5])/(1 + (y[1043] * y[652] * y[5]))
    r743 = (13.7 * y[1277] * y[678] * y[13] * y[1])/(1 + (y[1277] * y[678] * y[13] * y[1]))
    return (r136 + r743) - (0)
 
def C15999(t, y):
    r148 = (13.7 * y[1047] * y[61] * y[175] * y[0])/(1 + (y[1047] * y[61] * y[175] * y[0]))
    return (r148) - (0)
 
def C16219(t, y):
    r243 = (13.7 * y[1075] * y[534] * y[287])/(1 + (y[1075] * y[534] * y[287]))
    r254 = (13.7 * y[1075] * y[534] * y[287])/(1 + (y[1075] * y[534] * y[287]))
    r28 = (13.7 * y[1011] * y[627] * y[4] * y[67])/(1 + (y[1011] * y[627] * y[4] * y[67]))
    r39 = (13.7 * y[1011] * y[627] * y[4] * y[67])/(1 + (y[1011] * y[627] * y[4] * y[67]))
    return (r243 + r254) - (r28 + r39)
 
def C16220(t, y):
    r28 = (13.7 * y[1011] * y[627] * y[4] * y[67])/(1 + (y[1011] * y[627] * y[4] * y[67]))
    r39 = (13.7 * y[1011] * y[627] * y[4] * y[67])/(1 + (y[1011] * y[627] * y[4] * y[67]))
    return (r28 + r39) - (0)
 
def C16236(t, y):
    r257 = (13.7 * y[1076] * y[522] * y[632])/(1 + (y[1076] * y[522] * y[632]))
    r504 = (13.7 * y[1158] * y[629] * y[716] * y[18] * y[714] * y[67])/(1 + (y[1158] * y[629] * y[716] * y[18] * y[714] * y[67]))
    return (r257) - (r504)
 
def C16237(t, y):
    r139 = (13.7 * y[1045] * y[654] * y[2])/(1 + (y[1045] * y[654] * y[2]))
    r720 = (13.7 * y[1263] * y[1] * y[633] * y[632])/(1 + (y[1263] * y[1] * y[633] * y[632]))
    r724 = (13.7 * y[1263] * y[631] * y[632])/(1 + (y[1263] * y[631] * y[632]))
    return (r139 + r720 + r724) - (0)
 
def C16238(t, y):
    r723 = (13.7 * y[1263] * y[1] * y[633])/(1 + (y[1263] * y[1] * y[633]))
    r724 = (13.7 * y[1263] * y[631] * y[632])/(1 + (y[1263] * y[631] * y[632]))
    return (r723) - (r724)
 
def C16240(t, y):
    r257 = (13.7 * y[1076] * y[522] * y[632])/(1 + (y[1076] * y[522] * y[632]))
    r720 = (13.7 * y[1263] * y[1] * y[633] * y[632])/(1 + (y[1263] * y[1] * y[633] * y[632]))
    r724 = (13.7 * y[1263] * y[631] * y[632])/(1 + (y[1263] * y[631] * y[632]))
    return (0) - (r257 + r720 + r724)
 
def C16241(t, y):
    r720 = (13.7 * y[1263] * y[1] * y[633] * y[632])/(1 + (y[1263] * y[1] * y[633] * y[632]))
    r721 = (13.7 * y[1263] * y[1] * y[633] * y[718])/(1 + (y[1263] * y[1] * y[633] * y[718]))
    r722 = (13.7 * y[1263] * y[1] * y[633] * y[719])/(1 + (y[1263] * y[1] * y[633] * y[719]))
    r723 = (13.7 * y[1263] * y[1] * y[633])/(1 + (y[1263] * y[1] * y[633]))
    return (0) - (r720 + r721 + r722 + r723)
 
def C16310(t, y):
    r15 = (13.7 * y[1010] * y[634] * y[3] * y[67])/(1 + (y[1010] * y[634] * y[3] * y[67]))
    return (0) - (r15)
 
def C16348(t, y):
    r8 = (13.7 * y[1010] * y[576] * y[2])/(1 + (y[1010] * y[576] * y[2]))
    return (r8) - (0)
 
def C16396(t, y):
    r108 = (13.7 * y[1031] * y[636])/(1 + (y[1031] * y[636]))
    return (0) - (r108)
 
def C16399(t, y):
    r108 = (13.7 * y[1031] * y[636])/(1 + (y[1031] * y[636]))
    return (r108) - (0)
 
def C16463(t, y):
    r442 = (13.7 * y[1146] * y[38])/(1 + (y[1146] * y[38]))
    r443 = (13.7 * y[1146] * y[38])/(1 + (y[1146] * y[38]))
    r444 = (13.7 * y[1146] * y[38])/(1 + (y[1146] * y[38]))
    r445 = (13.7 * y[1146] * y[38])/(1 + (y[1146] * y[38]))
    r446 = (13.7 * y[1146] * y[38])/(1 + (y[1146] * y[38]))
    r447 = (13.7 * y[1146] * y[38])/(1 + (y[1146] * y[38]))
    r448 = (13.7 * y[1146] * y[38])/(1 + (y[1146] * y[38]))
    r449 = (13.7 * y[1146] * y[38])/(1 + (y[1146] * y[38]))
    r450 = (13.7 * y[1146] * y[38])/(1 + (y[1146] * y[38]))
    r451 = (13.7 * y[1146] * y[38])/(1 + (y[1146] * y[38]))
    r452 = (13.7 * y[1146] * y[38])/(1 + (y[1146] * y[38]))
    r453 = (13.7 * y[1146] * y[38])/(1 + (y[1146] * y[38]))
    r454 = (13.7 * y[1146] * y[38])/(1 + (y[1146] * y[38]))
    r455 = (13.7 * y[1146] * y[38])/(1 + (y[1146] * y[38]))
    r456 = (13.7 * y[1146] * y[38])/(1 + (y[1146] * y[38]))
    return (r442 + r443 + r444 + r445 + r446 + r447 + r448 + r449 + r450 + r451 + r452 + r453 + r454 + r455 + r456) - (0)
 
def C16551(t, y):
    r11 = (13.7 * y[1010] * y[580] * y[3] * y[67])/(1 + (y[1010] * y[580] * y[3] * y[67]))
    return (r11) - (0)
 
def C16586(t, y):
    r12 = (13.7 * y[1010] * y[640] * y[2])/(1 + (y[1010] * y[640] * y[2]))
    return (0) - (r12)
 
def C16587(t, y):
    r12 = (13.7 * y[1010] * y[640] * y[2])/(1 + (y[1010] * y[640] * y[2]))
    return (r12) - (0)
 
def C16595(t, y):
    r17 = (13.7 * y[1010] * y[642] * y[2])/(1 + (y[1010] * y[642] * y[2]))
    return (0) - (r17)
 
def C16596(t, y):
    r17 = (13.7 * y[1010] * y[642] * y[2])/(1 + (y[1010] * y[642] * y[2]))
    return (r17) - (0)
 
def C16614(t, y):
    r312 = (13.7 * y[1093] * y[644] * y[94])/(1 + (y[1093] * y[644] * y[94]))
    return (0) - (r312)
 
def C16615(t, y):
    r312 = (13.7 * y[1093] * y[644] * y[94])/(1 + (y[1093] * y[644] * y[94]))
    return (r312) - (0)
 
def C16618(t, y):
    r45 = (13.7 * y[1014] * y[465] * y[2] * y[0])/(1 + (y[1014] * y[465] * y[2] * y[0]))
    r751 = (13.7 * y[1281] * y[646] * y[1] * y[55] * y[0])/(1 + (y[1281] * y[646] * y[1] * y[55] * y[0]))
    return (r45) - (r751)
 
def C16619(t, y):
    r313 = (13.7 * y[1093] * y[581] * y[94])/(1 + (y[1093] * y[581] * y[94]))
    r751 = (13.7 * y[1281] * y[646] * y[1] * y[55] * y[0])/(1 + (y[1281] * y[646] * y[1] * y[55] * y[0]))
    return (r313 + r751) - (0)
 
def C16634(t, y):
    r301 = (13.7 * y[1086] * y[582] * y[94])/(1 + (y[1086] * y[582] * y[94]))
    return (r301) - (0)
 
def C16636(t, y):
    r695 = (13.7 * y[1245] * y[1] * y[56] * y[649])/(1 + (y[1245] * y[1] * y[56] * y[649]))
    return (0) - (r695)
 
def C16663(t, y):
    r76 = (13.7 * y[1021] * y[434] * y[651] * y[0])/(1 + (y[1021] * y[434] * y[651] * y[0]))
    return (r76) - (0)
 
def C16664(t, y):
    r76 = (13.7 * y[1021] * y[434] * y[651] * y[0])/(1 + (y[1021] * y[434] * y[651] * y[0]))
    return (0) - (r76)
 
def C16675(t, y):
    r136 = (13.7 * y[1043] * y[652] * y[5])/(1 + (y[1043] * y[652] * y[5]))
    r307 = (13.7 * y[1092] * y[338] * y[652])/(1 + (y[1092] * y[338] * y[652]))
    return (0) - (r136 + r307)
 
def C16739(t, y):
    r281 = (13.7 * y[1082] * y[339] * y[653])/(1 + (y[1082] * y[339] * y[653]))
    return (0) - (r281)
 
def C16832(t, y):
    r504 = (13.7 * y[1158] * y[629] * y[716] * y[18] * y[714] * y[67])/(1 + (y[1158] * y[629] * y[716] * y[18] * y[714] * y[67]))
    r139 = (13.7 * y[1045] * y[654] * y[2])/(1 + (y[1045] * y[654] * y[2]))
    return (r504) - (r139)
 
def C16848(t, y):
    r194 = (13.7 * y[1070] * y[198] * y[655])/(1 + (y[1070] * y[198] * y[655]))
    return (0) - (r194)
 
def C16849(t, y):
    r194 = (13.7 * y[1070] * y[198] * y[655])/(1 + (y[1070] * y[198] * y[655]))
    return (r194) - (0)
 
def C16850(t, y):
    r194 = (13.7 * y[1070] * y[198] * y[655])/(1 + (y[1070] * y[198] * y[655]))
    return (r194) - (0)
 
def C16999(t, y):
    r526 = (13.7 * y[1167] * y[658] * y[0] )/(1 + (y[1167] * y[658] * y[0] ))
    return (0) - (r526)
 
def C17010(t, y):
    r526 = (13.7 * y[1167] * y[658] * y[0] )/(1 + (y[1167] * y[658] * y[0] ))
    return (r526) - (0)
 
def C17023(t, y):
    r500 = (13.7 * y[1156] * y[335] * y[660] * y[18] * y[491] * y[67])/(1 + (y[1156] * y[335] * y[660] * y[18] * y[491] * y[67]))
    r507 = (13.7 * y[1159] * y[453] * y[660] * y[18])/(1 + (y[1159] * y[453] * y[660] * y[18]))
    r508 = (13.7 * y[1159] * y[453] * y[660] * y[18])/(1 + (y[1159] * y[453] * y[660] * y[18]))
    r510 = (13.7 * y[1160] * y[696] * y[660] * y[18] * y[28])/(1 + (y[1160] * y[696] * y[660] * y[18] * y[28]))
    return (0) - (r500 + r507 + r508 + r510)
 
def C17234(t, y):
    r644 = (13.7 * y[1214] * y[661])/(1 + (y[1214] * y[661]))
    return (0) - (r644)
 
def C17324(t, y):
    r258 = (13.7 * y[1077] * y[691] * y[662])/(1 + (y[1077] * y[691] * y[662]))
    r259 = (13.7 * y[1077] * y[691] * y[662])/(1 + (y[1077] * y[691] * y[662]))
    r336 = (13.7 * y[1104] * y[143] * y[662])/(1 + (y[1104] * y[143] * y[662]))
    r562 = (13.7 * y[1179] * y[662] * y[0])/(1 + (y[1179] * y[662] * y[0]))
    return (0) - (r258 + r259 + r336 + r562)
 
def C17556(t, y):
    r566 = (13.7 * y[1182] * y[457] * y[0])/(1 + (y[1182] * y[457] * y[0]))
    r494 = (13.7 * y[1151] * y[469] * y[663])/(1 + (y[1151] * y[469] * y[663]))
    r495 = (13.7 * y[1151] * y[479] * y[663])/(1 + (y[1151] * y[479] * y[663]))
    return (r566) - (r494 + r495)
 
def C18096(t, y):
    r679 = (13.7 * y[1235] * y[373])/(1 + (y[1235] * y[373]))
    return (r679) - (0)
 
def C18172(t, y):
    r585 = (13.7 * y[1191] * y[665])/(1 + (y[1191] * y[665]))
    return (0) - (r585)
 
def C18174(t, y):
    r586 = (13.7 * y[1191] * y[666])/(1 + (y[1191] * y[666]))
    return (0) - (r586)
 
def C18239(t, y):
    r660 = (13.7 * y[1222] * y[705] * y[0] )/(1 + (y[1222] * y[705] * y[0] ))
    return (r660) - (0)
 
def C18902(t, y):
    r146 = (13.7 * y[1046] * y[4] * y[67] * y[668])/(1 + (y[1046] * y[4] * y[67] * y[668]))
    return (0) - (r146)
 
def C19647(t, y):
    r316 = (13.7 * y[1095] * y[18] * y[687])/(1 + (y[1095] * y[18] * y[687]))
    return (r316) - (0)
 
def C19673(t, y):
    r171 = (13.7 * y[1057] * y[18] * y[287])/(1 + (y[1057] * y[18] * y[287]))
    r244 = (13.7 * y[1075] * y[670] * y[287])/(1 + (y[1075] * y[670] * y[287]))
    r255 = (13.7 * y[1075] * y[670] * y[287])/(1 + (y[1075] * y[670] * y[287]))
    return (r171) - (r244 + r255)
 
def C19722(t, y):
    r739 = (13.7 * y[1275] * y[671] * y[41] * y[1])/(1 + (y[1275] * y[671] * y[41] * y[1]))
    return (0) - (r739)
 
def C19723(t, y):
    r739 = (13.7 * y[1275] * y[671] * y[41] * y[1])/(1 + (y[1275] * y[671] * y[41] * y[1]))
    return (r739) - (0)
 
def C19878(t, y):
    r677 = (13.7 * y[1234] * y[495])/(1 + (y[1234] * y[495]))
    return (r677) - (0)
 
def C19882(t, y):
    r675 = (13.7 * y[1234] * y[495])/(1 + (y[1234] * y[495]))
    return (r675) - (0)
 
def C20239(t, y):
    r591 = (13.7 * y[1193] * y[480] * y[0])/(1 + (y[1193] * y[480] * y[0]))
    r592 = (13.7 * y[1193] * y[480] * y[0])/(1 + (y[1193] * y[480] * y[0]))
    r658 = (13.7 * y[1220] * y[675])/(1 + (y[1220] * y[675]))
    return (r591 + r592) - (r658)
 
def C20246(t, y):
    r321 = (13.7 * y[1097] * y[473] * y[676])/(1 + (y[1097] * y[473] * y[676]))
    return (0) - (r321)
 
def C20247(t, y):
    r320 = (13.7 * y[1097] * y[473] * y[677])/(1 + (y[1097] * y[473] * y[677]))
    return (0) - (r320)
 
def C20248(t, y):
    r743 = (13.7 * y[1277] * y[678] * y[13] * y[1])/(1 + (y[1277] * y[678] * y[13] * y[1]))
    return (0) - (r743)
 
def C20258(t, y):
    r69 = (13.7 * y[1020] * y[426] * y[2] * y[0])/(1 + (y[1020] * y[426] * y[2] * y[0]))
    r70 = (13.7 * y[1020] * y[426] * y[5] * y[0])/(1 + (y[1020] * y[426] * y[5] * y[0]))
    r657 = (13.7 * y[1219] * y[198] * y[21])/(1 + (y[1219] * y[198] * y[21]))
    return (r69 + r70 + r657) - (0)
 
def C20372(t, y):
    r244 = (13.7 * y[1075] * y[670] * y[287])/(1 + (y[1075] * y[670] * y[287]))
    r255 = (13.7 * y[1075] * y[670] * y[287])/(1 + (y[1075] * y[670] * y[287]))
    r29 = (13.7 * y[1011] * y[680] * y[4] * y[67])/(1 + (y[1011] * y[680] * y[4] * y[67]))
    r40 = (13.7 * y[1011] * y[680] * y[4] * y[67])/(1 + (y[1011] * y[680] * y[4] * y[67]))
    return (r244 + r255) - (r29 + r40)
 
def C20373(t, y):
    r29 = (13.7 * y[1011] * y[680] * y[4] * y[67])/(1 + (y[1011] * y[680] * y[4] * y[67]))
    r40 = (13.7 * y[1011] * y[680] * y[4] * y[67])/(1 + (y[1011] * y[680] * y[4] * y[67]))
    r621 = (13.7 * y[1207] * y[681])/(1 + (y[1207] * y[681]))
    return (r29 + r40) - (r621)
 
def C20374(t, y):
    r621 = (13.7 * y[1207] * y[681])/(1 + (y[1207] * y[681]))
    return (r621) - (0)
 
def C20375(t, y):
    r245 = (13.7 * y[1075] * y[683] * y[287])/(1 + (y[1075] * y[683] * y[287]))
    r256 = (13.7 * y[1075] * y[683] * y[287])/(1 + (y[1075] * y[683] * y[287]))
    return (0) - (r245 + r256)
 
def C20376(t, y):
    r245 = (13.7 * y[1075] * y[683] * y[287])/(1 + (y[1075] * y[683] * y[287]))
    r256 = (13.7 * y[1075] * y[683] * y[287])/(1 + (y[1075] * y[683] * y[287]))
    r30 = (13.7 * y[1011] * y[684] * y[4] * y[67])/(1 + (y[1011] * y[684] * y[4] * y[67]))
    r41 = (13.7 * y[1011] * y[684] * y[4] * y[67])/(1 + (y[1011] * y[684] * y[4] * y[67]))
    return (r245 + r256) - (r30 + r41)
 
def C20377(t, y):
    r30 = (13.7 * y[1011] * y[684] * y[4] * y[67])/(1 + (y[1011] * y[684] * y[4] * y[67]))
    r41 = (13.7 * y[1011] * y[684] * y[4] * y[67])/(1 + (y[1011] * y[684] * y[4] * y[67]))
    r622 = (13.7 * y[1207] * y[685])/(1 + (y[1207] * y[685]))
    return (r30 + r41) - (r622)
 
def C20378(t, y):
    r622 = (13.7 * y[1207] * y[685])/(1 + (y[1207] * y[685]))
    return (r622) - (0)
 
def C20446(t, y):
    r307 = (13.7 * y[1092] * y[338] * y[652])/(1 + (y[1092] * y[338] * y[652]))
    r316 = (13.7 * y[1095] * y[18] * y[687])/(1 + (y[1095] * y[18] * y[687]))
    return (r307) - (r316)
 
def C20451(t, y):
    r562 = (13.7 * y[1179] * y[662] * y[0])/(1 + (y[1179] * y[662] * y[0]))
    return (r562) - (0)
 
def C20463(t, y):
    r294 = (13.7 * y[1085] * y[689] * y[8])/(1 + (y[1085] * y[689] * y[8]))
    return (0) - (r294)
 
def C20565(t, y):
    r492 = (13.7 * y[1149] * y[1])/(1 + (y[1149] * y[1]))
    return (r492) - (0)
 
def C20641(t, y):
    r258 = (13.7 * y[1077] * y[691] * y[662])/(1 + (y[1077] * y[691] * y[662]))
    r259 = (13.7 * y[1077] * y[691] * y[662])/(1 + (y[1077] * y[691] * y[662]))
    return (0) - (r258 + r259)
 
def C20648(t, y):
    r170 = (13.7 * y[1056] * y[18] * y[692])/(1 + (y[1056] * y[18] * y[692]))
    return (0) - (r170)
 
def C20751(t, y):
    r258 = (13.7 * y[1077] * y[691] * y[662])/(1 + (y[1077] * y[691] * y[662]))
    r259 = (13.7 * y[1077] * y[691] * y[662])/(1 + (y[1077] * y[691] * y[662]))
    return (r258 + r259) - (0)
 
def C20753(t, y):
    r507 = (13.7 * y[1159] * y[453] * y[660] * y[18])/(1 + (y[1159] * y[453] * y[660] * y[18]))
    r509 = (13.7 * y[1159] * y[695] * y[18])/(1 + (y[1159] * y[695] * y[18]))
    return (r507 + r509) - (0)
 
def C20755(t, y):
    r508 = (13.7 * y[1159] * y[453] * y[660] * y[18])/(1 + (y[1159] * y[453] * y[660] * y[18]))
    r509 = (13.7 * y[1159] * y[695] * y[18])/(1 + (y[1159] * y[695] * y[18]))
    return (r508) - (r509)
 
def C20756(t, y):
    r510 = (13.7 * y[1160] * y[696] * y[660] * y[18] * y[28])/(1 + (y[1160] * y[696] * y[660] * y[18] * y[28]))
    return (0) - (r510)
 
def C20758(t, y):
    r510 = (13.7 * y[1160] * y[696] * y[660] * y[18] * y[28])/(1 + (y[1160] * y[696] * y[660] * y[18] * y[28]))
    return (r510) - (0)
 
def C20796(t, y):
    r170 = (13.7 * y[1056] * y[18] * y[692])/(1 + (y[1056] * y[18] * y[692]))
    return (r170) - (0)
 
def C20858(t, y):
    r173 = (13.7 * y[1059] * y[361] * y[18])/(1 + (y[1059] * y[361] * y[18]))
    return (r173) - (0)
 
def C20864(t, y):
    r416 = (13.7 * y[1144] * y[130])/(1 + (y[1144] * y[130]))
    r422 = (13.7 * y[1144] * y[130])/(1 + (y[1144] * y[130]))
    r428 = (13.7 * y[1144] * y[130])/(1 + (y[1144] * y[130]))
    r434 = (13.7 * y[1144] * y[130])/(1 + (y[1144] * y[130]))
    r440 = (13.7 * y[1144] * y[130])/(1 + (y[1144] * y[130]))
    return (r416 + r422 + r428 + r434 + r440) - (0)
 
def C20904(t, y):
    r635 = (13.7 * y[1213] * y[346])/(1 + (y[1213] * y[346]))
    r640 = (13.7 * y[1213] * y[346])/(1 + (y[1213] * y[346]))
    r634 = (13.7 * y[1213] * y[701] * y[0])/(1 + (y[1213] * y[701] * y[0]))
    r639 = (13.7 * y[1213] * y[701] * y[0])/(1 + (y[1213] * y[701] * y[0]))
    return (r635 + r640) - (r634 + r639)
 
def C20905(t, y):
    r644 = (13.7 * y[1214] * y[661])/(1 + (y[1214] * y[661]))
    r643 = (13.7 * y[1214] * y[702] * y[0])/(1 + (y[1214] * y[702] * y[0]))
    return (r644) - (r643)
 
def C20969(t, y):
    r758 = (13.7 * y[1283] * y[1] * y[165])/(1 + (y[1283] * y[1] * y[165]))
    r764 = (13.7 * y[1283] * y[1] * y[165])/(1 + (y[1283] * y[1] * y[165]))
    r759 = (13.7 * y[1283] * y[13] * y[703])/(1 + (y[1283] * y[13] * y[703]))
    r765 = (13.7 * y[1283] * y[13] * y[703])/(1 + (y[1283] * y[13] * y[703]))
    return (r758 + r764) - (r759 + r765)
 
def C21031(t, y):
    r462 = (13.7 * y[1147] * y[587])/(1 + (y[1147] * y[587]))
    r468 = (13.7 * y[1147] * y[587])/(1 + (y[1147] * y[587]))
    r474 = (13.7 * y[1147] * y[587])/(1 + (y[1147] * y[587]))
    r480 = (13.7 * y[1147] * y[587])/(1 + (y[1147] * y[587]))
    r486 = (13.7 * y[1147] * y[587])/(1 + (y[1147] * y[587]))
    return (r462 + r468 + r474 + r480 + r486) - (0)
 
def C21310(t, y):
    r597 = (13.7 * y[1197] * y[38] * y[18] * y[28])/(1 + (y[1197] * y[38] * y[18] * y[28]))
    r660 = (13.7 * y[1222] * y[705] * y[0] )/(1 + (y[1222] * y[705] * y[0] ))
    return (r597) - (r660)
 
def C21386(t, y):
    r281 = (13.7 * y[1082] * y[339] * y[653])/(1 + (y[1082] * y[339] * y[653]))
    return (r281) - (0)
 
def C21387(t, y):
    r280 = (13.7 * y[1082] * y[339] * y[708])/(1 + (y[1082] * y[339] * y[708]))
    return (r280) - (0)
 
def C21388(t, y):
    r280 = (13.7 * y[1082] * y[339] * y[708])/(1 + (y[1082] * y[339] * y[708]))
    return (0) - (r280)
 
def C21440(t, y):
    r502 = (13.7 * y[1157] * y[78] * y[368])/(1 + (y[1157] * y[78] * y[368]))
    r503 = (13.7 * y[1157] * y[622] * y[368])/(1 + (y[1157] * y[622] * y[368]))
    return (r502 + r503) - (0)
 
def C21748(t, y):
    r78 = (13.7 * y[1021] * y[712] * y[175] * y[0])/(1 + (y[1021] * y[712] * y[175] * y[0]))
    r393 = (13.7 * y[1131] * y[1] * y[710])/(1 + (y[1131] * y[1] * y[710]))
    return (r78) - (r393)
 
def C21749(t, y):
    r393 = (13.7 * y[1131] * y[1] * y[710])/(1 + (y[1131] * y[1] * y[710]))
    return (r393) - (0)
 
def C21750(t, y):
    r78 = (13.7 * y[1021] * y[712] * y[175] * y[0])/(1 + (y[1021] * y[712] * y[175] * y[0]))
    r394 = (13.7 * y[1131] * y[1] * y[712])/(1 + (y[1131] * y[1] * y[712]))
    return (0) - (r78 + r394)
 
def C21751(t, y):
    r394 = (13.7 * y[1131] * y[1] * y[712])/(1 + (y[1131] * y[1] * y[712]))
    r565 = (13.7 * y[1181] * y[713] * y[0])/(1 + (y[1181] * y[713] * y[0]))
    return (r394) - (r565)
 
def C22150(t, y):
    r504 = (13.7 * y[1158] * y[629] * y[716] * y[18] * y[714] * y[67])/(1 + (y[1158] * y[629] * y[716] * y[18] * y[714] * y[67]))
    r505 = (13.7 * y[1158] * y[721] * y[716] * y[18] * y[714] * y[67])/(1 + (y[1158] * y[721] * y[716] * y[18] * y[714] * y[67]))
    r506 = (13.7 * y[1158] * y[720] * y[716] * y[18] * y[714] * y[67])/(1 + (y[1158] * y[720] * y[716] * y[18] * y[714] * y[67]))
    return (0) - (r504 + r505 + r506)
 
def C22151(t, y):
    r504 = (13.7 * y[1158] * y[629] * y[716] * y[18] * y[714] * y[67])/(1 + (y[1158] * y[629] * y[716] * y[18] * y[714] * y[67]))
    r505 = (13.7 * y[1158] * y[721] * y[716] * y[18] * y[714] * y[67])/(1 + (y[1158] * y[721] * y[716] * y[18] * y[714] * y[67]))
    r506 = (13.7 * y[1158] * y[720] * y[716] * y[18] * y[714] * y[67])/(1 + (y[1158] * y[720] * y[716] * y[18] * y[714] * y[67]))
    return (r504 + r505 + r506) - (0)
 
def C22154(t, y):
    r504 = (13.7 * y[1158] * y[629] * y[716] * y[18] * y[714] * y[67])/(1 + (y[1158] * y[629] * y[716] * y[18] * y[714] * y[67]))
    r505 = (13.7 * y[1158] * y[721] * y[716] * y[18] * y[714] * y[67])/(1 + (y[1158] * y[721] * y[716] * y[18] * y[714] * y[67]))
    r506 = (13.7 * y[1158] * y[720] * y[716] * y[18] * y[714] * y[67])/(1 + (y[1158] * y[720] * y[716] * y[18] * y[714] * y[67]))
    return (0) - (r504 + r505 + r506)
 
def C22155(t, y):
    r504 = (13.7 * y[1158] * y[629] * y[716] * y[18] * y[714] * y[67])/(1 + (y[1158] * y[629] * y[716] * y[18] * y[714] * y[67]))
    r505 = (13.7 * y[1158] * y[721] * y[716] * y[18] * y[714] * y[67])/(1 + (y[1158] * y[721] * y[716] * y[18] * y[714] * y[67]))
    r506 = (13.7 * y[1158] * y[720] * y[716] * y[18] * y[714] * y[67])/(1 + (y[1158] * y[720] * y[716] * y[18] * y[714] * y[67]))
    return (r504 + r505 + r506) - (0)
 
def C22157(t, y):
    r721 = (13.7 * y[1263] * y[1] * y[633] * y[718])/(1 + (y[1263] * y[1] * y[633] * y[718]))
    return (0) - (r721)
 
def C22158(t, y):
    r722 = (13.7 * y[1263] * y[1] * y[633] * y[719])/(1 + (y[1263] * y[1] * y[633] * y[719]))
    r725 = (13.7 * y[1263] * y[1] * y[571] * y[719] )/(1 + (y[1263] * y[1] * y[571] * y[719] ))
    return (0) - (r722 + r725)
 
def C22159(t, y):
    r506 = (13.7 * y[1158] * y[720] * y[716] * y[18] * y[714] * y[67])/(1 + (y[1158] * y[720] * y[716] * y[18] * y[714] * y[67]))
    return (0) - (r506)
 
def C22160(t, y):
    r725 = (13.7 * y[1263] * y[1] * y[571] * y[719] )/(1 + (y[1263] * y[1] * y[571] * y[719] ))
    r505 = (13.7 * y[1158] * y[721] * y[716] * y[18] * y[714] * y[67])/(1 + (y[1158] * y[721] * y[716] * y[18] * y[714] * y[67]))
    return (r725) - (r505)
 
def C22395(t, y):
    r652 = (13.7 * y[1217] * y[722])/(1 + (y[1217] * y[722]))
    return (0) - (r652)
 
def C22441(t, y):
    r652 = (13.7 * y[1217] * y[722])/(1 + (y[1217] * y[722]))
    r398 = (13.7 * y[1133] * y[723] * y[1])/(1 + (y[1133] * y[723] * y[1]))
    return (r652) - (r398)
 
def C22442(t, y):
    r398 = (13.7 * y[1133] * y[723] * y[1])/(1 + (y[1133] * y[723] * y[1]))
    r392 = (13.7 * y[1131] * y[724] * y[1])/(1 + (y[1131] * y[724] * y[1]))
    return (r398) - (r392)
 
def C22443(t, y):
    r392 = (13.7 * y[1131] * y[724] * y[1])/(1 + (y[1131] * y[724] * y[1]))
    return (r392) - (0)
 
def G10550(t, y):
    r287 = (13.7 * y[1084] * y[727] * y[732])/(1 + (y[1084] * y[727] * y[732]))
    return (r287) - (0)
 
def G10551(t, y):
    r287 = (13.7 * y[1084] * y[727] * y[732])/(1 + (y[1084] * y[727] * y[732]))
    return (0) - (r287)
 
def G10552(t, y):
    r285 = (13.7 * y[1084] * y[728] * y[732])/(1 + (y[1084] * y[728] * y[732]))
    return (0) - (r285)
 
def G10553(t, y):
    r285 = (13.7 * y[1084] * y[728] * y[732])/(1 + (y[1084] * y[728] * y[732]))
    return (r285) - (0)
 
def G10555(t, y):
    r288 = (13.7 * y[1084] * y[731] * y[732])/(1 + (y[1084] * y[731] * y[732]))
    return (r288) - (0)
 
def G10556(t, y):
    r288 = (13.7 * y[1084] * y[731] * y[732])/(1 + (y[1084] * y[731] * y[732]))
    return (0) - (r288)
 
def G10610(t, y):
    r285 = (13.7 * y[1084] * y[728] * y[732])/(1 + (y[1084] * y[728] * y[732]))
    r287 = (13.7 * y[1084] * y[727] * y[732])/(1 + (y[1084] * y[727] * y[732]))
    r288 = (13.7 * y[1084] * y[731] * y[732])/(1 + (y[1084] * y[731] * y[732]))
    return (0) - (r285 + r287 + r288)
 
def G10619(t, y):
    r285 = (13.7 * y[1084] * y[728] * y[732])/(1 + (y[1084] * y[728] * y[732]))
    r287 = (13.7 * y[1084] * y[727] * y[732])/(1 + (y[1084] * y[727] * y[732]))
    r288 = (13.7 * y[1084] * y[731] * y[732])/(1 + (y[1084] * y[731] * y[732]))
    return (r285 + r287 + r288) - (0)
 
def E1_1_1_1_mRNA(t, y):
    mRNA1 = 0.00292 - (0.0093 * y[734])
    Peptide1 = (0.278 * y[734]) - (0.000000278 * y[1010])
    return (mRNA1) - (Peptide1)
 
def E1_1_1_100_mRNA(t, y):
    mRNA2 = 0.00292 - (0.0093 * y[735])
    Peptide2 = (0.278 * y[735]) - (0.000000278 * y[1011])
    return (mRNA2) - (Peptide2)
 
def E1_1_1_133_mRNA(t, y):
    mRNA3 = 0.00292 - (0.0093 * y[736])
    Peptide3 = (0.278 * y[736]) - (0.000000278 * y[1012])
    return (mRNA3) - (Peptide3)
 
def E1_1_1_193_mRNA(t, y):
    mRNA4 = 0.00292 - (0.0093 * y[737])
    Peptide4 = (0.278 * y[737]) - (0.000000278 * y[1013])
    return (mRNA4) - (Peptide4)
 
def E1_1_1_205_mRNA(t, y):
    mRNA5 = 0.00292 - (0.0093 * y[738])
    Peptide5 = (0.278 * y[738]) - (0.000000278 * y[1014])
    return (mRNA5) - (Peptide5)
 
def E1_1_1_23_mRNA(t, y):
    mRNA6 = 0.00292 - (0.0093 * y[739])
    Peptide6 = (0.278 * y[739]) - (0.000000278 * y[1015])
    return (mRNA6) - (Peptide6)
 
def E1_1_1_267_mRNA(t, y):
    mRNA7 = 0.00292 - (0.0093 * y[740])
    Peptide7 = (0.278 * y[740]) - (0.000000278 * y[1016])
    return (mRNA7) - (Peptide7)
 
def E1_1_1_85_mRNA(t, y):
    mRNA8 = 0.00292 - (0.0093 * y[741])
    Peptide8 = (0.278 * y[741]) - (0.000000278 * y[1017])
    return (mRNA8) - (Peptide8)
 
def E1_1_1_86_mRNA(t, y):
    mRNA9 = 0.00292 - (0.0093 * y[742])
    Peptide9 = (0.278 * y[742]) - (0.000000278 * y[1018])
    return (mRNA9) - (Peptide9)
 
def E1_1_5_3_mRNA(t, y):
    mRNA10 = 0.00292 - (0.0093 * y[743])
    Peptide10 = (0.278 * y[743]) - (0.000000278 * y[1019])
    return (mRNA10) - (Peptide10)
 
def E1_17_1_8_mRNA(t, y):
    mRNA11 = 0.00292 - (0.0093 * y[744])
    Peptide11 = (0.278 * y[744]) - (0.000000278 * y[1020])
    return (mRNA11) - (Peptide11)
 
def E1_17_4_1_mRNA(t, y):
    mRNA12 = 0.00292 - (0.0093 * y[745])
    Peptide12 = (0.278 * y[745]) - (0.000000278 * y[1021])
    return (mRNA12) - (Peptide12)
 
def E1_17_4_2_mRNA(t, y):
    mRNA13 = 0.00292 - (0.0093 * y[746])
    Peptide13 = (0.278 * y[746]) - (0.000000278 * y[1022])
    return (mRNA13) - (Peptide13)
 
def E1_17_7_1_mRNA(t, y):
    mRNA14 = 0.00292 - (0.0093 * y[747])
    Peptide14 = (0.278 * y[747]) - (0.000000278 * y[1023])
    return (mRNA14) - (Peptide14)
 
def E1_17_7_4_mRNA(t, y):
    mRNA15 = 0.00292 - (0.0093 * y[748])
    Peptide15 = (0.278 * y[748]) - (0.000000278 * y[1024])
    return (mRNA15) - (Peptide15)
 
def E1_18_6_1_mRNA(t, y):
    mRNA16 = 0.00292 - (0.0093 * y[749])
    Peptide16 = (0.278 * y[749]) - (0.000000278 * y[1025])
    return (mRNA16) - (Peptide16)
 
def E1_2_1_10_mRNA(t, y):
    mRNA17 = 0.00292 - (0.0093 * y[750])
    Peptide17 = (0.278 * y[750]) - (0.000000278 * y[1026])
    return (mRNA17) - (Peptide17)
 
def E1_2_1_11_mRNA(t, y):
    mRNA18 = 0.00292 - (0.0093 * y[751])
    Peptide18 = (0.278 * y[751]) - (0.000000278 * y[1027])
    return (mRNA18) - (Peptide18)
 
def E1_2_1_38_mRNA(t, y):
    mRNA19 = 0.00292 - (0.0093 * y[752])
    Peptide19 = (0.278 * y[752]) - (0.000000278 * y[1028])
    return (mRNA19) - (Peptide19)
 
def E1_2_1_41_mRNA(t, y):
    mRNA20 = 0.00292 - (0.0093 * y[753])
    Peptide20 = (0.278 * y[753]) - (0.000000278 * y[1029])
    return (mRNA20) - (Peptide20)
 
def E1_2_1_70_mRNA(t, y):
    mRNA21 = 0.00292 - (0.0093 * y[754])
    Peptide21 = (0.278 * y[754]) - (0.000000278 * y[1030])
    return (mRNA21) - (Peptide21)
 
def E1_2_7_4_mRNA(t, y):
    mRNA22 = 0.00292 - (0.0093 * y[755])
    Peptide22 = (0.278 * y[755]) - (0.000000278 * y[1031])
    return (mRNA22) - (Peptide22)
 
def E1_2_7_5_mRNA(t, y):
    mRNA23 = 0.00292 - (0.0093 * y[756])
    Peptide23 = (0.278 * y[756]) - (0.000000278 * y[1032])
    return (mRNA23) - (Peptide23)
 
def E1_2_7_8_mRNA(t, y):
    mRNA24 = 0.00292 - (0.0093 * y[757])
    Peptide24 = (0.278 * y[757]) - (0.000000278 * y[1033])
    return (mRNA24) - (Peptide24)
 
def E1_3_1_14_mRNA(t, y):
    mRNA25 = 0.00292 - (0.0093 * y[758])
    Peptide25 = (0.278 * y[758]) - (0.000000278 * y[1034])
    return (mRNA25) - (Peptide25)
 
def E1_3_1_98_mRNA(t, y):
    mRNA26 = 0.00292 - (0.0093 * y[759])
    Peptide26 = (0.278 * y[759]) - (0.000000278 * y[1035])
    return (mRNA26) - (Peptide26)
 
def E1_4_1_1_mRNA(t, y):
    mRNA27 = 0.00292 - (0.0093 * y[760])
    Peptide27 = (0.278 * y[760]) - (0.000000278 * y[1036])
    return (mRNA27) - (Peptide27)
 
def E1_4_1_13_mRNA(t, y):
    mRNA28 = 0.00292 - (0.0093 * y[761])
    Peptide28 = (0.278 * y[761]) - (0.000000278 * y[1037])
    return (mRNA28) - (Peptide28)
 
def E1_4_1_4_mRNA(t, y):
    mRNA29 = 0.00292 - (0.0093 * y[762])
    Peptide29 = (0.278 * y[762]) - (0.000000278 * y[1038])
    return (mRNA29) - (Peptide29)
 
def E1_4_3_16_mRNA(t, y):
    mRNA30 = 0.00292 - (0.0093 * y[763])
    Peptide30 = (0.278 * y[763]) - (0.000000278 * y[1039])
    return (mRNA30) - (Peptide30)
 
def E1_4_4_2_mRNA(t, y):
    mRNA31 = 0.00292 - (0.0093 * y[764])
    Peptide31 = (0.278 * y[764]) - (0.000000278 * y[1040])
    return (mRNA31) - (Peptide31)
 
def E1_5_1_2_mRNA(t, y):
    mRNA32 = 0.00292 - (0.0093 * y[765])
    Peptide32 = (0.278 * y[765]) - (0.000000278 * y[1041])
    return (mRNA32) - (Peptide32)
 
def E1_5_1_20_mRNA(t, y):
    mRNA33 = 0.00292 - (0.0093 * y[766])
    Peptide33 = (0.278 * y[766]) - (0.000000278 * y[1042])
    return (mRNA33) - (Peptide33)
 
def E1_7_1_13_mRNA(t, y):
    mRNA34 = 0.00292 - (0.0093 * y[767])
    Peptide34 = (0.278 * y[767]) - (0.000000278 * y[1043])
    return (mRNA34) - (Peptide34)
 
def E1_7_99_1_mRNA(t, y):
    mRNA35 = 0.00292 - (0.0093 * y[768])
    Peptide35 = (0.278 * y[768]) - (0.000000278 * y[1044])
    return (mRNA35) - (Peptide35)
 
def E1_8_1_4_mRNA(t, y):
    mRNA36 = 0.00292 - (0.0093 * y[769])
    Peptide36 = (0.278 * y[769]) - (0.000000278 * y[1045])
    return (mRNA36) - (Peptide36)
 
def E1_8_1_9_mRNA(t, y):
    mRNA37 = 0.00292 - (0.0093 * y[770])
    Peptide37 = (0.278 * y[770]) - (0.000000278 * y[1046])
    return (mRNA37) - (Peptide37)
 
def E1_8_4_11_mRNA(t, y):
    mRNA38 = 0.00292 - (0.0093 * y[771])
    Peptide38 = (0.278 * y[771]) - (0.000000278 * y[1047])
    return (mRNA38) - (Peptide38)
 
def E1_8_4_12_mRNA(t, y):
    mRNA39 = 0.00292 - (0.0093 * y[772])
    Peptide39 = (0.278 * y[772]) - (0.000000278 * y[1048])
    return (mRNA39) - (Peptide39)
 
def E1_8_5_3_mRNA(t, y):
    mRNA40 = 0.00292 - (0.0093 * y[773])
    Peptide40 = (0.278 * y[773]) - (0.000000278 * y[1049])
    return (mRNA40) - (Peptide40)
 
def E1_8_99_2_mRNA(t, y):
    mRNA41 = 0.00292 - (0.0093 * y[774])
    Peptide41 = (0.278 * y[774]) - (0.000000278 * y[1050])
    return (mRNA41) - (Peptide41)
 
def E2_1_1_107_mRNA(t, y):
    mRNA42 = 0.00292 - (0.0093 * y[775])
    Peptide42 = (0.278 * y[775]) - (0.000000278 * y[1051])
    return (mRNA42) - (Peptide42)
 
def E2_1_1_130_mRNA(t, y):
    mRNA43 = 0.00292 - (0.0093 * y[776])
    Peptide43 = (0.278 * y[776]) - (0.000000278 * y[1052])
    return (mRNA43) - (Peptide43)
 
def E2_1_1_131_mRNA(t, y):
    mRNA44 = 0.00292 - (0.0093 * y[777])
    Peptide44 = (0.278 * y[777]) - (0.000000278 * y[1053])
    return (mRNA44) - (Peptide44)
 
def E2_1_1_133_mRNA(t, y):
    mRNA45 = 0.00292 - (0.0093 * y[778])
    Peptide45 = (0.278 * y[778]) - (0.000000278 * y[1054])
    return (mRNA45) - (Peptide45)
 
def E2_1_1_171_mRNA(t, y):
    mRNA46 = 0.00292 - (0.0093 * y[779])
    Peptide46 = (0.278 * y[779]) - (0.000000278 * y[1055])
    return (mRNA46) - (Peptide46)
 
def E2_1_1_182_mRNA(t, y):
    mRNA47 = 0.00292 - (0.0093 * y[780])
    Peptide47 = (0.278 * y[780]) - (0.000000278 * y[1056])
    return (mRNA47) - (Peptide47)
 
def E2_1_1_197_mRNA(t, y):
    mRNA48 = 0.00292 - (0.0093 * y[781])
    Peptide48 = (0.278 * y[781]) - (0.000000278 * y[1057])
    return (mRNA48) - (Peptide48)
 
def E2_1_1_228_mRNA(t, y):
    mRNA49 = 0.00292 - (0.0093 * y[782])
    Peptide49 = (0.278 * y[782]) - (0.000000278 * y[1058])
    return (mRNA49) - (Peptide49)
 
def E2_1_1_297_mRNA(t, y):
    mRNA50 = 0.00292 - (0.0093 * y[783])
    Peptide50 = (0.278 * y[783]) - (0.000000278 * y[1059])
    return (mRNA50) - (Peptide50)
 
def E2_1_1_63_mRNA(t, y):
    mRNA51 = 0.00292 - (0.0093 * y[784])
    Peptide51 = (0.278 * y[784]) - (0.000000278 * y[1060])
    return (mRNA51) - (Peptide51)
 
def E2_1_1_72_mRNA(t, y):
    mRNA52 = 0.00292 - (0.0093 * y[785])
    Peptide52 = (0.278 * y[785]) - (0.000000278 * y[1061])
    return (mRNA52) - (Peptide52)
 
def E2_1_1_77_mRNA(t, y):
    mRNA53 = 0.00292 - (0.0093 * y[786])
    Peptide53 = (0.278 * y[786]) - (0.000000278 * y[1062])
    return (mRNA53) - (Peptide53)
 
def E2_1_2_10_mRNA(t, y):
    mRNA54 = 0.00292 - (0.0093 * y[787])
    Peptide54 = (0.278 * y[787]) - (0.000000278 * y[1063])
    return (mRNA54) - (Peptide54)
 
def E2_1_2_11_mRNA(t, y):
    mRNA55 = 0.00292 - (0.0093 * y[788])
    Peptide55 = (0.278 * y[788]) - (0.000000278 * y[1064])
    return (mRNA55) - (Peptide55)
 
def E2_1_2_2_mRNA(t, y):
    mRNA56 = 0.00292 - (0.0093 * y[789])
    Peptide56 = (0.278 * y[789]) - (0.000000278 * y[1065])
    return (mRNA56) - (Peptide56)
 
def E2_1_2_9_mRNA(t, y):
    mRNA57 = 0.00292 - (0.0093 * y[790])
    Peptide57 = (0.278 * y[790]) - (0.000000278 * y[1066])
    return (mRNA57) - (Peptide57)
 
def E2_1_3_2_mRNA(t, y):
    mRNA58 = 0.00292 - (0.0093 * y[791])
    Peptide58 = (0.278 * y[791]) - (0.000000278 * y[1067])
    return (mRNA58) - (Peptide58)
 
def E2_1_3_3_mRNA(t, y):
    mRNA59 = 0.00292 - (0.0093 * y[792])
    Peptide59 = (0.278 * y[792]) - (0.000000278 * y[1068])
    return (mRNA59) - (Peptide59)
 
def E2_2_1_1_mRNA(t, y):
    mRNA60 = 0.00292 - (0.0093 * y[793])
    Peptide60 = (0.278 * y[793]) - (0.000000278 * y[1069])
    return (mRNA60) - (Peptide60)
 
def E2_2_1_10_mRNA(t, y):
    mRNA61 = 0.00292 - (0.0093 * y[794])
    Peptide61 = (0.278 * y[794]) - (0.000000278 * y[1070])
    return (mRNA61) - (Peptide61)
 
def E2_2_1_6_mRNA(t, y):
    mRNA62 = 0.00292 - (0.0093 * y[795])
    Peptide62 = (0.278 * y[795]) - (0.000000278 * y[1071])
    return (mRNA62) - (Peptide62)
 
def E2_2_1_7_mRNA(t, y):
    mRNA63 = 0.00292 - (0.0093 * y[796])
    Peptide63 = (0.278 * y[796]) - (0.000000278 * y[1072])
    return (mRNA63) - (Peptide63)
 
def E2_3_1_1_mRNA(t, y):
    mRNA64 = 0.00292 - (0.0093 * y[797])
    Peptide64 = (0.278 * y[797]) - (0.000000278 * y[1073])
    return (mRNA64) - (Peptide64)
 
def E2_3_1_15_mRNA(t, y):
    mRNA65 = 0.00292 - (0.0093 * y[798])
    Peptide65 = (0.278 * y[798]) - (0.000000278 * y[1074])
    return (mRNA65) - (Peptide65)
 
def E2_3_1_179_mRNA(t, y):
    mRNA66 = 0.00292 - (0.0093 * y[799])
    Peptide66 = (0.278 * y[799]) - (0.000000278 * y[1075])
    return (mRNA66) - (Peptide66)
 
def E2_3_1_181_mRNA(t, y):
    mRNA67 = 0.00292 - (0.0093 * y[800])
    Peptide67 = (0.278 * y[800]) - (0.000000278 * y[1076])
    return (mRNA67) - (Peptide67)
 
def E2_3_1_234_mRNA(t, y):
    mRNA68 = 0.00292 - (0.0093 * y[801])
    Peptide68 = (0.278 * y[801]) - (0.000000278 * y[1077])
    return (mRNA68) - (Peptide68)
 
def E2_3_1_35_mRNA(t, y):
    mRNA69 = 0.00292 - (0.0093 * y[802])
    Peptide69 = (0.278 * y[802]) - (0.000000278 * y[1078])
    return (mRNA69) - (Peptide69)
 
def E2_3_1_46_mRNA(t, y):
    mRNA70 = 0.00292 - (0.0093 * y[803])
    Peptide70 = (0.278 * y[803]) - (0.000000278 * y[1079])
    return (mRNA70) - (Peptide70)
 
def E2_3_1_8_mRNA(t, y):
    mRNA71 = 0.00292 - (0.0093 * y[804])
    Peptide71 = (0.278 * y[804]) - (0.000000278 * y[1080])
    return (mRNA71) - (Peptide71)
 
def E2_3_2_2_mRNA(t, y):
    mRNA72 = 0.00292 - (0.0093 * y[805])
    Peptide72 = (0.278 * y[805]) - (0.000000278 * y[1081])
    return (mRNA72) - (Peptide72)
 
def E2_3_2_6_mRNA(t, y):
    mRNA73 = 0.00292 - (0.0093 * y[806])
    Peptide73 = (0.278 * y[806]) - (0.000000278 * y[1082])
    return (mRNA73) - (Peptide73)
 
def E2_3_3_13_mRNA(t, y):
    mRNA74 = 0.00292 - (0.0093 * y[807])
    Peptide74 = (0.278 * y[807]) - (0.000000278 * y[1083])
    return (mRNA74) - (Peptide74)
 
def E2_4_1_227_mRNA(t, y):
    mRNA75 = 0.00292 - (0.0093 * y[808])
    Peptide75 = (0.278 * y[808]) - (0.000000278 * y[1084])
    return (mRNA75) - (Peptide75)
 
def E2_4_2_1_mRNA(t, y):
    mRNA76 = 0.00292 - (0.0093 * y[809])
    Peptide76 = (0.278 * y[809]) - (0.000000278 * y[1085])
    return (mRNA76) - (Peptide76)
 
def E2_4_2_10_mRNA(t, y):
    mRNA77 = 0.00292 - (0.0093 * y[810])
    Peptide77 = (0.278 * y[810]) - (0.000000278 * y[1086])
    return (mRNA77) - (Peptide77)
 
def E2_4_2_14_mRNA(t, y):
    mRNA78 = 0.00292 - (0.0093 * y[811])
    Peptide78 = (0.278 * y[811]) - (0.000000278 * y[1087])
    return (mRNA78) - (Peptide78)
 
def E2_4_2_17_mRNA(t, y):
    mRNA79 = 0.00292 - (0.0093 * y[812])
    Peptide79 = (0.278 * y[812]) - (0.000000278 * y[1088])
    return (mRNA79) - (Peptide79)
 
def E2_4_2_18_mRNA(t, y):
    mRNA80 = 0.00292 - (0.0093 * y[813])
    Peptide80 = (0.278 * y[813]) - (0.000000278 * y[1089])
    return (mRNA80) - (Peptide80)
 
def E2_4_2_19_mRNA(t, y):
    mRNA81 = 0.00292 - (0.0093 * y[814])
    Peptide81 = (0.278 * y[814]) - (0.000000278 * y[1090])
    return (mRNA81) - (Peptide81)
 
def E2_4_2_21_mRNA(t, y):
    mRNA82 = 0.00292 - (0.0093 * y[815])
    Peptide82 = (0.278 * y[815]) - (0.000000278 * y[1091])
    return (mRNA82) - (Peptide82)
 
def E2_4_2_29_mRNA(t, y):
    mRNA83 = 0.00292 - (0.0093 * y[816])
    Peptide83 = (0.278 * y[816]) - (0.000000278 * y[1092])
    return (mRNA83) - (Peptide83)
 
def E2_4_2_8_mRNA(t, y):
    mRNA84 = 0.00292 - (0.0093 * y[817])
    Peptide84 = (0.278 * y[817]) - (0.000000278 * y[1093])
    return (mRNA84) - (Peptide84)
 
def E2_4_2_9_mRNA(t, y):
    mRNA85 = 0.00292 - (0.0093 * y[818])
    Peptide85 = (0.278 * y[818]) - (0.000000278 * y[1094])
    return (mRNA85) - (Peptide85)
 
def E2_4_99_17_mRNA(t, y):
    mRNA86 = 0.00292 - (0.0093 * y[819])
    Peptide86 = (0.278 * y[819]) - (0.000000278 * y[1095])
    return (mRNA86) - (Peptide86)
 
def E2_5_1_15_mRNA(t, y):
    mRNA87 = 0.00292 - (0.0093 * y[820])
    Peptide87 = (0.278 * y[820]) - (0.000000278 * y[1096])
    return (mRNA87) - (Peptide87)
 
def E2_5_1_3_mRNA(t, y):
    mRNA88 = 0.00292 - (0.0093 * y[821])
    Peptide88 = (0.278 * y[821]) - (0.000000278 * y[1097])
    return (mRNA88) - (Peptide88)
 
def E2_5_1_31_mRNA(t, y):
    mRNA89 = 0.00292 - (0.0093 * y[822])
    Peptide89 = (0.278 * y[822]) - (0.000000278 * y[1098])
    return (mRNA89) - (Peptide89)
 
def E2_5_1_47_mRNA(t, y):
    mRNA90 = 0.00292 - (0.0093 * y[823])
    Peptide90 = (0.278 * y[823]) - (0.000000278 * y[1099])
    return (mRNA90) - (Peptide90)
 
def E2_5_1_6_mRNA(t, y):
    mRNA91 = 0.00292 - (0.0093 * y[824])
    Peptide91 = (0.278 * y[824]) - (0.000000278 * y[1100])
    return (mRNA91) - (Peptide91)
 
def E2_5_1_61_mRNA(t, y):
    mRNA92 = 0.00292 - (0.0093 * y[825])
    Peptide92 = (0.278 * y[825]) - (0.000000278 * y[1101])
    return (mRNA92) - (Peptide92)
 
def E2_5_1_7_mRNA(t, y):
    mRNA93 = 0.00292 - (0.0093 * y[826])
    Peptide93 = (0.278 * y[826]) - (0.000000278 * y[1102])
    return (mRNA93) - (Peptide93)
 
def E2_5_1_72_mRNA(t, y):
    mRNA94 = 0.00292 - (0.0093 * y[827])
    Peptide94 = (0.278 * y[827]) - (0.000000278 * y[1103])
    return (mRNA94) - (Peptide94)
 
def E2_5_1_75_mRNA(t, y):
    mRNA95 = 0.00292 - (0.0093 * y[828])
    Peptide95 = (0.278 * y[828]) - (0.000000278 * y[1104])
    return (mRNA95) - (Peptide95)
 
def E2_5_1_78_mRNA(t, y):
    mRNA96 = 0.00292 - (0.0093 * y[829])
    Peptide96 = (0.278 * y[829]) - (0.000000278 * y[1105])
    return (mRNA96) - (Peptide96)
 
def E2_5_1_9_mRNA(t, y):
    mRNA97 = 0.00292 - (0.0093 * y[830])
    Peptide97 = (0.278 * y[830]) - (0.000000278 * y[1106])
    return (mRNA97) - (Peptide97)
 
def E2_6_1_16_mRNA(t, y):
    mRNA98 = 0.00292 - (0.0093 * y[831])
    Peptide98 = (0.278 * y[831]) - (0.000000278 * y[1107])
    return (mRNA98) - (Peptide98)
 
def E2_6_1_42_mRNA(t, y):
    mRNA99 = 0.00292 - (0.0093 * y[832])
    Peptide99 = (0.278 * y[832]) - (0.000000278 * y[1108])
    return (mRNA99) - (Peptide99)
 
def E2_6_1_62_mRNA(t, y):
    mRNA100 = 0.00292 - (0.0093 * y[833])
    Peptide100 = (0.278 * y[833]) - (0.000000278 * y[1109])
    return (mRNA100) - (Peptide100)
 
def E2_6_1_83_mRNA(t, y):
    mRNA101 = 0.00292 - (0.0093 * y[834])
    Peptide101 = (0.278 * y[834]) - (0.000000278 * y[1110])
    return (mRNA101) - (Peptide101)
 
def E2_6_1_9_mRNA(t, y):
    mRNA102 = 0.00292 - (0.0093 * y[835])
    Peptide102 = (0.278 * y[835]) - (0.000000278 * y[1111])
    return (mRNA102) - (Peptide102)
 
def E2_7_1_148_mRNA(t, y):
    mRNA103 = 0.00292 - (0.0093 * y[836])
    Peptide103 = (0.278 * y[836]) - (0.000000278 * y[1112])
    return (mRNA103) - (Peptide103)
 
def E2_7_1_24_mRNA(t, y):
    mRNA104 = 0.00292 - (0.0093 * y[837])
    Peptide104 = (0.278 * y[837]) - (0.000000278 * y[1113])
    return (mRNA104) - (Peptide104)
 
def E2_7_1_25_mRNA(t, y):
    mRNA105 = 0.00292 - (0.0093 * y[838])
    Peptide105 = (0.278 * y[838]) - (0.000000278 * y[1114])
    return (mRNA105) - (Peptide105)
 
def E2_7_1_26_mRNA(t, y):
    mRNA106 = 0.00292 - (0.0093 * y[839])
    Peptide106 = (0.278 * y[839]) - (0.000000278 * y[1115])
    return (mRNA106) - (Peptide106)
 
def E2_7_1_30_mRNA(t, y):
    mRNA107 = 0.00292 - (0.0093 * y[840])
    Peptide107 = (0.278 * y[840]) - (0.000000278 * y[1116])
    return (mRNA107) - (Peptide107)
 
def E2_7_1_33_mRNA(t, y):
    mRNA108 = 0.00292 - (0.0093 * y[841])
    Peptide108 = (0.278 * y[841]) - (0.000000278 * y[1117])
    return (mRNA108) - (Peptide108)
 
def E2_7_1_40_mRNA(t, y):
    mRNA109 = 0.00292 - (0.0093 * y[842])
    Peptide109 = (0.278 * y[842]) - (0.000000278 * y[1118])
    return (mRNA109) - (Peptide109)
 
def E2_7_1_49_mRNA(t, y):
    mRNA110 = 0.00292 - (0.0093 * y[843])
    Peptide110 = (0.278 * y[843]) - (0.000000278 * y[1119])
    return (mRNA110) - (Peptide110)
 
def E2_7_1_50_mRNA(t, y):
    mRNA111 = 0.00292 - (0.0093 * y[844])
    Peptide111 = (0.278 * y[844]) - (0.000000278 * y[1120])
    return (mRNA111) - (Peptide111)
 
def E2_7_1_71_mRNA(t, y):
    mRNA112 = 0.00292 - (0.0093 * y[845])
    Peptide112 = (0.278 * y[845]) - (0.000000278 * y[1121])
    return (mRNA112) - (Peptide112)
 
def E2_7_2_11_mRNA(t, y):
    mRNA113 = 0.00292 - (0.0093 * y[846])
    Peptide113 = (0.278 * y[846]) - (0.000000278 * y[1122])
    return (mRNA113) - (Peptide113)
 
def E2_7_2_4_mRNA(t, y):
    mRNA114 = 0.00292 - (0.0093 * y[847])
    Peptide114 = (0.278 * y[847]) - (0.000000278 * y[1123])
    return (mRNA114) - (Peptide114)
 
def E2_7_2_7_mRNA(t, y):
    mRNA115 = 0.00292 - (0.0093 * y[848])
    Peptide115 = (0.278 * y[848]) - (0.000000278 * y[1124])
    return (mRNA115) - (Peptide115)
 
def E2_7_2_8_mRNA(t, y):
    mRNA116 = 0.00292 - (0.0093 * y[849])
    Peptide116 = (0.278 * y[849]) - (0.000000278 * y[1125])
    return (mRNA116) - (Peptide116)
 
def E2_7_3_9_mRNA(t, y):
    mRNA117 = 0.00292 - (0.0093 * y[850])
    Peptide117 = (0.278 * y[850]) - (0.000000278 * y[1126])
    return (mRNA117) - (Peptide117)
 
def E2_7_4_1_mRNA(t, y):
    mRNA118 = 0.00292 - (0.0093 * y[851])
    Peptide118 = (0.278 * y[851]) - (0.000000278 * y[1127])
    return (mRNA118) - (Peptide118)
 
def E2_7_4_16_mRNA(t, y):
    mRNA119 = 0.00292 - (0.0093 * y[852])
    Peptide119 = (0.278 * y[852]) - (0.000000278 * y[1128])
    return (mRNA119) - (Peptide119)
 
def E2_7_4_22_mRNA(t, y):
    mRNA120 = 0.00292 - (0.0093 * y[853])
    Peptide120 = (0.278 * y[853]) - (0.000000278 * y[1129])
    return (mRNA120) - (Peptide120)
 
def E2_7_4_25_mRNA(t, y):
    mRNA121 = 0.00292 - (0.0093 * y[854])
    Peptide121 = (0.278 * y[854]) - (0.000000278 * y[1130])
    return (mRNA121) - (Peptide121)
 
def E2_7_4_6_mRNA(t, y):
    mRNA122 = 0.00292 - (0.0093 * y[855])
    Peptide122 = (0.278 * y[855]) - (0.000000278 * y[1131])
    return (mRNA122) - (Peptide122)
 
def E2_7_4_7_mRNA(t, y):
    mRNA123 = 0.00292 - (0.0093 * y[856])
    Peptide123 = (0.278 * y[856]) - (0.000000278 * y[1132])
    return (mRNA123) - (Peptide123)
 
def E2_7_4_8_mRNA(t, y):
    mRNA124 = 0.00292 - (0.0093 * y[857])
    Peptide124 = (0.278 * y[857]) - (0.000000278 * y[1133])
    return (mRNA124) - (Peptide124)
 
def E2_7_4_9_mRNA(t, y):
    mRNA125 = 0.00292 - (0.0093 * y[858])
    Peptide125 = (0.278 * y[858]) - (0.000000278 * y[1134])
    return (mRNA125) - (Peptide125)
 
def E2_7_6_3_mRNA(t, y):
    mRNA126 = 0.00292 - (0.0093 * y[859])
    Peptide126 = (0.278 * y[859]) - (0.000000278 * y[1135])
    return (mRNA126) - (Peptide126)
 
def E2_7_7_13_mRNA(t, y):
    mRNA127 = 0.00292 - (0.0093 * y[860])
    Peptide127 = (0.278 * y[860]) - (0.000000278 * y[1136])
    return (mRNA127) - (Peptide127)
 
def E2_7_7_2_mRNA(t, y):
    mRNA128 = 0.00292 - (0.0093 * y[861])
    Peptide128 = (0.278 * y[861]) - (0.000000278 * y[1137])
    return (mRNA128) - (Peptide128)
 
def E2_7_7_23_mRNA(t, y):
    mRNA129 = 0.00292 - (0.0093 * y[862])
    Peptide129 = (0.278 * y[862]) - (0.000000278 * y[1138])
    return (mRNA129) - (Peptide129)
 
def E2_7_7_24_mRNA(t, y):
    mRNA130 = 0.00292 - (0.0093 * y[863])
    Peptide130 = (0.278 * y[863]) - (0.000000278 * y[1139])
    return (mRNA130) - (Peptide130)
 
def E2_7_7_3_mRNA(t, y):
    mRNA131 = 0.00292 - (0.0093 * y[864])
    Peptide131 = (0.278 * y[864]) - (0.000000278 * y[1140])
    return (mRNA131) - (Peptide131)
 
def E2_7_7_33_mRNA(t, y):
    mRNA132 = 0.00292 - (0.0093 * y[865])
    Peptide132 = (0.278 * y[865]) - (0.000000278 * y[1141])
    return (mRNA132) - (Peptide132)
 
def E2_7_7_4_mRNA(t, y):
    mRNA133 = 0.00292 - (0.0093 * y[866])
    Peptide133 = (0.278 * y[866]) - (0.000000278 * y[1142])
    return (mRNA133) - (Peptide133)
 
def E2_7_7_41_mRNA(t, y):
    mRNA134 = 0.00292 - (0.0093 * y[867])
    Peptide134 = (0.278 * y[867]) - (0.000000278 * y[1143])
    return (mRNA134) - (Peptide134)
 
def E2_7_7_6_mRNA(t, y):
    mRNA135 = 0.00292 - (0.0093 * y[868])
    Peptide135 = (0.278 * y[868]) - (0.000000278 * y[1144])
    return (mRNA135) - (Peptide135)
 
def E2_7_7_60_mRNA(t, y):
    mRNA136 = 0.00292 - (0.0093 * y[869])
    Peptide136 = (0.278 * y[869]) - (0.000000278 * y[1145])
    return (mRNA136) - (Peptide136)
 
def E2_7_7_65_mRNA(t, y):
    mRNA137 = 0.00292 - (0.0093 * y[870])
    Peptide137 = (0.278 * y[870]) - (0.000000278 * y[1146])
    return (mRNA137) - (Peptide137)
 
def E2_7_7_7_mRNA(t, y):
    mRNA138 = 0.00292 - (0.0093 * y[871])
    Peptide138 = (0.278 * y[871]) - (0.000000278 * y[1147])
    return (mRNA138) - (Peptide138)
 
def E2_7_7_8_mRNA(t, y):
    mRNA139 = 0.00292 - (0.0093 * y[872])
    Peptide139 = (0.278 * y[872]) - (0.000000278 * y[1148])
    return (mRNA139) - (Peptide139)
 
def E2_7_7_85_mRNA(t, y):
    mRNA140 = 0.00292 - (0.0093 * y[873])
    Peptide140 = (0.278 * y[873]) - (0.000000278 * y[1149])
    return (mRNA140) - (Peptide140)
 
def E2_7_7_9_mRNA(t, y):
    mRNA141 = 0.00292 - (0.0093 * y[874])
    Peptide141 = (0.278 * y[874]) - (0.000000278 * y[1150])
    return (mRNA141) - (Peptide141)
 
def E2_7_8_13_mRNA(t, y):
    mRNA142 = 0.00292 - (0.0093 * y[875])
    Peptide142 = (0.278 * y[875]) - (0.000000278 * y[1151])
    return (mRNA142) - (Peptide142)
 
def E2_7_8_5_mRNA(t, y):
    mRNA143 = 0.00292 - (0.0093 * y[876])
    Peptide143 = (0.278 * y[876]) - (0.000000278 * y[1152])
    return (mRNA143) - (Peptide143)
 
def E2_7_8_7_mRNA(t, y):
    mRNA144 = 0.00292 - (0.0093 * y[877])
    Peptide144 = (0.278 * y[877]) - (0.000000278 * y[1153])
    return (mRNA144) - (Peptide144)
 
def E2_7_8_8_mRNA(t, y):
    mRNA145 = 0.00292 - (0.0093 * y[878])
    Peptide145 = (0.278 * y[878]) - (0.000000278 * y[1154])
    return (mRNA145) - (Peptide145)
 
def E2_7_9_3_mRNA(t, y):
    mRNA146 = 0.00292 - (0.0093 * y[879])
    Peptide146 = (0.278 * y[879]) - (0.000000278 * y[1155])
    return (mRNA146) - (Peptide146)
 
def E2_8_1_6_mRNA(t, y):
    mRNA147 = 0.00292 - (0.0093 * y[880])
    Peptide147 = (0.278 * y[880]) - (0.000000278 * y[1156])
    return (mRNA147) - (Peptide147)
 
def E2_8_1_7_mRNA(t, y):
    mRNA148 = 0.00292 - (0.0093 * y[881])
    Peptide148 = (0.278 * y[881]) - (0.000000278 * y[1157])
    return (mRNA148) - (Peptide148)
 
def E2_8_1_8_mRNA(t, y):
    mRNA149 = 0.00292 - (0.0093 * y[882])
    Peptide149 = (0.278 * y[882]) - (0.000000278 * y[1158])
    return (mRNA149) - (Peptide149)
 
def E2_8_4_3_mRNA(t, y):
    mRNA150 = 0.00292 - (0.0093 * y[883])
    Peptide150 = (0.278 * y[883]) - (0.000000278 * y[1159])
    return (mRNA150) - (Peptide150)
 
def E2_8_4_4_mRNA(t, y):
    mRNA151 = 0.00292 - (0.0093 * y[884])
    Peptide151 = (0.278 * y[884]) - (0.000000278 * y[1160])
    return (mRNA151) - (Peptide151)
 
def E2_9_1_1_mRNA(t, y):
    mRNA152 = 0.00292 - (0.0093 * y[885])
    Peptide152 = (0.278 * y[885]) - (0.000000278 * y[1161])
    return (mRNA152) - (Peptide152)
 
def E3_1_1_29_mRNA(t, y):
    mRNA153 = 0.00292 - (0.0093 * y[886])
    Peptide153 = (0.278 * y[886]) - (0.000000278 * y[1162])
    return (mRNA153) - (Peptide153)
 
def E3_1_1_31_mRNA(t, y):
    mRNA154 = 0.00292 - (0.0093 * y[887])
    Peptide154 = (0.278 * y[887]) - (0.000000278 * y[1163])
    return (mRNA154) - (Peptide154)
 
def E3_1_3_11_mRNA(t, y):
    mRNA155 = 0.00292 - (0.0093 * y[888])
    Peptide155 = (0.278 * y[888]) - (0.000000278 * y[1164])
    return (mRNA155) - (Peptide155)
 
def E3_1_3_6_mRNA(t, y):
    mRNA156 = 0.00292 - (0.0093 * y[889])
    Peptide156 = (0.278 * y[889]) - (0.000000278 * y[1165])
    return (mRNA156) - (Peptide156)
 
def E3_1_3_82_mRNA(t, y):
    mRNA157 = 0.00292 - (0.0093 * y[890])
    Peptide157 = (0.278 * y[890]) - (0.000000278 * y[1166])
    return (mRNA157) - (Peptide157)
 
def E3_2_2_26_mRNA(t, y):
    mRNA158 = 0.00292 - (0.0093 * y[891])
    Peptide158 = (0.278 * y[891]) - (0.000000278 * y[1167])
    return (mRNA158) - (Peptide158)
 
def E3_4_11_1_mRNA(t, y):
    mRNA159 = 0.00292 - (0.0093 * y[892])
    Peptide159 = (0.278 * y[892]) - (0.000000278 * y[1168])
    return (mRNA159) - (Peptide159)
 
def E3_5_1_2_mRNA(t, y):
    mRNA160 = 0.00292 - (0.0093 * y[893])
    Peptide160 = (0.278 * y[893]) - (0.000000278 * y[1169])
    return (mRNA160) - (Peptide160)
 
def E3_5_1_28_mRNA(t, y):
    mRNA161 = 0.00292 - (0.0093 * y[894])
    Peptide161 = (0.278 * y[894]) - (0.000000278 * y[1170])
    return (mRNA161) - (Peptide161)
 
def E3_5_1_5_mRNA(t, y):
    mRNA162 = 0.00292 - (0.0093 * y[895])
    Peptide162 = (0.278 * y[895]) - (0.000000278 * y[1171])
    return (mRNA162) - (Peptide162)
 
def E3_5_1_88_mRNA(t, y):
    mRNA163 = 0.00292 - (0.0093 * y[896])
    Peptide163 = (0.278 * y[896]) - (0.000000278 * y[1172])
    return (mRNA163) - (Peptide163)
 
def E3_5_3_11_mRNA(t, y):
    mRNA164 = 0.00292 - (0.0093 * y[897])
    Peptide164 = (0.278 * y[897]) - (0.000000278 * y[1173])
    return (mRNA164) - (Peptide164)
 
def E3_5_4_16_mRNA(t, y):
    mRNA165 = 0.00292 - (0.0093 * y[898])
    Peptide165 = (0.278 * y[898]) - (0.000000278 * y[1174])
    return (mRNA165) - (Peptide165)
 
def E3_5_4_19_mRNA(t, y):
    mRNA166 = 0.00292 - (0.0093 * y[899])
    Peptide166 = (0.278 * y[899]) - (0.000000278 * y[1175])
    return (mRNA166) - (Peptide166)
 
def E3_5_4_2_mRNA(t, y):
    mRNA167 = 0.00292 - (0.0093 * y[900])
    Peptide167 = (0.278 * y[900]) - (0.000000278 * y[1176])
    return (mRNA167) - (Peptide167)
 
def E3_5_4_25_mRNA(t, y):
    mRNA168 = 0.00292 - (0.0093 * y[901])
    Peptide168 = (0.278 * y[901]) - (0.000000278 * y[1177])
    return (mRNA168) - (Peptide168)
 
def E3_5_4_26_mRNA(t, y):
    mRNA169 = 0.00292 - (0.0093 * y[902])
    Peptide169 = (0.278 * y[902]) - (0.000000278 * y[1178])
    return (mRNA169) - (Peptide169)
 
def E3_5_4_33_mRNA(t, y):
    mRNA170 = 0.00292 - (0.0093 * y[903])
    Peptide170 = (0.278 * y[903]) - (0.000000278 * y[1179])
    return (mRNA170) - (Peptide170)
 
def E3_6_1_1_mRNA(t, y):
    mRNA171 = 0.00292 - (0.0093 * y[904])
    Peptide171 = (0.278 * y[904]) - (0.000000278 * y[1180])
    return (mRNA171) - (Peptide171)
 
def E3_6_1_23_mRNA(t, y):
    mRNA172 = 0.00292 - (0.0093 * y[905])
    Peptide172 = (0.278 * y[905]) - (0.000000278 * y[1181])
    return (mRNA172) - (Peptide172)
 
def E3_6_1_27_mRNA(t, y):
    mRNA173 = 0.00292 - (0.0093 * y[906])
    Peptide173 = (0.278 * y[906]) - (0.000000278 * y[1182])
    return (mRNA173) - (Peptide173)
 
def E3_6_1_9_mRNA(t, y):
    mRNA174 = 0.00292 - (0.0093 * y[907])
    Peptide174 = (0.278 * y[907]) - (0.000000278 * y[1183])
    return (mRNA174) - (Peptide174)
 
def E4_1_1_11_mRNA(t, y):
    mRNA175 = 0.00292 - (0.0093 * y[908])
    Peptide175 = (0.278 * y[908]) - (0.000000278 * y[1184])
    return (mRNA175) - (Peptide175)
 
def E4_1_1_19_mRNA(t, y):
    mRNA176 = 0.00292 - (0.0093 * y[909])
    Peptide176 = (0.278 * y[909]) - (0.000000278 * y[1185])
    return (mRNA176) - (Peptide176)
 
def E4_1_1_20_mRNA(t, y):
    mRNA177 = 0.00292 - (0.0093 * y[910])
    Peptide177 = (0.278 * y[910]) - (0.000000278 * y[1186])
    return (mRNA177) - (Peptide177)
 
def E4_1_1_21_mRNA(t, y):
    mRNA178 = 0.00292 - (0.0093 * y[911])
    Peptide178 = (0.278 * y[911]) - (0.000000278 * y[1187])
    return (mRNA178) - (Peptide178)
 
def E4_1_1_23_mRNA(t, y):
    mRNA179 = 0.00292 - (0.0093 * y[912])
    Peptide179 = (0.278 * y[912]) - (0.000000278 * y[1188])
    return (mRNA179) - (Peptide179)
 
def E4_1_1_36_mRNA(t, y):
    mRNA180 = 0.00292 - (0.0093 * y[913])
    Peptide180 = (0.278 * y[913]) - (0.000000278 * y[1189])
    return (mRNA180) - (Peptide180)
 
def E4_1_1_65_mRNA(t, y):
    mRNA181 = 0.00292 - (0.0093 * y[914])
    Peptide181 = (0.278 * y[914]) - (0.000000278 * y[1190])
    return (mRNA181) - (Peptide181)
 
def E4_1_1_96_mRNA(t, y):
    mRNA182 = 0.00292 - (0.0093 * y[915])
    Peptide182 = (0.278 * y[915]) - (0.000000278 * y[1191])
    return (mRNA182) - (Peptide182)
 
def E4_1_2_13_mRNA(t, y):
    mRNA183 = 0.00292 - (0.0093 * y[916])
    Peptide183 = (0.278 * y[916]) - (0.000000278 * y[1192])
    return (mRNA183) - (Peptide183)
 
def E4_1_2_50_mRNA(t, y):
    mRNA184 = 0.00292 - (0.0093 * y[917])
    Peptide184 = (0.278 * y[917]) - (0.000000278 * y[1193])
    return (mRNA184) - (Peptide184)
 
def E4_1_99_12_mRNA(t, y):
    mRNA185 = 0.00292 - (0.0093 * y[918])
    Peptide185 = (0.278 * y[918]) - (0.000000278 * y[1194])
    return (mRNA185) - (Peptide185)
 
def E4_1_99_17_mRNA(t, y):
    mRNA186 = 0.00292 - (0.0093 * y[919])
    Peptide186 = (0.278 * y[919]) - (0.000000278 * y[1195])
    return (mRNA186) - (Peptide186)
 
def E4_1_99_19_mRNA(t, y):
    mRNA187 = 0.00292 - (0.0093 * y[920])
    Peptide187 = (0.278 * y[920]) - (0.000000278 * y[1196])
    return (mRNA187) - (Peptide187)
 
def E4_1_99_22_mRNA(t, y):
    mRNA188 = 0.00292 - (0.0093 * y[921])
    Peptide188 = (0.278 * y[921]) - (0.000000278 * y[1197])
    return (mRNA188) - (Peptide188)
 
def E4_2_1_10_mRNA(t, y):
    mRNA189 = 0.00292 - (0.0093 * y[922])
    Peptide189 = (0.278 * y[922]) - (0.000000278 * y[1198])
    return (mRNA189) - (Peptide189)
 
def E4_2_1_11_mRNA(t, y):
    mRNA190 = 0.00292 - (0.0093 * y[923])
    Peptide190 = (0.278 * y[923]) - (0.000000278 * y[1199])
    return (mRNA190) - (Peptide190)
 
def E4_2_1_2_mRNA(t, y):
    mRNA191 = 0.00292 - (0.0093 * y[924])
    Peptide191 = (0.278 * y[924]) - (0.000000278 * y[1200])
    return (mRNA191) - (Peptide191)
 
def E4_2_1_20_mRNA(t, y):
    mRNA192 = 0.00292 - (0.0093 * y[925])
    Peptide192 = (0.278 * y[925]) - (0.000000278 * y[1201])
    return (mRNA192) - (Peptide192)
 
def E4_2_1_24_mRNA(t, y):
    mRNA193 = 0.00292 - (0.0093 * y[926])
    Peptide193 = (0.278 * y[926]) - (0.000000278 * y[1202])
    return (mRNA193) - (Peptide193)
 
def E4_2_1_45_mRNA(t, y):
    mRNA194 = 0.00292 - (0.0093 * y[927])
    Peptide194 = (0.278 * y[927]) - (0.000000278 * y[1203])
    return (mRNA194) - (Peptide194)
 
def E4_2_1_46_mRNA(t, y):
    mRNA195 = 0.00292 - (0.0093 * y[928])
    Peptide195 = (0.278 * y[928]) - (0.000000278 * y[1204])
    return (mRNA195) - (Peptide195)
 
def E4_2_1_47_mRNA(t, y):
    mRNA196 = 0.00292 - (0.0093 * y[929])
    Peptide196 = (0.278 * y[929]) - (0.000000278 * y[1205])
    return (mRNA196) - (Peptide196)
 
def E4_2_1_51_mRNA(t, y):
    mRNA197 = 0.00292 - (0.0093 * y[930])
    Peptide197 = (0.278 * y[930]) - (0.000000278 * y[1206])
    return (mRNA197) - (Peptide197)
 
def E4_2_1_59_mRNA(t, y):
    mRNA198 = 0.00292 - (0.0093 * y[931])
    Peptide198 = (0.278 * y[931]) - (0.000000278 * y[1207])
    return (mRNA198) - (Peptide198)
 
def E4_2_1_82_mRNA(t, y):
    mRNA199 = 0.00292 - (0.0093 * y[932])
    Peptide199 = (0.278 * y[932]) - (0.000000278 * y[1208])
    return (mRNA199) - (Peptide199)
 
def E4_2_1_9_mRNA(t, y):
    mRNA200 = 0.00292 - (0.0093 * y[933])
    Peptide200 = (0.278 * y[933]) - (0.000000278 * y[1209])
    return (mRNA200) - (Peptide200)
 
def E4_2_3_1_mRNA(t, y):
    mRNA201 = 0.00292 - (0.0093 * y[934])
    Peptide201 = (0.278 * y[934]) - (0.000000278 * y[1210])
    return (mRNA201) - (Peptide201)
 
def E4_2_3_5_mRNA(t, y):
    mRNA202 = 0.00292 - (0.0093 * y[935])
    Peptide202 = (0.278 * y[935]) - (0.000000278 * y[1211])
    return (mRNA202) - (Peptide202)
 
def E4_3_1_15_mRNA(t, y):
    mRNA203 = 0.00292 - (0.0093 * y[936])
    Peptide203 = (0.278 * y[936]) - (0.000000278 * y[1212])
    return (mRNA203) - (Peptide203)
 
def E4_3_1_17_mRNA(t, y):
    mRNA204 = 0.00292 - (0.0093 * y[937])
    Peptide204 = (0.278 * y[937]) - (0.000000278 * y[1213])
    return (mRNA204) - (Peptide204)
 
def E4_3_1_19_mRNA(t, y):
    mRNA205 = 0.00292 - (0.0093 * y[938])
    Peptide205 = (0.278 * y[938]) - (0.000000278 * y[1214])
    return (mRNA205) - (Peptide205)
 
def E4_3_1_7_mRNA(t, y):
    mRNA206 = 0.00292 - (0.0093 * y[939])
    Peptide206 = (0.278 * y[939]) - (0.000000278 * y[1215])
    return (mRNA206) - (Peptide206)
 
def E4_3_2_1_mRNA(t, y):
    mRNA207 = 0.00292 - (0.0093 * y[940])
    Peptide207 = (0.278 * y[940]) - (0.000000278 * y[1216])
    return (mRNA207) - (Peptide207)
 
def E4_3_2_2_mRNA(t, y):
    mRNA208 = 0.00292 - (0.0093 * y[941])
    Peptide208 = (0.278 * y[941]) - (0.000000278 * y[1217])
    return (mRNA208) - (Peptide208)
 
def E4_3_3_6_mRNA(t, y):
    mRNA209 = 0.00292 - (0.0093 * y[942])
    Peptide209 = (0.278 * y[942]) - (0.000000278 * y[1218])
    return (mRNA209) - (Peptide209)
 
def E4_3_3_7_mRNA(t, y):
    mRNA210 = 0.00292 - (0.0093 * y[943])
    Peptide210 = (0.278 * y[943]) - (0.000000278 * y[1219])
    return (mRNA210) - (Peptide210)
 
def E4_3_99_3_mRNA(t, y):
    mRNA211 = 0.00292 - (0.0093 * y[944])
    Peptide211 = (0.278 * y[944]) - (0.000000278 * y[1220])
    return (mRNA211) - (Peptide211)
 
def E4_3_99_4_mRNA(t, y):
    mRNA212 = 0.00292 - (0.0093 * y[945])
    Peptide212 = (0.278 * y[945]) - (0.000000278 * y[1221])
    return (mRNA212) - (Peptide212)
 
def E4_6_1_17_mRNA(t, y):
    mRNA213 = 0.00292 - (0.0093 * y[946])
    Peptide213 = (0.278 * y[946]) - (0.000000278 * y[1222])
    return (mRNA213) - (Peptide213)
 
def E5_1_1_1_mRNA(t, y):
    mRNA214 = 0.00292 - (0.0093 * y[947])
    Peptide214 = (0.278 * y[947]) - (0.000000278 * y[1223])
    return (mRNA214) - (Peptide214)
 
def E5_1_1_3_mRNA(t, y):
    mRNA215 = 0.00292 - (0.0093 * y[948])
    Peptide215 = (0.278 * y[948]) - (0.000000278 * y[1224])
    return (mRNA215) - (Peptide215)
 
def E5_1_1_7_mRNA(t, y):
    mRNA216 = 0.00292 - (0.0093 * y[949])
    Peptide216 = (0.278 * y[949]) - (0.000000278 * y[1225])
    return (mRNA216) - (Peptide216)
 
def E5_1_3_1_mRNA(t, y):
    mRNA217 = 0.00292 - (0.0093 * y[950])
    Peptide217 = (0.278 * y[950]) - (0.000000278 * y[1226])
    return (mRNA217) - (Peptide217)
 
def E5_1_3_13_mRNA(t, y):
    mRNA218 = 0.00292 - (0.0093 * y[951])
    Peptide218 = (0.278 * y[951]) - (0.000000278 * y[1227])
    return (mRNA218) - (Peptide218)
 
def E5_1_3_2_mRNA(t, y):
    mRNA219 = 0.00292 - (0.0093 * y[952])
    Peptide219 = (0.278 * y[952]) - (0.000000278 * y[1228])
    return (mRNA219) - (Peptide219)
 
def E5_1_3_20_mRNA(t, y):
    mRNA220 = 0.00292 - (0.0093 * y[953])
    Peptide220 = (0.278 * y[953]) - (0.000000278 * y[1229])
    return (mRNA220) - (Peptide220)
 
def E5_2_1_8_mRNA(t, y):
    mRNA221 = 0.00292 - (0.0093 * y[954])
    Peptide221 = (0.278 * y[954]) - (0.000000278 * y[1230])
    return (mRNA221) - (Peptide221)
 
def E5_3_1_1_mRNA(t, y):
    mRNA222 = 0.00292 - (0.0093 * y[955])
    Peptide222 = (0.278 * y[955]) - (0.000000278 * y[1231])
    return (mRNA222) - (Peptide222)
 
def E5_3_1_16_mRNA(t, y):
    mRNA223 = 0.00292 - (0.0093 * y[956])
    Peptide223 = (0.278 * y[956]) - (0.000000278 * y[1232])
    return (mRNA223) - (Peptide223)
 
def E5_3_1_23_mRNA(t, y):
    mRNA224 = 0.00292 - (0.0093 * y[957])
    Peptide224 = (0.278 * y[957]) - (0.000000278 * y[1233])
    return (mRNA224) - (Peptide224)
 
def E5_3_1_28_mRNA(t, y):
    mRNA225 = 0.00292 - (0.0093 * y[958])
    Peptide225 = (0.278 * y[958]) - (0.000000278 * y[1234])
    return (mRNA225) - (Peptide225)
 
def E5_3_1_6_mRNA(t, y):
    mRNA226 = 0.00292 - (0.0093 * y[959])
    Peptide226 = (0.278 * y[959]) - (0.000000278 * y[1235])
    return (mRNA226) - (Peptide226)
 
def E5_3_1_8_mRNA(t, y):
    mRNA227 = 0.00292 - (0.0093 * y[960])
    Peptide227 = (0.278 * y[960]) - (0.000000278 * y[1236])
    return (mRNA227) - (Peptide227)
 
def E5_4_2_10_mRNA(t, y):
    mRNA228 = 0.00292 - (0.0093 * y[961])
    Peptide228 = (0.278 * y[961]) - (0.000000278 * y[1237])
    return (mRNA228) - (Peptide228)
 
def E5_4_2_12_mRNA(t, y):
    mRNA229 = 0.00292 - (0.0093 * y[962])
    Peptide229 = (0.278 * y[962]) - (0.000000278 * y[1238])
    return (mRNA229) - (Peptide229)
 
def E5_4_2_2_mRNA(t, y):
    mRNA230 = 0.00292 - (0.0093 * y[963])
    Peptide230 = (0.278 * y[963]) - (0.000000278 * y[1239])
    return (mRNA230) - (Peptide230)
 
def E5_4_3_8_mRNA(t, y):
    mRNA231 = 0.00292 - (0.0093 * y[964])
    Peptide231 = (0.278 * y[964]) - (0.000000278 * y[1240])
    return (mRNA231) - (Peptide231)
 
def E5_4_99_12_mRNA(t, y):
    mRNA232 = 0.00292 - (0.0093 * y[965])
    Peptide232 = (0.278 * y[965]) - (0.000000278 * y[1241])
    return (mRNA232) - (Peptide232)
 
def E5_4_99_18_mRNA(t, y):
    mRNA233 = 0.00292 - (0.0093 * y[966])
    Peptide233 = (0.278 * y[966]) - (0.000000278 * y[1242])
    return (mRNA233) - (Peptide233)
 
def E6_1_1_1_mRNA(t, y):
    mRNA234 = 0.00292 - (0.0093 * y[967])
    Peptide234 = (0.278 * y[967]) - (0.000000278 * y[1243])
    return (mRNA234) - (Peptide234)
 
def E6_1_1_10_mRNA(t, y):
    mRNA235 = 0.00292 - (0.0093 * y[968])
    Peptide235 = (0.278 * y[968]) - (0.000000278 * y[1244])
    return (mRNA235) - (Peptide235)
 
def E6_1_1_11_mRNA(t, y):
    mRNA236 = 0.00292 - (0.0093 * y[969])
    Peptide236 = (0.278 * y[969]) - (0.000000278 * y[1245])
    return (mRNA236) - (Peptide236)
 
def E6_1_1_12_mRNA(t, y):
    mRNA237 = 0.00292 - (0.0093 * y[970])
    Peptide237 = (0.278 * y[970]) - (0.000000278 * y[1246])
    return (mRNA237) - (Peptide237)
 
def E6_1_1_14_mRNA(t, y):
    mRNA238 = 0.00292 - (0.0093 * y[971])
    Peptide238 = (0.278 * y[971]) - (0.000000278 * y[1247])
    return (mRNA238) - (Peptide238)
 
def E6_1_1_15_mRNA(t, y):
    mRNA239 = 0.00292 - (0.0093 * y[972])
    Peptide239 = (0.278 * y[972]) - (0.000000278 * y[1248])
    return (mRNA239) - (Peptide239)
 
def E6_1_1_16_mRNA(t, y):
    mRNA240 = 0.00292 - (0.0093 * y[973])
    Peptide240 = (0.278 * y[973]) - (0.000000278 * y[1249])
    return (mRNA240) - (Peptide240)
 
def E6_1_1_17_mRNA(t, y):
    mRNA241 = 0.00292 - (0.0093 * y[974])
    Peptide241 = (0.278 * y[974]) - (0.000000278 * y[1250])
    return (mRNA241) - (Peptide241)
 
def E6_1_1_19_mRNA(t, y):
    mRNA242 = 0.00292 - (0.0093 * y[975])
    Peptide242 = (0.278 * y[975]) - (0.000000278 * y[1251])
    return (mRNA242) - (Peptide242)
 
def E6_1_1_2_mRNA(t, y):
    mRNA243 = 0.00292 - (0.0093 * y[976])
    Peptide243 = (0.278 * y[976]) - (0.000000278 * y[1252])
    return (mRNA243) - (Peptide243)
 
def E6_1_1_20_mRNA(t, y):
    mRNA244 = 0.00292 - (0.0093 * y[977])
    Peptide244 = (0.278 * y[977]) - (0.000000278 * y[1253])
    return (mRNA244) - (Peptide244)
 
def E6_1_1_21_mRNA(t, y):
    mRNA245 = 0.00292 - (0.0093 * y[978])
    Peptide245 = (0.278 * y[978]) - (0.000000278 * y[1254])
    return (mRNA245) - (Peptide245)
 
def E6_1_1_22_mRNA(t, y):
    mRNA246 = 0.00292 - (0.0093 * y[979])
    Peptide246 = (0.278 * y[979]) - (0.000000278 * y[1255])
    return (mRNA246) - (Peptide246)
 
def E6_1_1_3_mRNA(t, y):
    mRNA247 = 0.00292 - (0.0093 * y[980])
    Peptide247 = (0.278 * y[980]) - (0.000000278 * y[1256])
    return (mRNA247) - (Peptide247)
 
def E6_1_1_4_mRNA(t, y):
    mRNA248 = 0.00292 - (0.0093 * y[981])
    Peptide248 = (0.278 * y[981]) - (0.000000278 * y[1257])
    return (mRNA248) - (Peptide248)
 
def E6_1_1_5_mRNA(t, y):
    mRNA249 = 0.00292 - (0.0093 * y[982])
    Peptide249 = (0.278 * y[982]) - (0.000000278 * y[1258])
    return (mRNA249) - (Peptide249)
 
def E6_1_1_6_mRNA(t, y):
    mRNA250 = 0.00292 - (0.0093 * y[983])
    Peptide250 = (0.278 * y[983]) - (0.000000278 * y[1259])
    return (mRNA250) - (Peptide250)
 
def E6_1_1_7_mRNA(t, y):
    mRNA251 = 0.00292 - (0.0093 * y[984])
    Peptide251 = (0.278 * y[984]) - (0.000000278 * y[1260])
    return (mRNA251) - (Peptide251)
 
def E6_1_1_9_mRNA(t, y):
    mRNA252 = 0.00292 - (0.0093 * y[985])
    Peptide252 = (0.278 * y[985]) - (0.000000278 * y[1261])
    return (mRNA252) - (Peptide252)
 
def E6_2_1_1_mRNA(t, y):
    mRNA253 = 0.00292 - (0.0093 * y[986])
    Peptide253 = (0.278 * y[986]) - (0.000000278 * y[1262])
    return (mRNA253) - (Peptide253)
 
def E6_3_1_20_mRNA(t, y):
    mRNA254 = 0.00292 - (0.0093 * y[987])
    Peptide254 = (0.278 * y[987]) - (0.000000278 * y[1263])
    return (mRNA254) - (Peptide254)
 
def E6_3_2_1_mRNA(t, y):
    mRNA255 = 0.00292 - (0.0093 * y[988])
    Peptide255 = (0.278 * y[988]) - (0.000000278 * y[1264])
    return (mRNA255) - (Peptide255)
 
def E6_3_2_13_mRNA(t, y):
    mRNA256 = 0.00292 - (0.0093 * y[989])
    Peptide256 = (0.278 * y[989]) - (0.000000278 * y[1265])
    return (mRNA256) - (Peptide256)
 
def E6_3_2_4_mRNA(t, y):
    mRNA257 = 0.00292 - (0.0093 * y[990])
    Peptide257 = (0.278 * y[990]) - (0.000000278 * y[1266])
    return (mRNA257) - (Peptide257)
 
def E6_3_2_5_mRNA(t, y):
    mRNA258 = 0.00292 - (0.0093 * y[991])
    Peptide258 = (0.278 * y[991]) - (0.000000278 * y[1267])
    return (mRNA258) - (Peptide258)
 
def E6_3_2_6_mRNA(t, y):
    mRNA259 = 0.00292 - (0.0093 * y[992])
    Peptide259 = (0.278 * y[992]) - (0.000000278 * y[1268])
    return (mRNA259) - (Peptide259)
 
def E6_3_2_8_mRNA(t, y):
    mRNA260 = 0.00292 - (0.0093 * y[993])
    Peptide260 = (0.278 * y[993]) - (0.000000278 * y[1269])
    return (mRNA260) - (Peptide260)
 
def E6_3_2_9_mRNA(t, y):
    mRNA261 = 0.00292 - (0.0093 * y[994])
    Peptide261 = (0.278 * y[994]) - (0.000000278 * y[1270])
    return (mRNA261) - (Peptide261)
 
def E6_3_3_1_mRNA(t, y):
    mRNA262 = 0.00292 - (0.0093 * y[995])
    Peptide262 = (0.278 * y[995]) - (0.000000278 * y[1271])
    return (mRNA262) - (Peptide262)
 
def E6_3_3_2_mRNA(t, y):
    mRNA263 = 0.00292 - (0.0093 * y[996])
    Peptide263 = (0.278 * y[996]) - (0.000000278 * y[1272])
    return (mRNA263) - (Peptide263)
 
def E6_3_4_13_mRNA(t, y):
    mRNA264 = 0.00292 - (0.0093 * y[997])
    Peptide264 = (0.278 * y[997]) - (0.000000278 * y[1273])
    return (mRNA264) - (Peptide264)
 
def E6_3_4_15_mRNA(t, y):
    mRNA265 = 0.00292 - (0.0093 * y[998])
    Peptide265 = (0.278 * y[998]) - (0.000000278 * y[1274])
    return (mRNA265) - (Peptide265)
 
def E6_3_4_19_mRNA(t, y):
    mRNA266 = 0.00292 - (0.0093 * y[999])
    Peptide266 = (0.278 * y[999]) - (0.000000278 * y[1275])
    return (mRNA266) - (Peptide266)
 
def E6_3_4_2_mRNA(t, y):
    mRNA267 = 0.00292 - (0.0093 * y[1000])
    Peptide267 = (0.278 * y[1000]) - (0.000000278 * y[1276])
    return (mRNA267) - (Peptide267)
 
def E6_3_4_20_mRNA(t, y):
    mRNA268 = 0.00292 - (0.0093 * y[1001])
    Peptide268 = (0.278 * y[1001]) - (0.000000278 * y[1277])
    return (mRNA268) - (Peptide268)
 
def E6_3_4_4_mRNA(t, y):
    mRNA269 = 0.00292 - (0.0093 * y[1002])
    Peptide269 = (0.278 * y[1002]) - (0.000000278 * y[1278])
    return (mRNA269) - (Peptide269)
 
def E6_3_4_5_mRNA(t, y):
    mRNA270 = 0.00292 - (0.0093 * y[1003])
    Peptide270 = (0.278 * y[1003]) - (0.000000278 * y[1279])
    return (mRNA270) - (Peptide270)
 
def E6_3_5_1_mRNA(t, y):
    mRNA271 = 0.00292 - (0.0093 * y[1004])
    Peptide271 = (0.278 * y[1004]) - (0.000000278 * y[1280])
    return (mRNA271) - (Peptide271)
 
def E6_3_5_2_mRNA(t, y):
    mRNA272 = 0.00292 - (0.0093 * y[1005])
    Peptide272 = (0.278 * y[1005]) - (0.000000278 * y[1281])
    return (mRNA272) - (Peptide272)
 
def E6_3_5_4_mRNA(t, y):
    mRNA273 = 0.00292 - (0.0093 * y[1006])
    Peptide273 = (0.278 * y[1006]) - (0.000000278 * y[1282])
    return (mRNA273) - (Peptide273)
 
def E6_3_5_5_mRNA(t, y):
    mRNA274 = 0.00292 - (0.0093 * y[1007])
    Peptide274 = (0.278 * y[1007]) - (0.000000278 * y[1283])
    return (mRNA274) - (Peptide274)
 
def E6_4_1_1_mRNA(t, y):
    mRNA275 = 0.00292 - (0.0093 * y[1008])
    Peptide275 = (0.278 * y[1008]) - (0.000000278 * y[1284])
    return (mRNA275) - (Peptide275)
 
def E6_5_1_2_mRNA(t, y):
    mRNA276 = 0.00292 - (0.0093 * y[1009])
    Peptide276 = (0.278 * y[1009]) - (0.000000278 * y[1285])
    return (mRNA276) - (Peptide276)
 
def E1_1_1_1(t, y):
    Peptide1 = (0.278 * y[734]) - (0.000000278 * y[1010])
    return (Peptide1) - (0)
 
def E1_1_1_100(t, y):
    Peptide2 = (0.278 * y[735]) - (0.000000278 * y[1011])
    return (Peptide2) - (0)
 
def E1_1_1_133(t, y):
    Peptide3 = (0.278 * y[736]) - (0.000000278 * y[1012])
    return (Peptide3) - (0)
 
def E1_1_1_193(t, y):
    Peptide4 = (0.278 * y[737]) - (0.000000278 * y[1013])
    return (Peptide4) - (0)
 
def E1_1_1_205(t, y):
    Peptide5 = (0.278 * y[738]) - (0.000000278 * y[1014])
    return (Peptide5) - (0)
 
def E1_1_1_23(t, y):
    Peptide6 = (0.278 * y[739]) - (0.000000278 * y[1015])
    return (Peptide6) - (0)
 
def E1_1_1_267(t, y):
    Peptide7 = (0.278 * y[740]) - (0.000000278 * y[1016])
    return (Peptide7) - (0)
 
def E1_1_1_85(t, y):
    Peptide8 = (0.278 * y[741]) - (0.000000278 * y[1017])
    return (Peptide8) - (0)
 
def E1_1_1_86(t, y):
    Peptide9 = (0.278 * y[742]) - (0.000000278 * y[1018])
    return (Peptide9) - (0)
 
def E1_1_5_3(t, y):
    Peptide10 = (0.278 * y[743]) - (0.000000278 * y[1019])
    return (Peptide10) - (0)
 
def E1_17_1_8(t, y):
    Peptide11 = (0.278 * y[744]) - (0.000000278 * y[1020])
    return (Peptide11) - (0)
 
def E1_17_4_1(t, y):
    Peptide12 = (0.278 * y[745]) - (0.000000278 * y[1021])
    return (Peptide12) - (0)
 
def E1_17_4_2(t, y):
    Peptide13 = (0.278 * y[746]) - (0.000000278 * y[1022])
    return (Peptide13) - (0)
 
def E1_17_7_1(t, y):
    Peptide14 = (0.278 * y[747]) - (0.000000278 * y[1023])
    return (Peptide14) - (0)
 
def E1_17_7_4(t, y):
    Peptide15 = (0.278 * y[748]) - (0.000000278 * y[1024])
    return (Peptide15) - (0)
 
def E1_18_6_1(t, y):
    Peptide16 = (0.278 * y[749]) - (0.000000278 * y[1025])
    return (Peptide16) - (0)
 
def E1_2_1_10(t, y):
    Peptide17 = (0.278 * y[750]) - (0.000000278 * y[1026])
    return (Peptide17) - (0)
 
def E1_2_1_11(t, y):
    Peptide18 = (0.278 * y[751]) - (0.000000278 * y[1027])
    return (Peptide18) - (0)
 
def E1_2_1_38(t, y):
    Peptide19 = (0.278 * y[752]) - (0.000000278 * y[1028])
    return (Peptide19) - (0)
 
def E1_2_1_41(t, y):
    Peptide20 = (0.278 * y[753]) - (0.000000278 * y[1029])
    return (Peptide20) - (0)
 
def E1_2_1_70(t, y):
    Peptide21 = (0.278 * y[754]) - (0.000000278 * y[1030])
    return (Peptide21) - (0)
 
def E1_2_7_4(t, y):
    Peptide22 = (0.278 * y[755]) - (0.000000278 * y[1031])
    return (Peptide22) - (0)
 
def E1_2_7_5(t, y):
    Peptide23 = (0.278 * y[756]) - (0.000000278 * y[1032])
    return (Peptide23) - (0)
 
def E1_2_7_8(t, y):
    Peptide24 = (0.278 * y[757]) - (0.000000278 * y[1033])
    return (Peptide24) - (0)
 
def E1_3_1_14(t, y):
    Peptide25 = (0.278 * y[758]) - (0.000000278 * y[1034])
    return (Peptide25) - (0)
 
def E1_3_1_98(t, y):
    Peptide26 = (0.278 * y[759]) - (0.000000278 * y[1035])
    return (Peptide26) - (0)
 
def E1_4_1_1(t, y):
    Peptide27 = (0.278 * y[760]) - (0.000000278 * y[1036])
    return (Peptide27) - (0)
 
def E1_4_1_13(t, y):
    Peptide28 = (0.278 * y[761]) - (0.000000278 * y[1037])
    return (Peptide28) - (0)
 
def E1_4_1_4(t, y):
    Peptide29 = (0.278 * y[762]) - (0.000000278 * y[1038])
    return (Peptide29) - (0)
 
def E1_4_3_16(t, y):
    Peptide30 = (0.278 * y[763]) - (0.000000278 * y[1039])
    return (Peptide30) - (0)
 
def E1_4_4_2(t, y):
    Peptide31 = (0.278 * y[764]) - (0.000000278 * y[1040])
    return (Peptide31) - (0)
 
def E1_5_1_2(t, y):
    Peptide32 = (0.278 * y[765]) - (0.000000278 * y[1041])
    return (Peptide32) - (0)
 
def E1_5_1_20(t, y):
    Peptide33 = (0.278 * y[766]) - (0.000000278 * y[1042])
    return (Peptide33) - (0)
 
def E1_7_1_13(t, y):
    Peptide34 = (0.278 * y[767]) - (0.000000278 * y[1043])
    return (Peptide34) - (0)
 
def E1_7_99_1(t, y):
    Peptide35 = (0.278 * y[768]) - (0.000000278 * y[1044])
    return (Peptide35) - (0)
 
def E1_8_1_4(t, y):
    Peptide36 = (0.278 * y[769]) - (0.000000278 * y[1045])
    return (Peptide36) - (0)
 
def E1_8_1_9(t, y):
    Peptide37 = (0.278 * y[770]) - (0.000000278 * y[1046])
    return (Peptide37) - (0)
 
def E1_8_4_11(t, y):
    Peptide38 = (0.278 * y[771]) - (0.000000278 * y[1047])
    return (Peptide38) - (0)
 
def E1_8_4_12(t, y):
    Peptide39 = (0.278 * y[772]) - (0.000000278 * y[1048])
    return (Peptide39) - (0)
 
def E1_8_5_3(t, y):
    Peptide40 = (0.278 * y[773]) - (0.000000278 * y[1049])
    return (Peptide40) - (0)
 
def E1_8_99_2(t, y):
    Peptide41 = (0.278 * y[774]) - (0.000000278 * y[1050])
    return (Peptide41) - (0)
 
def E2_1_1_107(t, y):
    Peptide42 = (0.278 * y[775]) - (0.000000278 * y[1051])
    return (Peptide42) - (0)
 
def E2_1_1_130(t, y):
    Peptide43 = (0.278 * y[776]) - (0.000000278 * y[1052])
    return (Peptide43) - (0)
 
def E2_1_1_131(t, y):
    Peptide44 = (0.278 * y[777]) - (0.000000278 * y[1053])
    return (Peptide44) - (0)
 
def E2_1_1_133(t, y):
    Peptide45 = (0.278 * y[778]) - (0.000000278 * y[1054])
    return (Peptide45) - (0)
 
def E2_1_1_171(t, y):
    Peptide46 = (0.278 * y[779]) - (0.000000278 * y[1055])
    return (Peptide46) - (0)
 
def E2_1_1_182(t, y):
    Peptide47 = (0.278 * y[780]) - (0.000000278 * y[1056])
    return (Peptide47) - (0)
 
def E2_1_1_197(t, y):
    Peptide48 = (0.278 * y[781]) - (0.000000278 * y[1057])
    return (Peptide48) - (0)
 
def E2_1_1_228(t, y):
    Peptide49 = (0.278 * y[782]) - (0.000000278 * y[1058])
    return (Peptide49) - (0)
 
def E2_1_1_297(t, y):
    Peptide50 = (0.278 * y[783]) - (0.000000278 * y[1059])
    return (Peptide50) - (0)
 
def E2_1_1_63(t, y):
    Peptide51 = (0.278 * y[784]) - (0.000000278 * y[1060])
    return (Peptide51) - (0)
 
def E2_1_1_72(t, y):
    Peptide52 = (0.278 * y[785]) - (0.000000278 * y[1061])
    return (Peptide52) - (0)
 
def E2_1_1_77(t, y):
    Peptide53 = (0.278 * y[786]) - (0.000000278 * y[1062])
    return (Peptide53) - (0)
 
def E2_1_2_10(t, y):
    Peptide54 = (0.278 * y[787]) - (0.000000278 * y[1063])
    return (Peptide54) - (0)
 
def E2_1_2_11(t, y):
    Peptide55 = (0.278 * y[788]) - (0.000000278 * y[1064])
    return (Peptide55) - (0)
 
def E2_1_2_2(t, y):
    Peptide56 = (0.278 * y[789]) - (0.000000278 * y[1065])
    return (Peptide56) - (0)
 
def E2_1_2_9(t, y):
    Peptide57 = (0.278 * y[790]) - (0.000000278 * y[1066])
    return (Peptide57) - (0)
 
def E2_1_3_2(t, y):
    Peptide58 = (0.278 * y[791]) - (0.000000278 * y[1067])
    return (Peptide58) - (0)
 
def E2_1_3_3(t, y):
    Peptide59 = (0.278 * y[792]) - (0.000000278 * y[1068])
    return (Peptide59) - (0)
 
def E2_2_1_1(t, y):
    Peptide60 = (0.278 * y[793]) - (0.000000278 * y[1069])
    return (Peptide60) - (0)
 
def E2_2_1_10(t, y):
    Peptide61 = (0.278 * y[794]) - (0.000000278 * y[1070])
    return (Peptide61) - (0)
 
def E2_2_1_6(t, y):
    Peptide62 = (0.278 * y[795]) - (0.000000278 * y[1071])
    return (Peptide62) - (0)
 
def E2_2_1_7(t, y):
    Peptide63 = (0.278 * y[796]) - (0.000000278 * y[1072])
    return (Peptide63) - (0)
 
def E2_3_1_1(t, y):
    Peptide64 = (0.278 * y[797]) - (0.000000278 * y[1073])
    return (Peptide64) - (0)
 
def E2_3_1_15(t, y):
    Peptide65 = (0.278 * y[798]) - (0.000000278 * y[1074])
    return (Peptide65) - (0)
 
def E2_3_1_179(t, y):
    Peptide66 = (0.278 * y[799]) - (0.000000278 * y[1075])
    return (Peptide66) - (0)
 
def E2_3_1_181(t, y):
    Peptide67 = (0.278 * y[800]) - (0.000000278 * y[1076])
    return (Peptide67) - (0)
 
def E2_3_1_234(t, y):
    Peptide68 = (0.278 * y[801]) - (0.000000278 * y[1077])
    return (Peptide68) - (0)
 
def E2_3_1_35(t, y):
    Peptide69 = (0.278 * y[802]) - (0.000000278 * y[1078])
    return (Peptide69) - (0)
 
def E2_3_1_46(t, y):
    Peptide70 = (0.278 * y[803]) - (0.000000278 * y[1079])
    return (Peptide70) - (0)
 
def E2_3_1_8(t, y):
    Peptide71 = (0.278 * y[804]) - (0.000000278 * y[1080])
    return (Peptide71) - (0)
 
def E2_3_2_2(t, y):
    Peptide72 = (0.278 * y[805]) - (0.000000278 * y[1081])
    return (Peptide72) - (0)
 
def E2_3_2_6(t, y):
    Peptide73 = (0.278 * y[806]) - (0.000000278 * y[1082])
    return (Peptide73) - (0)
 
def E2_3_3_13(t, y):
    Peptide74 = (0.278 * y[807]) - (0.000000278 * y[1083])
    return (Peptide74) - (0)
 
def E2_4_1_227(t, y):
    Peptide75 = (0.278 * y[808]) - (0.000000278 * y[1084])
    return (Peptide75) - (0)
 
def E2_4_2_1(t, y):
    Peptide76 = (0.278 * y[809]) - (0.000000278 * y[1085])
    return (Peptide76) - (0)
 
def E2_4_2_10(t, y):
    Peptide77 = (0.278 * y[810]) - (0.000000278 * y[1086])
    return (Peptide77) - (0)
 
def E2_4_2_14(t, y):
    Peptide78 = (0.278 * y[811]) - (0.000000278 * y[1087])
    return (Peptide78) - (0)
 
def E2_4_2_17(t, y):
    Peptide79 = (0.278 * y[812]) - (0.000000278 * y[1088])
    return (Peptide79) - (0)
 
def E2_4_2_18(t, y):
    Peptide80 = (0.278 * y[813]) - (0.000000278 * y[1089])
    return (Peptide80) - (0)
 
def E2_4_2_19(t, y):
    Peptide81 = (0.278 * y[814]) - (0.000000278 * y[1090])
    return (Peptide81) - (0)
 
def E2_4_2_21(t, y):
    Peptide82 = (0.278 * y[815]) - (0.000000278 * y[1091])
    return (Peptide82) - (0)
 
def E2_4_2_29(t, y):
    Peptide83 = (0.278 * y[816]) - (0.000000278 * y[1092])
    return (Peptide83) - (0)
 
def E2_4_2_8(t, y):
    Peptide84 = (0.278 * y[817]) - (0.000000278 * y[1093])
    return (Peptide84) - (0)
 
def E2_4_2_9(t, y):
    Peptide85 = (0.278 * y[818]) - (0.000000278 * y[1094])
    return (Peptide85) - (0)
 
def E2_4_99_17(t, y):
    Peptide86 = (0.278 * y[819]) - (0.000000278 * y[1095])
    return (Peptide86) - (0)
 
def E2_5_1_15(t, y):
    Peptide87 = (0.278 * y[820]) - (0.000000278 * y[1096])
    return (Peptide87) - (0)
 
def E2_5_1_3(t, y):
    Peptide88 = (0.278 * y[821]) - (0.000000278 * y[1097])
    return (Peptide88) - (0)
 
def E2_5_1_31(t, y):
    Peptide89 = (0.278 * y[822]) - (0.000000278 * y[1098])
    return (Peptide89) - (0)
 
def E2_5_1_47(t, y):
    Peptide90 = (0.278 * y[823]) - (0.000000278 * y[1099])
    return (Peptide90) - (0)
 
def E2_5_1_6(t, y):
    Peptide91 = (0.278 * y[824]) - (0.000000278 * y[1100])
    return (Peptide91) - (0)
 
def E2_5_1_61(t, y):
    Peptide92 = (0.278 * y[825]) - (0.000000278 * y[1101])
    return (Peptide92) - (0)
 
def E2_5_1_7(t, y):
    Peptide93 = (0.278 * y[826]) - (0.000000278 * y[1102])
    return (Peptide93) - (0)
 
def E2_5_1_72(t, y):
    Peptide94 = (0.278 * y[827]) - (0.000000278 * y[1103])
    return (Peptide94) - (0)
 
def E2_5_1_75(t, y):
    Peptide95 = (0.278 * y[828]) - (0.000000278 * y[1104])
    return (Peptide95) - (0)
 
def E2_5_1_78(t, y):
    Peptide96 = (0.278 * y[829]) - (0.000000278 * y[1105])
    return (Peptide96) - (0)
 
def E2_5_1_9(t, y):
    Peptide97 = (0.278 * y[830]) - (0.000000278 * y[1106])
    return (Peptide97) - (0)
 
def E2_6_1_16(t, y):
    Peptide98 = (0.278 * y[831]) - (0.000000278 * y[1107])
    return (Peptide98) - (0)
 
def E2_6_1_42(t, y):
    Peptide99 = (0.278 * y[832]) - (0.000000278 * y[1108])
    return (Peptide99) - (0)
 
def E2_6_1_62(t, y):
    Peptide100 = (0.278 * y[833]) - (0.000000278 * y[1109])
    return (Peptide100) - (0)
 
def E2_6_1_83(t, y):
    Peptide101 = (0.278 * y[834]) - (0.000000278 * y[1110])
    return (Peptide101) - (0)
 
def E2_6_1_9(t, y):
    Peptide102 = (0.278 * y[835]) - (0.000000278 * y[1111])
    return (Peptide102) - (0)
 
def E2_7_1_148(t, y):
    Peptide103 = (0.278 * y[836]) - (0.000000278 * y[1112])
    return (Peptide103) - (0)
 
def E2_7_1_24(t, y):
    Peptide104 = (0.278 * y[837]) - (0.000000278 * y[1113])
    return (Peptide104) - (0)
 
def E2_7_1_25(t, y):
    Peptide105 = (0.278 * y[838]) - (0.000000278 * y[1114])
    return (Peptide105) - (0)
 
def E2_7_1_26(t, y):
    Peptide106 = (0.278 * y[839]) - (0.000000278 * y[1115])
    return (Peptide106) - (0)
 
def E2_7_1_30(t, y):
    Peptide107 = (0.278 * y[840]) - (0.000000278 * y[1116])
    return (Peptide107) - (0)
 
def E2_7_1_33(t, y):
    Peptide108 = (0.278 * y[841]) - (0.000000278 * y[1117])
    return (Peptide108) - (0)
 
def E2_7_1_40(t, y):
    Peptide109 = (0.278 * y[842]) - (0.000000278 * y[1118])
    return (Peptide109) - (0)
 
def E2_7_1_49(t, y):
    Peptide110 = (0.278 * y[843]) - (0.000000278 * y[1119])
    return (Peptide110) - (0)
 
def E2_7_1_50(t, y):
    Peptide111 = (0.278 * y[844]) - (0.000000278 * y[1120])
    return (Peptide111) - (0)
 
def E2_7_1_71(t, y):
    Peptide112 = (0.278 * y[845]) - (0.000000278 * y[1121])
    return (Peptide112) - (0)
 
def E2_7_2_11(t, y):
    Peptide113 = (0.278 * y[846]) - (0.000000278 * y[1122])
    return (Peptide113) - (0)
 
def E2_7_2_4(t, y):
    Peptide114 = (0.278 * y[847]) - (0.000000278 * y[1123])
    return (Peptide114) - (0)
 
def E2_7_2_7(t, y):
    Peptide115 = (0.278 * y[848]) - (0.000000278 * y[1124])
    return (Peptide115) - (0)
 
def E2_7_2_8(t, y):
    Peptide116 = (0.278 * y[849]) - (0.000000278 * y[1125])
    return (Peptide116) - (0)
 
def E2_7_3_9(t, y):
    Peptide117 = (0.278 * y[850]) - (0.000000278 * y[1126])
    return (Peptide117) - (0)
 
def E2_7_4_1(t, y):
    Peptide118 = (0.278 * y[851]) - (0.000000278 * y[1127])
    return (Peptide118) - (0)
 
def E2_7_4_16(t, y):
    Peptide119 = (0.278 * y[852]) - (0.000000278 * y[1128])
    return (Peptide119) - (0)
 
def E2_7_4_22(t, y):
    Peptide120 = (0.278 * y[853]) - (0.000000278 * y[1129])
    return (Peptide120) - (0)
 
def E2_7_4_25(t, y):
    Peptide121 = (0.278 * y[854]) - (0.000000278 * y[1130])
    return (Peptide121) - (0)
 
def E2_7_4_6(t, y):
    Peptide122 = (0.278 * y[855]) - (0.000000278 * y[1131])
    return (Peptide122) - (0)
 
def E2_7_4_7(t, y):
    Peptide123 = (0.278 * y[856]) - (0.000000278 * y[1132])
    return (Peptide123) - (0)
 
def E2_7_4_8(t, y):
    Peptide124 = (0.278 * y[857]) - (0.000000278 * y[1133])
    return (Peptide124) - (0)
 
def E2_7_4_9(t, y):
    Peptide125 = (0.278 * y[858]) - (0.000000278 * y[1134])
    return (Peptide125) - (0)
 
def E2_7_6_3(t, y):
    Peptide126 = (0.278 * y[859]) - (0.000000278 * y[1135])
    return (Peptide126) - (0)
 
def E2_7_7_13(t, y):
    Peptide127 = (0.278 * y[860]) - (0.000000278 * y[1136])
    return (Peptide127) - (0)
 
def E2_7_7_2(t, y):
    Peptide128 = (0.278 * y[861]) - (0.000000278 * y[1137])
    return (Peptide128) - (0)
 
def E2_7_7_23(t, y):
    Peptide129 = (0.278 * y[862]) - (0.000000278 * y[1138])
    return (Peptide129) - (0)
 
def E2_7_7_24(t, y):
    Peptide130 = (0.278 * y[863]) - (0.000000278 * y[1139])
    return (Peptide130) - (0)
 
def E2_7_7_3(t, y):
    Peptide131 = (0.278 * y[864]) - (0.000000278 * y[1140])
    return (Peptide131) - (0)
 
def E2_7_7_33(t, y):
    Peptide132 = (0.278 * y[865]) - (0.000000278 * y[1141])
    return (Peptide132) - (0)
 
def E2_7_7_4(t, y):
    Peptide133 = (0.278 * y[866]) - (0.000000278 * y[1142])
    return (Peptide133) - (0)
 
def E2_7_7_41(t, y):
    Peptide134 = (0.278 * y[867]) - (0.000000278 * y[1143])
    return (Peptide134) - (0)
 
def E2_7_7_6(t, y):
    Peptide135 = (0.278 * y[868]) - (0.000000278 * y[1144])
    return (Peptide135) - (0)
 
def E2_7_7_60(t, y):
    Peptide136 = (0.278 * y[869]) - (0.000000278 * y[1145])
    return (Peptide136) - (0)
 
def E2_7_7_65(t, y):
    Peptide137 = (0.278 * y[870]) - (0.000000278 * y[1146])
    return (Peptide137) - (0)
 
def E2_7_7_7(t, y):
    Peptide138 = (0.278 * y[871]) - (0.000000278 * y[1147])
    return (Peptide138) - (0)
 
def E2_7_7_8(t, y):
    Peptide139 = (0.278 * y[872]) - (0.000000278 * y[1148])
    return (Peptide139) - (0)
 
def E2_7_7_85(t, y):
    Peptide140 = (0.278 * y[873]) - (0.000000278 * y[1149])
    return (Peptide140) - (0)
 
def E2_7_7_9(t, y):
    Peptide141 = (0.278 * y[874]) - (0.000000278 * y[1150])
    return (Peptide141) - (0)
 
def E2_7_8_13(t, y):
    Peptide142 = (0.278 * y[875]) - (0.000000278 * y[1151])
    return (Peptide142) - (0)
 
def E2_7_8_5(t, y):
    Peptide143 = (0.278 * y[876]) - (0.000000278 * y[1152])
    return (Peptide143) - (0)
 
def E2_7_8_7(t, y):
    Peptide144 = (0.278 * y[877]) - (0.000000278 * y[1153])
    return (Peptide144) - (0)
 
def E2_7_8_8(t, y):
    Peptide145 = (0.278 * y[878]) - (0.000000278 * y[1154])
    return (Peptide145) - (0)
 
def E2_7_9_3(t, y):
    Peptide146 = (0.278 * y[879]) - (0.000000278 * y[1155])
    return (Peptide146) - (0)
 
def E2_8_1_6(t, y):
    Peptide147 = (0.278 * y[880]) - (0.000000278 * y[1156])
    return (Peptide147) - (0)
 
def E2_8_1_7(t, y):
    Peptide148 = (0.278 * y[881]) - (0.000000278 * y[1157])
    return (Peptide148) - (0)
 
def E2_8_1_8(t, y):
    Peptide149 = (0.278 * y[882]) - (0.000000278 * y[1158])
    return (Peptide149) - (0)
 
def E2_8_4_3(t, y):
    Peptide150 = (0.278 * y[883]) - (0.000000278 * y[1159])
    return (Peptide150) - (0)
 
def E2_8_4_4(t, y):
    Peptide151 = (0.278 * y[884]) - (0.000000278 * y[1160])
    return (Peptide151) - (0)
 
def E2_9_1_1(t, y):
    Peptide152 = (0.278 * y[885]) - (0.000000278 * y[1161])
    return (Peptide152) - (0)
 
def E3_1_1_29(t, y):
    Peptide153 = (0.278 * y[886]) - (0.000000278 * y[1162])
    return (Peptide153) - (0)
 
def E3_1_1_31(t, y):
    Peptide154 = (0.278 * y[887]) - (0.000000278 * y[1163])
    return (Peptide154) - (0)
 
def E3_1_3_11(t, y):
    Peptide155 = (0.278 * y[888]) - (0.000000278 * y[1164])
    return (Peptide155) - (0)
 
def E3_1_3_6(t, y):
    Peptide156 = (0.278 * y[889]) - (0.000000278 * y[1165])
    return (Peptide156) - (0)
 
def E3_1_3_82(t, y):
    Peptide157 = (0.278 * y[890]) - (0.000000278 * y[1166])
    return (Peptide157) - (0)
 
def E3_2_2_26(t, y):
    Peptide158 = (0.278 * y[891]) - (0.000000278 * y[1167])
    return (Peptide158) - (0)
 
def E3_4_11_1(t, y):
    Peptide159 = (0.278 * y[892]) - (0.000000278 * y[1168])
    return (Peptide159) - (0)
 
def E3_5_1_2(t, y):
    Peptide160 = (0.278 * y[893]) - (0.000000278 * y[1169])
    return (Peptide160) - (0)
 
def E3_5_1_28(t, y):
    Peptide161 = (0.278 * y[894]) - (0.000000278 * y[1170])
    return (Peptide161) - (0)
 
def E3_5_1_5(t, y):
    Peptide162 = (0.278 * y[895]) - (0.000000278 * y[1171])
    return (Peptide162) - (0)
 
def E3_5_1_88(t, y):
    Peptide163 = (0.278 * y[896]) - (0.000000278 * y[1172])
    return (Peptide163) - (0)
 
def E3_5_3_11(t, y):
    Peptide164 = (0.278 * y[897]) - (0.000000278 * y[1173])
    return (Peptide164) - (0)
 
def E3_5_4_16(t, y):
    Peptide165 = (0.278 * y[898]) - (0.000000278 * y[1174])
    return (Peptide165) - (0)
 
def E3_5_4_19(t, y):
    Peptide166 = (0.278 * y[899]) - (0.000000278 * y[1175])
    return (Peptide166) - (0)
 
def E3_5_4_2(t, y):
    Peptide167 = (0.278 * y[900]) - (0.000000278 * y[1176])
    return (Peptide167) - (0)
 
def E3_5_4_25(t, y):
    Peptide168 = (0.278 * y[901]) - (0.000000278 * y[1177])
    return (Peptide168) - (0)
 
def E3_5_4_26(t, y):
    Peptide169 = (0.278 * y[902]) - (0.000000278 * y[1178])
    return (Peptide169) - (0)
 
def E3_5_4_33(t, y):
    Peptide170 = (0.278 * y[903]) - (0.000000278 * y[1179])
    return (Peptide170) - (0)
 
def E3_6_1_1(t, y):
    Peptide171 = (0.278 * y[904]) - (0.000000278 * y[1180])
    return (Peptide171) - (0)
 
def E3_6_1_23(t, y):
    Peptide172 = (0.278 * y[905]) - (0.000000278 * y[1181])
    return (Peptide172) - (0)
 
def E3_6_1_27(t, y):
    Peptide173 = (0.278 * y[906]) - (0.000000278 * y[1182])
    return (Peptide173) - (0)
 
def E3_6_1_9(t, y):
    Peptide174 = (0.278 * y[907]) - (0.000000278 * y[1183])
    return (Peptide174) - (0)
 
def E4_1_1_11(t, y):
    Peptide175 = (0.278 * y[908]) - (0.000000278 * y[1184])
    return (Peptide175) - (0)
 
def E4_1_1_19(t, y):
    Peptide176 = (0.278 * y[909]) - (0.000000278 * y[1185])
    return (Peptide176) - (0)
 
def E4_1_1_20(t, y):
    Peptide177 = (0.278 * y[910]) - (0.000000278 * y[1186])
    return (Peptide177) - (0)
 
def E4_1_1_21(t, y):
    Peptide178 = (0.278 * y[911]) - (0.000000278 * y[1187])
    return (Peptide178) - (0)
 
def E4_1_1_23(t, y):
    Peptide179 = (0.278 * y[912]) - (0.000000278 * y[1188])
    return (Peptide179) - (0)
 
def E4_1_1_36(t, y):
    Peptide180 = (0.278 * y[913]) - (0.000000278 * y[1189])
    return (Peptide180) - (0)
 
def E4_1_1_65(t, y):
    Peptide181 = (0.278 * y[914]) - (0.000000278 * y[1190])
    return (Peptide181) - (0)
 
def E4_1_1_96(t, y):
    Peptide182 = (0.278 * y[915]) - (0.000000278 * y[1191])
    return (Peptide182) - (0)
 
def E4_1_2_13(t, y):
    Peptide183 = (0.278 * y[916]) - (0.000000278 * y[1192])
    return (Peptide183) - (0)
 
def E4_1_2_50(t, y):
    Peptide184 = (0.278 * y[917]) - (0.000000278 * y[1193])
    return (Peptide184) - (0)
 
def E4_1_99_12(t, y):
    Peptide185 = (0.278 * y[918]) - (0.000000278 * y[1194])
    return (Peptide185) - (0)
 
def E4_1_99_17(t, y):
    Peptide186 = (0.278 * y[919]) - (0.000000278 * y[1195])
    return (Peptide186) - (0)
 
def E4_1_99_19(t, y):
    Peptide187 = (0.278 * y[920]) - (0.000000278 * y[1196])
    return (Peptide187) - (0)
 
def E4_1_99_22(t, y):
    Peptide188 = (0.278 * y[921]) - (0.000000278 * y[1197])
    return (Peptide188) - (0)
 
def E4_2_1_10(t, y):
    Peptide189 = (0.278 * y[922]) - (0.000000278 * y[1198])
    return (Peptide189) - (0)
 
def E4_2_1_11(t, y):
    Peptide190 = (0.278 * y[923]) - (0.000000278 * y[1199])
    return (Peptide190) - (0)
 
def E4_2_1_2(t, y):
    Peptide191 = (0.278 * y[924]) - (0.000000278 * y[1200])
    return (Peptide191) - (0)
 
def E4_2_1_20(t, y):
    Peptide192 = (0.278 * y[925]) - (0.000000278 * y[1201])
    return (Peptide192) - (0)
 
def E4_2_1_24(t, y):
    Peptide193 = (0.278 * y[926]) - (0.000000278 * y[1202])
    return (Peptide193) - (0)
 
def E4_2_1_45(t, y):
    Peptide194 = (0.278 * y[927]) - (0.000000278 * y[1203])
    return (Peptide194) - (0)
 
def E4_2_1_46(t, y):
    Peptide195 = (0.278 * y[928]) - (0.000000278 * y[1204])
    return (Peptide195) - (0)
 
def E4_2_1_47(t, y):
    Peptide196 = (0.278 * y[929]) - (0.000000278 * y[1205])
    return (Peptide196) - (0)
 
def E4_2_1_51(t, y):
    Peptide197 = (0.278 * y[930]) - (0.000000278 * y[1206])
    return (Peptide197) - (0)
 
def E4_2_1_59(t, y):
    Peptide198 = (0.278 * y[931]) - (0.000000278 * y[1207])
    return (Peptide198) - (0)
 
def E4_2_1_82(t, y):
    Peptide199 = (0.278 * y[932]) - (0.000000278 * y[1208])
    return (Peptide199) - (0)
 
def E4_2_1_9(t, y):
    Peptide200 = (0.278 * y[933]) - (0.000000278 * y[1209])
    return (Peptide200) - (0)
 
def E4_2_3_1(t, y):
    Peptide201 = (0.278 * y[934]) - (0.000000278 * y[1210])
    return (Peptide201) - (0)
 
def E4_2_3_5(t, y):
    Peptide202 = (0.278 * y[935]) - (0.000000278 * y[1211])
    return (Peptide202) - (0)
 
def E4_3_1_15(t, y):
    Peptide203 = (0.278 * y[936]) - (0.000000278 * y[1212])
    return (Peptide203) - (0)
 
def E4_3_1_17(t, y):
    Peptide204 = (0.278 * y[937]) - (0.000000278 * y[1213])
    return (Peptide204) - (0)
 
def E4_3_1_19(t, y):
    Peptide205 = (0.278 * y[938]) - (0.000000278 * y[1214])
    return (Peptide205) - (0)
 
def E4_3_1_7(t, y):
    Peptide206 = (0.278 * y[939]) - (0.000000278 * y[1215])
    return (Peptide206) - (0)
 
def E4_3_2_1(t, y):
    Peptide207 = (0.278 * y[940]) - (0.000000278 * y[1216])
    return (Peptide207) - (0)
 
def E4_3_2_2(t, y):
    Peptide208 = (0.278 * y[941]) - (0.000000278 * y[1217])
    return (Peptide208) - (0)
 
def E4_3_3_6(t, y):
    Peptide209 = (0.278 * y[942]) - (0.000000278 * y[1218])
    return (Peptide209) - (0)
 
def E4_3_3_7(t, y):
    Peptide210 = (0.278 * y[943]) - (0.000000278 * y[1219])
    return (Peptide210) - (0)
 
def E4_3_99_3(t, y):
    Peptide211 = (0.278 * y[944]) - (0.000000278 * y[1220])
    return (Peptide211) - (0)
 
def E4_3_99_4(t, y):
    Peptide212 = (0.278 * y[945]) - (0.000000278 * y[1221])
    return (Peptide212) - (0)
 
def E4_6_1_17(t, y):
    Peptide213 = (0.278 * y[946]) - (0.000000278 * y[1222])
    return (Peptide213) - (0)
 
def E5_1_1_1(t, y):
    Peptide214 = (0.278 * y[947]) - (0.000000278 * y[1223])
    return (Peptide214) - (0)
 
def E5_1_1_3(t, y):
    Peptide215 = (0.278 * y[948]) - (0.000000278 * y[1224])
    return (Peptide215) - (0)
 
def E5_1_1_7(t, y):
    Peptide216 = (0.278 * y[949]) - (0.000000278 * y[1225])
    return (Peptide216) - (0)
 
def E5_1_3_1(t, y):
    Peptide217 = (0.278 * y[950]) - (0.000000278 * y[1226])
    return (Peptide217) - (0)
 
def E5_1_3_13(t, y):
    Peptide218 = (0.278 * y[951]) - (0.000000278 * y[1227])
    return (Peptide218) - (0)
 
def E5_1_3_2(t, y):
    Peptide219 = (0.278 * y[952]) - (0.000000278 * y[1228])
    return (Peptide219) - (0)
 
def E5_1_3_20(t, y):
    Peptide220 = (0.278 * y[953]) - (0.000000278 * y[1229])
    return (Peptide220) - (0)
 
def E5_2_1_8(t, y):
    Peptide221 = (0.278 * y[954]) - (0.000000278 * y[1230])
    return (Peptide221) - (0)
 
def E5_3_1_1(t, y):
    Peptide222 = (0.278 * y[955]) - (0.000000278 * y[1231])
    return (Peptide222) - (0)
 
def E5_3_1_16(t, y):
    Peptide223 = (0.278 * y[956]) - (0.000000278 * y[1232])
    return (Peptide223) - (0)
 
def E5_3_1_23(t, y):
    Peptide224 = (0.278 * y[957]) - (0.000000278 * y[1233])
    return (Peptide224) - (0)
 
def E5_3_1_28(t, y):
    Peptide225 = (0.278 * y[958]) - (0.000000278 * y[1234])
    return (Peptide225) - (0)
 
def E5_3_1_6(t, y):
    Peptide226 = (0.278 * y[959]) - (0.000000278 * y[1235])
    return (Peptide226) - (0)
 
def E5_3_1_8(t, y):
    Peptide227 = (0.278 * y[960]) - (0.000000278 * y[1236])
    return (Peptide227) - (0)
 
def E5_4_2_10(t, y):
    Peptide228 = (0.278 * y[961]) - (0.000000278 * y[1237])
    return (Peptide228) - (0)
 
def E5_4_2_12(t, y):
    Peptide229 = (0.278 * y[962]) - (0.000000278 * y[1238])
    return (Peptide229) - (0)
 
def E5_4_2_2(t, y):
    Peptide230 = (0.278 * y[963]) - (0.000000278 * y[1239])
    return (Peptide230) - (0)
 
def E5_4_3_8(t, y):
    Peptide231 = (0.278 * y[964]) - (0.000000278 * y[1240])
    return (Peptide231) - (0)
 
def E5_4_99_12(t, y):
    Peptide232 = (0.278 * y[965]) - (0.000000278 * y[1241])
    return (Peptide232) - (0)
 
def E5_4_99_18(t, y):
    Peptide233 = (0.278 * y[966]) - (0.000000278 * y[1242])
    return (Peptide233) - (0)
 
def E6_1_1_1(t, y):
    Peptide234 = (0.278 * y[967]) - (0.000000278 * y[1243])
    return (Peptide234) - (0)
 
def E6_1_1_10(t, y):
    Peptide235 = (0.278 * y[968]) - (0.000000278 * y[1244])
    return (Peptide235) - (0)
 
def E6_1_1_11(t, y):
    Peptide236 = (0.278 * y[969]) - (0.000000278 * y[1245])
    return (Peptide236) - (0)
 
def E6_1_1_12(t, y):
    Peptide237 = (0.278 * y[970]) - (0.000000278 * y[1246])
    return (Peptide237) - (0)
 
def E6_1_1_14(t, y):
    Peptide238 = (0.278 * y[971]) - (0.000000278 * y[1247])
    return (Peptide238) - (0)
 
def E6_1_1_15(t, y):
    Peptide239 = (0.278 * y[972]) - (0.000000278 * y[1248])
    return (Peptide239) - (0)
 
def E6_1_1_16(t, y):
    Peptide240 = (0.278 * y[973]) - (0.000000278 * y[1249])
    return (Peptide240) - (0)
 
def E6_1_1_17(t, y):
    Peptide241 = (0.278 * y[974]) - (0.000000278 * y[1250])
    return (Peptide241) - (0)
 
def E6_1_1_19(t, y):
    Peptide242 = (0.278 * y[975]) - (0.000000278 * y[1251])
    return (Peptide242) - (0)
 
def E6_1_1_2(t, y):
    Peptide243 = (0.278 * y[976]) - (0.000000278 * y[1252])
    return (Peptide243) - (0)
 
def E6_1_1_20(t, y):
    Peptide244 = (0.278 * y[977]) - (0.000000278 * y[1253])
    return (Peptide244) - (0)
 
def E6_1_1_21(t, y):
    Peptide245 = (0.278 * y[978]) - (0.000000278 * y[1254])
    return (Peptide245) - (0)
 
def E6_1_1_22(t, y):
    Peptide246 = (0.278 * y[979]) - (0.000000278 * y[1255])
    return (Peptide246) - (0)
 
def E6_1_1_3(t, y):
    Peptide247 = (0.278 * y[980]) - (0.000000278 * y[1256])
    return (Peptide247) - (0)
 
def E6_1_1_4(t, y):
    Peptide248 = (0.278 * y[981]) - (0.000000278 * y[1257])
    return (Peptide248) - (0)
 
def E6_1_1_5(t, y):
    Peptide249 = (0.278 * y[982]) - (0.000000278 * y[1258])
    return (Peptide249) - (0)
 
def E6_1_1_6(t, y):
    Peptide250 = (0.278 * y[983]) - (0.000000278 * y[1259])
    return (Peptide250) - (0)
 
def E6_1_1_7(t, y):
    Peptide251 = (0.278 * y[984]) - (0.000000278 * y[1260])
    return (Peptide251) - (0)
 
def E6_1_1_9(t, y):
    Peptide252 = (0.278 * y[985]) - (0.000000278 * y[1261])
    return (Peptide252) - (0)
 
def E6_2_1_1(t, y):
    Peptide253 = (0.278 * y[986]) - (0.000000278 * y[1262])
    return (Peptide253) - (0)
 
def E6_3_1_20(t, y):
    Peptide254 = (0.278 * y[987]) - (0.000000278 * y[1263])
    return (Peptide254) - (0)
 
def E6_3_2_1(t, y):
    Peptide255 = (0.278 * y[988]) - (0.000000278 * y[1264])
    return (Peptide255) - (0)
 
def E6_3_2_13(t, y):
    Peptide256 = (0.278 * y[989]) - (0.000000278 * y[1265])
    return (Peptide256) - (0)
 
def E6_3_2_4(t, y):
    Peptide257 = (0.278 * y[990]) - (0.000000278 * y[1266])
    return (Peptide257) - (0)
 
def E6_3_2_5(t, y):
    Peptide258 = (0.278 * y[991]) - (0.000000278 * y[1267])
    return (Peptide258) - (0)
 
def E6_3_2_6(t, y):
    Peptide259 = (0.278 * y[992]) - (0.000000278 * y[1268])
    return (Peptide259) - (0)
 
def E6_3_2_8(t, y):
    Peptide260 = (0.278 * y[993]) - (0.000000278 * y[1269])
    return (Peptide260) - (0)
 
def E6_3_2_9(t, y):
    Peptide261 = (0.278 * y[994]) - (0.000000278 * y[1270])
    return (Peptide261) - (0)
 
def E6_3_3_1(t, y):
    Peptide262 = (0.278 * y[995]) - (0.000000278 * y[1271])
    return (Peptide262) - (0)
 
def E6_3_3_2(t, y):
    Peptide263 = (0.278 * y[996]) - (0.000000278 * y[1272])
    return (Peptide263) - (0)
 
def E6_3_4_13(t, y):
    Peptide264 = (0.278 * y[997]) - (0.000000278 * y[1273])
    return (Peptide264) - (0)
 
def E6_3_4_15(t, y):
    Peptide265 = (0.278 * y[998]) - (0.000000278 * y[1274])
    return (Peptide265) - (0)
 
def E6_3_4_19(t, y):
    Peptide266 = (0.278 * y[999]) - (0.000000278 * y[1275])
    return (Peptide266) - (0)
 
def E6_3_4_2(t, y):
    Peptide267 = (0.278 * y[1000]) - (0.000000278 * y[1276])
    return (Peptide267) - (0)
 
def E6_3_4_20(t, y):
    Peptide268 = (0.278 * y[1001]) - (0.000000278 * y[1277])
    return (Peptide268) - (0)
 
def E6_3_4_4(t, y):
    Peptide269 = (0.278 * y[1002]) - (0.000000278 * y[1278])
    return (Peptide269) - (0)
 
def E6_3_4_5(t, y):
    Peptide270 = (0.278 * y[1003]) - (0.000000278 * y[1279])
    return (Peptide270) - (0)
 
def E6_3_5_1(t, y):
    Peptide271 = (0.278 * y[1004]) - (0.000000278 * y[1280])
    return (Peptide271) - (0)
 
def E6_3_5_2(t, y):
    Peptide272 = (0.278 * y[1005]) - (0.000000278 * y[1281])
    return (Peptide272) - (0)
 
def E6_3_5_4(t, y):
    Peptide273 = (0.278 * y[1006]) - (0.000000278 * y[1282])
    return (Peptide273) - (0)
 
def E6_3_5_5(t, y):
    Peptide274 = (0.278 * y[1007]) - (0.000000278 * y[1283])
    return (Peptide274) - (0)
 
def E6_4_1_1(t, y):
    Peptide275 = (0.278 * y[1008]) - (0.000000278 * y[1284])
    return (Peptide275) - (0)
 
def E6_5_1_2(t, y):
    Peptide276 = (0.278 * y[1009]) - (0.000000278 * y[1285])
    return (Peptide276) - (0)
 
def C0031(t, y):
    r112 = (13.7 * y[1033] * y[1286] * y[9] * y[108])/(1 + (y[1033] * y[1286] * y[9] * y[108]))
    return (0) - (r112)
 
def C005526(t, y):
    r144 = (13.7 * y[1046] * y[78] * y[44] * y[5])/(1 + (y[1046] * y[78] * y[44] * y[5]))
    return (r144) - (0)
 
def boundary_checker(y, boundary, type):
    '''
    Private function - called by ODE solvers to perform boundary checking 
    of variable values and reset them to specific values if the original 
    values fall out of the boundary values.
    
    Boundary parameter takes the form of a dictionary with variable number 
    as key and a list of [<boundary value>, <value to set if boundary is 
    exceeded>]. For example, the following dictionary for lower boundary 
    (type = 'lower') {'1': [0.0, 0.0], '5': [2.0, 2.0]} will set the lower 
    boundary of variable y[0] and [5] to 0.0 and 2.0 respectively. This 
    also allows for setting to a different value - for example, {'1': [0.0, 
    1.0]} will set variable y[0] to 2.0 if the original y[0] value is 
    negative.
    
    @param y: values for variables
    @type y: list
    @param boundary: set of values for boundary of variables
    @type boundary: dictionary
    @param type: the type of boundary to be checked, either 'upper' (upper 
    boundary) or 'lower' (lower boundary)
    '''
    for k in list(boundary.keys()):
        if y[int(k)] < boundary[k][0] and type == 'lower':
            y[int(k)] = boundary[k][1]
        if y[int(k)] > boundary[k][0] and type == 'upper':
            y[int(k)] = boundary[k][1]
    return y

def RK4(funcs, x0, y0, step, xmax, nonODEfunc=None,
        lower_bound=None, upper_bound=None,
        overflow=1e100, zerodivision=1e100):
    '''
    Generator to integrate a system of ODEs, y' = f(x, y), using fourth
    order Runge-Kutta method.
    
    A function (as nonODEfunc parameter) can be included to modify one or 
    more variables (y0 list). This function will not be an ODE (not a 
    dy/dt). This can be used to consolidate the modification of one or 
    more variables at each ODE solving step. For example, y[0] = y[1] / y[2] 
    can be written as 
    
    >>> def modifying_function(y, step):
            y[0] = y[1] / y[2]
            return y
    
    This function must take 'y' (variable list) and 'step' (time step) as 
    parameters and must return 'y' (the modified variable list). This 
    function will execute before boundary checking at each time step.
    
    Upper and lower boundaries of one or more variable can be set using 
    upper_bound and lower_bound parameters respectively. These parameters 
    takes the form of a dictionary with variable number as key and a list 
    of [<boundary value>, <value to set if boundary is exceeded>]. For 
    example, the following dictionary for lower boundary {'1': [0.0, 0.0], 
    '5': [2.0, 2.0]} will set the lower boundary of variable y[0] and y[5] 
    to 0.0 and 2.0 respectively. This also allows for setting to a different 
    value - for example, {'1': [0.0, 1.0]} will set variable y[0] to 2.0 if 
    the original y[0] value is negative.
    
    @param funcs: system of differential equations
    @type funcs: list
    @param x0: initial value of x-axis, which is usually starting time
    @type x0: float
    @param y0: initial values for variables
    @type y0: list
    @param step: step size on the x-axis (also known as step in calculus)
    @type step: float
    @param xmax: maximum value of x-axis, which is usually ending time
    @type xmax: float
    @param nonODEfunc: a function to modify the variable list (y0)
    @type nonODEfunc: function
    @param lower_bound: set of values for lower boundary of variables
    @type lower_bound: dictionary
    @param upper_bound: set of values for upper boundary of variables
    @type upper_bound: dictionary
    @param overflow: value (usually a large value) to assign in event of 
    over flow error (usually caused by a large number) during integration. 
    Default = 1e100.
    @type overflow: float
    @param zerodivision: value (usually a large value) to assign in event 
    of zero division error, which results in positive infinity, during 
    integration. Default = 1e100.
    @type zerodivision: float
    '''
    yield [x0] + y0
    def solver(funcs, x0, y0, step):
        n = len(funcs)
        f1, f2, f3, f4 = [0]*n, [0]*n, [0]*n, [0]*n
        y1 = [0]*n
        for i in range(n):
            try: f1[i] = funcs[i](x0, y0)
            except TypeError: pass
            except ZeroDivisionError: f1[i] = zerodivision
            except OverflowError: f1[i] = overflow
        for j in range(n):
            y1[j] = y0[j] + (0.5*step*f1[j])
        for i in range(n):
            try: f2[i] = funcs[i]((x0+(0.5*step)), y1)
            except TypeError: pass
            except ZeroDivisionError: f2[i] = zerodivision
            except OverflowError: f2[i] = overflow
        for j in range(n):
            y1[j] = y0[j] + (0.5*step*f2[j])
        for i in range(n):
            try: f3[i] = funcs[i]((x0+(0.5*step)), y1)
            except TypeError: pass
            except ZeroDivisionError: f3[i] = zerodivision
            except OverflowError: f3[i] = overflow
        for j in range(n):
            y1[j] = y0[j] + (step*f3[j])
        for i in range(n):
            try: f4[i] = funcs[i]((x0+step), y1)
            except TypeError: pass
            except ZeroDivisionError: f4[i] = zerodivision
            except OverflowError: f4[i] = overflow
        for i in range(n):
            try: y1[i] = y0[i] + (step * \
                    (f1[i] + (2.0*f2[i]) + (2.0*f3[i]) + f4[i]) / 6.0)
            except TypeError: pass
            except ZeroDivisionError: y1[i] = zerodivision
            except OverflowError: y1[i] = overflow
        return y1
    while x0 < xmax:
        y1 = solver(funcs, x0, y0, step)
        if nonODEfunc:
            y1 = nonODEfunc(y1, step)
        if lower_bound: 
            y1 = boundary_checker(y1, lower_bound, 'lower')
        if upper_bound: 
            y1 = boundary_checker(y1, upper_bound, 'upper')
        y0 = y1
        x0 = x0 + step
        yield [x0] + y0
        
ODE = list(range(1288))
ODE[0] = C00001
ODE[1] = C00002
ODE[2] = C00003
ODE[3] = C00004
ODE[4] = C00005
ODE[5] = C00006
ODE[6] = C00007
ODE[7] = C00008
ODE[8] = C00009
ODE[9] = C00010
ODE[10] = C00011
ODE[11] = C00012
ODE[12] = C00013
ODE[13] = C00014
ODE[14] = C00015
ODE[15] = C00016
ODE[16] = C00017
ODE[17] = C00018
ODE[18] = C00019
ODE[19] = C00020
ODE[20] = C00021
ODE[21] = C00022
ODE[22] = C00024
ODE[23] = C00025
ODE[24] = C00026
ODE[25] = C00027
ODE[26] = C00028
ODE[27] = C00029
ODE[28] = C00030
ODE[29] = C00031
ODE[30] = C00033
ODE[31] = C00035
ODE[32] = C00036
ODE[33] = C00037
ODE[34] = C00039
ODE[35] = C00040
ODE[36] = C00041
ODE[37] = C00043
ODE[38] = C00044
ODE[39] = C00045
ODE[40] = C00046
ODE[41] = C00047
ODE[42] = C00048
ODE[43] = C00049
ODE[44] = C00051
ODE[45] = C00052
ODE[46] = C00053
ODE[47] = C00054
ODE[48] = C00055
ODE[49] = C00058
ODE[50] = C00059
ODE[51] = C00060
ODE[52] = C00061
ODE[53] = C00062
ODE[54] = C00063
ODE[55] = C00064
ODE[56] = C00065
ODE[57] = C00066
ODE[58] = C00067
ODE[59] = C00068
ODE[60] = C00071
ODE[61] = C00073
ODE[62] = C00074
ODE[63] = C00075
ODE[64] = C00077
ODE[65] = C00078
ODE[66] = C00079
ODE[67] = C00080
ODE[68] = C00081
ODE[69] = C00082
ODE[70] = C00084
ODE[71] = C00085
ODE[72] = C00086
ODE[73] = C00091
ODE[74] = C00092
ODE[75] = C00093
ODE[76] = C00094
ODE[77] = C00096
ODE[78] = C00097
ODE[79] = C00099
ODE[80] = C00100
ODE[81] = C00101
ODE[82] = C00103
ODE[83] = C00104
ODE[84] = C00105
ODE[85] = C00106
ODE[86] = C00108
ODE[87] = C00109
ODE[88] = C00111
ODE[89] = C00112
ODE[90] = C00114
ODE[91] = C00116
ODE[92] = C00117
ODE[93] = C00118
ODE[94] = C00119
ODE[95] = C00120
ODE[96] = C00122
ODE[97] = C00123
ODE[98] = C00125
ODE[99] = C00126
ODE[100] = C00129
ODE[101] = C00130
ODE[102] = C00131
ODE[103] = C00133
ODE[104] = C00134
ODE[105] = C00135
ODE[106] = C00136
ODE[107] = C00138
ODE[108] = C00139
ODE[109] = C00141
ODE[110] = C00143
ODE[111] = C00144
ODE[112] = C00147
ODE[113] = C00148
ODE[114] = C00149
ODE[115] = C00151
ODE[116] = C00152
ODE[117] = C00153
ODE[118] = C00161
ODE[119] = C00163
ODE[120] = C00166
ODE[121] = C00169
ODE[122] = C00173
ODE[123] = C00179
ODE[124] = C00183
ODE[125] = C00188
ODE[126] = C00189
ODE[127] = C00192
ODE[128] = C00197
ODE[129] = C00199
ODE[130] = C00201
ODE[131] = C00203
ODE[132] = C00206
ODE[133] = C00212
ODE[134] = C00215
ODE[135] = C00217
ODE[136] = C00224
ODE[137] = C00226
ODE[138] = C00227
ODE[139] = C00229
ODE[140] = C00231
ODE[141] = C00233
ODE[142] = C00234
ODE[143] = C00235
ODE[144] = C00237
ODE[145] = C00239
ODE[146] = C00240
ODE[147] = C00241
ODE[148] = C00242
ODE[149] = C00245
ODE[150] = C00246
ODE[151] = C00248
ODE[152] = C00251
ODE[153] = C00253
ODE[154] = C00254
ODE[155] = C00255
ODE[156] = C00258
ODE[157] = C00262
ODE[158] = C00263
ODE[159] = C00269
ODE[160] = C00275
ODE[161] = C00279
ODE[162] = C00282
ODE[163] = C00283
ODE[164] = C00286
ODE[165] = C00288
ODE[166] = C00294
ODE[167] = C00295
ODE[168] = C00299
ODE[169] = C00315
ODE[170] = C00320
ODE[171] = C00327
ODE[172] = C00330
ODE[173] = C00337
ODE[174] = C00342
ODE[175] = C00343
ODE[176] = C00345
ODE[177] = C00350
ODE[178] = C00352
ODE[179] = C00354
ODE[180] = C00361
ODE[181] = C00362
ODE[182] = C00363
ODE[183] = C00364
ODE[184] = C00365
ODE[185] = C00376
ODE[186] = C00385
ODE[187] = C00387
ODE[188] = C00390
ODE[189] = C00399
ODE[190] = C00404
ODE[191] = C00407
ODE[192] = C00416
ODE[193] = C00418
ODE[194] = C00430
ODE[195] = C00437
ODE[196] = C00438
ODE[197] = C00440
ODE[198] = C00441
ODE[199] = C00445
ODE[200] = C00447
ODE[201] = C00448
ODE[202] = C00454
ODE[203] = C00455
ODE[204] = C00458
ODE[205] = C00459
ODE[206] = C00460
ODE[207] = C00463
ODE[208] = C00469
ODE[209] = C00473
ODE[210] = C00475
ODE[211] = C00493
ODE[212] = C00501
ODE[213] = C00502
ODE[214] = C00522
ODE[215] = C00526
ODE[216] = C00536
ODE[217] = C00559
ODE[218] = C00565
ODE[219] = C00568
ODE[220] = C00576
ODE[221] = C00577
ODE[222] = C00579
ODE[223] = C00580
ODE[224] = C00605
ODE[225] = C00615
ODE[226] = C00620
ODE[227] = C00624
ODE[228] = C00631
ODE[229] = C00636
ODE[230] = C00655
ODE[231] = C00666
ODE[232] = C00668
ODE[233] = C00671
ODE[234] = C00672
ODE[235] = C00677
ODE[236] = C00680
ODE[237] = C00681
ODE[238] = C00685
ODE[239] = C00688
ODE[240] = C00692
ODE[241] = C00693
ODE[242] = C00697
ODE[243] = C00705
ODE[244] = C00716
ODE[245] = C00756
ODE[246] = C00772
ODE[247] = C00787
ODE[248] = C00819
ODE[249] = C00821
ODE[250] = C00826
ODE[251] = C00828
ODE[252] = C00831
ODE[253] = C00842
ODE[254] = C00857
ODE[255] = C00860
ODE[256] = C00864
ODE[257] = C00868
ODE[258] = C00882
ODE[259] = C00886
ODE[260] = C00900
ODE[261] = C00911
ODE[262] = C00921
ODE[263] = C00931
ODE[264] = C00944
ODE[265] = C00966
ODE[266] = C00979
ODE[267] = C00993
ODE[268] = C01005
ODE[269] = C01024
ODE[270] = C01037
ODE[271] = C01050
ODE[272] = C01051
ODE[273] = C01081
ODE[274] = C01092
ODE[275] = C01094
ODE[276] = C01100
ODE[277] = C01102
ODE[278] = C01103
ODE[279] = C01118
ODE[280] = C01134
ODE[281] = C01143
ODE[282] = C01157
ODE[283] = C01165
ODE[284] = C01171
ODE[285] = C01179
ODE[286] = C01185
ODE[287] = C01209
ODE[288] = C01212
ODE[289] = C01219
ODE[290] = C01222
ODE[291] = C01236
ODE[292] = C01242
ODE[293] = C01250
ODE[294] = C01267
ODE[295] = C01268
ODE[296] = C01269
ODE[297] = C01271
ODE[298] = C01279
ODE[299] = C01300
ODE[300] = C01304
ODE[301] = C01344
ODE[302] = C01345
ODE[303] = C01346
ODE[304] = C01352
ODE[305] = C01367
ODE[306] = C01368
ODE[307] = C01412
ODE[308] = C01419
ODE[309] = C01450
ODE[310] = C01468
ODE[311] = C01528
ODE[312] = C01545
ODE[313] = C01548
ODE[314] = C01563
ODE[315] = C01612
ODE[316] = C01635
ODE[317] = C01636
ODE[318] = C01637
ODE[319] = C01638
ODE[320] = C01639
ODE[321] = C01641
ODE[322] = C01642
ODE[323] = C01643
ODE[324] = C01644
ODE[325] = C01645
ODE[326] = C01646
ODE[327] = C01647
ODE[328] = C01648
ODE[329] = C01649
ODE[330] = C01650
ODE[331] = C01651
ODE[332] = C01652
ODE[333] = C01653
ODE[334] = C01762
ODE[335] = C01909
ODE[336] = C01929
ODE[337] = C01931
ODE[338] = C01977
ODE[339] = C02047
ODE[340] = C02051
ODE[341] = C02090
ODE[342] = C02097
ODE[343] = C02128
ODE[344] = C02163
ODE[345] = C02166
ODE[346] = C02218
ODE[347] = C02320
ODE[348] = C02356
ODE[349] = C02380
ODE[350] = C02412
ODE[351] = C02429
ODE[352] = C02430
ODE[353] = C02463
ODE[354] = C02469
ODE[355] = C02504
ODE[356] = C02508
ODE[357] = C02512
ODE[358] = C02527
ODE[359] = C02553
ODE[360] = C02554
ODE[361] = C02583
ODE[362] = C02637
ODE[363] = C02702
ODE[364] = C02713
ODE[365] = C02737
ODE[366] = C02739
ODE[367] = C02741
ODE[368] = C02743
ODE[369] = C02764
ODE[370] = C02839
ODE[371] = C02876
ODE[372] = C02909
ODE[373] = C02962
ODE[374] = C02972
ODE[375] = C02984
ODE[376] = C02987
ODE[377] = C02988
ODE[378] = C02992
ODE[379] = C02999
ODE[380] = C03023
ODE[381] = C03082
ODE[382] = C03090
ODE[383] = C03114
ODE[384] = C03125
ODE[385] = C03127
ODE[386] = C03150
ODE[387] = C03170
ODE[388] = C03175
ODE[389] = C03193
ODE[390] = C03287
ODE[391] = C03294
ODE[392] = C03306
ODE[393] = C03319
ODE[394] = C03356
ODE[395] = C03363
ODE[396] = C03373
ODE[397] = C03375
ODE[398] = C03391
ODE[399] = C03402
ODE[400] = C03406
ODE[401] = C03479
ODE[402] = C03492
ODE[403] = C03506
ODE[404] = C03511
ODE[405] = C03512
ODE[406] = C03523
ODE[407] = C03617
ODE[408] = C03633
ODE[409] = C03688
ODE[410] = C03722
ODE[411] = C03723
ODE[412] = C03735
ODE[413] = C03740
ODE[414] = C03741
ODE[415] = C03794
ODE[416] = C03798
ODE[417] = C03800
ODE[418] = C03802
ODE[419] = C03826
ODE[420] = C03838
ODE[421] = C03880
ODE[422] = C03892
ODE[423] = C03895
ODE[424] = C03912
ODE[425] = C03939
ODE[426] = C03972
ODE[427] = C04039
ODE[428] = C04079
ODE[429] = C04133
ODE[430] = C04153
ODE[431] = C04157
ODE[432] = C04181
ODE[433] = C04188
ODE[434] = C04232
ODE[435] = C04236
ODE[436] = C04242
ODE[437] = C04246
ODE[438] = C04250
ODE[439] = C04258
ODE[440] = C04261
ODE[441] = C04272
ODE[442] = C04281
ODE[443] = C04294
ODE[444] = C04302
ODE[445] = C04309
ODE[446] = C04311
ODE[447] = C04327
ODE[448] = C04332
ODE[449] = C04352
ODE[450] = C04376
ODE[451] = C04411
ODE[452] = C04425
ODE[453] = C04432
ODE[454] = C04454
ODE[455] = C04501
ODE[456] = C04556
ODE[457] = C04574
ODE[458] = C04582
ODE[459] = C04618
ODE[460] = C04619
ODE[461] = C04620
ODE[462] = C04631
ODE[463] = C04633
ODE[464] = C04640
ODE[465] = C04646
ODE[466] = C04677
ODE[467] = C04681
ODE[468] = C04688
ODE[469] = C04702
ODE[470] = C04732
ODE[471] = C04735
ODE[472] = C04751
ODE[473] = C04752
ODE[474] = C04778
ODE[475] = C04807
ODE[476] = C04823
ODE[477] = C04851
ODE[478] = C04877
ODE[479] = C04882
ODE[480] = C04895
ODE[481] = C04896
ODE[482] = C04916
ODE[483] = C05125
ODE[484] = C05167
ODE[485] = C05172
ODE[486] = C05198
ODE[487] = C05223
ODE[488] = C05335
ODE[489] = C05336
ODE[490] = C05345
ODE[491] = C05359
ODE[492] = C05360
ODE[493] = C05361
ODE[494] = C05378
ODE[495] = C05382
ODE[496] = C05444
ODE[497] = C05445
ODE[498] = C05512
ODE[499] = C05576
ODE[500] = C05577
ODE[501] = C05670
ODE[502] = C05684
ODE[503] = C05686
ODE[504] = C05688
ODE[505] = C05689
ODE[506] = C05691
ODE[507] = C05695
ODE[508] = C05696
ODE[509] = C05697
ODE[510] = C05703
ODE[511] = C05711
ODE[512] = C05726
ODE[513] = C05729
ODE[514] = C05744
ODE[515] = C05745
ODE[516] = C05746
ODE[517] = C05747
ODE[518] = C05748
ODE[519] = C05749
ODE[520] = C05750
ODE[521] = C05751
ODE[522] = C05752
ODE[523] = C05753
ODE[524] = C05754
ODE[525] = C05755
ODE[526] = C05756
ODE[527] = C05757
ODE[528] = C05758
ODE[529] = C05759
ODE[530] = C05760
ODE[531] = C05761
ODE[532] = C05762
ODE[533] = C05763
ODE[534] = C05764
ODE[535] = C05772
ODE[536] = C05778
ODE[537] = C05819
ODE[538] = C05822
ODE[539] = C05840
ODE[540] = C05841
ODE[541] = C05844
ODE[542] = C05893
ODE[543] = C05897
ODE[544] = C05898
ODE[545] = C05921
ODE[546] = C05922
ODE[547] = C05923
ODE[548] = C05951
ODE[549] = C05983
ODE[550] = C05993
ODE[551] = C06006
ODE[552] = C06007
ODE[553] = C06010
ODE[554] = C06020
ODE[555] = C06021
ODE[556] = C06032
ODE[557] = C06055
ODE[558] = C06056
ODE[559] = C06114
ODE[560] = C06148
ODE[561] = C06156
ODE[562] = C06193
ODE[563] = C06249
ODE[564] = C06250
ODE[565] = C06393
ODE[566] = C06397
ODE[567] = C06398
ODE[568] = C06406
ODE[569] = C06407
ODE[570] = C06416
ODE[571] = C06423
ODE[572] = C06481
ODE[573] = C06482
ODE[574] = C06547
ODE[575] = C06611
ODE[576] = C06612
ODE[577] = C06613
ODE[578] = C06899
ODE[579] = C07490
ODE[580] = C07645
ODE[581] = C07648
ODE[582] = C07649
ODE[583] = C07836
ODE[584] = C07838
ODE[585] = C08492
ODE[586] = C11038
ODE[587] = C11039
ODE[588] = C11143
ODE[589] = C11434
ODE[590] = C11435
ODE[591] = C11436
ODE[592] = C11437
ODE[593] = C11439
ODE[594] = C11440
ODE[595] = C11453
ODE[596] = C11472
ODE[597] = C11475
ODE[598] = C11539
ODE[599] = C11540
ODE[600] = C11811
ODE[601] = C11823
ODE[602] = C11907
ODE[603] = C12214
ODE[604] = C12215
ODE[605] = C13378
ODE[606] = C14089
ODE[607] = C14090
ODE[608] = C14099
ODE[609] = C14463
ODE[610] = C14818
ODE[611] = C15489
ODE[612] = C15527
ODE[613] = C15556
ODE[614] = C15586
ODE[615] = C15587
ODE[616] = C15602
ODE[617] = C15603
ODE[618] = C15653
ODE[619] = C15667
ODE[620] = C15809
ODE[621] = C15811
ODE[622] = C15812
ODE[623] = C15972
ODE[624] = C15973
ODE[625] = C15996
ODE[626] = C15999
ODE[627] = C16219
ODE[628] = C16220
ODE[629] = C16236
ODE[630] = C16237
ODE[631] = C16238
ODE[632] = C16240
ODE[633] = C16241
ODE[634] = C16310
ODE[635] = C16348
ODE[636] = C16396
ODE[637] = C16399
ODE[638] = C16463
ODE[639] = C16551
ODE[640] = C16586
ODE[641] = C16587
ODE[642] = C16595
ODE[643] = C16596
ODE[644] = C16614
ODE[645] = C16615
ODE[646] = C16618
ODE[647] = C16619
ODE[648] = C16634
ODE[649] = C16636
ODE[650] = C16663
ODE[651] = C16664
ODE[652] = C16675
ODE[653] = C16739
ODE[654] = C16832
ODE[655] = C16848
ODE[656] = C16849
ODE[657] = C16850
ODE[658] = C16999
ODE[659] = C17010
ODE[660] = C17023
ODE[661] = C17234
ODE[662] = C17324
ODE[663] = C17556
ODE[664] = C18096
ODE[665] = C18172
ODE[666] = C18174
ODE[667] = C18239
ODE[668] = C18902
ODE[669] = C19647
ODE[670] = C19673
ODE[671] = C19722
ODE[672] = C19723
ODE[673] = C19878
ODE[674] = C19882
ODE[675] = C20239
ODE[676] = C20246
ODE[677] = C20247
ODE[678] = C20248
ODE[679] = C20258
ODE[680] = C20372
ODE[681] = C20373
ODE[682] = C20374
ODE[683] = C20375
ODE[684] = C20376
ODE[685] = C20377
ODE[686] = C20378
ODE[687] = C20446
ODE[688] = C20451
ODE[689] = C20463
ODE[690] = C20565
ODE[691] = C20641
ODE[692] = C20648
ODE[693] = C20751
ODE[694] = C20753
ODE[695] = C20755
ODE[696] = C20756
ODE[697] = C20758
ODE[698] = C20796
ODE[699] = C20858
ODE[700] = C20864
ODE[701] = C20904
ODE[702] = C20905
ODE[703] = C20969
ODE[704] = C21031
ODE[705] = C21310
ODE[706] = C21386
ODE[707] = C21387
ODE[708] = C21388
ODE[709] = C21440
ODE[710] = C21748
ODE[711] = C21749
ODE[712] = C21750
ODE[713] = C21751
ODE[714] = C22150
ODE[715] = C22151
ODE[716] = C22154
ODE[717] = C22155
ODE[718] = C22157
ODE[719] = C22158
ODE[720] = C22159
ODE[721] = C22160
ODE[722] = C22395
ODE[723] = C22441
ODE[724] = C22442
ODE[725] = C22443
ODE[726] = G10550
ODE[727] = G10551
ODE[728] = G10552
ODE[729] = G10553
ODE[730] = G10555
ODE[731] = G10556
ODE[732] = G10610
ODE[733] = G10619
ODE[734] = E1_1_1_1_mRNA
ODE[735] = E1_1_1_100_mRNA
ODE[736] = E1_1_1_133_mRNA
ODE[737] = E1_1_1_193_mRNA
ODE[738] = E1_1_1_205_mRNA
ODE[739] = E1_1_1_23_mRNA
ODE[740] = E1_1_1_267_mRNA
ODE[741] = E1_1_1_85_mRNA
ODE[742] = E1_1_1_86_mRNA
ODE[743] = E1_1_5_3_mRNA
ODE[744] = E1_17_1_8_mRNA
ODE[745] = E1_17_4_1_mRNA
ODE[746] = E1_17_4_2_mRNA
ODE[747] = E1_17_7_1_mRNA
ODE[748] = E1_17_7_4_mRNA
ODE[749] = E1_18_6_1_mRNA
ODE[750] = E1_2_1_10_mRNA
ODE[751] = E1_2_1_11_mRNA
ODE[752] = E1_2_1_38_mRNA
ODE[753] = E1_2_1_41_mRNA
ODE[754] = E1_2_1_70_mRNA
ODE[755] = E1_2_7_4_mRNA
ODE[756] = E1_2_7_5_mRNA
ODE[757] = E1_2_7_8_mRNA
ODE[758] = E1_3_1_14_mRNA
ODE[759] = E1_3_1_98_mRNA
ODE[760] = E1_4_1_1_mRNA
ODE[761] = E1_4_1_13_mRNA
ODE[762] = E1_4_1_4_mRNA
ODE[763] = E1_4_3_16_mRNA
ODE[764] = E1_4_4_2_mRNA
ODE[765] = E1_5_1_2_mRNA
ODE[766] = E1_5_1_20_mRNA
ODE[767] = E1_7_1_13_mRNA
ODE[768] = E1_7_99_1_mRNA
ODE[769] = E1_8_1_4_mRNA
ODE[770] = E1_8_1_9_mRNA
ODE[771] = E1_8_4_11_mRNA
ODE[772] = E1_8_4_12_mRNA
ODE[773] = E1_8_5_3_mRNA
ODE[774] = E1_8_99_2_mRNA
ODE[775] = E2_1_1_107_mRNA
ODE[776] = E2_1_1_130_mRNA
ODE[777] = E2_1_1_131_mRNA
ODE[778] = E2_1_1_133_mRNA
ODE[779] = E2_1_1_171_mRNA
ODE[780] = E2_1_1_182_mRNA
ODE[781] = E2_1_1_197_mRNA
ODE[782] = E2_1_1_228_mRNA
ODE[783] = E2_1_1_297_mRNA
ODE[784] = E2_1_1_63_mRNA
ODE[785] = E2_1_1_72_mRNA
ODE[786] = E2_1_1_77_mRNA
ODE[787] = E2_1_2_10_mRNA
ODE[788] = E2_1_2_11_mRNA
ODE[789] = E2_1_2_2_mRNA
ODE[790] = E2_1_2_9_mRNA
ODE[791] = E2_1_3_2_mRNA
ODE[792] = E2_1_3_3_mRNA
ODE[793] = E2_2_1_1_mRNA
ODE[794] = E2_2_1_10_mRNA
ODE[795] = E2_2_1_6_mRNA
ODE[796] = E2_2_1_7_mRNA
ODE[797] = E2_3_1_1_mRNA
ODE[798] = E2_3_1_15_mRNA
ODE[799] = E2_3_1_179_mRNA
ODE[800] = E2_3_1_181_mRNA
ODE[801] = E2_3_1_234_mRNA
ODE[802] = E2_3_1_35_mRNA
ODE[803] = E2_3_1_46_mRNA
ODE[804] = E2_3_1_8_mRNA
ODE[805] = E2_3_2_2_mRNA
ODE[806] = E2_3_2_6_mRNA
ODE[807] = E2_3_3_13_mRNA
ODE[808] = E2_4_1_227_mRNA
ODE[809] = E2_4_2_1_mRNA
ODE[810] = E2_4_2_10_mRNA
ODE[811] = E2_4_2_14_mRNA
ODE[812] = E2_4_2_17_mRNA
ODE[813] = E2_4_2_18_mRNA
ODE[814] = E2_4_2_19_mRNA
ODE[815] = E2_4_2_21_mRNA
ODE[816] = E2_4_2_29_mRNA
ODE[817] = E2_4_2_8_mRNA
ODE[818] = E2_4_2_9_mRNA
ODE[819] = E2_4_99_17_mRNA
ODE[820] = E2_5_1_15_mRNA
ODE[821] = E2_5_1_3_mRNA
ODE[822] = E2_5_1_31_mRNA
ODE[823] = E2_5_1_47_mRNA
ODE[824] = E2_5_1_6_mRNA
ODE[825] = E2_5_1_61_mRNA
ODE[826] = E2_5_1_7_mRNA
ODE[827] = E2_5_1_72_mRNA
ODE[828] = E2_5_1_75_mRNA
ODE[829] = E2_5_1_78_mRNA
ODE[830] = E2_5_1_9_mRNA
ODE[831] = E2_6_1_16_mRNA
ODE[832] = E2_6_1_42_mRNA
ODE[833] = E2_6_1_62_mRNA
ODE[834] = E2_6_1_83_mRNA
ODE[835] = E2_6_1_9_mRNA
ODE[836] = E2_7_1_148_mRNA
ODE[837] = E2_7_1_24_mRNA
ODE[838] = E2_7_1_25_mRNA
ODE[839] = E2_7_1_26_mRNA
ODE[840] = E2_7_1_30_mRNA
ODE[841] = E2_7_1_33_mRNA
ODE[842] = E2_7_1_40_mRNA
ODE[843] = E2_7_1_49_mRNA
ODE[844] = E2_7_1_50_mRNA
ODE[845] = E2_7_1_71_mRNA
ODE[846] = E2_7_2_11_mRNA
ODE[847] = E2_7_2_4_mRNA
ODE[848] = E2_7_2_7_mRNA
ODE[849] = E2_7_2_8_mRNA
ODE[850] = E2_7_3_9_mRNA
ODE[851] = E2_7_4_1_mRNA
ODE[852] = E2_7_4_16_mRNA
ODE[853] = E2_7_4_22_mRNA
ODE[854] = E2_7_4_25_mRNA
ODE[855] = E2_7_4_6_mRNA
ODE[856] = E2_7_4_7_mRNA
ODE[857] = E2_7_4_8_mRNA
ODE[858] = E2_7_4_9_mRNA
ODE[859] = E2_7_6_3_mRNA
ODE[860] = E2_7_7_13_mRNA
ODE[861] = E2_7_7_2_mRNA
ODE[862] = E2_7_7_23_mRNA
ODE[863] = E2_7_7_24_mRNA
ODE[864] = E2_7_7_3_mRNA
ODE[865] = E2_7_7_33_mRNA
ODE[866] = E2_7_7_4_mRNA
ODE[867] = E2_7_7_41_mRNA
ODE[868] = E2_7_7_6_mRNA
ODE[869] = E2_7_7_60_mRNA
ODE[870] = E2_7_7_65_mRNA
ODE[871] = E2_7_7_7_mRNA
ODE[872] = E2_7_7_8_mRNA
ODE[873] = E2_7_7_85_mRNA
ODE[874] = E2_7_7_9_mRNA
ODE[875] = E2_7_8_13_mRNA
ODE[876] = E2_7_8_5_mRNA
ODE[877] = E2_7_8_7_mRNA
ODE[878] = E2_7_8_8_mRNA
ODE[879] = E2_7_9_3_mRNA
ODE[880] = E2_8_1_6_mRNA
ODE[881] = E2_8_1_7_mRNA
ODE[882] = E2_8_1_8_mRNA
ODE[883] = E2_8_4_3_mRNA
ODE[884] = E2_8_4_4_mRNA
ODE[885] = E2_9_1_1_mRNA
ODE[886] = E3_1_1_29_mRNA
ODE[887] = E3_1_1_31_mRNA
ODE[888] = E3_1_3_11_mRNA
ODE[889] = E3_1_3_6_mRNA
ODE[890] = E3_1_3_82_mRNA
ODE[891] = E3_2_2_26_mRNA
ODE[892] = E3_4_11_1_mRNA
ODE[893] = E3_5_1_2_mRNA
ODE[894] = E3_5_1_28_mRNA
ODE[895] = E3_5_1_5_mRNA
ODE[896] = E3_5_1_88_mRNA
ODE[897] = E3_5_3_11_mRNA
ODE[898] = E3_5_4_16_mRNA
ODE[899] = E3_5_4_19_mRNA
ODE[900] = E3_5_4_2_mRNA
ODE[901] = E3_5_4_25_mRNA
ODE[902] = E3_5_4_26_mRNA
ODE[903] = E3_5_4_33_mRNA
ODE[904] = E3_6_1_1_mRNA
ODE[905] = E3_6_1_23_mRNA
ODE[906] = E3_6_1_27_mRNA
ODE[907] = E3_6_1_9_mRNA
ODE[908] = E4_1_1_11_mRNA
ODE[909] = E4_1_1_19_mRNA
ODE[910] = E4_1_1_20_mRNA
ODE[911] = E4_1_1_21_mRNA
ODE[912] = E4_1_1_23_mRNA
ODE[913] = E4_1_1_36_mRNA
ODE[914] = E4_1_1_65_mRNA
ODE[915] = E4_1_1_96_mRNA
ODE[916] = E4_1_2_13_mRNA
ODE[917] = E4_1_2_50_mRNA
ODE[918] = E4_1_99_12_mRNA
ODE[919] = E4_1_99_17_mRNA
ODE[920] = E4_1_99_19_mRNA
ODE[921] = E4_1_99_22_mRNA
ODE[922] = E4_2_1_10_mRNA
ODE[923] = E4_2_1_11_mRNA
ODE[924] = E4_2_1_2_mRNA
ODE[925] = E4_2_1_20_mRNA
ODE[926] = E4_2_1_24_mRNA
ODE[927] = E4_2_1_45_mRNA
ODE[928] = E4_2_1_46_mRNA
ODE[929] = E4_2_1_47_mRNA
ODE[930] = E4_2_1_51_mRNA
ODE[931] = E4_2_1_59_mRNA
ODE[932] = E4_2_1_82_mRNA
ODE[933] = E4_2_1_9_mRNA
ODE[934] = E4_2_3_1_mRNA
ODE[935] = E4_2_3_5_mRNA
ODE[936] = E4_3_1_15_mRNA
ODE[937] = E4_3_1_17_mRNA
ODE[938] = E4_3_1_19_mRNA
ODE[939] = E4_3_1_7_mRNA
ODE[940] = E4_3_2_1_mRNA
ODE[941] = E4_3_2_2_mRNA
ODE[942] = E4_3_3_6_mRNA
ODE[943] = E4_3_3_7_mRNA
ODE[944] = E4_3_99_3_mRNA
ODE[945] = E4_3_99_4_mRNA
ODE[946] = E4_6_1_17_mRNA
ODE[947] = E5_1_1_1_mRNA
ODE[948] = E5_1_1_3_mRNA
ODE[949] = E5_1_1_7_mRNA
ODE[950] = E5_1_3_1_mRNA
ODE[951] = E5_1_3_13_mRNA
ODE[952] = E5_1_3_2_mRNA
ODE[953] = E5_1_3_20_mRNA
ODE[954] = E5_2_1_8_mRNA
ODE[955] = E5_3_1_1_mRNA
ODE[956] = E5_3_1_16_mRNA
ODE[957] = E5_3_1_23_mRNA
ODE[958] = E5_3_1_28_mRNA
ODE[959] = E5_3_1_6_mRNA
ODE[960] = E5_3_1_8_mRNA
ODE[961] = E5_4_2_10_mRNA
ODE[962] = E5_4_2_12_mRNA
ODE[963] = E5_4_2_2_mRNA
ODE[964] = E5_4_3_8_mRNA
ODE[965] = E5_4_99_12_mRNA
ODE[966] = E5_4_99_18_mRNA
ODE[967] = E6_1_1_1_mRNA
ODE[968] = E6_1_1_10_mRNA
ODE[969] = E6_1_1_11_mRNA
ODE[970] = E6_1_1_12_mRNA
ODE[971] = E6_1_1_14_mRNA
ODE[972] = E6_1_1_15_mRNA
ODE[973] = E6_1_1_16_mRNA
ODE[974] = E6_1_1_17_mRNA
ODE[975] = E6_1_1_19_mRNA
ODE[976] = E6_1_1_2_mRNA
ODE[977] = E6_1_1_20_mRNA
ODE[978] = E6_1_1_21_mRNA
ODE[979] = E6_1_1_22_mRNA
ODE[980] = E6_1_1_3_mRNA
ODE[981] = E6_1_1_4_mRNA
ODE[982] = E6_1_1_5_mRNA
ODE[983] = E6_1_1_6_mRNA
ODE[984] = E6_1_1_7_mRNA
ODE[985] = E6_1_1_9_mRNA
ODE[986] = E6_2_1_1_mRNA
ODE[987] = E6_3_1_20_mRNA
ODE[988] = E6_3_2_1_mRNA
ODE[989] = E6_3_2_13_mRNA
ODE[990] = E6_3_2_4_mRNA
ODE[991] = E6_3_2_5_mRNA
ODE[992] = E6_3_2_6_mRNA
ODE[993] = E6_3_2_8_mRNA
ODE[994] = E6_3_2_9_mRNA
ODE[995] = E6_3_3_1_mRNA
ODE[996] = E6_3_3_2_mRNA
ODE[997] = E6_3_4_13_mRNA
ODE[998] = E6_3_4_15_mRNA
ODE[999] = E6_3_4_19_mRNA
ODE[1000] = E6_3_4_2_mRNA
ODE[1001] = E6_3_4_20_mRNA
ODE[1002] = E6_3_4_4_mRNA
ODE[1003] = E6_3_4_5_mRNA
ODE[1004] = E6_3_5_1_mRNA
ODE[1005] = E6_3_5_2_mRNA
ODE[1006] = E6_3_5_4_mRNA
ODE[1007] = E6_3_5_5_mRNA
ODE[1008] = E6_4_1_1_mRNA
ODE[1009] = E6_5_1_2_mRNA
ODE[1010] = E1_1_1_1
ODE[1011] = E1_1_1_100
ODE[1012] = E1_1_1_133
ODE[1013] = E1_1_1_193
ODE[1014] = E1_1_1_205
ODE[1015] = E1_1_1_23
ODE[1016] = E1_1_1_267
ODE[1017] = E1_1_1_85
ODE[1018] = E1_1_1_86
ODE[1019] = E1_1_5_3
ODE[1020] = E1_17_1_8
ODE[1021] = E1_17_4_1
ODE[1022] = E1_17_4_2
ODE[1023] = E1_17_7_1
ODE[1024] = E1_17_7_4
ODE[1025] = E1_18_6_1
ODE[1026] = E1_2_1_10
ODE[1027] = E1_2_1_11
ODE[1028] = E1_2_1_38
ODE[1029] = E1_2_1_41
ODE[1030] = E1_2_1_70
ODE[1031] = E1_2_7_4
ODE[1032] = E1_2_7_5
ODE[1033] = E1_2_7_8
ODE[1034] = E1_3_1_14
ODE[1035] = E1_3_1_98
ODE[1036] = E1_4_1_1
ODE[1037] = E1_4_1_13
ODE[1038] = E1_4_1_4
ODE[1039] = E1_4_3_16
ODE[1040] = E1_4_4_2
ODE[1041] = E1_5_1_2
ODE[1042] = E1_5_1_20
ODE[1043] = E1_7_1_13
ODE[1044] = E1_7_99_1
ODE[1045] = E1_8_1_4
ODE[1046] = E1_8_1_9
ODE[1047] = E1_8_4_11
ODE[1048] = E1_8_4_12
ODE[1049] = E1_8_5_3
ODE[1050] = E1_8_99_2
ODE[1051] = E2_1_1_107
ODE[1052] = E2_1_1_130
ODE[1053] = E2_1_1_131
ODE[1054] = E2_1_1_133
ODE[1055] = E2_1_1_171
ODE[1056] = E2_1_1_182
ODE[1057] = E2_1_1_197
ODE[1058] = E2_1_1_228
ODE[1059] = E2_1_1_297
ODE[1060] = E2_1_1_63
ODE[1061] = E2_1_1_72
ODE[1062] = E2_1_1_77
ODE[1063] = E2_1_2_10
ODE[1064] = E2_1_2_11
ODE[1065] = E2_1_2_2
ODE[1066] = E2_1_2_9
ODE[1067] = E2_1_3_2
ODE[1068] = E2_1_3_3
ODE[1069] = E2_2_1_1
ODE[1070] = E2_2_1_10
ODE[1071] = E2_2_1_6
ODE[1072] = E2_2_1_7
ODE[1073] = E2_3_1_1
ODE[1074] = E2_3_1_15
ODE[1075] = E2_3_1_179
ODE[1076] = E2_3_1_181
ODE[1077] = E2_3_1_234
ODE[1078] = E2_3_1_35
ODE[1079] = E2_3_1_46
ODE[1080] = E2_3_1_8
ODE[1081] = E2_3_2_2
ODE[1082] = E2_3_2_6
ODE[1083] = E2_3_3_13
ODE[1084] = E2_4_1_227
ODE[1085] = E2_4_2_1
ODE[1086] = E2_4_2_10
ODE[1087] = E2_4_2_14
ODE[1088] = E2_4_2_17
ODE[1089] = E2_4_2_18
ODE[1090] = E2_4_2_19
ODE[1091] = E2_4_2_21
ODE[1092] = E2_4_2_29
ODE[1093] = E2_4_2_8
ODE[1094] = E2_4_2_9
ODE[1095] = E2_4_99_17
ODE[1096] = E2_5_1_15
ODE[1097] = E2_5_1_3
ODE[1098] = E2_5_1_31
ODE[1099] = E2_5_1_47
ODE[1100] = E2_5_1_6
ODE[1101] = E2_5_1_61
ODE[1102] = E2_5_1_7
ODE[1103] = E2_5_1_72
ODE[1104] = E2_5_1_75
ODE[1105] = E2_5_1_78
ODE[1106] = E2_5_1_9
ODE[1107] = E2_6_1_16
ODE[1108] = E2_6_1_42
ODE[1109] = E2_6_1_62
ODE[1110] = E2_6_1_83
ODE[1111] = E2_6_1_9
ODE[1112] = E2_7_1_148
ODE[1113] = E2_7_1_24
ODE[1114] = E2_7_1_25
ODE[1115] = E2_7_1_26
ODE[1116] = E2_7_1_30
ODE[1117] = E2_7_1_33
ODE[1118] = E2_7_1_40
ODE[1119] = E2_7_1_49
ODE[1120] = E2_7_1_50
ODE[1121] = E2_7_1_71
ODE[1122] = E2_7_2_11
ODE[1123] = E2_7_2_4
ODE[1124] = E2_7_2_7
ODE[1125] = E2_7_2_8
ODE[1126] = E2_7_3_9
ODE[1127] = E2_7_4_1
ODE[1128] = E2_7_4_16
ODE[1129] = E2_7_4_22
ODE[1130] = E2_7_4_25
ODE[1131] = E2_7_4_6
ODE[1132] = E2_7_4_7
ODE[1133] = E2_7_4_8
ODE[1134] = E2_7_4_9
ODE[1135] = E2_7_6_3
ODE[1136] = E2_7_7_13
ODE[1137] = E2_7_7_2
ODE[1138] = E2_7_7_23
ODE[1139] = E2_7_7_24
ODE[1140] = E2_7_7_3
ODE[1141] = E2_7_7_33
ODE[1142] = E2_7_7_4
ODE[1143] = E2_7_7_41
ODE[1144] = E2_7_7_6
ODE[1145] = E2_7_7_60
ODE[1146] = E2_7_7_65
ODE[1147] = E2_7_7_7
ODE[1148] = E2_7_7_8
ODE[1149] = E2_7_7_85
ODE[1150] = E2_7_7_9
ODE[1151] = E2_7_8_13
ODE[1152] = E2_7_8_5
ODE[1153] = E2_7_8_7
ODE[1154] = E2_7_8_8
ODE[1155] = E2_7_9_3
ODE[1156] = E2_8_1_6
ODE[1157] = E2_8_1_7
ODE[1158] = E2_8_1_8
ODE[1159] = E2_8_4_3
ODE[1160] = E2_8_4_4
ODE[1161] = E2_9_1_1
ODE[1162] = E3_1_1_29
ODE[1163] = E3_1_1_31
ODE[1164] = E3_1_3_11
ODE[1165] = E3_1_3_6
ODE[1166] = E3_1_3_82
ODE[1167] = E3_2_2_26
ODE[1168] = E3_4_11_1
ODE[1169] = E3_5_1_2
ODE[1170] = E3_5_1_28
ODE[1171] = E3_5_1_5
ODE[1172] = E3_5_1_88
ODE[1173] = E3_5_3_11
ODE[1174] = E3_5_4_16
ODE[1175] = E3_5_4_19
ODE[1176] = E3_5_4_2
ODE[1177] = E3_5_4_25
ODE[1178] = E3_5_4_26
ODE[1179] = E3_5_4_33
ODE[1180] = E3_6_1_1
ODE[1181] = E3_6_1_23
ODE[1182] = E3_6_1_27
ODE[1183] = E3_6_1_9
ODE[1184] = E4_1_1_11
ODE[1185] = E4_1_1_19
ODE[1186] = E4_1_1_20
ODE[1187] = E4_1_1_21
ODE[1188] = E4_1_1_23
ODE[1189] = E4_1_1_36
ODE[1190] = E4_1_1_65
ODE[1191] = E4_1_1_96
ODE[1192] = E4_1_2_13
ODE[1193] = E4_1_2_50
ODE[1194] = E4_1_99_12
ODE[1195] = E4_1_99_17
ODE[1196] = E4_1_99_19
ODE[1197] = E4_1_99_22
ODE[1198] = E4_2_1_10
ODE[1199] = E4_2_1_11
ODE[1200] = E4_2_1_2
ODE[1201] = E4_2_1_20
ODE[1202] = E4_2_1_24
ODE[1203] = E4_2_1_45
ODE[1204] = E4_2_1_46
ODE[1205] = E4_2_1_47
ODE[1206] = E4_2_1_51
ODE[1207] = E4_2_1_59
ODE[1208] = E4_2_1_82
ODE[1209] = E4_2_1_9
ODE[1210] = E4_2_3_1
ODE[1211] = E4_2_3_5
ODE[1212] = E4_3_1_15
ODE[1213] = E4_3_1_17
ODE[1214] = E4_3_1_19
ODE[1215] = E4_3_1_7
ODE[1216] = E4_3_2_1
ODE[1217] = E4_3_2_2
ODE[1218] = E4_3_3_6
ODE[1219] = E4_3_3_7
ODE[1220] = E4_3_99_3
ODE[1221] = E4_3_99_4
ODE[1222] = E4_6_1_17
ODE[1223] = E5_1_1_1
ODE[1224] = E5_1_1_3
ODE[1225] = E5_1_1_7
ODE[1226] = E5_1_3_1
ODE[1227] = E5_1_3_13
ODE[1228] = E5_1_3_2
ODE[1229] = E5_1_3_20
ODE[1230] = E5_2_1_8
ODE[1231] = E5_3_1_1
ODE[1232] = E5_3_1_16
ODE[1233] = E5_3_1_23
ODE[1234] = E5_3_1_28
ODE[1235] = E5_3_1_6
ODE[1236] = E5_3_1_8
ODE[1237] = E5_4_2_10
ODE[1238] = E5_4_2_12
ODE[1239] = E5_4_2_2
ODE[1240] = E5_4_3_8
ODE[1241] = E5_4_99_12
ODE[1242] = E5_4_99_18
ODE[1243] = E6_1_1_1
ODE[1244] = E6_1_1_10
ODE[1245] = E6_1_1_11
ODE[1246] = E6_1_1_12
ODE[1247] = E6_1_1_14
ODE[1248] = E6_1_1_15
ODE[1249] = E6_1_1_16
ODE[1250] = E6_1_1_17
ODE[1251] = E6_1_1_19
ODE[1252] = E6_1_1_2
ODE[1253] = E6_1_1_20
ODE[1254] = E6_1_1_21
ODE[1255] = E6_1_1_22
ODE[1256] = E6_1_1_3
ODE[1257] = E6_1_1_4
ODE[1258] = E6_1_1_5
ODE[1259] = E6_1_1_6
ODE[1260] = E6_1_1_7
ODE[1261] = E6_1_1_9
ODE[1262] = E6_2_1_1
ODE[1263] = E6_3_1_20
ODE[1264] = E6_3_2_1
ODE[1265] = E6_3_2_13
ODE[1266] = E6_3_2_4
ODE[1267] = E6_3_2_5
ODE[1268] = E6_3_2_6
ODE[1269] = E6_3_2_8
ODE[1270] = E6_3_2_9
ODE[1271] = E6_3_3_1
ODE[1272] = E6_3_3_2
ODE[1273] = E6_3_4_13
ODE[1274] = E6_3_4_15
ODE[1275] = E6_3_4_19
ODE[1276] = E6_3_4_2
ODE[1277] = E6_3_4_20
ODE[1278] = E6_3_4_4
ODE[1279] = E6_3_4_5
ODE[1280] = E6_3_5_1
ODE[1281] = E6_3_5_2
ODE[1282] = E6_3_5_4
ODE[1283] = E6_3_5_5
ODE[1284] = E6_4_1_1
ODE[1285] = E6_5_1_2
ODE[1286] = C0031
ODE[1287] = C005526
 
y = list(range(1288))
y[0] = 1000    # C00001 : Water
y[1] = 1000    # C00002 : ATP
y[2] = 1000    # C00003 : NAD+
y[3] = 1000    # C00004 : NADH
y[4] = 1000    # C00005 : NADPH
y[5] = 1000    # C00006 : NADP+
y[6] = 1000    # C00007 : Oxygen
y[7] = 1    # C00008 : ADP
y[8] = 1    # C00009 : Phosphoric Acid
y[9] = 1    # C00010 : CoA
y[10] = 1000    # C00011 : Carbon Dioxide
y[11] = 1    # C00012 : Peptide
y[12] = 1    # C00013 : Diphosphoric Acid
y[13] = 1    # C00014 : Ammonia
y[14] = 1    # C00015 : UDP
y[15] = 1000    # C00016 : FAD
y[16] = 1    # C00017 : Protein
y[17] = 1    # C00018 : Pyridoxal Phosphate
y[18] = 1    # C00019 : SAM
y[19] = 1    # C00020 : AMP
y[20] = 1    # C00021 : S-Adenosyl-L-homocystenine
y[21] = 1    # C00022 : Pyruvate
y[22] = 1000    # C00024 : Acetyl-CoA
y[23] = 1000    # C00025 : L-Glutamate
y[24] = 1000    # C00026 : 2-Oxoglutarate
y[25] = 1    # C00027 : Hydrogen Peroxide
y[26] = 1    # C00028 : Acceptor
y[27] = 1000    # C00029 : UDP-glucose
y[28] = 1    # C00030 : Reduced Acceptor
y[29] = 1000    # C00031 : D-Glucose
y[30] = 1    # C00033 : Acetate
y[31] = 1    # C00035 : GDP
y[32] = 1    # C00036 : Oxaloacetate
y[33] = 1000    # C00037 : Glycine
y[34] = 1    # C00039 : DNA
y[35] = 1    # C00040 : Acyl-CoA
y[36] = 1000    # C00041 : L-Alanine
y[37] = 1    # C00043 : UDP-N-Acetyl-Alpha-D-Glucosamine
y[38] = 1000    # C00044 : GTP
y[39] = 1    # C00045 : Amino Acid
y[40] = 1    # C00046 : RNA
y[41] = 1000    # C00047 : L-Lysine
y[42] = 1    # C00048 : Glyoxylate
y[43] = 1000    # C00049 : L-Aspartate
y[44] = 1    # C00051 : Glutathione
y[45] = 1    # C00052 : UDP-D-Galactose
y[46] = 1    # C00053 : 3'-Phosphoadenylyl Sulfate/PAPS
y[47] = 1    # C00054 : Adenosine 3' ,5'-bisphosphate
y[48] = 1    # C00055 : Cytidine-5'-monophosphate/CMP
y[49] = 1    # C00058 : Formate
y[50] = 1    # C00059 : Sulfuric Acid
y[51] = 1    # C00060 : Carboxylate
y[52] = 1    # C00061 : Flavin Mononucleotide/FMN
y[53] = 1000    # C00062 : L-Arginine
y[54] = 1    # C00063 : CTP
y[55] = 1000    # C00064 : L-Glutamine
y[56] = 1000    # C00065 : L-Serine
y[57] = 1    # C00066 : tRNA
y[58] = 1    # C00067 : Formaldehyde
y[59] = 1    # C00068 : Thiamin Diphosphate
y[60] = 1    # C00071 : Aldehyde
y[61] = 1000    # C00073 : L-Methionine
y[62] = 1    # C00074 : Phosphoenolpyruvate
y[63] = 1    # C00075 : UTP
y[64] = 1    # C00077 : L-Ornithine
y[65] = 1000    # C00078 : L-Tryptophan
y[66] = 1000    # C00079 : L-Phenylalanine
y[67] = 1    # C00080 : H+
y[68] = 1    # C00081 : ITP
y[69] = 1000    # C00082 : L-Tyrosine
y[70] = 1    # C00084 : Acetaldehyde
y[71] = 1    # C00085 : D-Fructose
y[72] = 1    # C00086 : Urea
y[73] = 1    # C00091 : Succinyl-CoA
y[74] = 1000    # C00092 : D-Glucose
y[75] = 1    # C00093 : sn-Glycerol 3-Phosphate
y[76] = 1    # C00094 : Sulfite
y[77] = 1    # C00096 : GDP-Alpha-D-Mannose
y[78] = 1    # C00097 : L-Cysteine
y[79] = 1    # C00099 : 3-Aminopropionic Acid
y[80] = 1    # C00100 : Propanoyl-CoA
y[81] = 1    # C00101 : Tetrahydrofolate
y[82] = 1    # C00103 : Glucose 1-Phosphate
y[83] = 1    # C00104 : IDP
y[84] = 1    # C00105 : UMP
y[85] = 1    # C00106 : Uracil
y[86] = 1    # C00108 : Anthranilic Acid
y[87] = 1    # C00109 : 2-Oxobutanoate
y[88] = 1    # C00111 : Glycerone Phosphate
y[89] = 1    # C00112 : CDP
y[90] = 1    # C00114 : Choline
y[91] = 1    # C00116 : Glycerol
y[92] = 1    # C00117 : D-Ribose 5-Phosphate
y[93] = 1    # C00118 : D-Glyceraldehyde 3-Phosphate
y[94] = 1    # C00119 : 5-Phospho-alpha-D-ribose 1-diphosphate
y[95] = 1    # C00120 : D-Biotin
y[96] = 1    # C00122 : Fumarate
y[97] = 1000    # C00123 : L-Leucine
y[98] = 1    # C00125 : Ferricytochrome c
y[99] = 1    # C00126 : Ferrocytochrome c
y[100] = 1    # C00129 : Isopentenyl Diphosphate
y[101] = 1    # C00130 : IMP
y[102] = 1    # C00131 : dATP
y[103] = 1000    # C00133 : D-Alanine
y[104] = 1    # C00134 : Putrescine
y[105] = 1000    # C00135 : L-Histidine
y[106] = 1    # C00136 : Butanoyl-CoA
y[107] = 1    # C00138 : Reduced Ferredoxin
y[108] = 1    # C00139 : Oxidized Ferredoxin
y[109] = 1    # C00141 : 3-Methyl-2-oxobutanoic acid
y[110] = 1    # C00143 : 5,10-Methylenetetrahydrofolate
y[111] = 1    # C00144 : GMP
y[112] = 1    # C00147 : Adenine
y[113] = 1000    # C00148 : L-Proline
y[114] = 1    # C00149 : (S)-Malate
y[115] = 1    # C00151 : L-2-Amino acid
y[116] = 1    # C00152 : L-Asparagine
y[117] = 1    # C00153 : Nicotinamide
y[118] = 1    # C00161 : 2-Oxo acid
y[119] = 1    # C00163 : Propanoate
y[120] = 1    # C00166 : Phenylpyruvate
y[121] = 1    # C00169 : Carbamoyl Phosphate
y[122] = 1    # C00173 : Acyl-[acyl-carrier protein]
y[123] = 1    # C00179 : Agmatine
y[124] = 1000    # C00183 : L-Valine
y[125] = 1000    # C00188 : L-Threonine
y[126] = 1    # C00189 : Ethanolamine
y[127] = 1    # C00192 : Hydroxylamine
y[128] = 1    # C00197 : 3-Phosphate-D-glycerate
y[129] = 1    # C00199 : D-Ribulose 5-phosphate
y[130] = 1    # C00201 : NTP
y[131] = 1    # C00203 : UDP-N-acetyl-D-galactosamine
y[132] = 1    # C00206 : dADP
y[133] = 1    # C00212 : Adenosine
y[134] = 1    # C00215 : Nucleotide
y[135] = 1000    # C00217 : D-Glutamate
y[136] = 1    # C00224 : Adenylyl Sulfate
y[137] = 1    # C00226 : Primary Alcohol
y[138] = 1    # C00227 : Acetyl Phosphate
y[139] = 1    # C00229 : Acyl-carrier protein
y[140] = 1    # C00231 : D-Xylulose 5-phosphate
y[141] = 1    # C00233 : 4-Methyl-2-oxopentanoate
y[142] = 1    # C00234 : 10-Formyltetrahydrofolate
y[143] = 1    # C00235 : Dimethylallyl diphosphate
y[144] = 1    # C00237 : Carbon monoxide
y[145] = 1    # C00239 : dCMP
y[146] = 1    # C00240 : rRNA
y[147] = 1    # C00241 : Amide
y[148] = 1    # C00242 : Guanine
y[149] = 1    # C00245 : Taurine
y[150] = 1    # C00246 : Butanoic acid
y[151] = 1    # C00248 : Lipoamide
y[152] = 1    # C00251 : Chorismate
y[153] = 1    # C00253 : Nicotinate
y[154] = 1    # C00254 : Prephenate
y[155] = 1    # C00255 : Riboflavin
y[156] = 1    # C00258 : D-Glycerate
y[157] = 1    # C00262 : Hypoxanthine
y[158] = 1    # C00263 : L-Homoserine
y[159] = 1    # C00269 : CDP-diacylglycerol
y[160] = 1    # C00275 : D-Mannose 6-phosphate
y[161] = 1    # C00279 : D-Erythrose 4-phosphate
y[162] = 1    # C00282 : Hydrogen
y[163] = 1    # C00283 : Hydrogen Sulfide
y[164] = 1    # C00286 : dGTP
y[165] = 1    # C00288 : HCO3-
y[166] = 1    # C00294 : Inosine
y[167] = 1    # C00295 : Orotate
y[168] = 1    # C00299 : Uridine
y[169] = 1    # C00315 : Spermidine
y[170] = 1    # C00320 : Thiosulfate
y[171] = 1    # C00327 : L-Citrulline
y[172] = 1    # C00330 : Deoxyguanosine
y[173] = 1    # C00337 : (S)-Dihydroorotate
y[174] = 1    # C00342 : Thioredoxin
y[175] = 1    # C00343 : Thioredoxin disulfide
y[176] = 1    # C00345 : 6-Phospho-D-gluconate
y[177] = 1    # C00350 : Phosphatidylethanolamine
y[178] = 1    # C00352 : D-Glucosamine 6-phosphate
y[179] = 1    # C00354 : D-Fructose 1,6-bisphosphate
y[180] = 1    # C00361 : dGDP
y[181] = 1    # C00362 : dGMP
y[182] = 1    # C00363 : dTDP
y[183] = 1    # C00364 : dTMP
y[184] = 1    # C00365 : dUMP
y[185] = 1    # C00376 : Retinal
y[186] = 1    # C00385 : Xanthine
y[187] = 1    # C00387 : Guanosine
y[188] = 1    # C00390 : Ubiquinol
y[189] = 1    # C00399 : Ubiquinone
y[190] = 1    # C00404 : Polyphosphate
y[191] = 1    # C00407 : L-Isoleucine
y[192] = 1    # C00416 : Phosphatidate
y[193] = 1    # C00418 : ( R )-Mevalonate
y[194] = 1    # C00430 : 5-Aminolevulinate
y[195] = 1    # C00437 : N-Acetylornithine
y[196] = 1    # C00438 : N-Carbamoyl-L-aspartate
y[197] = 1    # C00440 : 5-Methyltetrahydrofolate
y[198] = 1    # C00441 : L-Aspartate 4-semialdehyde
y[199] = 1    # C00445 : 5, 10-Methenyltetrahydrofolate
y[200] = 1    # C00447 : Sedoheptulose 1,7-bisphosphate
y[201] = 1    # C00448 : ( 2E, 6E ) -Farnesyl diphosphate
y[202] = 1    # C00454 : NDP
y[203] = 1    # C00455 : Nicotinamide-D-ribonucleotide
y[204] = 1    # C00458 : dCTP
y[205] = 1    # C00459 : dTTP
y[206] = 1    # C00460 : dUTP
y[207] = 1    # C00463 : Indole
y[208] = 1    # C00469 : Ethanol
y[209] = 1    # C00473 : Retinol
y[210] = 1    # C00475 : Cytidine
y[211] = 1    # C00493 : Shikimate
y[212] = 1    # C00501 : CDP-D-glucose
y[213] = 1    # C00502 : D-Xylonate
y[214] = 1    # C00522 : ( R ) -Pantoate
y[215] = 1    # C00526 : Deoxyuridine
y[216] = 1    # C00536 : Inorganic triphosphate
y[217] = 1    # C00559 : Deoxyadenosine
y[218] = 1    # C00565 : Trimethylamine
y[219] = 1    # C00568 : 4-Aminobenzoate
y[220] = 1    # C00576 : Betaine aldehyde
y[221] = 1    # C00577 : D-Glyceraldehyde
y[222] = 1    # C00579 : Dihydrolipoamide
y[223] = 1    # C00580 : Dimethyl sulfide
y[224] = 1    # C00605 : 2,3-Dehydroacyl-CoA
y[225] = 1    # C00615 : Protein histidine
y[226] = 1    # C00620 : D-Ribose 1-phosphate
y[227] = 1    # C00624 : N-Acetyl-L-glutamate
y[228] = 1    # C00631 : 2-Phospho-D-glycerate
y[229] = 1    # C00636 : D-Mannose 1-phosphate
y[230] = 1    # C00655 : Xanthosine 5'-phosphate
y[231] = 1    # C00666 : LL-2,6-Diaminoheptanedioate
y[232] = 1    # C00668 : alpha-D-Glucose 6-phosphate
y[233] = 1    # C00671 : (S)-3-Methyl-2-oxopentanoic acid
y[234] = 1    # C00672 : 2-Deoxy-D-ribose 1-phosphate
y[235] = 1    # C00677 : Deoxynucleoside triphosphate
y[236] = 1    # C00680 : meso-2,6-Diaminoheptanedioate
y[237] = 1    # C00681 : 1-Acyl-sn-glycerol 3-phosphate
y[238] = 1    # C00685 : 3-Oxoacyl-[acyl-carrier protein]
y[239] = 1    # C00688 : dTDP-4-dehydro-6-deoxy-beta-L-mannose
y[240] = 1    # C00692 : UDP-N-acetylmuramoyl-L-alanyl-D-glutamate
y[241] = 1    # C00693 : trans-2-Enoyl-[acyl-carrier protein]
y[242] = 1    # C00697 : Nitrogen
y[243] = 1    # C00705 : dCDP
y[244] = 1    # C00716 : Serine
y[245] = 1    # C00756 : 1-Octanol
y[246] = 1    # C00772 : Mevaldate
y[247] = 1    # C00787 : tRNA(Tyr)
y[248] = 1    # C00819 : D-Glutamine
y[249] = 1    # C00821 : DNA adenine
y[250] = 1    # C00826 : L-Arogenate
y[251] = 1    # C00828 : Menaquinone
y[252] = 1    # C00831 : Pantethiene
y[253] = 1    # C00842 : dTDP-glucose
y[254] = 1    # C00857 : Deamino-NAD+
y[255] = 1    # C00860 : L-Histidinol
y[256] = 1    # C00864 : Pantothenate
y[257] = 1    # C00868 : tRNA uridine
y[258] = 1    # C00882 : Dephospho-CoA
y[259] = 1    # C00886 : L-Alanyl-tRNA
y[260] = 1    # C00900 : 2-Acetolactate
y[261] = 1    # C00911 : Ribonucleoside
y[262] = 1    # C00921 : 7,8-Dihydropteroate
y[263] = 1    # C00931 : Porphobilinogen
y[264] = 1    # C00944 : 3-Dehydroquinate
y[265] = 1    # C00966 : 2-Dehydropantoate
y[266] = 1    # C00979 : O-Acetyl-L-serine
y[267] = 1    # C00993 : D-Alanyl-D-alanine
y[268] = 1    # C01005 : O-Phospho-L-serine
y[269] = 1    # C01024 : Hydroxymethylbilane
y[270] = 1    # C01037 : 7,8-Diaminononanoate
y[271] = 1    # C01050 : UDP-N-acetylmuramate
y[272] = 1    # C01051 : Uroporphyrinogen III
y[273] = 1    # C01081 : Thiamin monophosphate
y[274] = 1    # C01092 : 8-Amino-7-oxononanoate
y[275] = 1    # C01094 : D-Fructose 1-phosphate
y[276] = 1    # C01100 : L-Histidinol phosphate
y[277] = 1    # C01102 : O-Phospho-L-homoserine
y[278] = 1    # C01103 : Orotidine 5'-phosphate
y[279] = 1    # C01118 : O-Succinyl-L-homoserine
y[280] = 1    # C01134 : Pantetheine 4'-phosphate
y[281] = 1    # C01143 : (R)-5-Diphosphomevalonate
y[282] = 1    # C01157 : trans-4-Hydroxy-L-proline
y[283] = 1    # C01165 : L-Glutamate 5-semialdehyde
y[284] = 1    # C01171 : alpha-D-Hexose 1-phosphate
y[285] = 1    # C01179 : 3-(4-Hydroxyphenyl)pyruvate
y[286] = 1    # C01185 : Nicotinate D-ribonucleotide
y[287] = 1    # C01209 : Malonyl-[acyl-carrier protein]
y[288] = 1    # C01212 : UDP-N-acetylmuramoyl-L-alanine
y[289] = 1    # C01219 : CDP-4-dehydro-6-deoxy-D-glucose
y[290] = 1    # C01222 : GDP-4-dehydro-6-deoxy-D-mannose
y[291] = 1    # C01236 : D-Glucono-1,5-lactone 6-phosphate
y[292] = 1    # C01242 : [Protein]-S8-aminomethyldihydrolipoyllysine
y[293] = 1    # C01250 : N-Acetyl-L-glutamate 5-semialdehyde
y[294] = 1    # C01267 : Imidazole-acetol phosphate
y[295] = 1    # C01268 : 5-Amino-6-(5' -phosphoribosylamino)uracil
y[296] = 1    # C01269 : 5-O-(1-Carboxyvinyl)-3-phosphoshikimate
y[297] = 1    # C01271 : ( 3R)-3-Hydroxyacyl-[acyl-carrier protein]
y[298] = 1    # C01279 : 4-Amino-5-hydroxymethyl-2-methylpyrimidine
y[299] = 1    # C01300 : 6-(Hydroxymethyl) -7,8-dihydropterin
y[300] = 1    # C01304 : 2,5-Diamino-6-(5-phospho-D-ribosylamino)pyrimidin-4 (3H)-one
y[301] = 1    # C01344 : dIDP
y[302] = 1    # C01345 : dITP
y[303] = 1    # C01346 : dUDP
y[304] = 1    # C01352 : FADH2
y[305] = 1    # C01367 : 3' -AMP
y[306] = 1    # C01368 : 3' -UMP
y[307] = 1    # C01412 : Butanal
y[308] = 1    # C01419 : L-Cysteinylglycine
y[309] = 1    # C01450 : Ketone
y[310] = 1    # C01468 : 4-Cresol
y[311] = 1    # C01528 : Hydrogen selenide
y[312] = 1    # C01545 : Octanal
y[313] = 1    # C01548 : Acetylene
y[314] = 1    # C01563 : Carbamic acid
y[315] = 1    # C01612 : Secondary alcohol
y[316] = 1    # C01635 : tRNA(Ala)
y[317] = 1    # C01636 : tRNA(Arg)
y[318] = 1    # C01637 : tRNA(Asn)
y[319] = 1    # C01638 : tRNA(Asp)
y[320] = 1    # C01639 : tRNA(Cys)
y[321] = 1    # C01641 : tRNA(Glu)
y[322] = 1    # C01642 : tRNA(Gly)
y[323] = 1    # C01643 : tRNA(His)
y[324] = 1    # C01644 : tRNA(Ile)
y[325] = 1    # C01645 : tRNA(Leu)
y[326] = 1    # C01646 : tRNA(Lys)
y[327] = 1    # C01647 : tRNA(Met)
y[328] = 1    # C01648 : tRNA(Phe)
y[329] = 1    # C01649 : tRNA(Pro)
y[330] = 1    # C01650 : tRNA(Ser)
y[331] = 1    # C01651 : tRNA(Thr)
y[332] = 1    # C01652 : tRNA(Trp)
y[333] = 1    # C01653 : tRNA(Val)
y[334] = 1    # C01762 : Xanthosine
y[335] = 1    # C01909 : Dethiobiotin
y[336] = 1    # C01929 : L-Histidinal
y[337] = 1    # C01931 : L-Lysyl-tRNA(Lys)
y[338] = 1    # C01977 : tRNA guanine
y[339] = 1    # C02047 : L-Leucyl-tRNA(Leu)
y[340] = 1    # C02051 : Lipoylprotein
y[341] = 1    # C02090 : Trypanothione
y[342] = 1    # C02097 : dTDP-D-galactose
y[343] = 1    # C02128 : 5' -Phospho-DNA
y[344] = 1    # C02163 : L-Arginyl-tRNA(Arg)
y[345] = 1    # C02166 : Leukotriene C4
y[346] = 1    # C02218 : Dehydroalanine
y[347] = 1    # C02320 : R-S-Glutathione
y[348] = 1    # C02356 : (S)-2-Aminobutanoate
y[349] = 1    # C02380 : 6-Mercaptopurine
y[350] = 1    # C02412 : Glycyl-tRNA(Gly)
y[351] = 1    # C02429 : L-Leucyl-protein
y[352] = 1    # C02430 : L-Methionyl-tRNA
y[353] = 1    # C02463 : Precorrin 2
y[354] = 1    # C02469 : Uroporphyrin III
y[355] = 1    # C02504 : (2S)-2-Isopropylmalate
y[356] = 1    # C02508 : 3'-Ribonucleotide
y[357] = 1    # C02512 : 3-Cyano-L-alanine
y[358] = 1    # C02527 : Butanoyl phosphate
y[359] = 1    # C02553 : L-Seryl-tRNA(Ser)
y[360] = 1    # C02554 : L-Valyl-tRNA(Val)
y[361] = 1    # C02583 : Protein L-glutamine
y[362] = 1    # C02637 : 3-Dehydroshikimate
y[363] = 1    # C02702 : L-Prolyl-tRNA(Pro)
y[364] = 1    # C02713 : N-Acetylmuramate
y[365] = 1    # C02737 : Phosphatidyl-L-serine
y[366] = 1    # C02739 : Phosphoribosyl-ATP
y[367] = 1    # C02741 : Phosphoribosyl-AMP
y[368] = 1    # C02743 : [Protein]-L-cysteine
y[369] = 1    # C02764 : tRNA pseudouridine
y[370] = 1    # C02839 : L-Tyrosyl-tRNA(Tyr)
y[371] = 1    # C02876 : Propanoyl phosphate
y[372] = 1    # C02909 : (2-Naphthyl)methanol
y[373] = 1    # C02962 : D-Allose 6-phosphate
y[374] = 1    # C02972 : Dihydrolipoylprotein
y[375] = 1    # C02984 : L-Aspartyl-tRNA(Asp)
y[376] = 1    # C02987 : L-Glutamyl-tRNA(Glu)
y[377] = 1    # C02988 : L-Histidyl-tRNA(His)
y[378] = 1    # C02992 : L-Threonyl-tRNA(Thr)
y[379] = 1    # C02999 : N-Acetyl-D-muramoyl-L-alanine
y[380] = 1    # C03023 : Peptide-L-methionine
y[381] = 1    # C03082 : 4-Phospho-L-aspartate
y[382] = 1    # C03090 : 5-Phosphoribosylamine
y[383] = 1    # C03114 : 5,6-Dimethylbenzimidazole
y[384] = 1    # C03125 : L-Cysteinyl-tRNA(Cys)
y[385] = 1    # C03127 : L-Isoleucyl-tRNA(Ile)
y[386] = 1    # C03150 : 1- (beta-D-Ribofuranosyl) nicotinamide
y[387] = 1    # C03170 : Trypanothione disulfide
y[388] = 1    # C03175 : Shikimate 3-phosphate
y[389] = 1    # C03193 : (5-L-Glutamyl) -peptide
y[390] = 1    # C03287 : L-Glutamyl 5-phosphate
y[391] = 1    # C03294 : N-Formylmethionyl-tRNA
y[392] = 1    # C03306 : Protein L-isoaspartate
y[393] = 1    # C03319 : dTDP-L-rhamnose
y[394] = 1    # C03356 : 3-Phospho-D-erythronate
y[395] = 1    # C03363 : L-gamma-Glutamyl amino acid
y[396] = 1    # C03373 : 5-Amino-1- (5-phospho-beta-D-ribosyl) imidazole
y[397] = 1    # C03375 : Norspermidine
y[398] = 1    # C03391 : N6-Methyladenine in DNA
y[399] = 1    # C03402 : L-Asparaginyl-tRNA(Asn)
y[400] = 1    # C03406 : L-Argininosuccinate
y[401] = 1    # C03479 : 5-Formyltetrahydrofolate
y[402] = 1    # C03492 : D-4' -Phosphopantothenate
y[403] = 1    # C03506 : Indole-3-glycerol phosphate
y[404] = 1    # C03511 : L-Phenylalanyl-tRNA(Phe)
y[405] = 1    # C03512 : L-Tryptophanyl-tRNA(Trp)
y[406] = 1    # C03523 : N-Substituted amino acid
y[407] = 1    # C03617 : L-Methionylaminoacyl-tRNA
y[408] = 1    # C03633 : Peptidylproline (omega=0)
y[409] = 1    # C03688 : Apo-[acyl-carrier protein]
y[410] = 1    # C03722 : Quinolinic acid
y[411] = 1    # C03723 : Ribonucleoside diphosphate
y[412] = 1    # C03735 : alpha-D-Hexose 6-phosphate
y[413] = 1    # C03740 : L-gamma-Glutamyl-L-amino acid
y[414] = 1    # C03741 : L-Glutamate 1-semialdehyde
y[415] = 1    # C03794 : Adenylosuccinate
y[416] = 1    # C03798 : Peptidylproline (omega=180)
y[417] = 1    # C03800 : Protein S-methyl-L-cysteine
y[418] = 1    # C03802 : Ribonucleoside 5' -triphosphate
y[419] = 1    # C03826 : 2-Dehydro-3-deoxy-D-arabinonic acid
y[420] = 1    # C03838 : 5' -Phosphoribosylglycinamide
y[421] = 1    # C03880 : N-Substituted aminoacyl-tRNA
y[422] = 1    # C03892 : Phosphatidylglycerophosphate
y[423] = 1    # C03895 : Peptide-L-methionine (S)-S-oxide
y[424] = 1    # C03912 : L-1-Pyrroline-5-carboxylate
y[425] = 1    # C03939 : Acetyl-[acyl-carrier protein]
y[426] = 1    # C03972 : 2,3,4,5-Tetrahydrodipicolinate
y[427] = 1    # C04039 : 2, 3-Dihydroxy-3-methylbutanoate
y[428] = 1    # C04079 : N-((R)-Pantothenoyl)-L-cysteine
y[429] = 1    # C04133 : N-Acetyl-L-glutamate 5-phosphate
y[430] = 1    # C04153 : rRNA containing N2-methylguanine
y[431] = 1    # C04157 : tRNA containing N1-methylguanine
y[432] = 1    # C04181 : 3-Hydroxy-3-methyl-2-oxobutanoic acid
y[433] = 1    # C04188 : S-Methyl-5-thio-5-deoxy-D-ribose 1-phosphate
y[434] = 1    # C04232 : 2' -Deoxyribonucleoside 5' -diphosphate
y[435] = 1    # C04236 : 3-Carboxy-4-methyl-2-oxopentanoate
y[436] = 1    # C04242 : 5-Fluorodeoxyuridine monophosphate
y[437] = 1    # C04246 : ( 2E ) -But-2-enoyl-[acp]
y[438] = 1    # C04250 : DNA containing 6-O-methylguanine
y[439] = 1    # C04258 : N-Formyl-L-methionylaminoacyl-tRNA
y[440] = 1    # C04261 : Protein N(pi) -phospho-L-histidine
y[441] = 1    # C04272 : (R) -2,3-Dihydroxy-3-methylbutanoate
y[442] = 1    # C04281 : (3R,5S) -3-Hydroxy-1-pyrroline-5-carboxylate
y[443] = 1    # C04294 : 4-Methyl-5-(2-hydroxyethyl)thiazole
y[444] = 1    # C04302 : N- (5-Phospho-beta-D-ribosyl) anthranilate
y[445] = 1    # C04309 : Phosphoenol-4-deoxy-3-tetrulosonate
y[446] = 1    # C04311 : Protein L-isoaspartate methyl ester
y[447] = 1    # C04327 : 4-Methyl-5- (2-phosphonooxyethyl) thiazole
y[448] = 1    # C04332 : 6, 7-Dimethyl-8- (D-ribityl) lumazine
y[449] = 1    # C04352 : ( R )- 4' - Phosphopantothenoyl -L-cysteine
y[450] = 1    # C04376 : 5'-Phosphoribosyl-N-formylglycinamide
y[451] = 1    # C04411 : (2R,3S)-3-Isopropylmalate
y[452] = 1    # C04425 : S-Adenosyl-4- (methylsulfanyl)-2-oxobutanoate
y[453] = 1    # C04432 : tRNA containing 6-isopentenyladenosine
y[454] = 1    # C04454 : 5-Amino-6-(5' -phospho-D-ribitylamino) uracil
y[455] = 1    # C04501 : N-Acetyl-alpha-D-glucosamine 1-phosphate
y[456] = 1    # C04556 : 4-Amino-2-methyl-5-(phosphooxymethyl)pyrimidine
y[457] = 1    # C04574 : di-trans,poly-cis-Undecaprenyl diphosphate
y[458] = 1    # C04582 : S-Methyl-5-thio-D-ribulose 1-phosphate
y[459] = 1    # C04618 : (3R)-3-Hydroxybutanoyl-[acyl-carrier protein]
y[460] = 1    # C04619 : (3R)-3-Hydroxydecanoyl-[acyl-carrier protein]
y[461] = 1    # C04620 : (3R)-3-Hydroxyoctanoyl-[acyl-carrier protein]
y[462] = 1    # C04631 : UDP-N-acetyl-3-(1-carboxyvinyl)-D-glucosamine
y[463] = 1    # C04633 : (3R)-3-Hydroxyhexadecanoyl-[acyl-carrier protein]
y[464] = 1    # C04640 : 5' -Phosphoribosyl-N-formylglycinamidine
y[465] = 1    # C04646 : 6-Thioinosine-5'-monophosphate
y[466] = 1    # C04677 : 1-(5'-Phosphoribosyl)-5-amino-4-imidazolecarboxamide
y[467] = 1    # C04681 : Biotin-[acetyl-CoA:carbon-dioxide ligase (ADP-forming)]
y[468] = 1    # C04688 : (3R)-3-Hydroxytetradecanoyl-[acyl-carrier protein]
y[469] = 1    # C04702 : UDPMurNAc(oyl-L-Ala-D-gamma-Glu-L-Lys-D-Ala-D-Ala)
y[470] = 1    # C04732 : 5-Amino-6-(1-D-ribitylamino)uracil
y[471] = 1    # C04735 : Apo-[acetyl-CoA:carbon-dioxide ligase (ADP-forming)]
y[472] = 1    # C04751 : 1-(5-Phospho-D-ribosyl)-5-amino-4-imidazolecarboxylate
y[473] = 1    # C04752 : 4-Amino-5-hydroxymethyl-2-methylpyrimidine diphosphate
y[474] = 1    # C04778 : N1-(5-Phospho-alpha-D-ribosyl)-5,6-dimethylbenzimidazole;
y[475] = 1    # C04807 : (7,8-Dihydropterin-6-yl)methyl diphosphate;
y[476] = 1    # C04823 : 1-(5'-Phosphoribosyl)-5-amino-4-(N-succinocarboxamide)-imidazole
y[477] = 1    # C04851 : MurAc(oyl-L-Ala-D-gamma-Glu-L-Lys-D-Ala-D-Ala)-diphospho-undecaprenol
y[478] = 1    # C04877 : UDP-N-acetylmuramoyl-L-alanyl-gamma-D-glutamyl-meso-2,6-diaminopimelate
y[479] = 1    # C04882 : UDP-N-acetylmuramoyl-L-alanyl-D-glutamyl-6-carboxyl-L-lysyl-D-alanyl-D-alanine
y[480] = 1    # C04895 : 7,8-Dihydroneopterin 3'-triphosphate;
y[481] = 1    # C04896 : 1-(5-Phospho-beta-D-ribosyl)-5-[(5-phospho-beta-D-ribosylamino)methylideneamino]imidazole-4-carboxamide
y[482] = 1    # C04916 : 5-[(5-Phospho-1-deoxy-D-ribulos-1-ylamino)methylideneamino]-1-(5-phospho-beta-D-ribosyl)imidazole-4-carboxamide
y[483] = 1    # C05125 : 2-(alpha-Hydroxyethyl)thiamine diphosphate;
y[484] = 1    # C05167 : alpha-Amino acid
y[485] = 1    # C05172 : Selenophosphoric acid
y[486] = 1    # C05198 : 5'-Deoxyadenosine
y[487] = 1    # C05223 : Dodecanoyl-[acyl-carrier protein]
y[488] = 1    # C05335 : L-Selenomethionine
y[489] = 1    # C05336 : Selenomethionyl-tRNA(Met)
y[490] = 1    # C05345 : beta-D-Fructose 6-phosphate
y[491] = 1    # C05359 : Electron
y[492] = 1    # C05360 : Diimine
y[493] = 1    # C05361 : Hydrazine
y[494] = 1    # C05378 : beta-D-Fructose 1,6-bisphosphate
y[495] = 1    # C05382 : D-Sedoheptulose 7-phosphate;
y[496] = 1    # C05444 : 3alpha,7alpha,26-Trihydroxy-5beta-cholestane
y[497] = 1    # C05445 : 3alpha,7alpha-Dihydroxy-5beta-cholestan-26-al
y[498] = 1    # C05512 : Deoxyinosine
y[499] = 1    # C05576 : 3,4-Dihydroxyphenylethyleneglycol
y[500] = 1    # C05577 : 3,4-Dihydroxymandelaldehyde
y[501] = 1    # C05670 : 3-Aminopropiononitrile;
y[502] = 1    # C05684 : Selenite
y[503] = 1    # C05686 : Adenylylselenate;
y[504] = 1    # C05688 : L-Selenocysteine
y[505] = 1    # C05689 : Se-Methyl-L-selenocysteine
y[506] = 1    # C05691 : Se-Adenosylselenomethionine
y[507] = 1    # C05695 : gamma-Glutamyl-Se-methylselenocysteine
y[508] = 1    # C05696 : 3'-Phosphoadenylylselenate
y[509] = 1    # C05697 : Selenate
y[510] = 1    # C05703 : Methaneselenol
y[511] = 1    # C05711 : gamma-Glutamyl-beta-cyanoalanine
y[512] = 1    # C05726 : S-Substituted L-cysteine
y[513] = 1    # C05729 : R-S-Cysteinylglycine
y[514] = 1    # C05744 : Acetoacetyl-[acp]
y[515] = 1    # C05745 : Butyryl-[acp]
y[516] = 1    # C05746 : 3-Oxohexanoyl-[acp]
y[517] = 1    # C05747 : (3R)-3-Hydroxyhexanoyl-[acyl-carrier protein]
y[518] = 1    # C05748 : trans-Hex-2-enoyl-[acp]
y[519] = 1    # C05749 : Hexanoyl-[acp]
y[520] = 1    # C05750 : 3-Oxooctanoyl-[acp]
y[521] = 1    # C05751 : trans-Oct-2-enoyl-[acp]
y[522] = 1    # C05752 : Octanoyl-[acp]
y[523] = 1    # C05753 : 3-Oxodecanoyl-[acp]
y[524] = 1    # C05754 : trans-Dec-2-enoyl-[acp]
y[525] = 1    # C05755 : Decanoyl-[acp]
y[526] = 1    # C05756 : 3-Oxododecanoyl-[acp]
y[527] = 1    # C05757 : (3R)-3-Hydroxydodecanoyl-[acyl-carrier protein]
y[528] = 1    # C05758 : trans-Dodec-2-enoyl-[acp]
y[529] = 1    # C05759 : 3-Oxotetradecanoyl-[acp]
y[530] = 1    # C05760 : trans-Tetradec-2-enoyl-[acp]
y[531] = 1    # C05761 : Tetradecanoyl-[acp]
y[532] = 1    # C05762 : 3-Oxohexadecanoyl-[acp]
y[533] = 1    # C05763 : trans-Hexadec-2-enoyl-[acp]
y[534] = 1    # C05764 : Hexadecanoyl-[acp]
y[535] = 1    # C05772 : Precorrin 3A
y[536] = 1    # C05778 : Sirohydrochlorin
y[537] = 1    # C05819 : Menaquinol
y[538] = 1    # C05822 : 3'-CMP
y[539] = 1    # C05840 : Iminoaspartate
y[540] = 1    # C05841 : Nicotinate D-ribonucleoside
y[541] = 1    # C05844 : 5-L-Glutamyl-taurine
y[542] = 1    # C05893 : Undecaprenyl-diphospho-N-acetylmuramoyl-(N-acetylglucosamine)-L-alanyl-gamma-D-glutamyl-L-lysyl-D-alanyl-D-alanine
y[543] = 1    # C05897 : Undecaprenyl-diphospho-N-acetylmuramoyl-L-alanyl-D-glutamyl-meso-2,6-diaminopimeloyl-D-alanyl-D-alanine
y[544] = 1    # C05898 : Undecaprenyl-diphospho-N-acetylmuramoyl-(N-acetylglucosamine)-L-alanyl-D-glutamyl-meso-2,6-diaminopimeloyl-D-alanyl-D-alanine
y[545] = 1    # C05921 : Biotinyl-5'-AMP
y[546] = 1    # C05922 : Formamidopyrimidine nucleoside triphosphate
y[547] = 1    # C05923 : 2,5-Diaminopyrimidine nucleoside triphosphate
y[548] = 1    # C05951 : Leukotriene D4
y[549] = 1    # C05983 : Propionyladenylate
y[550] = 1    # C05993 : Acetyl adenylate
y[551] = 1    # C06006 : (S)-2-Aceto-2-hydroxybutanoate
y[552] = 1    # C06007 : (R)-2,3-Dihydroxy-3-methylpentanoate
y[553] = 1    # C06010 : (S)-2-Acetolactate
y[554] = 1    # C06020 : Methyl-Co(III) corrinoid protein
y[555] = 1    # C06021 : Co(I) corrinoid protein
y[556] = 1    # C06032 : D-erythro-3-Methylmalate
y[557] = 1    # C06055 : O-Phospho-4-hydroxy-L-threonine
y[558] = 1    # C06056 : 4-Hydroxy-L-threonine
y[559] = 1    # C06114 : gamma-Glutamyl-beta-aminopropiononitrile
y[560] = 1    # C06148 : 2,5-Diamino-6-(5'-triphosphoryl-3',4'-trihydroxy-2'-oxopentyl)-amino-4-oxopyrimidine
y[561] = 1    # C06156 : alpha-D-Glucosamine 1-phosphate
y[562] = 1    # C06193 : Guanosine 3'-phosphate
y[563] = 1    # C06249 : Apo-[carboxylase]
y[564] = 1    # C06250 : Holo-[carboxylase]
y[565] = 1    # C06393 : 2,3-Diaminopropanoate
y[566] = 1    # C06397 : ADP-D-glycero-beta-D-manno-heptose
y[567] = 1    # C06398 : ADP-L-glycero-beta-D-manno-heptose
y[568] = 1    # C06406 : Precorrin 3B
y[569] = 1    # C06407 : Precorrin 4
y[570] = 1    # C06416 : Precorrin 5
y[571] = 1    # C06423 : Octanoic acid
y[572] = 1    # C06481 : L-Seryl-tRNA(Sec)
y[573] = 1    # C06482 : L-Selenocysteinyl-tRNA(Sec)
y[574] = 1    # C06547 : Ethylene
y[575] = 1    # C06611 : trans-3-Chloro-2-propene-1-ol
y[576] = 1    # C06612 : cis-3-Chloro-2-propene-1-ol
y[577] = 1    # C06613 : trans-3-Chloroallyl aldehyde
y[578] = 1    # C06899 : Chloral hydrate
y[579] = 1    # C07490 : Trichloroethanol
y[580] = 1    # C07645 : Aldophosphamide
y[581] = 1    # C07648 : Thioguanine
y[582] = 1    # C07649 : 5-Fluorouracil
y[583] = 1    # C07836 : D-glycero-beta-D-manno-Heptose 7-phosphate
y[584] = 1    # C07838 : D-glycero-beta-D-manno-Heptose 1-phosphate
y[585] = 1    # C08492 : (3Z)-3-Hexen-1-ol
y[586] = 1    # C11038 : 2'-Deoxy-5-hydroxymethylcytidine-5'-diphosphate
y[587] = 1    # C11039 : 2'-Deoxy-5-hydroxymethylcytidine-5'-triphosphate
y[588] = 1    # C11143 : Dimethyl sulfoxide
y[589] = 1    # C11434 : 2-C-Methyl-D-erythritol 4-phosphate
y[590] = 1    # C11435 : 4-(Cytidine 5'-diphospho)-2-C-methyl-D-erythritol
y[591] = 1    # C11436 : 2-Phospho-4-(cytidine 5'-diphospho)-2-C-methyl-D-erythritol
y[592] = 1    # C11437 : 1-Deoxy-D-xylulose 5-phosphate
y[593] = 1    # C11439 : Formyl-L-methionyl peptide
y[594] = 1    # C11440 : Methionyl peptide
y[595] = 1    # C11453 : 2-C-Methyl-D-erythritol 2,4-cyclodiphosphate
y[596] = 1    # C11472 : D-glycero-beta-D-manno-Heptose 1,7-bisphosphate
y[597] = 1    # C11475 : DNA containing guanine
y[598] = 1    # C11539 : Cobalt-precorrin 3
y[599] = 1    # C11540 : Cobalt-precorrin 4
y[600] = 1    # C11811 : 1-Hydroxy-2-methyl-2-butenyl 4-diphosphate
y[601] = 1    # C11823 : 2,3-Ene acid
y[602] = 1    # C11907 : dTDP-4-oxo-6-deoxy-D-glucose
y[603] = 1    # C12214 : Aminofructose 6-phosphate
y[604] = 1    # C12215 : Iminoerythrose 4-phosphate
y[605] = 1    # C13378 : alpha,beta-Dihydroxyethyl-TPP
y[606] = 1    # C14089 : 1-Hydroxymethylnaphthalene
y[607] = 1    # C14090 : 1-Naphthaldehyde
y[608] = 1    # C14099 : 2-Naphthaldehyde
y[609] = 1    # C14463 : (R)-3-Hydroxy-3-methyl-2-oxopentanoate
y[610] = 1    # C14818 : Fe2+
y[611] = 1    # C15489 : S-2-(Indol-3-yl)acetyl-CoA
y[612] = 1    # C15527 : Precorrin 1
y[613] = 1    # C15556 : L-3,4-Dihydroxybutan-2-one 4-phosphate
y[614] = 1    # C15586 : N-D-Ribosylpurine
y[615] = 1    # C15587 : Purine
y[616] = 1    # C15602 : Quinone
y[617] = 1    # C15603 : Hydroquinone
y[618] = 1    # C15653 : Peptide-L-methionine (R)-S-oxide
y[619] = 1    # C15667 : 5-Carboxyamino-1-(5-phospho-D-ribosyl)imidazole
y[620] = 1    # C15809 : Iminoglycine
y[621] = 1    # C15811 : [Enzyme]-cysteine
y[622] = 1    # C15812 : [Enzyme]-S-sulfanylcysteine
y[623] = 1    # C15972 : Enzyme N6-(lipoyl)lysine
y[624] = 1    # C15973 : Enzyme N6-(dihydrolipoyl)lysine
y[625] = 1    # C15996 : 7-Cyano-7-carbaguanine
y[626] = 1    # C15999 : L-Methionine (S)-S-oxide
y[627] = 1    # C16219 : 3-Oxostearoyl-[acp]
y[628] = 1    # C16220 : (3R)-3-Hydroxyoctadecanoyl-[acyl-carrier protein]
y[629] = 1    # C16236 : [Protein]-N6-(octanoyl)-L-lysine
y[630] = 1    # C16237 : Protein N6-(lipoyl)lysine
y[631] = 1    # C16238 : Lipoyl-AMP
y[632] = 1    # C16240 : [Lipoyl-carrier protein]-L-lysine
y[633] = 1    # C16241 : (R)-Lipoate
y[634] = 1    # C16310 : 3-Hexenal
y[635] = 1    # C16348 : cis-3-Chloroallyl aldehyde
y[636] = 1    # C16396 : 2,4-Diamino-6-nitrotoluene
y[637] = 1    # C16399 : 2,4-Diamino-6-hydroxylaminotoluene
y[638] = 1    # C16463 : 3',5'-Cyclic diGMP
y[639] = 1    # C16551 : Alcophosphamide
y[640] = 1    # C16586 : 2-Phenyl-1,3-propanediol monocarbamate
y[641] = 1    # C16587 : 3-Carbamoyl-2-phenylpropionaldehyde
y[642] = 1    # C16595 : 4-Hydroxy-5-phenyltetrahydro-1,3-oxazin-2-one
y[643] = 1    # C16596 : 5-Phenyl-1,3-oxazinane-2,4-dione
y[644] = 1    # C16614 : 6-Methylmercaptopurine
y[645] = 1    # C16615 : 6-Methylthiopurine 5'-monophosphate ribonucleotide
y[646] = 1    # C16618 : 6-Thioxanthine 5'-monophosphate
y[647] = 1    # C16619 : 6-Thioguanosine monophosphate
y[648] = 1    # C16634 : 5-Fluorouridine monophosphate
y[649] = 1    # C16636 : tRNA(Sec)
y[650] = 1    # C16663 : Tryparedoxin
y[651] = 1    # C16664 : Tryparedoxin disulfide
y[652] = 1    # C16675 : 7-Aminomethyl-7-carbaguanine
y[653] = 1    # C16739 : L-Arginyl-protein
y[654] = 1    # C16832 : [Protein]-N6-[(R)-dihydrolipoyl]-L-lysine
y[655] = 1    # C16848 : 6-Deoxy-5-ketofructose 1-phosphate
y[656] = 1    # C16849 : Hydroxypyruvaldehyde phosphate
y[657] = 1    # C16850 : 2-Amino-3,7-dideoxy-D-threo-hept-6-ulosonic acid
y[658] = 1    # C16999 : Futalosine
y[659] = 1    # C17010 : Dehypoxanthine futalosine
y[660] = 1    # C17023 : Sulfur donor
y[661] = 1    # C17234 : 2-Aminobut-2-enoate
y[662] = 1    # C17324 : tRNA adenine
y[663] = 1    # C17556 : di-trans,poly-cis-Undecaprenyl phosphate
y[664] = 1    # C18096 : D-Allulose 6-phosphate
y[665] = 1    # C18172 : Carboxyspermidine
y[666] = 1    # C18174 : Carboxynorspermidine
y[667] = 1    # C18239 : Precursor Z
y[668] = 1    # C18902 : Methylselenic acid
y[669] = 1    # C19647 : Epoxyqueuosine in tRNA
y[670] = 1    # C19673 : Malonyl-[acp] methyl ester
y[671] = 1    # C19722 : [tRNA(Ile2)]-cytidine34
y[672] = 1    # C19723 : [tRNA(Ile2)]-lysidine34
y[673] = 1    # C19878 : D-glycero-alpha-D-manno-Heptose 7-phosphate
y[674] = 1    # C19882 : D-glycero-D-manno-Heptose 7-phosphate
y[675] = 1    # C20239 : 6-Carboxy-5,6,7,8-tetrahydropterin
y[676] = 1    # C20246 : 2-[(2R,5Z)-2-Carboxy-4-methylthiazol-5(2H)-ylidene]ethyl phosphate
y[677] = 1    # C20247 : 2-(2-Carboxy-4-methylthiazol-5-yl)ethyl phosphate
y[678] = 1    # C20248 : 7-Carboxy-7-carbaguanine
y[679] = 1    # C20258 : (2S,4S)-4-Hydroxy-2,3,4,5-tetrahydrodipicolinate
y[680] = 1    # C20372 : 3-Ketoglutaryl-[acp] methyl ester
y[681] = 1    # C20373 : 3-Hydroxyglutaryl-[acp] methyl ester
y[682] = 1    # C20374 : Enoylglutaryl-[acp] methyl ester
y[683] = 1    # C20375 : Glutaryl-[acp] methyl ester
y[684] = 1    # C20376 : 3-Ketopimeloyl-[acp] methyl ester
y[685] = 1    # C20377 : 3-Hydroxypimeloyl-[acp] methyl ester
y[686] = 1    # C20378 : Enoylpimeloyl-[acp] methyl ester
y[687] = 1    # C20446 : tRNA 7-aminomethyl-7-carbaguanine
y[688] = 1    # C20451 : tRNA hypoxanthine
y[689] = 1    # C20463 : Purine deoxyribonucleoside
y[690] = 1    # C20565 : Cyclic di-3',5'-adenylate
y[691] = 1    # C20641 : L-Threonylcarbamoyladenylate
y[692] = 1    # C20648 : Adenine in rRNA
y[693] = 1    # C20751 : N6-L-Threonylcarbamoyladenine in tRNA
y[694] = 1    # C20753 : 2-Methylthio-N6-dimethylallyladenine in tRNA
y[695] = 1    # C20755 : 2-Thio-N6-dimethylallyladenine in tRNA
y[696] = 1    # C20756 : [Ribosomal protein uS12]-L-aspartate
y[697] = 1    # C20758 : [Ribosomal protein uS12]-3-methylthioaspartate
y[698] = 1    # C20796 : N6-Dimethyladenine in rRNA
y[699] = 1    # C20858 : Protein N5-methyl-L-glutamine
y[700] = 1    # C20864 : 5'-Triphospho-[mRNA]
y[701] = 1    # C20904 : 2-Iminopropanoate
y[702] = 1    # C20905 : 2-Iminobutanoate
y[703] = 1    # C20969 : Carboxyphosphate
y[704] = 1    # C21031 : 5-Hydroxymethylcytosine in DNA
y[705] = 1    # C21310 : (8S)-3',8-Cyclo-7,8-dihydroguanosine 5'-triphosphate
y[706] = 1    # C21386 : L-Leucyl-L-arginyl-protein
y[707] = 1    # C21387 : L-Leucyl-L-lysyl-protein
y[708] = 1    # C21388 : L-Lysyl-protein
y[709] = 1    # C21440 : [Protein]-S-sulfanyl-L-cysteine
y[710] = 1    # C21748 : 5-Fluorouridine diphosphate
y[711] = 1    # C21749 : 5-Fluorouridine triphosphate
y[712] = 1    # C21750 : 5-Fluorodeoxyuridine diphosphate
y[713] = 1    # C21751 : 5-Fluorodeoxyuridine triphosphate
y[714] = 1    # C22150 : Reduced [2Fe-2S] ferredoxin
y[715] = 1    # C22151 : Oxidized [2Fe-2S] ferredoxin
y[716] = 1    # C22154 : [Fe-S] cluster scaffold protein carrying a [4Fe-4S]2+ cluster
y[717] = 1    # C22155 : [Fe-S] cluster scaffold protein
y[718] = 1    # C22157 : Glycine cleavage system H
y[719] = 1    # C22158 : Lipoyl-carrier protein E2
y[720] = 1    # C22159 : [Glycine cleavage system H]-N6-octanoyl-L-lysine
y[721] = 1    # C22160 : [Lipoyl-carrier protein E2]-N6-octanoyl-L-lysine
y[722] = 1    # C22395 : N6-Succino-2-amino-2'-deoxyadenylate
y[723] = 1    # C22441 : dZMP
y[724] = 1    # C22442 : dZDP
y[725] = 1    # C22443 : dZTP
y[726] = 1    # G10550 : (GlcNAc)1 (MurNAc)1 (D-Ala-D-Ala-Lys-D-Glu-Ala)1 (PP-Und)1
y[727] = 1    # G10551 : (MurNAc)1 (D-Ala-D-Ala-Lys-D-Glu-Ala)1 (PP-Und)1
y[728] = 1    # G10552 : (MurNAc)1 (D-Ala-D-Ala-Lys-gamma-D-Glu-Ala)1 (PP-Und)1
y[729] = 1    # G10553 : (GlcNAc)1 (MurNAc)1 (D-Ala-D-Ala-Lys-gamma-D-Glu-Ala)1 (PP-Und)1
y[730] = 1    # G10555 : (GlcNAc)1 (MurNAc)1 (D-Ala-D-Ala-A2pm-gamma-D-Glu-Ala)1 (PP-Und)1
y[731] = 1    # G10556 : (MurNAc)1 (D-Ala-D-Ala-A2pm-gamma-D-Glu-Ala)1 (PP-Und)1
y[732] = 1    # G10610 : UDP-N-acetyl-D-glucosamine
y[733] = 1    # G10619 : UDP
y[734] = 0    # E1_1_1_1_mRNA : E1_1_1_1_mRNA
y[735] = 0    # E1_1_1_100_mRNA : E1_1_1_100_mRNA
y[736] = 0    # E1_1_1_133_mRNA : E1_1_1_133_mRNA
y[737] = 0    # E1_1_1_193_mRNA : E1_1_1_193_mRNA
y[738] = 0    # E1_1_1_205_mRNA : E1_1_1_205_mRNA
y[739] = 0    # E1_1_1_23_mRNA : E1_1_1_23_mRNA
y[740] = 0    # E1_1_1_267_mRNA : E1_1_1_267_mRNA
y[741] = 0    # E1_1_1_85_mRNA : E1_1_1_85_mRNA
y[742] = 0    # E1_1_1_86_mRNA : E1_1_1_86_mRNA
y[743] = 0    # E1_1_5_3_mRNA : E1_1_5_3_mRNA
y[744] = 0    # E1_17_1_8_mRNA : E1_17_1_8_mRNA
y[745] = 0    # E1_17_4_1_mRNA : E1_17_4_1_mRNA
y[746] = 0    # E1_17_4_2_mRNA : E1_17_4_2_mRNA
y[747] = 0    # E1_17_7_1_mRNA : E1_17_7_1_mRNA
y[748] = 0    # E1_17_7_4_mRNA : E1_17_7_4_mRNA
y[749] = 0    # E1_18_6_1_mRNA : E1_18_6_1_mRNA
y[750] = 0    # E1_2_1_10_mRNA : E1_2_1_10_mRNA
y[751] = 0    # E1_2_1_11_mRNA : E1_2_1_11_mRNA
y[752] = 0    # E1_2_1_38_mRNA : E1_2_1_38_mRNA
y[753] = 0    # E1_2_1_41_mRNA : E1_2_1_41_mRNA
y[754] = 0    # E1_2_1_70_mRNA : E1_2_1_70_mRNA
y[755] = 0    # E1_2_7_4_mRNA : E1_2_7_4_mRNA
y[756] = 0    # E1_2_7_5_mRNA : E1_2_7_5_mRNA
y[757] = 0    # E1_2_7_8_mRNA : E1_2_7_8_mRNA
y[758] = 0    # E1_3_1_14_mRNA : E1_3_1_14_mRNA
y[759] = 0    # E1_3_1_98_mRNA : E1_3_1_98_mRNA
y[760] = 0    # E1_4_1_1_mRNA : E1_4_1_1_mRNA
y[761] = 0    # E1_4_1_13_mRNA : E1_4_1_13_mRNA
y[762] = 0    # E1_4_1_4_mRNA : E1_4_1_4_mRNA
y[763] = 0    # E1_4_3_16_mRNA : E1_4_3_16_mRNA
y[764] = 0    # E1_4_4_2_mRNA : E1_4_4_2_mRNA
y[765] = 0    # E1_5_1_2_mRNA : E1_5_1_2_mRNA
y[766] = 0    # E1_5_1_20_mRNA : E1_5_1_20_mRNA
y[767] = 0    # E1_7_1_13_mRNA : E1_7_1_13_mRNA
y[768] = 0    # E1_7_99_1_mRNA : E1_7_99_1_mRNA
y[769] = 0    # E1_8_1_4_mRNA : E1_8_1_4_mRNA
y[770] = 0    # E1_8_1_9_mRNA : E1_8_1_9_mRNA
y[771] = 0    # E1_8_4_11_mRNA : E1_8_4_11_mRNA
y[772] = 0    # E1_8_4_12_mRNA : E1_8_4_12_mRNA
y[773] = 0    # E1_8_5_3_mRNA : E1_8_5_3_mRNA
y[774] = 0    # E1_8_99_2_mRNA : E1_8_99_2_mRNA
y[775] = 0    # E2_1_1_107_mRNA : E2_1_1_107_mRNA
y[776] = 0    # E2_1_1_130_mRNA : E2_1_1_130_mRNA
y[777] = 0    # E2_1_1_131_mRNA : E2_1_1_131_mRNA
y[778] = 0    # E2_1_1_133_mRNA : E2_1_1_133_mRNA
y[779] = 0    # E2_1_1_171_mRNA : E2_1_1_171_mRNA
y[780] = 0    # E2_1_1_182_mRNA : E2_1_1_182_mRNA
y[781] = 0    # E2_1_1_197_mRNA : E2_1_1_197_mRNA
y[782] = 0    # E2_1_1_228_mRNA : E2_1_1_228_mRNA
y[783] = 0    # E2_1_1_297_mRNA : E2_1_1_297_mRNA
y[784] = 0    # E2_1_1_63_mRNA : E2_1_1_63_mRNA
y[785] = 0    # E2_1_1_72_mRNA : E2_1_1_72_mRNA
y[786] = 0    # E2_1_1_77_mRNA : E2_1_1_77_mRNA
y[787] = 0    # E2_1_2_10_mRNA : E2_1_2_10_mRNA
y[788] = 0    # E2_1_2_11_mRNA : E2_1_2_11_mRNA
y[789] = 0    # E2_1_2_2_mRNA : E2_1_2_2_mRNA
y[790] = 0    # E2_1_2_9_mRNA : E2_1_2_9_mRNA
y[791] = 0    # E2_1_3_2_mRNA : E2_1_3_2_mRNA
y[792] = 0    # E2_1_3_3_mRNA : E2_1_3_3_mRNA
y[793] = 0    # E2_2_1_1_mRNA : E2_2_1_1_mRNA
y[794] = 0    # E2_2_1_10_mRNA : E2_2_1_10_mRNA
y[795] = 0    # E2_2_1_6_mRNA : E2_2_1_6_mRNA
y[796] = 0    # E2_2_1_7_mRNA : E2_2_1_7_mRNA
y[797] = 0    # E2_3_1_1_mRNA : E2_3_1_1_mRNA
y[798] = 0    # E2_3_1_15_mRNA : E2_3_1_15_mRNA
y[799] = 0    # E2_3_1_179_mRNA : E2_3_1_179_mRNA
y[800] = 0    # E2_3_1_181_mRNA : E2_3_1_181_mRNA
y[801] = 0    # E2_3_1_234_mRNA : E2_3_1_234_mRNA
y[802] = 0    # E2_3_1_35_mRNA : E2_3_1_35_mRNA
y[803] = 0    # E2_3_1_46_mRNA : E2_3_1_46_mRNA
y[804] = 0    # E2_3_1_8_mRNA : E2_3_1_8_mRNA
y[805] = 0    # E2_3_2_2_mRNA : E2_3_2_2_mRNA
y[806] = 0    # E2_3_2_6_mRNA : E2_3_2_6_mRNA
y[807] = 0    # E2_3_3_13_mRNA : E2_3_3_13_mRNA
y[808] = 0    # E2_4_1_227_mRNA : E2_4_1_227_mRNA
y[809] = 0    # E2_4_2_1_mRNA : E2_4_2_1_mRNA
y[810] = 0    # E2_4_2_10_mRNA : E2_4_2_10_mRNA
y[811] = 0    # E2_4_2_14_mRNA : E2_4_2_14_mRNA
y[812] = 0    # E2_4_2_17_mRNA : E2_4_2_17_mRNA
y[813] = 0    # E2_4_2_18_mRNA : E2_4_2_18_mRNA
y[814] = 0    # E2_4_2_19_mRNA : E2_4_2_19_mRNA
y[815] = 0    # E2_4_2_21_mRNA : E2_4_2_21_mRNA
y[816] = 0    # E2_4_2_29_mRNA : E2_4_2_29_mRNA
y[817] = 0    # E2_4_2_8_mRNA : E2_4_2_8_mRNA
y[818] = 0    # E2_4_2_9_mRNA : E2_4_2_9_mRNA
y[819] = 0    # E2_4_99_17_mRNA : E2_4_99_17_mRNA
y[820] = 0    # E2_5_1_15_mRNA : E2_5_1_15_mRNA
y[821] = 0    # E2_5_1_3_mRNA : E2_5_1_3_mRNA
y[822] = 0    # E2_5_1_31_mRNA : E2_5_1_31_mRNA
y[823] = 0    # E2_5_1_47_mRNA : E2_5_1_47_mRNA
y[824] = 0    # E2_5_1_6_mRNA : E2_5_1_6_mRNA
y[825] = 0    # E2_5_1_61_mRNA : E2_5_1_61_mRNA
y[826] = 0    # E2_5_1_7_mRNA : E2_5_1_7_mRNA
y[827] = 0    # E2_5_1_72_mRNA : E2_5_1_72_mRNA
y[828] = 0    # E2_5_1_75_mRNA : E2_5_1_75_mRNA
y[829] = 0    # E2_5_1_78_mRNA : E2_5_1_78_mRNA
y[830] = 0    # E2_5_1_9_mRNA : E2_5_1_9_mRNA
y[831] = 0    # E2_6_1_16_mRNA : E2_6_1_16_mRNA
y[832] = 0    # E2_6_1_42_mRNA : E2_6_1_42_mRNA
y[833] = 0    # E2_6_1_62_mRNA : E2_6_1_62_mRNA
y[834] = 0    # E2_6_1_83_mRNA : E2_6_1_83_mRNA
y[835] = 0    # E2_6_1_9_mRNA : E2_6_1_9_mRNA
y[836] = 0    # E2_7_1_148_mRNA : E2_7_1_148_mRNA
y[837] = 0    # E2_7_1_24_mRNA : E2_7_1_24_mRNA
y[838] = 0    # E2_7_1_25_mRNA : E2_7_1_25_mRNA
y[839] = 0    # E2_7_1_26_mRNA : E2_7_1_26_mRNA
y[840] = 0    # E2_7_1_30_mRNA : E2_7_1_30_mRNA
y[841] = 0    # E2_7_1_33_mRNA : E2_7_1_33_mRNA
y[842] = 0    # E2_7_1_40_mRNA : E2_7_1_40_mRNA
y[843] = 0    # E2_7_1_49_mRNA : E2_7_1_49_mRNA
y[844] = 0    # E2_7_1_50_mRNA : E2_7_1_50_mRNA
y[845] = 0    # E2_7_1_71_mRNA : E2_7_1_71_mRNA
y[846] = 0    # E2_7_2_11_mRNA : E2_7_2_11_mRNA
y[847] = 0    # E2_7_2_4_mRNA : E2_7_2_4_mRNA
y[848] = 0    # E2_7_2_7_mRNA : E2_7_2_7_mRNA
y[849] = 0    # E2_7_2_8_mRNA : E2_7_2_8_mRNA
y[850] = 0    # E2_7_3_9_mRNA : E2_7_3_9_mRNA
y[851] = 0    # E2_7_4_1_mRNA : E2_7_4_1_mRNA
y[852] = 0    # E2_7_4_16_mRNA : E2_7_4_16_mRNA
y[853] = 0    # E2_7_4_22_mRNA : E2_7_4_22_mRNA
y[854] = 0    # E2_7_4_25_mRNA : E2_7_4_25_mRNA
y[855] = 0    # E2_7_4_6_mRNA : E2_7_4_6_mRNA
y[856] = 0    # E2_7_4_7_mRNA : E2_7_4_7_mRNA
y[857] = 0    # E2_7_4_8_mRNA : E2_7_4_8_mRNA
y[858] = 0    # E2_7_4_9_mRNA : E2_7_4_9_mRNA
y[859] = 0    # E2_7_6_3_mRNA : E2_7_6_3_mRNA
y[860] = 0    # E2_7_7_13_mRNA : E2_7_7_13_mRNA
y[861] = 0    # E2_7_7_2_mRNA : E2_7_7_2_mRNA
y[862] = 0    # E2_7_7_23_mRNA : E2_7_7_23_mRNA
y[863] = 0    # E2_7_7_24_mRNA : E2_7_7_24_mRNA
y[864] = 0    # E2_7_7_3_mRNA : E2_7_7_3_mRNA
y[865] = 0    # E2_7_7_33_mRNA : E2_7_7_33_mRNA
y[866] = 0    # E2_7_7_4_mRNA : E2_7_7_4_mRNA
y[867] = 0    # E2_7_7_41_mRNA : E2_7_7_41_mRNA
y[868] = 0    # E2_7_7_6_mRNA : E2_7_7_6_mRNA
y[869] = 0    # E2_7_7_60_mRNA : E2_7_7_60_mRNA
y[870] = 0    # E2_7_7_65_mRNA : E2_7_7_65_mRNA
y[871] = 0    # E2_7_7_7_mRNA : E2_7_7_7_mRNA
y[872] = 0    # E2_7_7_8_mRNA : E2_7_7_8_mRNA
y[873] = 0    # E2_7_7_85_mRNA : E2_7_7_85_mRNA
y[874] = 0    # E2_7_7_9_mRNA : E2_7_7_9_mRNA
y[875] = 0    # E2_7_8_13_mRNA : E2_7_8_13_mRNA
y[876] = 0    # E2_7_8_5_mRNA : E2_7_8_5_mRNA
y[877] = 0    # E2_7_8_7_mRNA : E2_7_8_7_mRNA
y[878] = 0    # E2_7_8_8_mRNA : E2_7_8_8_mRNA
y[879] = 0    # E2_7_9_3_mRNA : E2_7_9_3_mRNA
y[880] = 0    # E2_8_1_6_mRNA : E2_8_1_6_mRNA
y[881] = 0    # E2_8_1_7_mRNA : E2_8_1_7_mRNA
y[882] = 0    # E2_8_1_8_mRNA : E2_8_1_8_mRNA
y[883] = 0    # E2_8_4_3_mRNA : E2_8_4_3_mRNA
y[884] = 0    # E2_8_4_4_mRNA : E2_8_4_4_mRNA
y[885] = 0    # E2_9_1_1_mRNA : E2_9_1_1_mRNA
y[886] = 0    # E3_1_1_29_mRNA : E3_1_1_29_mRNA
y[887] = 0    # E3_1_1_31_mRNA : E3_1_1_31_mRNA
y[888] = 0    # E3_1_3_11_mRNA : E3_1_3_11_mRNA
y[889] = 0    # E3_1_3_6_mRNA : E3_1_3_6_mRNA
y[890] = 0    # E3_1_3_82_mRNA : E3_1_3_82_mRNA
y[891] = 0    # E3_2_2_26_mRNA : E3_2_2_26_mRNA
y[892] = 0    # E3_4_11_1_mRNA : E3_4_11_1_mRNA
y[893] = 0    # E3_5_1_2_mRNA : E3_5_1_2_mRNA
y[894] = 0    # E3_5_1_28_mRNA : E3_5_1_28_mRNA
y[895] = 0    # E3_5_1_5_mRNA : E3_5_1_5_mRNA
y[896] = 0    # E3_5_1_88_mRNA : E3_5_1_88_mRNA
y[897] = 0    # E3_5_3_11_mRNA : E3_5_3_11_mRNA
y[898] = 0    # E3_5_4_16_mRNA : E3_5_4_16_mRNA
y[899] = 0    # E3_5_4_19_mRNA : E3_5_4_19_mRNA
y[900] = 0    # E3_5_4_2_mRNA : E3_5_4_2_mRNA
y[901] = 0    # E3_5_4_25_mRNA : E3_5_4_25_mRNA
y[902] = 0    # E3_5_4_26_mRNA : E3_5_4_26_mRNA
y[903] = 0    # E3_5_4_33_mRNA : E3_5_4_33_mRNA
y[904] = 0    # E3_6_1_1_mRNA : E3_6_1_1_mRNA
y[905] = 0    # E3_6_1_23_mRNA : E3_6_1_23_mRNA
y[906] = 0    # E3_6_1_27_mRNA : E3_6_1_27_mRNA
y[907] = 0    # E3_6_1_9_mRNA : E3_6_1_9_mRNA
y[908] = 0    # E4_1_1_11_mRNA : E4_1_1_11_mRNA
y[909] = 0    # E4_1_1_19_mRNA : E4_1_1_19_mRNA
y[910] = 0    # E4_1_1_20_mRNA : E4_1_1_20_mRNA
y[911] = 0    # E4_1_1_21_mRNA : E4_1_1_21_mRNA
y[912] = 0    # E4_1_1_23_mRNA : E4_1_1_23_mRNA
y[913] = 0    # E4_1_1_36_mRNA : E4_1_1_36_mRNA
y[914] = 0    # E4_1_1_65_mRNA : E4_1_1_65_mRNA
y[915] = 0    # E4_1_1_96_mRNA : E4_1_1_96_mRNA
y[916] = 0    # E4_1_2_13_mRNA : E4_1_2_13_mRNA
y[917] = 0    # E4_1_2_50_mRNA : E4_1_2_50_mRNA
y[918] = 0    # E4_1_99_12_mRNA : E4_1_99_12_mRNA
y[919] = 0    # E4_1_99_17_mRNA : E4_1_99_17_mRNA
y[920] = 0    # E4_1_99_19_mRNA : E4_1_99_19_mRNA
y[921] = 0    # E4_1_99_22_mRNA : E4_1_99_22_mRNA
y[922] = 0    # E4_2_1_10_mRNA : E4_2_1_10_mRNA
y[923] = 0    # E4_2_1_11_mRNA : E4_2_1_11_mRNA
y[924] = 0    # E4_2_1_2_mRNA : E4_2_1_2_mRNA
y[925] = 0    # E4_2_1_20_mRNA : E4_2_1_20_mRNA
y[926] = 0    # E4_2_1_24_mRNA : E4_2_1_24_mRNA
y[927] = 0    # E4_2_1_45_mRNA : E4_2_1_45_mRNA
y[928] = 0    # E4_2_1_46_mRNA : E4_2_1_46_mRNA
y[929] = 0    # E4_2_1_47_mRNA : E4_2_1_47_mRNA
y[930] = 0    # E4_2_1_51_mRNA : E4_2_1_51_mRNA
y[931] = 0    # E4_2_1_59_mRNA : E4_2_1_59_mRNA
y[932] = 0    # E4_2_1_82_mRNA : E4_2_1_82_mRNA
y[933] = 0    # E4_2_1_9_mRNA : E4_2_1_9_mRNA
y[934] = 0    # E4_2_3_1_mRNA : E4_2_3_1_mRNA
y[935] = 0    # E4_2_3_5_mRNA : E4_2_3_5_mRNA
y[936] = 0    # E4_3_1_15_mRNA : E4_3_1_15_mRNA
y[937] = 0    # E4_3_1_17_mRNA : E4_3_1_17_mRNA
y[938] = 0    # E4_3_1_19_mRNA : E4_3_1_19_mRNA
y[939] = 0    # E4_3_1_7_mRNA : E4_3_1_7_mRNA
y[940] = 0    # E4_3_2_1_mRNA : E4_3_2_1_mRNA
y[941] = 0    # E4_3_2_2_mRNA : E4_3_2_2_mRNA
y[942] = 0    # E4_3_3_6_mRNA : E4_3_3_6_mRNA
y[943] = 0    # E4_3_3_7_mRNA : E4_3_3_7_mRNA
y[944] = 0    # E4_3_99_3_mRNA : E4_3_99_3_mRNA
y[945] = 0    # E4_3_99_4_mRNA : E4_3_99_4_mRNA
y[946] = 0    # E4_6_1_17_mRNA : E4_6_1_17_mRNA
y[947] = 0    # E5_1_1_1_mRNA : E5_1_1_1_mRNA
y[948] = 0    # E5_1_1_3_mRNA : E5_1_1_3_mRNA
y[949] = 0    # E5_1_1_7_mRNA : E5_1_1_7_mRNA
y[950] = 0    # E5_1_3_1_mRNA : E5_1_3_1_mRNA
y[951] = 0    # E5_1_3_13_mRNA : E5_1_3_13_mRNA
y[952] = 0    # E5_1_3_2_mRNA : E5_1_3_2_mRNA
y[953] = 0    # E5_1_3_20_mRNA : E5_1_3_20_mRNA
y[954] = 0    # E5_2_1_8_mRNA : E5_2_1_8_mRNA
y[955] = 0    # E5_3_1_1_mRNA : E5_3_1_1_mRNA
y[956] = 0    # E5_3_1_16_mRNA : E5_3_1_16_mRNA
y[957] = 0    # E5_3_1_23_mRNA : E5_3_1_23_mRNA
y[958] = 0    # E5_3_1_28_mRNA : E5_3_1_28_mRNA
y[959] = 0    # E5_3_1_6_mRNA : E5_3_1_6_mRNA
y[960] = 0    # E5_3_1_8_mRNA : E5_3_1_8_mRNA
y[961] = 0    # E5_4_2_10_mRNA : E5_4_2_10_mRNA
y[962] = 0    # E5_4_2_12_mRNA : E5_4_2_12_mRNA
y[963] = 0    # E5_4_2_2_mRNA : E5_4_2_2_mRNA
y[964] = 0    # E5_4_3_8_mRNA : E5_4_3_8_mRNA
y[965] = 0    # E5_4_99_12_mRNA : E5_4_99_12_mRNA
y[966] = 0    # E5_4_99_18_mRNA : E5_4_99_18_mRNA
y[967] = 0    # E6_1_1_1_mRNA : E6_1_1_1_mRNA
y[968] = 0    # E6_1_1_10_mRNA : E6_1_1_10_mRNA
y[969] = 0    # E6_1_1_11_mRNA : E6_1_1_11_mRNA
y[970] = 0    # E6_1_1_12_mRNA : E6_1_1_12_mRNA
y[971] = 0    # E6_1_1_14_mRNA : E6_1_1_14_mRNA
y[972] = 0    # E6_1_1_15_mRNA : E6_1_1_15_mRNA
y[973] = 0    # E6_1_1_16_mRNA : E6_1_1_16_mRNA
y[974] = 0    # E6_1_1_17_mRNA : E6_1_1_17_mRNA
y[975] = 0    # E6_1_1_19_mRNA : E6_1_1_19_mRNA
y[976] = 0    # E6_1_1_2_mRNA : E6_1_1_2_mRNA
y[977] = 0    # E6_1_1_20_mRNA : E6_1_1_20_mRNA
y[978] = 0    # E6_1_1_21_mRNA : E6_1_1_21_mRNA
y[979] = 0    # E6_1_1_22_mRNA : E6_1_1_22_mRNA
y[980] = 0    # E6_1_1_3_mRNA : E6_1_1_3_mRNA
y[981] = 0    # E6_1_1_4_mRNA : E6_1_1_4_mRNA
y[982] = 0    # E6_1_1_5_mRNA : E6_1_1_5_mRNA
y[983] = 0    # E6_1_1_6_mRNA : E6_1_1_6_mRNA
y[984] = 0    # E6_1_1_7_mRNA : E6_1_1_7_mRNA
y[985] = 0    # E6_1_1_9_mRNA : E6_1_1_9_mRNA
y[986] = 0    # E6_2_1_1_mRNA : E6_2_1_1_mRNA
y[987] = 0    # E6_3_1_20_mRNA : E6_3_1_20_mRNA
y[988] = 0    # E6_3_2_1_mRNA : E6_3_2_1_mRNA
y[989] = 0    # E6_3_2_13_mRNA : E6_3_2_13_mRNA
y[990] = 0    # E6_3_2_4_mRNA : E6_3_2_4_mRNA
y[991] = 0    # E6_3_2_5_mRNA : E6_3_2_5_mRNA
y[992] = 0    # E6_3_2_6_mRNA : E6_3_2_6_mRNA
y[993] = 0    # E6_3_2_8_mRNA : E6_3_2_8_mRNA
y[994] = 0    # E6_3_2_9_mRNA : E6_3_2_9_mRNA
y[995] = 0    # E6_3_3_1_mRNA : E6_3_3_1_mRNA
y[996] = 0    # E6_3_3_2_mRNA : E6_3_3_2_mRNA
y[997] = 0    # E6_3_4_13_mRNA : E6_3_4_13_mRNA
y[998] = 0    # E6_3_4_15_mRNA : E6_3_4_15_mRNA
y[999] = 0    # E6_3_4_19_mRNA : E6_3_4_19_mRNA
y[1000] = 0    # E6_3_4_2_mRNA : E6_3_4_2_mRNA
y[1001] = 0    # E6_3_4_20_mRNA : E6_3_4_20_mRNA
y[1002] = 0    # E6_3_4_4_mRNA : E6_3_4_4_mRNA
y[1003] = 0    # E6_3_4_5_mRNA : E6_3_4_5_mRNA
y[1004] = 0    # E6_3_5_1_mRNA : E6_3_5_1_mRNA
y[1005] = 0    # E6_3_5_2_mRNA : E6_3_5_2_mRNA
y[1006] = 0    # E6_3_5_4_mRNA : E6_3_5_4_mRNA
y[1007] = 0    # E6_3_5_5_mRNA : E6_3_5_5_mRNA
y[1008] = 0    # E6_4_1_1_mRNA : E6_4_1_1_mRNA
y[1009] = 0    # E6_5_1_2_mRNA : E6_5_1_2_mRNA
y[1010] = 0    # E1_1_1_1 : E1_1_1_1
y[1011] = 0    # E1_1_1_100 : E1_1_1_100
y[1012] = 0    # E1_1_1_133 : E1_1_1_133
y[1013] = 0    # E1_1_1_193 : E1_1_1_193
y[1014] = 0    # E1_1_1_205 : E1_1_1_205
y[1015] = 0    # E1_1_1_23 : E1_1_1_23
y[1016] = 0    # E1_1_1_267 : E1_1_1_267
y[1017] = 0    # E1_1_1_85 : E1_1_1_85
y[1018] = 0    # E1_1_1_86 : E1_1_1_86
y[1019] = 0    # E1_1_5_3 : E1_1_5_3
y[1020] = 0    # E1_17_1_8 : E1_17_1_8
y[1021] = 0    # E1_17_4_1 : E1_17_4_1
y[1022] = 0    # E1_17_4_2 : E1_17_4_2
y[1023] = 0    # E1_17_7_1 : E1_17_7_1
y[1024] = 0    # E1_17_7_4 : E1_17_7_4
y[1025] = 0    # E1_18_6_1 : E1_18_6_1
y[1026] = 0    # E1_2_1_10 : E1_2_1_10
y[1027] = 0    # E1_2_1_11 : E1_2_1_11
y[1028] = 0    # E1_2_1_38 : E1_2_1_38
y[1029] = 0    # E1_2_1_41 : E1_2_1_41
y[1030] = 0    # E1_2_1_70 : E1_2_1_70
y[1031] = 0    # E1_2_7_4 : E1_2_7_4
y[1032] = 0    # E1_2_7_5 : E1_2_7_5
y[1033] = 0    # E1_2_7_8 : E1_2_7_8
y[1034] = 0    # E1_3_1_14 : E1_3_1_14
y[1035] = 0    # E1_3_1_98 : E1_3_1_98
y[1036] = 0    # E1_4_1_1 : E1_4_1_1
y[1037] = 0    # E1_4_1_13 : E1_4_1_13
y[1038] = 0    # E1_4_1_4 : E1_4_1_4
y[1039] = 0    # E1_4_3_16 : E1_4_3_16
y[1040] = 0    # E1_4_4_2 : E1_4_4_2
y[1041] = 0    # E1_5_1_2 : E1_5_1_2
y[1042] = 0    # E1_5_1_20 : E1_5_1_20
y[1043] = 0    # E1_7_1_13 : E1_7_1_13
y[1044] = 0    # E1_7_99_1 : E1_7_99_1
y[1045] = 0    # E1_8_1_4 : E1_8_1_4
y[1046] = 0    # E1_8_1_9 : E1_8_1_9
y[1047] = 0    # E1_8_4_11 : E1_8_4_11
y[1048] = 0    # E1_8_4_12 : E1_8_4_12
y[1049] = 0    # E1_8_5_3 : E1_8_5_3
y[1050] = 0    # E1_8_99_2 : E1_8_99_2
y[1051] = 0    # E2_1_1_107 : E2_1_1_107
y[1052] = 0    # E2_1_1_130 : E2_1_1_130
y[1053] = 0    # E2_1_1_131 : E2_1_1_131
y[1054] = 0    # E2_1_1_133 : E2_1_1_133
y[1055] = 0    # E2_1_1_171 : E2_1_1_171
y[1056] = 0    # E2_1_1_182 : E2_1_1_182
y[1057] = 0    # E2_1_1_197 : E2_1_1_197
y[1058] = 0    # E2_1_1_228 : E2_1_1_228
y[1059] = 0    # E2_1_1_297 : E2_1_1_297
y[1060] = 0    # E2_1_1_63 : E2_1_1_63
y[1061] = 0    # E2_1_1_72 : E2_1_1_72
y[1062] = 0    # E2_1_1_77 : E2_1_1_77
y[1063] = 0    # E2_1_2_10 : E2_1_2_10
y[1064] = 0    # E2_1_2_11 : E2_1_2_11
y[1065] = 0    # E2_1_2_2 : E2_1_2_2
y[1066] = 0    # E2_1_2_9 : E2_1_2_9
y[1067] = 0    # E2_1_3_2 : E2_1_3_2
y[1068] = 0    # E2_1_3_3 : E2_1_3_3
y[1069] = 0    # E2_2_1_1 : E2_2_1_1
y[1070] = 0    # E2_2_1_10 : E2_2_1_10
y[1071] = 0    # E2_2_1_6 : E2_2_1_6
y[1072] = 0    # E2_2_1_7 : E2_2_1_7
y[1073] = 0    # E2_3_1_1 : E2_3_1_1
y[1074] = 0    # E2_3_1_15 : E2_3_1_15
y[1075] = 0    # E2_3_1_179 : E2_3_1_179
y[1076] = 0    # E2_3_1_181 : E2_3_1_181
y[1077] = 0    # E2_3_1_234 : E2_3_1_234
y[1078] = 0    # E2_3_1_35 : E2_3_1_35
y[1079] = 0    # E2_3_1_46 : E2_3_1_46
y[1080] = 0    # E2_3_1_8 : E2_3_1_8
y[1081] = 0    # E2_3_2_2 : E2_3_2_2
y[1082] = 0    # E2_3_2_6 : E2_3_2_6
y[1083] = 0    # E2_3_3_13 : E2_3_3_13
y[1084] = 0    # E2_4_1_227 : E2_4_1_227
y[1085] = 0    # E2_4_2_1 : E2_4_2_1
y[1086] = 0    # E2_4_2_10 : E2_4_2_10
y[1087] = 0    # E2_4_2_14 : E2_4_2_14
y[1088] = 0    # E2_4_2_17 : E2_4_2_17
y[1089] = 0    # E2_4_2_18 : E2_4_2_18
y[1090] = 0    # E2_4_2_19 : E2_4_2_19
y[1091] = 0    # E2_4_2_21 : E2_4_2_21
y[1092] = 0    # E2_4_2_29 : E2_4_2_29
y[1093] = 0    # E2_4_2_8 : E2_4_2_8
y[1094] = 0    # E2_4_2_9 : E2_4_2_9
y[1095] = 0    # E2_4_99_17 : E2_4_99_17
y[1096] = 0    # E2_5_1_15 : E2_5_1_15
y[1097] = 0    # E2_5_1_3 : E2_5_1_3
y[1098] = 0    # E2_5_1_31 : E2_5_1_31
y[1099] = 0    # E2_5_1_47 : E2_5_1_47
y[1100] = 0    # E2_5_1_6 : E2_5_1_6
y[1101] = 0    # E2_5_1_61 : E2_5_1_61
y[1102] = 0    # E2_5_1_7 : E2_5_1_7
y[1103] = 0    # E2_5_1_72 : E2_5_1_72
y[1104] = 0    # E2_5_1_75 : E2_5_1_75
y[1105] = 0    # E2_5_1_78 : E2_5_1_78
y[1106] = 0    # E2_5_1_9 : E2_5_1_9
y[1107] = 0    # E2_6_1_16 : E2_6_1_16
y[1108] = 0    # E2_6_1_42 : E2_6_1_42
y[1109] = 0    # E2_6_1_62 : E2_6_1_62
y[1110] = 0    # E2_6_1_83 : E2_6_1_83
y[1111] = 0    # E2_6_1_9 : E2_6_1_9
y[1112] = 0    # E2_7_1_148 : E2_7_1_148
y[1113] = 0    # E2_7_1_24 : E2_7_1_24
y[1114] = 0    # E2_7_1_25 : E2_7_1_25
y[1115] = 0    # E2_7_1_26 : E2_7_1_26
y[1116] = 0    # E2_7_1_30 : E2_7_1_30
y[1117] = 0    # E2_7_1_33 : E2_7_1_33
y[1118] = 0    # E2_7_1_40 : E2_7_1_40
y[1119] = 0    # E2_7_1_49 : E2_7_1_49
y[1120] = 0    # E2_7_1_50 : E2_7_1_50
y[1121] = 0    # E2_7_1_71 : E2_7_1_71
y[1122] = 0    # E2_7_2_11 : E2_7_2_11
y[1123] = 0    # E2_7_2_4 : E2_7_2_4
y[1124] = 0    # E2_7_2_7 : E2_7_2_7
y[1125] = 0    # E2_7_2_8 : E2_7_2_8
y[1126] = 0    # E2_7_3_9 : E2_7_3_9
y[1127] = 0    # E2_7_4_1 : E2_7_4_1
y[1128] = 0    # E2_7_4_16 : E2_7_4_16
y[1129] = 0    # E2_7_4_22 : E2_7_4_22
y[1130] = 0    # E2_7_4_25 : E2_7_4_25
y[1131] = 0    # E2_7_4_6 : E2_7_4_6
y[1132] = 0    # E2_7_4_7 : E2_7_4_7
y[1133] = 0    # E2_7_4_8 : E2_7_4_8
y[1134] = 0    # E2_7_4_9 : E2_7_4_9
y[1135] = 0    # E2_7_6_3 : E2_7_6_3
y[1136] = 0    # E2_7_7_13 : E2_7_7_13
y[1137] = 0    # E2_7_7_2 : E2_7_7_2
y[1138] = 0    # E2_7_7_23 : E2_7_7_23
y[1139] = 0    # E2_7_7_24 : E2_7_7_24
y[1140] = 0    # E2_7_7_3 : E2_7_7_3
y[1141] = 0    # E2_7_7_33 : E2_7_7_33
y[1142] = 0    # E2_7_7_4 : E2_7_7_4
y[1143] = 0    # E2_7_7_41 : E2_7_7_41
y[1144] = 0    # E2_7_7_6 : E2_7_7_6
y[1145] = 0    # E2_7_7_60 : E2_7_7_60
y[1146] = 0    # E2_7_7_65 : E2_7_7_65
y[1147] = 0    # E2_7_7_7 : E2_7_7_7
y[1148] = 0    # E2_7_7_8 : E2_7_7_8
y[1149] = 0    # E2_7_7_85 : E2_7_7_85
y[1150] = 0    # E2_7_7_9 : E2_7_7_9
y[1151] = 0    # E2_7_8_13 : E2_7_8_13
y[1152] = 0    # E2_7_8_5 : E2_7_8_5
y[1153] = 0    # E2_7_8_7 : E2_7_8_7
y[1154] = 0    # E2_7_8_8 : E2_7_8_8
y[1155] = 0    # E2_7_9_3 : E2_7_9_3
y[1156] = 0    # E2_8_1_6 : E2_8_1_6
y[1157] = 0    # E2_8_1_7 : E2_8_1_7
y[1158] = 0    # E2_8_1_8 : E2_8_1_8
y[1159] = 0    # E2_8_4_3 : E2_8_4_3
y[1160] = 0    # E2_8_4_4 : E2_8_4_4
y[1161] = 0    # E2_9_1_1 : E2_9_1_1
y[1162] = 0    # E3_1_1_29 : E3_1_1_29
y[1163] = 0    # E3_1_1_31 : E3_1_1_31
y[1164] = 0    # E3_1_3_11 : E3_1_3_11
y[1165] = 0    # E3_1_3_6 : E3_1_3_6
y[1166] = 0    # E3_1_3_82 : E3_1_3_82
y[1167] = 0    # E3_2_2_26 : E3_2_2_26
y[1168] = 0    # E3_4_11_1 : E3_4_11_1
y[1169] = 0    # E3_5_1_2 : E3_5_1_2
y[1170] = 0    # E3_5_1_28 : E3_5_1_28
y[1171] = 0    # E3_5_1_5 : E3_5_1_5
y[1172] = 0    # E3_5_1_88 : E3_5_1_88
y[1173] = 0    # E3_5_3_11 : E3_5_3_11
y[1174] = 0    # E3_5_4_16 : E3_5_4_16
y[1175] = 0    # E3_5_4_19 : E3_5_4_19
y[1176] = 0    # E3_5_4_2 : E3_5_4_2
y[1177] = 0    # E3_5_4_25 : E3_5_4_25
y[1178] = 0    # E3_5_4_26 : E3_5_4_26
y[1179] = 0    # E3_5_4_33 : E3_5_4_33
y[1180] = 0    # E3_6_1_1 : E3_6_1_1
y[1181] = 0    # E3_6_1_23 : E3_6_1_23
y[1182] = 0    # E3_6_1_27 : E3_6_1_27
y[1183] = 0    # E3_6_1_9 : E3_6_1_9
y[1184] = 0    # E4_1_1_11 : E4_1_1_11
y[1185] = 0    # E4_1_1_19 : E4_1_1_19
y[1186] = 0    # E4_1_1_20 : E4_1_1_20
y[1187] = 0    # E4_1_1_21 : E4_1_1_21
y[1188] = 0    # E4_1_1_23 : E4_1_1_23
y[1189] = 0    # E4_1_1_36 : E4_1_1_36
y[1190] = 0    # E4_1_1_65 : E4_1_1_65
y[1191] = 0    # E4_1_1_96 : E4_1_1_96
y[1192] = 0    # E4_1_2_13 : E4_1_2_13
y[1193] = 0    # E4_1_2_50 : E4_1_2_50
y[1194] = 0    # E4_1_99_12 : E4_1_99_12
y[1195] = 0    # E4_1_99_17 : E4_1_99_17
y[1196] = 0    # E4_1_99_19 : E4_1_99_19
y[1197] = 0    # E4_1_99_22 : E4_1_99_22
y[1198] = 0    # E4_2_1_10 : E4_2_1_10
y[1199] = 0    # E4_2_1_11 : E4_2_1_11
y[1200] = 0    # E4_2_1_2 : E4_2_1_2
y[1201] = 0    # E4_2_1_20 : E4_2_1_20
y[1202] = 0    # E4_2_1_24 : E4_2_1_24
y[1203] = 0    # E4_2_1_45 : E4_2_1_45
y[1204] = 0    # E4_2_1_46 : E4_2_1_46
y[1205] = 0    # E4_2_1_47 : E4_2_1_47
y[1206] = 0    # E4_2_1_51 : E4_2_1_51
y[1207] = 0    # E4_2_1_59 : E4_2_1_59
y[1208] = 0    # E4_2_1_82 : E4_2_1_82
y[1209] = 0    # E4_2_1_9 : E4_2_1_9
y[1210] = 0    # E4_2_3_1 : E4_2_3_1
y[1211] = 0    # E4_2_3_5 : E4_2_3_5
y[1212] = 0    # E4_3_1_15 : E4_3_1_15
y[1213] = 0    # E4_3_1_17 : E4_3_1_17
y[1214] = 0    # E4_3_1_19 : E4_3_1_19
y[1215] = 0    # E4_3_1_7 : E4_3_1_7
y[1216] = 0    # E4_3_2_1 : E4_3_2_1
y[1217] = 0    # E4_3_2_2 : E4_3_2_2
y[1218] = 0    # E4_3_3_6 : E4_3_3_6
y[1219] = 0    # E4_3_3_7 : E4_3_3_7
y[1220] = 0    # E4_3_99_3 : E4_3_99_3
y[1221] = 0    # E4_3_99_4 : E4_3_99_4
y[1222] = 0    # E4_6_1_17 : E4_6_1_17
y[1223] = 0    # E5_1_1_1 : E5_1_1_1
y[1224] = 0    # E5_1_1_3 : E5_1_1_3
y[1225] = 0    # E5_1_1_7 : E5_1_1_7
y[1226] = 0    # E5_1_3_1 : E5_1_3_1
y[1227] = 0    # E5_1_3_13 : E5_1_3_13
y[1228] = 0    # E5_1_3_2 : E5_1_3_2
y[1229] = 0    # E5_1_3_20 : E5_1_3_20
y[1230] = 0    # E5_2_1_8 : E5_2_1_8
y[1231] = 0    # E5_3_1_1 : E5_3_1_1
y[1232] = 0    # E5_3_1_16 : E5_3_1_16
y[1233] = 0    # E5_3_1_23 : E5_3_1_23
y[1234] = 0    # E5_3_1_28 : E5_3_1_28
y[1235] = 0    # E5_3_1_6 : E5_3_1_6
y[1236] = 0    # E5_3_1_8 : E5_3_1_8
y[1237] = 0    # E5_4_2_10 : E5_4_2_10
y[1238] = 0    # E5_4_2_12 : E5_4_2_12
y[1239] = 0    # E5_4_2_2 : E5_4_2_2
y[1240] = 0    # E5_4_3_8 : E5_4_3_8
y[1241] = 0    # E5_4_99_12 : E5_4_99_12
y[1242] = 0    # E5_4_99_18 : E5_4_99_18
y[1243] = 0    # E6_1_1_1 : E6_1_1_1
y[1244] = 0    # E6_1_1_10 : E6_1_1_10
y[1245] = 0    # E6_1_1_11 : E6_1_1_11
y[1246] = 0    # E6_1_1_12 : E6_1_1_12
y[1247] = 0    # E6_1_1_14 : E6_1_1_14
y[1248] = 0    # E6_1_1_15 : E6_1_1_15
y[1249] = 0    # E6_1_1_16 : E6_1_1_16
y[1250] = 0    # E6_1_1_17 : E6_1_1_17
y[1251] = 0    # E6_1_1_19 : E6_1_1_19
y[1252] = 0    # E6_1_1_2 : E6_1_1_2
y[1253] = 0    # E6_1_1_20 : E6_1_1_20
y[1254] = 0    # E6_1_1_21 : E6_1_1_21
y[1255] = 0    # E6_1_1_22 : E6_1_1_22
y[1256] = 0    # E6_1_1_3 : E6_1_1_3
y[1257] = 0    # E6_1_1_4 : E6_1_1_4
y[1258] = 0    # E6_1_1_5 : E6_1_1_5
y[1259] = 0    # E6_1_1_6 : E6_1_1_6
y[1260] = 0    # E6_1_1_7 : E6_1_1_7
y[1261] = 0    # E6_1_1_9 : E6_1_1_9
y[1262] = 0    # E6_2_1_1 : E6_2_1_1
y[1263] = 0    # E6_3_1_20 : E6_3_1_20
y[1264] = 0    # E6_3_2_1 : E6_3_2_1
y[1265] = 0    # E6_3_2_13 : E6_3_2_13
y[1266] = 0    # E6_3_2_4 : E6_3_2_4
y[1267] = 0    # E6_3_2_5 : E6_3_2_5
y[1268] = 0    # E6_3_2_6 : E6_3_2_6
y[1269] = 0    # E6_3_2_8 : E6_3_2_8
y[1270] = 0    # E6_3_2_9 : E6_3_2_9
y[1271] = 0    # E6_3_3_1 : E6_3_3_1
y[1272] = 0    # E6_3_3_2 : E6_3_3_2
y[1273] = 0    # E6_3_4_13 : E6_3_4_13
y[1274] = 0    # E6_3_4_15 : E6_3_4_15
y[1275] = 0    # E6_3_4_19 : E6_3_4_19
y[1276] = 0    # E6_3_4_2 : E6_3_4_2
y[1277] = 0    # E6_3_4_20 : E6_3_4_20
y[1278] = 0    # E6_3_4_4 : E6_3_4_4
y[1279] = 0    # E6_3_4_5 : E6_3_4_5
y[1280] = 0    # E6_3_5_1 : E6_3_5_1
y[1281] = 0    # E6_3_5_2 : E6_3_5_2
y[1282] = 0    # E6_3_5_4 : E6_3_5_4
y[1283] = 0    # E6_3_5_5 : E6_3_5_5
y[1284] = 0    # E6_4_1_1 : E6_4_1_1
y[1285] = 0    # E6_5_1_2 : E6_5_1_2
y[1286] = 0    # C0031 : Inserted by Backup Object Loader
y[1287] = 0    # C005526 : Inserted by Backup Object Loader
 
labels = ['time', 'C00001', 'C00002', 'C00003', 'C00004', 'C00005', 'C00006', 'C00007', 'C00008', 'C00009', 'C00010', 'C00011', 'C00012', 'C00013', 'C00014', 'C00015', 'C00016', 'C00017', 'C00018', 'C00019', 'C00020', 'C00021', 'C00022', 'C00024', 'C00025', 'C00026', 'C00027', 'C00028', 'C00029', 'C00030', 'C00031', 'C00033', 'C00035', 'C00036', 'C00037', 'C00039', 'C00040', 'C00041', 'C00043', 'C00044', 'C00045', 'C00046', 'C00047', 'C00048', 'C00049', 'C00051', 'C00052', 'C00053', 'C00054', 'C00055', 'C00058', 'C00059', 'C00060', 'C00061', 'C00062', 'C00063', 'C00064', 'C00065', 'C00066', 'C00067', 'C00068', 'C00071', 'C00073', 'C00074', 'C00075', 'C00077', 'C00078', 'C00079', 'C00080', 'C00081', 'C00082', 'C00084', 'C00085', 'C00086', 'C00091', 'C00092', 'C00093', 'C00094', 'C00096', 'C00097', 'C00099', 'C00100', 'C00101', 'C00103', 'C00104', 'C00105', 'C00106', 'C00108', 'C00109', 'C00111', 'C00112', 'C00114', 'C00116', 'C00117', 'C00118', 'C00119', 'C00120', 'C00122', 'C00123', 'C00125', 'C00126', 'C00129', 'C00130', 'C00131', 'C00133', 'C00134', 'C00135', 'C00136', 'C00138', 'C00139', 'C00141', 'C00143', 'C00144', 'C00147', 'C00148', 'C00149', 'C00151', 'C00152', 'C00153', 'C00161', 'C00163', 'C00166', 'C00169', 'C00173', 'C00179', 'C00183', 'C00188', 'C00189', 'C00192', 'C00197', 'C00199', 'C00201', 'C00203', 'C00206', 'C00212', 'C00215', 'C00217', 'C00224', 'C00226', 'C00227', 'C00229', 'C00231', 'C00233', 'C00234', 'C00235', 'C00237', 'C00239', 'C00240', 'C00241', 'C00242', 'C00245', 'C00246', 'C00248', 'C00251', 'C00253', 'C00254', 'C00255', 'C00258', 'C00262', 'C00263', 'C00269', 'C00275', 'C00279', 'C00282', 'C00283', 'C00286', 'C00288', 'C00294', 'C00295', 'C00299', 'C00315', 'C00320', 'C00327', 'C00330', 'C00337', 'C00342', 'C00343', 'C00345', 'C00350', 'C00352', 'C00354', 'C00361', 'C00362', 'C00363', 'C00364', 'C00365', 'C00376', 'C00385', 'C00387', 'C00390', 'C00399', 'C00404', 'C00407', 'C00416', 'C00418', 'C00430', 'C00437', 'C00438', 'C00440', 'C00441', 'C00445', 'C00447', 'C00448', 'C00454', 'C00455', 'C00458', 'C00459', 'C00460', 'C00463', 'C00469', 'C00473', 'C00475', 'C00493', 'C00501', 'C00502', 'C00522', 'C00526', 'C00536', 'C00559', 'C00565', 'C00568', 'C00576', 'C00577', 'C00579', 'C00580', 'C00605', 'C00615', 'C00620', 'C00624', 'C00631', 'C00636', 'C00655', 'C00666', 'C00668', 'C00671', 'C00672', 'C00677', 'C00680', 'C00681', 'C00685', 'C00688', 'C00692', 'C00693', 'C00697', 'C00705', 'C00716', 'C00756', 'C00772', 'C00787', 'C00819', 'C00821', 'C00826', 'C00828', 'C00831', 'C00842', 'C00857', 'C00860', 'C00864', 'C00868', 'C00882', 'C00886', 'C00900', 'C00911', 'C00921', 'C00931', 'C00944', 'C00966', 'C00979', 'C00993', 'C01005', 'C01024', 'C01037', 'C01050', 'C01051', 'C01081', 'C01092', 'C01094', 'C01100', 'C01102', 'C01103', 'C01118', 'C01134', 'C01143', 'C01157', 'C01165', 'C01171', 'C01179', 'C01185', 'C01209', 'C01212', 'C01219', 'C01222', 'C01236', 'C01242', 'C01250', 'C01267', 'C01268', 'C01269', 'C01271', 'C01279', 'C01300', 'C01304', 'C01344', 'C01345', 'C01346', 'C01352', 'C01367', 'C01368', 'C01412', 'C01419', 'C01450', 'C01468', 'C01528', 'C01545', 'C01548', 'C01563', 'C01612', 'C01635', 'C01636', 'C01637', 'C01638', 'C01639', 'C01641', 'C01642', 'C01643', 'C01644', 'C01645', 'C01646', 'C01647', 'C01648', 'C01649', 'C01650', 'C01651', 'C01652', 'C01653', 'C01762', 'C01909', 'C01929', 'C01931', 'C01977', 'C02047', 'C02051', 'C02090', 'C02097', 'C02128', 'C02163', 'C02166', 'C02218', 'C02320', 'C02356', 'C02380', 'C02412', 'C02429', 'C02430', 'C02463', 'C02469', 'C02504', 'C02508', 'C02512', 'C02527', 'C02553', 'C02554', 'C02583', 'C02637', 'C02702', 'C02713', 'C02737', 'C02739', 'C02741', 'C02743', 'C02764', 'C02839', 'C02876', 'C02909', 'C02962', 'C02972', 'C02984', 'C02987', 'C02988', 'C02992', 'C02999', 'C03023', 'C03082', 'C03090', 'C03114', 'C03125', 'C03127', 'C03150', 'C03170', 'C03175', 'C03193', 'C03287', 'C03294', 'C03306', 'C03319', 'C03356', 'C03363', 'C03373', 'C03375', 'C03391', 'C03402', 'C03406', 'C03479', 'C03492', 'C03506', 'C03511', 'C03512', 'C03523', 'C03617', 'C03633', 'C03688', 'C03722', 'C03723', 'C03735', 'C03740', 'C03741', 'C03794', 'C03798', 'C03800', 'C03802', 'C03826', 'C03838', 'C03880', 'C03892', 'C03895', 'C03912', 'C03939', 'C03972', 'C04039', 'C04079', 'C04133', 'C04153', 'C04157', 'C04181', 'C04188', 'C04232', 'C04236', 'C04242', 'C04246', 'C04250', 'C04258', 'C04261', 'C04272', 'C04281', 'C04294', 'C04302', 'C04309', 'C04311', 'C04327', 'C04332', 'C04352', 'C04376', 'C04411', 'C04425', 'C04432', 'C04454', 'C04501', 'C04556', 'C04574', 'C04582', 'C04618', 'C04619', 'C04620', 'C04631', 'C04633', 'C04640', 'C04646', 'C04677', 'C04681', 'C04688', 'C04702', 'C04732', 'C04735', 'C04751', 'C04752', 'C04778', 'C04807', 'C04823', 'C04851', 'C04877', 'C04882', 'C04895', 'C04896', 'C04916', 'C05125', 'C05167', 'C05172', 'C05198', 'C05223', 'C05335', 'C05336', 'C05345', 'C05359', 'C05360', 'C05361', 'C05378', 'C05382', 'C05444', 'C05445', 'C05512', 'C05576', 'C05577', 'C05670', 'C05684', 'C05686', 'C05688', 'C05689', 'C05691', 'C05695', 'C05696', 'C05697', 'C05703', 'C05711', 'C05726', 'C05729', 'C05744', 'C05745', 'C05746', 'C05747', 'C05748', 'C05749', 'C05750', 'C05751', 'C05752', 'C05753', 'C05754', 'C05755', 'C05756', 'C05757', 'C05758', 'C05759', 'C05760', 'C05761', 'C05762', 'C05763', 'C05764', 'C05772', 'C05778', 'C05819', 'C05822', 'C05840', 'C05841', 'C05844', 'C05893', 'C05897', 'C05898', 'C05921', 'C05922', 'C05923', 'C05951', 'C05983', 'C05993', 'C06006', 'C06007', 'C06010', 'C06020', 'C06021', 'C06032', 'C06055', 'C06056', 'C06114', 'C06148', 'C06156', 'C06193', 'C06249', 'C06250', 'C06393', 'C06397', 'C06398', 'C06406', 'C06407', 'C06416', 'C06423', 'C06481', 'C06482', 'C06547', 'C06611', 'C06612', 'C06613', 'C06899', 'C07490', 'C07645', 'C07648', 'C07649', 'C07836', 'C07838', 'C08492', 'C11038', 'C11039', 'C11143', 'C11434', 'C11435', 'C11436', 'C11437', 'C11439', 'C11440', 'C11453', 'C11472', 'C11475', 'C11539', 'C11540', 'C11811', 'C11823', 'C11907', 'C12214', 'C12215', 'C13378', 'C14089', 'C14090', 'C14099', 'C14463', 'C14818', 'C15489', 'C15527', 'C15556', 'C15586', 'C15587', 'C15602', 'C15603', 'C15653', 'C15667', 'C15809', 'C15811', 'C15812', 'C15972', 'C15973', 'C15996', 'C15999', 'C16219', 'C16220', 'C16236', 'C16237', 'C16238', 'C16240', 'C16241', 'C16310', 'C16348', 'C16396', 'C16399', 'C16463', 'C16551', 'C16586', 'C16587', 'C16595', 'C16596', 'C16614', 'C16615', 'C16618', 'C16619', 'C16634', 'C16636', 'C16663', 'C16664', 'C16675', 'C16739', 'C16832', 'C16848', 'C16849', 'C16850', 'C16999', 'C17010', 'C17023', 'C17234', 'C17324', 'C17556', 'C18096', 'C18172', 'C18174', 'C18239', 'C18902', 'C19647', 'C19673', 'C19722', 'C19723', 'C19878', 'C19882', 'C20239', 'C20246', 'C20247', 'C20248', 'C20258', 'C20372', 'C20373', 'C20374', 'C20375', 'C20376', 'C20377', 'C20378', 'C20446', 'C20451', 'C20463', 'C20565', 'C20641', 'C20648', 'C20751', 'C20753', 'C20755', 'C20756', 'C20758', 'C20796', 'C20858', 'C20864', 'C20904', 'C20905', 'C20969', 'C21031', 'C21310', 'C21386', 'C21387', 'C21388', 'C21440', 'C21748', 'C21749', 'C21750', 'C21751', 'C22150', 'C22151', 'C22154', 'C22155', 'C22157', 'C22158', 'C22159', 'C22160', 'C22395', 'C22441', 'C22442', 'C22443', 'G10550', 'G10551', 'G10552', 'G10553', 'G10555', 'G10556', 'G10610', 'G10619', 'E1_1_1_1_mRNA', 'E1_1_1_100_mRNA', 'E1_1_1_133_mRNA', 'E1_1_1_193_mRNA', 'E1_1_1_205_mRNA', 'E1_1_1_23_mRNA', 'E1_1_1_267_mRNA', 'E1_1_1_85_mRNA', 'E1_1_1_86_mRNA', 'E1_1_5_3_mRNA', 'E1_17_1_8_mRNA', 'E1_17_4_1_mRNA', 'E1_17_4_2_mRNA', 'E1_17_7_1_mRNA', 'E1_17_7_4_mRNA', 'E1_18_6_1_mRNA', 'E1_2_1_10_mRNA', 'E1_2_1_11_mRNA', 'E1_2_1_38_mRNA', 'E1_2_1_41_mRNA', 'E1_2_1_70_mRNA', 'E1_2_7_4_mRNA', 'E1_2_7_5_mRNA', 'E1_2_7_8_mRNA', 'E1_3_1_14_mRNA', 'E1_3_1_98_mRNA', 'E1_4_1_1_mRNA', 'E1_4_1_13_mRNA', 'E1_4_1_4_mRNA', 'E1_4_3_16_mRNA', 'E1_4_4_2_mRNA', 'E1_5_1_2_mRNA', 'E1_5_1_20_mRNA', 'E1_7_1_13_mRNA', 'E1_7_99_1_mRNA', 'E1_8_1_4_mRNA', 'E1_8_1_9_mRNA', 'E1_8_4_11_mRNA', 'E1_8_4_12_mRNA', 'E1_8_5_3_mRNA', 'E1_8_99_2_mRNA', 'E2_1_1_107_mRNA', 'E2_1_1_130_mRNA', 'E2_1_1_131_mRNA', 'E2_1_1_133_mRNA', 'E2_1_1_171_mRNA', 'E2_1_1_182_mRNA', 'E2_1_1_197_mRNA', 'E2_1_1_228_mRNA', 'E2_1_1_297_mRNA', 'E2_1_1_63_mRNA', 'E2_1_1_72_mRNA', 'E2_1_1_77_mRNA', 'E2_1_2_10_mRNA', 'E2_1_2_11_mRNA', 'E2_1_2_2_mRNA', 'E2_1_2_9_mRNA', 'E2_1_3_2_mRNA', 'E2_1_3_3_mRNA', 'E2_2_1_1_mRNA', 'E2_2_1_10_mRNA', 'E2_2_1_6_mRNA', 'E2_2_1_7_mRNA', 'E2_3_1_1_mRNA', 'E2_3_1_15_mRNA', 'E2_3_1_179_mRNA', 'E2_3_1_181_mRNA', 'E2_3_1_234_mRNA', 'E2_3_1_35_mRNA', 'E2_3_1_46_mRNA', 'E2_3_1_8_mRNA', 'E2_3_2_2_mRNA', 'E2_3_2_6_mRNA', 'E2_3_3_13_mRNA', 'E2_4_1_227_mRNA', 'E2_4_2_1_mRNA', 'E2_4_2_10_mRNA', 'E2_4_2_14_mRNA', 'E2_4_2_17_mRNA', 'E2_4_2_18_mRNA', 'E2_4_2_19_mRNA', 'E2_4_2_21_mRNA', 'E2_4_2_29_mRNA', 'E2_4_2_8_mRNA', 'E2_4_2_9_mRNA', 'E2_4_99_17_mRNA', 'E2_5_1_15_mRNA', 'E2_5_1_3_mRNA', 'E2_5_1_31_mRNA', 'E2_5_1_47_mRNA', 'E2_5_1_6_mRNA', 'E2_5_1_61_mRNA', 'E2_5_1_7_mRNA', 'E2_5_1_72_mRNA', 'E2_5_1_75_mRNA', 'E2_5_1_78_mRNA', 'E2_5_1_9_mRNA', 'E2_6_1_16_mRNA', 'E2_6_1_42_mRNA', 'E2_6_1_62_mRNA', 'E2_6_1_83_mRNA', 'E2_6_1_9_mRNA', 'E2_7_1_148_mRNA', 'E2_7_1_24_mRNA', 'E2_7_1_25_mRNA', 'E2_7_1_26_mRNA', 'E2_7_1_30_mRNA', 'E2_7_1_33_mRNA', 'E2_7_1_40_mRNA', 'E2_7_1_49_mRNA', 'E2_7_1_50_mRNA', 'E2_7_1_71_mRNA', 'E2_7_2_11_mRNA', 'E2_7_2_4_mRNA', 'E2_7_2_7_mRNA', 'E2_7_2_8_mRNA', 'E2_7_3_9_mRNA', 'E2_7_4_1_mRNA', 'E2_7_4_16_mRNA', 'E2_7_4_22_mRNA', 'E2_7_4_25_mRNA', 'E2_7_4_6_mRNA', 'E2_7_4_7_mRNA', 'E2_7_4_8_mRNA', 'E2_7_4_9_mRNA', 'E2_7_6_3_mRNA', 'E2_7_7_13_mRNA', 'E2_7_7_2_mRNA', 'E2_7_7_23_mRNA', 'E2_7_7_24_mRNA', 'E2_7_7_3_mRNA', 'E2_7_7_33_mRNA', 'E2_7_7_4_mRNA', 'E2_7_7_41_mRNA', 'E2_7_7_6_mRNA', 'E2_7_7_60_mRNA', 'E2_7_7_65_mRNA', 'E2_7_7_7_mRNA', 'E2_7_7_8_mRNA', 'E2_7_7_85_mRNA', 'E2_7_7_9_mRNA', 'E2_7_8_13_mRNA', 'E2_7_8_5_mRNA', 'E2_7_8_7_mRNA', 'E2_7_8_8_mRNA', 'E2_7_9_3_mRNA', 'E2_8_1_6_mRNA', 'E2_8_1_7_mRNA', 'E2_8_1_8_mRNA', 'E2_8_4_3_mRNA', 'E2_8_4_4_mRNA', 'E2_9_1_1_mRNA', 'E3_1_1_29_mRNA', 'E3_1_1_31_mRNA', 'E3_1_3_11_mRNA', 'E3_1_3_6_mRNA', 'E3_1_3_82_mRNA', 'E3_2_2_26_mRNA', 'E3_4_11_1_mRNA', 'E3_5_1_2_mRNA', 'E3_5_1_28_mRNA', 'E3_5_1_5_mRNA', 'E3_5_1_88_mRNA', 'E3_5_3_11_mRNA', 'E3_5_4_16_mRNA', 'E3_5_4_19_mRNA', 'E3_5_4_2_mRNA', 'E3_5_4_25_mRNA', 'E3_5_4_26_mRNA', 'E3_5_4_33_mRNA', 'E3_6_1_1_mRNA', 'E3_6_1_23_mRNA', 'E3_6_1_27_mRNA', 'E3_6_1_9_mRNA', 'E4_1_1_11_mRNA', 'E4_1_1_19_mRNA', 'E4_1_1_20_mRNA', 'E4_1_1_21_mRNA', 'E4_1_1_23_mRNA', 'E4_1_1_36_mRNA', 'E4_1_1_65_mRNA', 'E4_1_1_96_mRNA', 'E4_1_2_13_mRNA', 'E4_1_2_50_mRNA', 'E4_1_99_12_mRNA', 'E4_1_99_17_mRNA', 'E4_1_99_19_mRNA', 'E4_1_99_22_mRNA', 'E4_2_1_10_mRNA', 'E4_2_1_11_mRNA', 'E4_2_1_2_mRNA', 'E4_2_1_20_mRNA', 'E4_2_1_24_mRNA', 'E4_2_1_45_mRNA', 'E4_2_1_46_mRNA', 'E4_2_1_47_mRNA', 'E4_2_1_51_mRNA', 'E4_2_1_59_mRNA', 'E4_2_1_82_mRNA', 'E4_2_1_9_mRNA', 'E4_2_3_1_mRNA', 'E4_2_3_5_mRNA', 'E4_3_1_15_mRNA', 'E4_3_1_17_mRNA', 'E4_3_1_19_mRNA', 'E4_3_1_7_mRNA', 'E4_3_2_1_mRNA', 'E4_3_2_2_mRNA', 'E4_3_3_6_mRNA', 'E4_3_3_7_mRNA', 'E4_3_99_3_mRNA', 'E4_3_99_4_mRNA', 'E4_6_1_17_mRNA', 'E5_1_1_1_mRNA', 'E5_1_1_3_mRNA', 'E5_1_1_7_mRNA', 'E5_1_3_1_mRNA', 'E5_1_3_13_mRNA', 'E5_1_3_2_mRNA', 'E5_1_3_20_mRNA', 'E5_2_1_8_mRNA', 'E5_3_1_1_mRNA', 'E5_3_1_16_mRNA', 'E5_3_1_23_mRNA', 'E5_3_1_28_mRNA', 'E5_3_1_6_mRNA', 'E5_3_1_8_mRNA', 'E5_4_2_10_mRNA', 'E5_4_2_12_mRNA', 'E5_4_2_2_mRNA', 'E5_4_3_8_mRNA', 'E5_4_99_12_mRNA', 'E5_4_99_18_mRNA', 'E6_1_1_1_mRNA', 'E6_1_1_10_mRNA', 'E6_1_1_11_mRNA', 'E6_1_1_12_mRNA', 'E6_1_1_14_mRNA', 'E6_1_1_15_mRNA', 'E6_1_1_16_mRNA', 'E6_1_1_17_mRNA', 'E6_1_1_19_mRNA', 'E6_1_1_2_mRNA', 'E6_1_1_20_mRNA', 'E6_1_1_21_mRNA', 'E6_1_1_22_mRNA', 'E6_1_1_3_mRNA', 'E6_1_1_4_mRNA', 'E6_1_1_5_mRNA', 'E6_1_1_6_mRNA', 'E6_1_1_7_mRNA', 'E6_1_1_9_mRNA', 'E6_2_1_1_mRNA', 'E6_3_1_20_mRNA', 'E6_3_2_1_mRNA', 'E6_3_2_13_mRNA', 'E6_3_2_4_mRNA', 'E6_3_2_5_mRNA', 'E6_3_2_6_mRNA', 'E6_3_2_8_mRNA', 'E6_3_2_9_mRNA', 'E6_3_3_1_mRNA', 'E6_3_3_2_mRNA', 'E6_3_4_13_mRNA', 'E6_3_4_15_mRNA', 'E6_3_4_19_mRNA', 'E6_3_4_2_mRNA', 'E6_3_4_20_mRNA', 'E6_3_4_4_mRNA', 'E6_3_4_5_mRNA', 'E6_3_5_1_mRNA', 'E6_3_5_2_mRNA', 'E6_3_5_4_mRNA', 'E6_3_5_5_mRNA', 'E6_4_1_1_mRNA', 'E6_5_1_2_mRNA', 'E1_1_1_1', 'E1_1_1_100', 'E1_1_1_133', 'E1_1_1_193', 'E1_1_1_205', 'E1_1_1_23', 'E1_1_1_267', 'E1_1_1_85', 'E1_1_1_86', 'E1_1_5_3', 'E1_17_1_8', 'E1_17_4_1', 'E1_17_4_2', 'E1_17_7_1', 'E1_17_7_4', 'E1_18_6_1', 'E1_2_1_10', 'E1_2_1_11', 'E1_2_1_38', 'E1_2_1_41', 'E1_2_1_70', 'E1_2_7_4', 'E1_2_7_5', 'E1_2_7_8', 'E1_3_1_14', 'E1_3_1_98', 'E1_4_1_1', 'E1_4_1_13', 'E1_4_1_4', 'E1_4_3_16', 'E1_4_4_2', 'E1_5_1_2', 'E1_5_1_20', 'E1_7_1_13', 'E1_7_99_1', 'E1_8_1_4', 'E1_8_1_9', 'E1_8_4_11', 'E1_8_4_12', 'E1_8_5_3', 'E1_8_99_2', 'E2_1_1_107', 'E2_1_1_130', 'E2_1_1_131', 'E2_1_1_133', 'E2_1_1_171', 'E2_1_1_182', 'E2_1_1_197', 'E2_1_1_228', 'E2_1_1_297', 'E2_1_1_63', 'E2_1_1_72', 'E2_1_1_77', 'E2_1_2_10', 'E2_1_2_11', 'E2_1_2_2', 'E2_1_2_9', 'E2_1_3_2', 'E2_1_3_3', 'E2_2_1_1', 'E2_2_1_10', 'E2_2_1_6', 'E2_2_1_7', 'E2_3_1_1', 'E2_3_1_15', 'E2_3_1_179', 'E2_3_1_181', 'E2_3_1_234', 'E2_3_1_35', 'E2_3_1_46', 'E2_3_1_8', 'E2_3_2_2', 'E2_3_2_6', 'E2_3_3_13', 'E2_4_1_227', 'E2_4_2_1', 'E2_4_2_10', 'E2_4_2_14', 'E2_4_2_17', 'E2_4_2_18', 'E2_4_2_19', 'E2_4_2_21', 'E2_4_2_29', 'E2_4_2_8', 'E2_4_2_9', 'E2_4_99_17', 'E2_5_1_15', 'E2_5_1_3', 'E2_5_1_31', 'E2_5_1_47', 'E2_5_1_6', 'E2_5_1_61', 'E2_5_1_7', 'E2_5_1_72', 'E2_5_1_75', 'E2_5_1_78', 'E2_5_1_9', 'E2_6_1_16', 'E2_6_1_42', 'E2_6_1_62', 'E2_6_1_83', 'E2_6_1_9', 'E2_7_1_148', 'E2_7_1_24', 'E2_7_1_25', 'E2_7_1_26', 'E2_7_1_30', 'E2_7_1_33', 'E2_7_1_40', 'E2_7_1_49', 'E2_7_1_50', 'E2_7_1_71', 'E2_7_2_11', 'E2_7_2_4', 'E2_7_2_7', 'E2_7_2_8', 'E2_7_3_9', 'E2_7_4_1', 'E2_7_4_16', 'E2_7_4_22', 'E2_7_4_25', 'E2_7_4_6', 'E2_7_4_7', 'E2_7_4_8', 'E2_7_4_9', 'E2_7_6_3', 'E2_7_7_13', 'E2_7_7_2', 'E2_7_7_23', 'E2_7_7_24', 'E2_7_7_3', 'E2_7_7_33', 'E2_7_7_4', 'E2_7_7_41', 'E2_7_7_6', 'E2_7_7_60', 'E2_7_7_65', 'E2_7_7_7', 'E2_7_7_8', 'E2_7_7_85', 'E2_7_7_9', 'E2_7_8_13', 'E2_7_8_5', 'E2_7_8_7', 'E2_7_8_8', 'E2_7_9_3', 'E2_8_1_6', 'E2_8_1_7', 'E2_8_1_8', 'E2_8_4_3', 'E2_8_4_4', 'E2_9_1_1', 'E3_1_1_29', 'E3_1_1_31', 'E3_1_3_11', 'E3_1_3_6', 'E3_1_3_82', 'E3_2_2_26', 'E3_4_11_1', 'E3_5_1_2', 'E3_5_1_28', 'E3_5_1_5', 'E3_5_1_88', 'E3_5_3_11', 'E3_5_4_16', 'E3_5_4_19', 'E3_5_4_2', 'E3_5_4_25', 'E3_5_4_26', 'E3_5_4_33', 'E3_6_1_1', 'E3_6_1_23', 'E3_6_1_27', 'E3_6_1_9', 'E4_1_1_11', 'E4_1_1_19', 'E4_1_1_20', 'E4_1_1_21', 'E4_1_1_23', 'E4_1_1_36', 'E4_1_1_65', 'E4_1_1_96', 'E4_1_2_13', 'E4_1_2_50', 'E4_1_99_12', 'E4_1_99_17', 'E4_1_99_19', 'E4_1_99_22', 'E4_2_1_10', 'E4_2_1_11', 'E4_2_1_2', 'E4_2_1_20', 'E4_2_1_24', 'E4_2_1_45', 'E4_2_1_46', 'E4_2_1_47', 'E4_2_1_51', 'E4_2_1_59', 'E4_2_1_82', 'E4_2_1_9', 'E4_2_3_1', 'E4_2_3_5', 'E4_3_1_15', 'E4_3_1_17', 'E4_3_1_19', 'E4_3_1_7', 'E4_3_2_1', 'E4_3_2_2', 'E4_3_3_6', 'E4_3_3_7', 'E4_3_99_3', 'E4_3_99_4', 'E4_6_1_17', 'E5_1_1_1', 'E5_1_1_3', 'E5_1_1_7', 'E5_1_3_1', 'E5_1_3_13', 'E5_1_3_2', 'E5_1_3_20', 'E5_2_1_8', 'E5_3_1_1', 'E5_3_1_16', 'E5_3_1_23', 'E5_3_1_28', 'E5_3_1_6', 'E5_3_1_8', 'E5_4_2_10', 'E5_4_2_12', 'E5_4_2_2', 'E5_4_3_8', 'E5_4_99_12', 'E5_4_99_18', 'E6_1_1_1', 'E6_1_1_10', 'E6_1_1_11', 'E6_1_1_12', 'E6_1_1_14', 'E6_1_1_15', 'E6_1_1_16', 'E6_1_1_17', 'E6_1_1_19', 'E6_1_1_2', 'E6_1_1_20', 'E6_1_1_21', 'E6_1_1_22', 'E6_1_1_3', 'E6_1_1_4', 'E6_1_1_5', 'E6_1_1_6', 'E6_1_1_7', 'E6_1_1_9', 'E6_2_1_1', 'E6_3_1_20', 'E6_3_2_1', 'E6_3_2_13', 'E6_3_2_4', 'E6_3_2_5', 'E6_3_2_6', 'E6_3_2_8', 'E6_3_2_9', 'E6_3_3_1', 'E6_3_3_2', 'E6_3_4_13', 'E6_3_4_15', 'E6_3_4_19', 'E6_3_4_2', 'E6_3_4_20', 'E6_3_4_4', 'E6_3_4_5', 'E6_3_5_1', 'E6_3_5_2', 'E6_3_5_4', 'E6_3_5_5', 'E6_4_1_1', 'E6_5_1_2', 'C0031', 'C005526']
 
lowerbound = {'0': [0.0, 0.0], '1': [0.0, 0.0], '2': [0.0, 0.0], '3': [0.0, 0.0], '4': [0.0, 0.0], '5': [0.0, 0.0], '6': [0.0, 0.0], '7': [0.0, 0.0], '8': [0.0, 0.0], '9': [0.0, 0.0], '10': [0.0, 0.0], '11': [0.0, 0.0], '12': [0.0, 0.0], '13': [0.0, 0.0], '14': [0.0, 0.0], '15': [0.0, 0.0], '16': [0.0, 0.0], '17': [0.0, 0.0], '18': [0.0, 0.0], '19': [0.0, 0.0], '20': [0.0, 0.0], '21': [0.0, 0.0], '22': [0.0, 0.0], '23': [0.0, 0.0], '24': [0.0, 0.0], '25': [0.0, 0.0], '26': [0.0, 0.0], '27': [0.0, 0.0], '28': [0.0, 0.0], '29': [0.0, 0.0], '30': [0.0, 0.0], '31': [0.0, 0.0], '32': [0.0, 0.0], '33': [0.0, 0.0], '34': [0.0, 0.0], '35': [0.0, 0.0], '36': [0.0, 0.0], '37': [0.0, 0.0], '38': [0.0, 0.0], '39': [0.0, 0.0], '40': [0.0, 0.0], '41': [0.0, 0.0], '42': [0.0, 0.0], '43': [0.0, 0.0], '44': [0.0, 0.0], '45': [0.0, 0.0], '46': [0.0, 0.0], '47': [0.0, 0.0], '48': [0.0, 0.0], '49': [0.0, 0.0], '50': [0.0, 0.0], '51': [0.0, 0.0], '52': [0.0, 0.0], '53': [0.0, 0.0], '54': [0.0, 0.0], '55': [0.0, 0.0], '56': [0.0, 0.0], '57': [0.0, 0.0], '58': [0.0, 0.0], '59': [0.0, 0.0], '60': [0.0, 0.0], '61': [0.0, 0.0], '62': [0.0, 0.0], '63': [0.0, 0.0], '64': [0.0, 0.0], '65': [0.0, 0.0], '66': [0.0, 0.0], '67': [0.0, 0.0], '68': [0.0, 0.0], '69': [0.0, 0.0], '70': [0.0, 0.0], '71': [0.0, 0.0], '72': [0.0, 0.0], '73': [0.0, 0.0], '74': [0.0, 0.0], '75': [0.0, 0.0], '76': [0.0, 0.0], '77': [0.0, 0.0], '78': [0.0, 0.0], '79': [0.0, 0.0], '80': [0.0, 0.0], '81': [0.0, 0.0], '82': [0.0, 0.0], '83': [0.0, 0.0], '84': [0.0, 0.0], '85': [0.0, 0.0], '86': [0.0, 0.0], '87': [0.0, 0.0], '88': [0.0, 0.0], '89': [0.0, 0.0], '90': [0.0, 0.0], '91': [0.0, 0.0], '92': [0.0, 0.0], '93': [0.0, 0.0], '94': [0.0, 0.0], '95': [0.0, 0.0], '96': [0.0, 0.0], '97': [0.0, 0.0], '98': [0.0, 0.0], '99': [0.0, 0.0], '100': [0.0, 0.0], '101': [0.0, 0.0], '102': [0.0, 0.0], '103': [0.0, 0.0], '104': [0.0, 0.0], '105': [0.0, 0.0], '106': [0.0, 0.0], '107': [0.0, 0.0], '108': [0.0, 0.0], '109': [0.0, 0.0], '110': [0.0, 0.0], '111': [0.0, 0.0], '112': [0.0, 0.0], '113': [0.0, 0.0], '114': [0.0, 0.0], '115': [0.0, 0.0], '116': [0.0, 0.0], '117': [0.0, 0.0], '118': [0.0, 0.0], '119': [0.0, 0.0], '120': [0.0, 0.0], '121': [0.0, 0.0], '122': [0.0, 0.0], '123': [0.0, 0.0], '124': [0.0, 0.0], '125': [0.0, 0.0], '126': [0.0, 0.0], '127': [0.0, 0.0], '128': [0.0, 0.0], '129': [0.0, 0.0], '130': [0.0, 0.0], '131': [0.0, 0.0], '132': [0.0, 0.0], '133': [0.0, 0.0], '134': [0.0, 0.0], '135': [0.0, 0.0], '136': [0.0, 0.0], '137': [0.0, 0.0], '138': [0.0, 0.0], '139': [0.0, 0.0], '140': [0.0, 0.0], '141': [0.0, 0.0], '142': [0.0, 0.0], '143': [0.0, 0.0], '144': [0.0, 0.0], '145': [0.0, 0.0], '146': [0.0, 0.0], '147': [0.0, 0.0], '148': [0.0, 0.0], '149': [0.0, 0.0], '150': [0.0, 0.0], '151': [0.0, 0.0], '152': [0.0, 0.0], '153': [0.0, 0.0], '154': [0.0, 0.0], '155': [0.0, 0.0], '156': [0.0, 0.0], '157': [0.0, 0.0], '158': [0.0, 0.0], '159': [0.0, 0.0], '160': [0.0, 0.0], '161': [0.0, 0.0], '162': [0.0, 0.0], '163': [0.0, 0.0], '164': [0.0, 0.0], '165': [0.0, 0.0], '166': [0.0, 0.0], '167': [0.0, 0.0], '168': [0.0, 0.0], '169': [0.0, 0.0], '170': [0.0, 0.0], '171': [0.0, 0.0], '172': [0.0, 0.0], '173': [0.0, 0.0], '174': [0.0, 0.0], '175': [0.0, 0.0], '176': [0.0, 0.0], '177': [0.0, 0.0], '178': [0.0, 0.0], '179': [0.0, 0.0], '180': [0.0, 0.0], '181': [0.0, 0.0], '182': [0.0, 0.0], '183': [0.0, 0.0], '184': [0.0, 0.0], '185': [0.0, 0.0], '186': [0.0, 0.0], '187': [0.0, 0.0], '188': [0.0, 0.0], '189': [0.0, 0.0], '190': [0.0, 0.0], '191': [0.0, 0.0], '192': [0.0, 0.0], '193': [0.0, 0.0], '194': [0.0, 0.0], '195': [0.0, 0.0], '196': [0.0, 0.0], '197': [0.0, 0.0], '198': [0.0, 0.0], '199': [0.0, 0.0], '200': [0.0, 0.0], '201': [0.0, 0.0], '202': [0.0, 0.0], '203': [0.0, 0.0], '204': [0.0, 0.0], '205': [0.0, 0.0], '206': [0.0, 0.0], '207': [0.0, 0.0], '208': [0.0, 0.0], '209': [0.0, 0.0], '210': [0.0, 0.0], '211': [0.0, 0.0], '212': [0.0, 0.0], '213': [0.0, 0.0], '214': [0.0, 0.0], '215': [0.0, 0.0], '216': [0.0, 0.0], '217': [0.0, 0.0], '218': [0.0, 0.0], '219': [0.0, 0.0], '220': [0.0, 0.0], '221': [0.0, 0.0], '222': [0.0, 0.0], '223': [0.0, 0.0], '224': [0.0, 0.0], '225': [0.0, 0.0], '226': [0.0, 0.0], '227': [0.0, 0.0], '228': [0.0, 0.0], '229': [0.0, 0.0], '230': [0.0, 0.0], '231': [0.0, 0.0], '232': [0.0, 0.0], '233': [0.0, 0.0], '234': [0.0, 0.0], '235': [0.0, 0.0], '236': [0.0, 0.0], '237': [0.0, 0.0], '238': [0.0, 0.0], '239': [0.0, 0.0], '240': [0.0, 0.0], '241': [0.0, 0.0], '242': [0.0, 0.0], '243': [0.0, 0.0], '244': [0.0, 0.0], '245': [0.0, 0.0], '246': [0.0, 0.0], '247': [0.0, 0.0], '248': [0.0, 0.0], '249': [0.0, 0.0], '250': [0.0, 0.0], '251': [0.0, 0.0], '252': [0.0, 0.0], '253': [0.0, 0.0], '254': [0.0, 0.0], '255': [0.0, 0.0], '256': [0.0, 0.0], '257': [0.0, 0.0], '258': [0.0, 0.0], '259': [0.0, 0.0], '260': [0.0, 0.0], '261': [0.0, 0.0], '262': [0.0, 0.0], '263': [0.0, 0.0], '264': [0.0, 0.0], '265': [0.0, 0.0], '266': [0.0, 0.0], '267': [0.0, 0.0], '268': [0.0, 0.0], '269': [0.0, 0.0], '270': [0.0, 0.0], '271': [0.0, 0.0], '272': [0.0, 0.0], '273': [0.0, 0.0], '274': [0.0, 0.0], '275': [0.0, 0.0], '276': [0.0, 0.0], '277': [0.0, 0.0], '278': [0.0, 0.0], '279': [0.0, 0.0], '280': [0.0, 0.0], '281': [0.0, 0.0], '282': [0.0, 0.0], '283': [0.0, 0.0], '284': [0.0, 0.0], '285': [0.0, 0.0], '286': [0.0, 0.0], '287': [0.0, 0.0], '288': [0.0, 0.0], '289': [0.0, 0.0], '290': [0.0, 0.0], '291': [0.0, 0.0], '292': [0.0, 0.0], '293': [0.0, 0.0], '294': [0.0, 0.0], '295': [0.0, 0.0], '296': [0.0, 0.0], '297': [0.0, 0.0], '298': [0.0, 0.0], '299': [0.0, 0.0], '300': [0.0, 0.0], '301': [0.0, 0.0], '302': [0.0, 0.0], '303': [0.0, 0.0], '304': [0.0, 0.0], '305': [0.0, 0.0], '306': [0.0, 0.0], '307': [0.0, 0.0], '308': [0.0, 0.0], '309': [0.0, 0.0], '310': [0.0, 0.0], '311': [0.0, 0.0], '312': [0.0, 0.0], '313': [0.0, 0.0], '314': [0.0, 0.0], '315': [0.0, 0.0], '316': [0.0, 0.0], '317': [0.0, 0.0], '318': [0.0, 0.0], '319': [0.0, 0.0], '320': [0.0, 0.0], '321': [0.0, 0.0], '322': [0.0, 0.0], '323': [0.0, 0.0], '324': [0.0, 0.0], '325': [0.0, 0.0], '326': [0.0, 0.0], '327': [0.0, 0.0], '328': [0.0, 0.0], '329': [0.0, 0.0], '330': [0.0, 0.0], '331': [0.0, 0.0], '332': [0.0, 0.0], '333': [0.0, 0.0], '334': [0.0, 0.0], '335': [0.0, 0.0], '336': [0.0, 0.0], '337': [0.0, 0.0], '338': [0.0, 0.0], '339': [0.0, 0.0], '340': [0.0, 0.0], '341': [0.0, 0.0], '342': [0.0, 0.0], '343': [0.0, 0.0], '344': [0.0, 0.0], '345': [0.0, 0.0], '346': [0.0, 0.0], '347': [0.0, 0.0], '348': [0.0, 0.0], '349': [0.0, 0.0], '350': [0.0, 0.0], '351': [0.0, 0.0], '352': [0.0, 0.0], '353': [0.0, 0.0], '354': [0.0, 0.0], '355': [0.0, 0.0], '356': [0.0, 0.0], '357': [0.0, 0.0], '358': [0.0, 0.0], '359': [0.0, 0.0], '360': [0.0, 0.0], '361': [0.0, 0.0], '362': [0.0, 0.0], '363': [0.0, 0.0], '364': [0.0, 0.0], '365': [0.0, 0.0], '366': [0.0, 0.0], '367': [0.0, 0.0], '368': [0.0, 0.0], '369': [0.0, 0.0], '370': [0.0, 0.0], '371': [0.0, 0.0], '372': [0.0, 0.0], '373': [0.0, 0.0], '374': [0.0, 0.0], '375': [0.0, 0.0], '376': [0.0, 0.0], '377': [0.0, 0.0], '378': [0.0, 0.0], '379': [0.0, 0.0], '380': [0.0, 0.0], '381': [0.0, 0.0], '382': [0.0, 0.0], '383': [0.0, 0.0], '384': [0.0, 0.0], '385': [0.0, 0.0], '386': [0.0, 0.0], '387': [0.0, 0.0], '388': [0.0, 0.0], '389': [0.0, 0.0], '390': [0.0, 0.0], '391': [0.0, 0.0], '392': [0.0, 0.0], '393': [0.0, 0.0], '394': [0.0, 0.0], '395': [0.0, 0.0], '396': [0.0, 0.0], '397': [0.0, 0.0], '398': [0.0, 0.0], '399': [0.0, 0.0], '400': [0.0, 0.0], '401': [0.0, 0.0], '402': [0.0, 0.0], '403': [0.0, 0.0], '404': [0.0, 0.0], '405': [0.0, 0.0], '406': [0.0, 0.0], '407': [0.0, 0.0], '408': [0.0, 0.0], '409': [0.0, 0.0], '410': [0.0, 0.0], '411': [0.0, 0.0], '412': [0.0, 0.0], '413': [0.0, 0.0], '414': [0.0, 0.0], '415': [0.0, 0.0], '416': [0.0, 0.0], '417': [0.0, 0.0], '418': [0.0, 0.0], '419': [0.0, 0.0], '420': [0.0, 0.0], '421': [0.0, 0.0], '422': [0.0, 0.0], '423': [0.0, 0.0], '424': [0.0, 0.0], '425': [0.0, 0.0], '426': [0.0, 0.0], '427': [0.0, 0.0], '428': [0.0, 0.0], '429': [0.0, 0.0], '430': [0.0, 0.0], '431': [0.0, 0.0], '432': [0.0, 0.0], '433': [0.0, 0.0], '434': [0.0, 0.0], '435': [0.0, 0.0], '436': [0.0, 0.0], '437': [0.0, 0.0], '438': [0.0, 0.0], '439': [0.0, 0.0], '440': [0.0, 0.0], '441': [0.0, 0.0], '442': [0.0, 0.0], '443': [0.0, 0.0], '444': [0.0, 0.0], '445': [0.0, 0.0], '446': [0.0, 0.0], '447': [0.0, 0.0], '448': [0.0, 0.0], '449': [0.0, 0.0], '450': [0.0, 0.0], '451': [0.0, 0.0], '452': [0.0, 0.0], '453': [0.0, 0.0], '454': [0.0, 0.0], '455': [0.0, 0.0], '456': [0.0, 0.0], '457': [0.0, 0.0], '458': [0.0, 0.0], '459': [0.0, 0.0], '460': [0.0, 0.0], '461': [0.0, 0.0], '462': [0.0, 0.0], '463': [0.0, 0.0], '464': [0.0, 0.0], '465': [0.0, 0.0], '466': [0.0, 0.0], '467': [0.0, 0.0], '468': [0.0, 0.0], '469': [0.0, 0.0], '470': [0.0, 0.0], '471': [0.0, 0.0], '472': [0.0, 0.0], '473': [0.0, 0.0], '474': [0.0, 0.0], '475': [0.0, 0.0], '476': [0.0, 0.0], '477': [0.0, 0.0], '478': [0.0, 0.0], '479': [0.0, 0.0], '480': [0.0, 0.0], '481': [0.0, 0.0], '482': [0.0, 0.0], '483': [0.0, 0.0], '484': [0.0, 0.0], '485': [0.0, 0.0], '486': [0.0, 0.0], '487': [0.0, 0.0], '488': [0.0, 0.0], '489': [0.0, 0.0], '490': [0.0, 0.0], '491': [0.0, 0.0], '492': [0.0, 0.0], '493': [0.0, 0.0], '494': [0.0, 0.0], '495': [0.0, 0.0], '496': [0.0, 0.0], '497': [0.0, 0.0], '498': [0.0, 0.0], '499': [0.0, 0.0], '500': [0.0, 0.0], '501': [0.0, 0.0], '502': [0.0, 0.0], '503': [0.0, 0.0], '504': [0.0, 0.0], '505': [0.0, 0.0], '506': [0.0, 0.0], '507': [0.0, 0.0], '508': [0.0, 0.0], '509': [0.0, 0.0], '510': [0.0, 0.0], '511': [0.0, 0.0], '512': [0.0, 0.0], '513': [0.0, 0.0], '514': [0.0, 0.0], '515': [0.0, 0.0], '516': [0.0, 0.0], '517': [0.0, 0.0], '518': [0.0, 0.0], '519': [0.0, 0.0], '520': [0.0, 0.0], '521': [0.0, 0.0], '522': [0.0, 0.0], '523': [0.0, 0.0], '524': [0.0, 0.0], '525': [0.0, 0.0], '526': [0.0, 0.0], '527': [0.0, 0.0], '528': [0.0, 0.0], '529': [0.0, 0.0], '530': [0.0, 0.0], '531': [0.0, 0.0], '532': [0.0, 0.0], '533': [0.0, 0.0], '534': [0.0, 0.0], '535': [0.0, 0.0], '536': [0.0, 0.0], '537': [0.0, 0.0], '538': [0.0, 0.0], '539': [0.0, 0.0], '540': [0.0, 0.0], '541': [0.0, 0.0], '542': [0.0, 0.0], '543': [0.0, 0.0], '544': [0.0, 0.0], '545': [0.0, 0.0], '546': [0.0, 0.0], '547': [0.0, 0.0], '548': [0.0, 0.0], '549': [0.0, 0.0], '550': [0.0, 0.0], '551': [0.0, 0.0], '552': [0.0, 0.0], '553': [0.0, 0.0], '554': [0.0, 0.0], '555': [0.0, 0.0], '556': [0.0, 0.0], '557': [0.0, 0.0], '558': [0.0, 0.0], '559': [0.0, 0.0], '560': [0.0, 0.0], '561': [0.0, 0.0], '562': [0.0, 0.0], '563': [0.0, 0.0], '564': [0.0, 0.0], '565': [0.0, 0.0], '566': [0.0, 0.0], '567': [0.0, 0.0], '568': [0.0, 0.0], '569': [0.0, 0.0], '570': [0.0, 0.0], '571': [0.0, 0.0], '572': [0.0, 0.0], '573': [0.0, 0.0], '574': [0.0, 0.0], '575': [0.0, 0.0], '576': [0.0, 0.0], '577': [0.0, 0.0], '578': [0.0, 0.0], '579': [0.0, 0.0], '580': [0.0, 0.0], '581': [0.0, 0.0], '582': [0.0, 0.0], '583': [0.0, 0.0], '584': [0.0, 0.0], '585': [0.0, 0.0], '586': [0.0, 0.0], '587': [0.0, 0.0], '588': [0.0, 0.0], '589': [0.0, 0.0], '590': [0.0, 0.0], '591': [0.0, 0.0], '592': [0.0, 0.0], '593': [0.0, 0.0], '594': [0.0, 0.0], '595': [0.0, 0.0], '596': [0.0, 0.0], '597': [0.0, 0.0], '598': [0.0, 0.0], '599': [0.0, 0.0], '600': [0.0, 0.0], '601': [0.0, 0.0], '602': [0.0, 0.0], '603': [0.0, 0.0], '604': [0.0, 0.0], '605': [0.0, 0.0], '606': [0.0, 0.0], '607': [0.0, 0.0], '608': [0.0, 0.0], '609': [0.0, 0.0], '610': [0.0, 0.0], '611': [0.0, 0.0], '612': [0.0, 0.0], '613': [0.0, 0.0], '614': [0.0, 0.0], '615': [0.0, 0.0], '616': [0.0, 0.0], '617': [0.0, 0.0], '618': [0.0, 0.0], '619': [0.0, 0.0], '620': [0.0, 0.0], '621': [0.0, 0.0], '622': [0.0, 0.0], '623': [0.0, 0.0], '624': [0.0, 0.0], '625': [0.0, 0.0], '626': [0.0, 0.0], '627': [0.0, 0.0], '628': [0.0, 0.0], '629': [0.0, 0.0], '630': [0.0, 0.0], '631': [0.0, 0.0], '632': [0.0, 0.0], '633': [0.0, 0.0], '634': [0.0, 0.0], '635': [0.0, 0.0], '636': [0.0, 0.0], '637': [0.0, 0.0], '638': [0.0, 0.0], '639': [0.0, 0.0], '640': [0.0, 0.0], '641': [0.0, 0.0], '642': [0.0, 0.0], '643': [0.0, 0.0], '644': [0.0, 0.0], '645': [0.0, 0.0], '646': [0.0, 0.0], '647': [0.0, 0.0], '648': [0.0, 0.0], '649': [0.0, 0.0], '650': [0.0, 0.0], '651': [0.0, 0.0], '652': [0.0, 0.0], '653': [0.0, 0.0], '654': [0.0, 0.0], '655': [0.0, 0.0], '656': [0.0, 0.0], '657': [0.0, 0.0], '658': [0.0, 0.0], '659': [0.0, 0.0], '660': [0.0, 0.0], '661': [0.0, 0.0], '662': [0.0, 0.0], '663': [0.0, 0.0], '664': [0.0, 0.0], '665': [0.0, 0.0], '666': [0.0, 0.0], '667': [0.0, 0.0], '668': [0.0, 0.0], '669': [0.0, 0.0], '670': [0.0, 0.0], '671': [0.0, 0.0], '672': [0.0, 0.0], '673': [0.0, 0.0], '674': [0.0, 0.0], '675': [0.0, 0.0], '676': [0.0, 0.0], '677': [0.0, 0.0], '678': [0.0, 0.0], '679': [0.0, 0.0], '680': [0.0, 0.0], '681': [0.0, 0.0], '682': [0.0, 0.0], '683': [0.0, 0.0], '684': [0.0, 0.0], '685': [0.0, 0.0], '686': [0.0, 0.0], '687': [0.0, 0.0], '688': [0.0, 0.0], '689': [0.0, 0.0], '690': [0.0, 0.0], '691': [0.0, 0.0], '692': [0.0, 0.0], '693': [0.0, 0.0], '694': [0.0, 0.0], '695': [0.0, 0.0], '696': [0.0, 0.0], '697': [0.0, 0.0], '698': [0.0, 0.0], '699': [0.0, 0.0], '700': [0.0, 0.0], '701': [0.0, 0.0], '702': [0.0, 0.0], '703': [0.0, 0.0], '704': [0.0, 0.0], '705': [0.0, 0.0], '706': [0.0, 0.0], '707': [0.0, 0.0], '708': [0.0, 0.0], '709': [0.0, 0.0], '710': [0.0, 0.0], '711': [0.0, 0.0], '712': [0.0, 0.0], '713': [0.0, 0.0], '714': [0.0, 0.0], '715': [0.0, 0.0], '716': [0.0, 0.0], '717': [0.0, 0.0], '718': [0.0, 0.0], '719': [0.0, 0.0], '720': [0.0, 0.0], '721': [0.0, 0.0], '722': [0.0, 0.0], '723': [0.0, 0.0], '724': [0.0, 0.0], '725': [0.0, 0.0], '726': [0.0, 0.0], '727': [0.0, 0.0], '728': [0.0, 0.0], '729': [0.0, 0.0], '730': [0.0, 0.0], '731': [0.0, 0.0], '732': [0.0, 0.0], '733': [0.0, 0.0], '734': [0.0, 0.0], '735': [0.0, 0.0], '736': [0.0, 0.0], '737': [0.0, 0.0], '738': [0.0, 0.0], '739': [0.0, 0.0], '740': [0.0, 0.0], '741': [0.0, 0.0], '742': [0.0, 0.0], '743': [0.0, 0.0], '744': [0.0, 0.0], '745': [0.0, 0.0], '746': [0.0, 0.0], '747': [0.0, 0.0], '748': [0.0, 0.0], '749': [0.0, 0.0], '750': [0.0, 0.0], '751': [0.0, 0.0], '752': [0.0, 0.0], '753': [0.0, 0.0], '754': [0.0, 0.0], '755': [0.0, 0.0], '756': [0.0, 0.0], '757': [0.0, 0.0], '758': [0.0, 0.0], '759': [0.0, 0.0], '760': [0.0, 0.0], '761': [0.0, 0.0], '762': [0.0, 0.0], '763': [0.0, 0.0], '764': [0.0, 0.0], '765': [0.0, 0.0], '766': [0.0, 0.0], '767': [0.0, 0.0], '768': [0.0, 0.0], '769': [0.0, 0.0], '770': [0.0, 0.0], '771': [0.0, 0.0], '772': [0.0, 0.0], '773': [0.0, 0.0], '774': [0.0, 0.0], '775': [0.0, 0.0], '776': [0.0, 0.0], '777': [0.0, 0.0], '778': [0.0, 0.0], '779': [0.0, 0.0], '780': [0.0, 0.0], '781': [0.0, 0.0], '782': [0.0, 0.0], '783': [0.0, 0.0], '784': [0.0, 0.0], '785': [0.0, 0.0], '786': [0.0, 0.0], '787': [0.0, 0.0], '788': [0.0, 0.0], '789': [0.0, 0.0], '790': [0.0, 0.0], '791': [0.0, 0.0], '792': [0.0, 0.0], '793': [0.0, 0.0], '794': [0.0, 0.0], '795': [0.0, 0.0], '796': [0.0, 0.0], '797': [0.0, 0.0], '798': [0.0, 0.0], '799': [0.0, 0.0], '800': [0.0, 0.0], '801': [0.0, 0.0], '802': [0.0, 0.0], '803': [0.0, 0.0], '804': [0.0, 0.0], '805': [0.0, 0.0], '806': [0.0, 0.0], '807': [0.0, 0.0], '808': [0.0, 0.0], '809': [0.0, 0.0], '810': [0.0, 0.0], '811': [0.0, 0.0], '812': [0.0, 0.0], '813': [0.0, 0.0], '814': [0.0, 0.0], '815': [0.0, 0.0], '816': [0.0, 0.0], '817': [0.0, 0.0], '818': [0.0, 0.0], '819': [0.0, 0.0], '820': [0.0, 0.0], '821': [0.0, 0.0], '822': [0.0, 0.0], '823': [0.0, 0.0], '824': [0.0, 0.0], '825': [0.0, 0.0], '826': [0.0, 0.0], '827': [0.0, 0.0], '828': [0.0, 0.0], '829': [0.0, 0.0], '830': [0.0, 0.0], '831': [0.0, 0.0], '832': [0.0, 0.0], '833': [0.0, 0.0], '834': [0.0, 0.0], '835': [0.0, 0.0], '836': [0.0, 0.0], '837': [0.0, 0.0], '838': [0.0, 0.0], '839': [0.0, 0.0], '840': [0.0, 0.0], '841': [0.0, 0.0], '842': [0.0, 0.0], '843': [0.0, 0.0], '844': [0.0, 0.0], '845': [0.0, 0.0], '846': [0.0, 0.0], '847': [0.0, 0.0], '848': [0.0, 0.0], '849': [0.0, 0.0], '850': [0.0, 0.0], '851': [0.0, 0.0], '852': [0.0, 0.0], '853': [0.0, 0.0], '854': [0.0, 0.0], '855': [0.0, 0.0], '856': [0.0, 0.0], '857': [0.0, 0.0], '858': [0.0, 0.0], '859': [0.0, 0.0], '860': [0.0, 0.0], '861': [0.0, 0.0], '862': [0.0, 0.0], '863': [0.0, 0.0], '864': [0.0, 0.0], '865': [0.0, 0.0], '866': [0.0, 0.0], '867': [0.0, 0.0], '868': [0.0, 0.0], '869': [0.0, 0.0], '870': [0.0, 0.0], '871': [0.0, 0.0], '872': [0.0, 0.0], '873': [0.0, 0.0], '874': [0.0, 0.0], '875': [0.0, 0.0], '876': [0.0, 0.0], '877': [0.0, 0.0], '878': [0.0, 0.0], '879': [0.0, 0.0], '880': [0.0, 0.0], '881': [0.0, 0.0], '882': [0.0, 0.0], '883': [0.0, 0.0], '884': [0.0, 0.0], '885': [0.0, 0.0], '886': [0.0, 0.0], '887': [0.0, 0.0], '888': [0.0, 0.0], '889': [0.0, 0.0], '890': [0.0, 0.0], '891': [0.0, 0.0], '892': [0.0, 0.0], '893': [0.0, 0.0], '894': [0.0, 0.0], '895': [0.0, 0.0], '896': [0.0, 0.0], '897': [0.0, 0.0], '898': [0.0, 0.0], '899': [0.0, 0.0], '900': [0.0, 0.0], '901': [0.0, 0.0], '902': [0.0, 0.0], '903': [0.0, 0.0], '904': [0.0, 0.0], '905': [0.0, 0.0], '906': [0.0, 0.0], '907': [0.0, 0.0], '908': [0.0, 0.0], '909': [0.0, 0.0], '910': [0.0, 0.0], '911': [0.0, 0.0], '912': [0.0, 0.0], '913': [0.0, 0.0], '914': [0.0, 0.0], '915': [0.0, 0.0], '916': [0.0, 0.0], '917': [0.0, 0.0], '918': [0.0, 0.0], '919': [0.0, 0.0], '920': [0.0, 0.0], '921': [0.0, 0.0], '922': [0.0, 0.0], '923': [0.0, 0.0], '924': [0.0, 0.0], '925': [0.0, 0.0], '926': [0.0, 0.0], '927': [0.0, 0.0], '928': [0.0, 0.0], '929': [0.0, 0.0], '930': [0.0, 0.0], '931': [0.0, 0.0], '932': [0.0, 0.0], '933': [0.0, 0.0], '934': [0.0, 0.0], '935': [0.0, 0.0], '936': [0.0, 0.0], '937': [0.0, 0.0], '938': [0.0, 0.0], '939': [0.0, 0.0], '940': [0.0, 0.0], '941': [0.0, 0.0], '942': [0.0, 0.0], '943': [0.0, 0.0], '944': [0.0, 0.0], '945': [0.0, 0.0], '946': [0.0, 0.0], '947': [0.0, 0.0], '948': [0.0, 0.0], '949': [0.0, 0.0], '950': [0.0, 0.0], '951': [0.0, 0.0], '952': [0.0, 0.0], '953': [0.0, 0.0], '954': [0.0, 0.0], '955': [0.0, 0.0], '956': [0.0, 0.0], '957': [0.0, 0.0], '958': [0.0, 0.0], '959': [0.0, 0.0], '960': [0.0, 0.0], '961': [0.0, 0.0], '962': [0.0, 0.0], '963': [0.0, 0.0], '964': [0.0, 0.0], '965': [0.0, 0.0], '966': [0.0, 0.0], '967': [0.0, 0.0], '968': [0.0, 0.0], '969': [0.0, 0.0], '970': [0.0, 0.0], '971': [0.0, 0.0], '972': [0.0, 0.0], '973': [0.0, 0.0], '974': [0.0, 0.0], '975': [0.0, 0.0], '976': [0.0, 0.0], '977': [0.0, 0.0], '978': [0.0, 0.0], '979': [0.0, 0.0], '980': [0.0, 0.0], '981': [0.0, 0.0], '982': [0.0, 0.0], '983': [0.0, 0.0], '984': [0.0, 0.0], '985': [0.0, 0.0], '986': [0.0, 0.0], '987': [0.0, 0.0], '988': [0.0, 0.0], '989': [0.0, 0.0], '990': [0.0, 0.0], '991': [0.0, 0.0], '992': [0.0, 0.0], '993': [0.0, 0.0], '994': [0.0, 0.0], '995': [0.0, 0.0], '996': [0.0, 0.0], '997': [0.0, 0.0], '998': [0.0, 0.0], '999': [0.0, 0.0], '1000': [0.0, 0.0], '1001': [0.0, 0.0], '1002': [0.0, 0.0], '1003': [0.0, 0.0], '1004': [0.0, 0.0], '1005': [0.0, 0.0], '1006': [0.0, 0.0], '1007': [0.0, 0.0], '1008': [0.0, 0.0], '1009': [0.0, 0.0], '1010': [0.0, 0.0], '1011': [0.0, 0.0], '1012': [0.0, 0.0], '1013': [0.0, 0.0], '1014': [0.0, 0.0], '1015': [0.0, 0.0], '1016': [0.0, 0.0], '1017': [0.0, 0.0], '1018': [0.0, 0.0], '1019': [0.0, 0.0], '1020': [0.0, 0.0], '1021': [0.0, 0.0], '1022': [0.0, 0.0], '1023': [0.0, 0.0], '1024': [0.0, 0.0], '1025': [0.0, 0.0], '1026': [0.0, 0.0], '1027': [0.0, 0.0], '1028': [0.0, 0.0], '1029': [0.0, 0.0], '1030': [0.0, 0.0], '1031': [0.0, 0.0], '1032': [0.0, 0.0], '1033': [0.0, 0.0], '1034': [0.0, 0.0], '1035': [0.0, 0.0], '1036': [0.0, 0.0], '1037': [0.0, 0.0], '1038': [0.0, 0.0], '1039': [0.0, 0.0], '1040': [0.0, 0.0], '1041': [0.0, 0.0], '1042': [0.0, 0.0], '1043': [0.0, 0.0], '1044': [0.0, 0.0], '1045': [0.0, 0.0], '1046': [0.0, 0.0], '1047': [0.0, 0.0], '1048': [0.0, 0.0], '1049': [0.0, 0.0], '1050': [0.0, 0.0], '1051': [0.0, 0.0], '1052': [0.0, 0.0], '1053': [0.0, 0.0], '1054': [0.0, 0.0], '1055': [0.0, 0.0], '1056': [0.0, 0.0], '1057': [0.0, 0.0], '1058': [0.0, 0.0], '1059': [0.0, 0.0], '1060': [0.0, 0.0], '1061': [0.0, 0.0], '1062': [0.0, 0.0], '1063': [0.0, 0.0], '1064': [0.0, 0.0], '1065': [0.0, 0.0], '1066': [0.0, 0.0], '1067': [0.0, 0.0], '1068': [0.0, 0.0], '1069': [0.0, 0.0], '1070': [0.0, 0.0], '1071': [0.0, 0.0], '1072': [0.0, 0.0], '1073': [0.0, 0.0], '1074': [0.0, 0.0], '1075': [0.0, 0.0], '1076': [0.0, 0.0], '1077': [0.0, 0.0], '1078': [0.0, 0.0], '1079': [0.0, 0.0], '1080': [0.0, 0.0], '1081': [0.0, 0.0], '1082': [0.0, 0.0], '1083': [0.0, 0.0], '1084': [0.0, 0.0], '1085': [0.0, 0.0], '1086': [0.0, 0.0], '1087': [0.0, 0.0], '1088': [0.0, 0.0], '1089': [0.0, 0.0], '1090': [0.0, 0.0], '1091': [0.0, 0.0], '1092': [0.0, 0.0], '1093': [0.0, 0.0], '1094': [0.0, 0.0], '1095': [0.0, 0.0], '1096': [0.0, 0.0], '1097': [0.0, 0.0], '1098': [0.0, 0.0], '1099': [0.0, 0.0], '1100': [0.0, 0.0], '1101': [0.0, 0.0], '1102': [0.0, 0.0], '1103': [0.0, 0.0], '1104': [0.0, 0.0], '1105': [0.0, 0.0], '1106': [0.0, 0.0], '1107': [0.0, 0.0], '1108': [0.0, 0.0], '1109': [0.0, 0.0], '1110': [0.0, 0.0], '1111': [0.0, 0.0], '1112': [0.0, 0.0], '1113': [0.0, 0.0], '1114': [0.0, 0.0], '1115': [0.0, 0.0], '1116': [0.0, 0.0], '1117': [0.0, 0.0], '1118': [0.0, 0.0], '1119': [0.0, 0.0], '1120': [0.0, 0.0], '1121': [0.0, 0.0], '1122': [0.0, 0.0], '1123': [0.0, 0.0], '1124': [0.0, 0.0], '1125': [0.0, 0.0], '1126': [0.0, 0.0], '1127': [0.0, 0.0], '1128': [0.0, 0.0], '1129': [0.0, 0.0], '1130': [0.0, 0.0], '1131': [0.0, 0.0], '1132': [0.0, 0.0], '1133': [0.0, 0.0], '1134': [0.0, 0.0], '1135': [0.0, 0.0], '1136': [0.0, 0.0], '1137': [0.0, 0.0], '1138': [0.0, 0.0], '1139': [0.0, 0.0], '1140': [0.0, 0.0], '1141': [0.0, 0.0], '1142': [0.0, 0.0], '1143': [0.0, 0.0], '1144': [0.0, 0.0], '1145': [0.0, 0.0], '1146': [0.0, 0.0], '1147': [0.0, 0.0], '1148': [0.0, 0.0], '1149': [0.0, 0.0], '1150': [0.0, 0.0], '1151': [0.0, 0.0], '1152': [0.0, 0.0], '1153': [0.0, 0.0], '1154': [0.0, 0.0], '1155': [0.0, 0.0], '1156': [0.0, 0.0], '1157': [0.0, 0.0], '1158': [0.0, 0.0], '1159': [0.0, 0.0], '1160': [0.0, 0.0], '1161': [0.0, 0.0], '1162': [0.0, 0.0], '1163': [0.0, 0.0], '1164': [0.0, 0.0], '1165': [0.0, 0.0], '1166': [0.0, 0.0], '1167': [0.0, 0.0], '1168': [0.0, 0.0], '1169': [0.0, 0.0], '1170': [0.0, 0.0], '1171': [0.0, 0.0], '1172': [0.0, 0.0], '1173': [0.0, 0.0], '1174': [0.0, 0.0], '1175': [0.0, 0.0], '1176': [0.0, 0.0], '1177': [0.0, 0.0], '1178': [0.0, 0.0], '1179': [0.0, 0.0], '1180': [0.0, 0.0], '1181': [0.0, 0.0], '1182': [0.0, 0.0], '1183': [0.0, 0.0], '1184': [0.0, 0.0], '1185': [0.0, 0.0], '1186': [0.0, 0.0], '1187': [0.0, 0.0], '1188': [0.0, 0.0], '1189': [0.0, 0.0], '1190': [0.0, 0.0], '1191': [0.0, 0.0], '1192': [0.0, 0.0], '1193': [0.0, 0.0], '1194': [0.0, 0.0], '1195': [0.0, 0.0], '1196': [0.0, 0.0], '1197': [0.0, 0.0], '1198': [0.0, 0.0], '1199': [0.0, 0.0], '1200': [0.0, 0.0], '1201': [0.0, 0.0], '1202': [0.0, 0.0], '1203': [0.0, 0.0], '1204': [0.0, 0.0], '1205': [0.0, 0.0], '1206': [0.0, 0.0], '1207': [0.0, 0.0], '1208': [0.0, 0.0], '1209': [0.0, 0.0], '1210': [0.0, 0.0], '1211': [0.0, 0.0], '1212': [0.0, 0.0], '1213': [0.0, 0.0], '1214': [0.0, 0.0], '1215': [0.0, 0.0], '1216': [0.0, 0.0], '1217': [0.0, 0.0], '1218': [0.0, 0.0], '1219': [0.0, 0.0], '1220': [0.0, 0.0], '1221': [0.0, 0.0], '1222': [0.0, 0.0], '1223': [0.0, 0.0], '1224': [0.0, 0.0], '1225': [0.0, 0.0], '1226': [0.0, 0.0], '1227': [0.0, 0.0], '1228': [0.0, 0.0], '1229': [0.0, 0.0], '1230': [0.0, 0.0], '1231': [0.0, 0.0], '1232': [0.0, 0.0], '1233': [0.0, 0.0], '1234': [0.0, 0.0], '1235': [0.0, 0.0], '1236': [0.0, 0.0], '1237': [0.0, 0.0], '1238': [0.0, 0.0], '1239': [0.0, 0.0], '1240': [0.0, 0.0], '1241': [0.0, 0.0], '1242': [0.0, 0.0], '1243': [0.0, 0.0], '1244': [0.0, 0.0], '1245': [0.0, 0.0], '1246': [0.0, 0.0], '1247': [0.0, 0.0], '1248': [0.0, 0.0], '1249': [0.0, 0.0], '1250': [0.0, 0.0], '1251': [0.0, 0.0], '1252': [0.0, 0.0], '1253': [0.0, 0.0], '1254': [0.0, 0.0], '1255': [0.0, 0.0], '1256': [0.0, 0.0], '1257': [0.0, 0.0], '1258': [0.0, 0.0], '1259': [0.0, 0.0], '1260': [0.0, 0.0], '1261': [0.0, 0.0], '1262': [0.0, 0.0], '1263': [0.0, 0.0], '1264': [0.0, 0.0], '1265': [0.0, 0.0], '1266': [0.0, 0.0], '1267': [0.0, 0.0], '1268': [0.0, 0.0], '1269': [0.0, 0.0], '1270': [0.0, 0.0], '1271': [0.0, 0.0], '1272': [0.0, 0.0], '1273': [0.0, 0.0], '1274': [0.0, 0.0], '1275': [0.0, 0.0], '1276': [0.0, 0.0], '1277': [0.0, 0.0], '1278': [0.0, 0.0], '1279': [0.0, 0.0], '1280': [0.0, 0.0], '1281': [0.0, 0.0], '1282': [0.0, 0.0], '1283': [0.0, 0.0], '1284': [0.0, 0.0], '1285': [0.0, 0.0], '1286': [0.0, 0.0], '1287': [0.0, 0.0], }
 
upperbound = {'0': [1000.0, 1000.0], '1': [1000.0, 1000.0], '2': [1000.0, 1000.0], '3': [1000.0, 1000.0], '4': [1000.0, 1000.0], '5': [1000.0, 1000.0], '6': [1000.0, 1000.0], '7': [1000.0, 1000.0], '8': [1000.0, 1000.0], '9': [1000.0, 1000.0], '10': [1000.0, 1000.0], '11': [1000.0, 1000.0], '12': [1000.0, 1000.0], '13': [1000.0, 1000.0], '14': [1000.0, 1000.0], '15': [1000.0, 1000.0], '16': [1000.0, 1000.0], '17': [1000.0, 1000.0], '18': [1000.0, 1000.0], '19': [1000.0, 1000.0], '20': [1000.0, 1000.0], '21': [1000.0, 1000.0], '22': [1000.0, 1000.0], '23': [1000.0, 1000.0], '24': [1000.0, 1000.0], '25': [1000.0, 1000.0], '26': [1000.0, 1000.0], '27': [1000.0, 1000.0], '28': [1000.0, 1000.0], '29': [1000.0, 1000.0], '30': [1000.0, 1000.0], '31': [1000.0, 1000.0], '32': [1000.0, 1000.0], '33': [1000.0, 1000.0], '34': [1000.0, 1000.0], '35': [1000.0, 1000.0], '36': [1000.0, 1000.0], '37': [1000.0, 1000.0], '38': [1000.0, 1000.0], '39': [1000.0, 1000.0], '40': [1000.0, 1000.0], '41': [1000.0, 1000.0], '42': [1000.0, 1000.0], '43': [1000.0, 1000.0], '44': [1000.0, 1000.0], '45': [1000.0, 1000.0], '46': [1000.0, 1000.0], '47': [1000.0, 1000.0], '48': [1000.0, 1000.0], '49': [1000.0, 1000.0], '50': [1000.0, 1000.0], '51': [1000.0, 1000.0], '52': [1000.0, 1000.0], '53': [1000.0, 1000.0], '54': [1000.0, 1000.0], '55': [1000.0, 1000.0], '56': [1000.0, 1000.0], '57': [1000.0, 1000.0], '58': [1000.0, 1000.0], '59': [1000.0, 1000.0], '60': [1000.0, 1000.0], '61': [1000.0, 1000.0], '62': [1000.0, 1000.0], '63': [1000.0, 1000.0], '64': [1000.0, 1000.0], '65': [1000.0, 1000.0], '66': [1000.0, 1000.0], '67': [1000.0, 1000.0], '68': [1000.0, 1000.0], '69': [1000.0, 1000.0], '70': [1000.0, 1000.0], '71': [1000.0, 1000.0], '72': [1000.0, 1000.0], '73': [1000.0, 1000.0], '74': [1000.0, 1000.0], '75': [1000.0, 1000.0], '76': [1000.0, 1000.0], '77': [1000.0, 1000.0], '78': [1000.0, 1000.0], '79': [1000.0, 1000.0], '80': [1000.0, 1000.0], '81': [1000.0, 1000.0], '82': [1000.0, 1000.0], '83': [1000.0, 1000.0], '84': [1000.0, 1000.0], '85': [1000.0, 1000.0], '86': [1000.0, 1000.0], '87': [1000.0, 1000.0], '88': [1000.0, 1000.0], '89': [1000.0, 1000.0], '90': [1000.0, 1000.0], '91': [1000.0, 1000.0], '92': [1000.0, 1000.0], '93': [1000.0, 1000.0], '94': [1000.0, 1000.0], '95': [1000.0, 1000.0], '96': [1000.0, 1000.0], '97': [1000.0, 1000.0], '98': [1000.0, 1000.0], '99': [1000.0, 1000.0], '100': [1000.0, 1000.0], '101': [1000.0, 1000.0], '102': [1000.0, 1000.0], '103': [1000.0, 1000.0], '104': [1000.0, 1000.0], '105': [1000.0, 1000.0], '106': [1000.0, 1000.0], '107': [1000.0, 1000.0], '108': [1000.0, 1000.0], '109': [1000.0, 1000.0], '110': [1000.0, 1000.0], '111': [1000.0, 1000.0], '112': [1000.0, 1000.0], '113': [1000.0, 1000.0], '114': [1000.0, 1000.0], '115': [1000.0, 1000.0], '116': [1000.0, 1000.0], '117': [1000.0, 1000.0], '118': [1000.0, 1000.0], '119': [1000.0, 1000.0], '120': [1000.0, 1000.0], '121': [1000.0, 1000.0], '122': [1000.0, 1000.0], '123': [1000.0, 1000.0], '124': [1000.0, 1000.0], '125': [1000.0, 1000.0], '126': [1000.0, 1000.0], '127': [1000.0, 1000.0], '128': [1000.0, 1000.0], '129': [1000.0, 1000.0], '130': [1000.0, 1000.0], '131': [1000.0, 1000.0], '132': [1000.0, 1000.0], '133': [1000.0, 1000.0], '134': [1000.0, 1000.0], '135': [1000.0, 1000.0], '136': [1000.0, 1000.0], '137': [1000.0, 1000.0], '138': [1000.0, 1000.0], '139': [1000.0, 1000.0], '140': [1000.0, 1000.0], '141': [1000.0, 1000.0], '142': [1000.0, 1000.0], '143': [1000.0, 1000.0], '144': [1000.0, 1000.0], '145': [1000.0, 1000.0], '146': [1000.0, 1000.0], '147': [1000.0, 1000.0], '148': [1000.0, 1000.0], '149': [1000.0, 1000.0], '150': [1000.0, 1000.0], '151': [1000.0, 1000.0], '152': [1000.0, 1000.0], '153': [1000.0, 1000.0], '154': [1000.0, 1000.0], '155': [1000.0, 1000.0], '156': [1000.0, 1000.0], '157': [1000.0, 1000.0], '158': [1000.0, 1000.0], '159': [1000.0, 1000.0], '160': [1000.0, 1000.0], '161': [1000.0, 1000.0], '162': [1000.0, 1000.0], '163': [1000.0, 1000.0], '164': [1000.0, 1000.0], '165': [1000.0, 1000.0], '166': [1000.0, 1000.0], '167': [1000.0, 1000.0], '168': [1000.0, 1000.0], '169': [1000.0, 1000.0], '170': [1000.0, 1000.0], '171': [1000.0, 1000.0], '172': [1000.0, 1000.0], '173': [1000.0, 1000.0], '174': [1000.0, 1000.0], '175': [1000.0, 1000.0], '176': [1000.0, 1000.0], '177': [1000.0, 1000.0], '178': [1000.0, 1000.0], '179': [1000.0, 1000.0], '180': [1000.0, 1000.0], '181': [1000.0, 1000.0], '182': [1000.0, 1000.0], '183': [1000.0, 1000.0], '184': [1000.0, 1000.0], '185': [1000.0, 1000.0], '186': [1000.0, 1000.0], '187': [1000.0, 1000.0], '188': [1000.0, 1000.0], '189': [1000.0, 1000.0], '190': [1000.0, 1000.0], '191': [1000.0, 1000.0], '192': [1000.0, 1000.0], '193': [1000.0, 1000.0], '194': [1000.0, 1000.0], '195': [1000.0, 1000.0], '196': [1000.0, 1000.0], '197': [1000.0, 1000.0], '198': [1000.0, 1000.0], '199': [1000.0, 1000.0], '200': [1000.0, 1000.0], '201': [1000.0, 1000.0], '202': [1000.0, 1000.0], '203': [1000.0, 1000.0], '204': [1000.0, 1000.0], '205': [1000.0, 1000.0], '206': [1000.0, 1000.0], '207': [1000.0, 1000.0], '208': [1000.0, 1000.0], '209': [1000.0, 1000.0], '210': [1000.0, 1000.0], '211': [1000.0, 1000.0], '212': [1000.0, 1000.0], '213': [1000.0, 1000.0], '214': [1000.0, 1000.0], '215': [1000.0, 1000.0], '216': [1000.0, 1000.0], '217': [1000.0, 1000.0], '218': [1000.0, 1000.0], '219': [1000.0, 1000.0], '220': [1000.0, 1000.0], '221': [1000.0, 1000.0], '222': [1000.0, 1000.0], '223': [1000.0, 1000.0], '224': [1000.0, 1000.0], '225': [1000.0, 1000.0], '226': [1000.0, 1000.0], '227': [1000.0, 1000.0], '228': [1000.0, 1000.0], '229': [1000.0, 1000.0], '230': [1000.0, 1000.0], '231': [1000.0, 1000.0], '232': [1000.0, 1000.0], '233': [1000.0, 1000.0], '234': [1000.0, 1000.0], '235': [1000.0, 1000.0], '236': [1000.0, 1000.0], '237': [1000.0, 1000.0], '238': [1000.0, 1000.0], '239': [1000.0, 1000.0], '240': [1000.0, 1000.0], '241': [1000.0, 1000.0], '242': [1000.0, 1000.0], '243': [1000.0, 1000.0], '244': [1000.0, 1000.0], '245': [1000.0, 1000.0], '246': [1000.0, 1000.0], '247': [1000.0, 1000.0], '248': [1000.0, 1000.0], '249': [1000.0, 1000.0], '250': [1000.0, 1000.0], '251': [1000.0, 1000.0], '252': [1000.0, 1000.0], '253': [1000.0, 1000.0], '254': [1000.0, 1000.0], '255': [1000.0, 1000.0], '256': [1000.0, 1000.0], '257': [1000.0, 1000.0], '258': [1000.0, 1000.0], '259': [1000.0, 1000.0], '260': [1000.0, 1000.0], '261': [1000.0, 1000.0], '262': [1000.0, 1000.0], '263': [1000.0, 1000.0], '264': [1000.0, 1000.0], '265': [1000.0, 1000.0], '266': [1000.0, 1000.0], '267': [1000.0, 1000.0], '268': [1000.0, 1000.0], '269': [1000.0, 1000.0], '270': [1000.0, 1000.0], '271': [1000.0, 1000.0], '272': [1000.0, 1000.0], '273': [1000.0, 1000.0], '274': [1000.0, 1000.0], '275': [1000.0, 1000.0], '276': [1000.0, 1000.0], '277': [1000.0, 1000.0], '278': [1000.0, 1000.0], '279': [1000.0, 1000.0], '280': [1000.0, 1000.0], '281': [1000.0, 1000.0], '282': [1000.0, 1000.0], '283': [1000.0, 1000.0], '284': [1000.0, 1000.0], '285': [1000.0, 1000.0], '286': [1000.0, 1000.0], '287': [1000.0, 1000.0], '288': [1000.0, 1000.0], '289': [1000.0, 1000.0], '290': [1000.0, 1000.0], '291': [1000.0, 1000.0], '292': [1000.0, 1000.0], '293': [1000.0, 1000.0], '294': [1000.0, 1000.0], '295': [1000.0, 1000.0], '296': [1000.0, 1000.0], '297': [1000.0, 1000.0], '298': [1000.0, 1000.0], '299': [1000.0, 1000.0], '300': [1000.0, 1000.0], '301': [1000.0, 1000.0], '302': [1000.0, 1000.0], '303': [1000.0, 1000.0], '304': [1000.0, 1000.0], '305': [1000.0, 1000.0], '306': [1000.0, 1000.0], '307': [1000.0, 1000.0], '308': [1000.0, 1000.0], '309': [1000.0, 1000.0], '310': [1000.0, 1000.0], '311': [1000.0, 1000.0], '312': [1000.0, 1000.0], '313': [1000.0, 1000.0], '314': [1000.0, 1000.0], '315': [1000.0, 1000.0], '316': [1000.0, 1000.0], '317': [1000.0, 1000.0], '318': [1000.0, 1000.0], '319': [1000.0, 1000.0], '320': [1000.0, 1000.0], '321': [1000.0, 1000.0], '322': [1000.0, 1000.0], '323': [1000.0, 1000.0], '324': [1000.0, 1000.0], '325': [1000.0, 1000.0], '326': [1000.0, 1000.0], '327': [1000.0, 1000.0], '328': [1000.0, 1000.0], '329': [1000.0, 1000.0], '330': [1000.0, 1000.0], '331': [1000.0, 1000.0], '332': [1000.0, 1000.0], '333': [1000.0, 1000.0], '334': [1000.0, 1000.0], '335': [1000.0, 1000.0], '336': [1000.0, 1000.0], '337': [1000.0, 1000.0], '338': [1000.0, 1000.0], '339': [1000.0, 1000.0], '340': [1000.0, 1000.0], '341': [1000.0, 1000.0], '342': [1000.0, 1000.0], '343': [1000.0, 1000.0], '344': [1000.0, 1000.0], '345': [1000.0, 1000.0], '346': [1000.0, 1000.0], '347': [1000.0, 1000.0], '348': [1000.0, 1000.0], '349': [1000.0, 1000.0], '350': [1000.0, 1000.0], '351': [1000.0, 1000.0], '352': [1000.0, 1000.0], '353': [1000.0, 1000.0], '354': [1000.0, 1000.0], '355': [1000.0, 1000.0], '356': [1000.0, 1000.0], '357': [1000.0, 1000.0], '358': [1000.0, 1000.0], '359': [1000.0, 1000.0], '360': [1000.0, 1000.0], '361': [1000.0, 1000.0], '362': [1000.0, 1000.0], '363': [1000.0, 1000.0], '364': [1000.0, 1000.0], '365': [1000.0, 1000.0], '366': [1000.0, 1000.0], '367': [1000.0, 1000.0], '368': [1000.0, 1000.0], '369': [1000.0, 1000.0], '370': [1000.0, 1000.0], '371': [1000.0, 1000.0], '372': [1000.0, 1000.0], '373': [1000.0, 1000.0], '374': [1000.0, 1000.0], '375': [1000.0, 1000.0], '376': [1000.0, 1000.0], '377': [1000.0, 1000.0], '378': [1000.0, 1000.0], '379': [1000.0, 1000.0], '380': [1000.0, 1000.0], '381': [1000.0, 1000.0], '382': [1000.0, 1000.0], '383': [1000.0, 1000.0], '384': [1000.0, 1000.0], '385': [1000.0, 1000.0], '386': [1000.0, 1000.0], '387': [1000.0, 1000.0], '388': [1000.0, 1000.0], '389': [1000.0, 1000.0], '390': [1000.0, 1000.0], '391': [1000.0, 1000.0], '392': [1000.0, 1000.0], '393': [1000.0, 1000.0], '394': [1000.0, 1000.0], '395': [1000.0, 1000.0], '396': [1000.0, 1000.0], '397': [1000.0, 1000.0], '398': [1000.0, 1000.0], '399': [1000.0, 1000.0], '400': [1000.0, 1000.0], '401': [1000.0, 1000.0], '402': [1000.0, 1000.0], '403': [1000.0, 1000.0], '404': [1000.0, 1000.0], '405': [1000.0, 1000.0], '406': [1000.0, 1000.0], '407': [1000.0, 1000.0], '408': [1000.0, 1000.0], '409': [1000.0, 1000.0], '410': [1000.0, 1000.0], '411': [1000.0, 1000.0], '412': [1000.0, 1000.0], '413': [1000.0, 1000.0], '414': [1000.0, 1000.0], '415': [1000.0, 1000.0], '416': [1000.0, 1000.0], '417': [1000.0, 1000.0], '418': [1000.0, 1000.0], '419': [1000.0, 1000.0], '420': [1000.0, 1000.0], '421': [1000.0, 1000.0], '422': [1000.0, 1000.0], '423': [1000.0, 1000.0], '424': [1000.0, 1000.0], '425': [1000.0, 1000.0], '426': [1000.0, 1000.0], '427': [1000.0, 1000.0], '428': [1000.0, 1000.0], '429': [1000.0, 1000.0], '430': [1000.0, 1000.0], '431': [1000.0, 1000.0], '432': [1000.0, 1000.0], '433': [1000.0, 1000.0], '434': [1000.0, 1000.0], '435': [1000.0, 1000.0], '436': [1000.0, 1000.0], '437': [1000.0, 1000.0], '438': [1000.0, 1000.0], '439': [1000.0, 1000.0], '440': [1000.0, 1000.0], '441': [1000.0, 1000.0], '442': [1000.0, 1000.0], '443': [1000.0, 1000.0], '444': [1000.0, 1000.0], '445': [1000.0, 1000.0], '446': [1000.0, 1000.0], '447': [1000.0, 1000.0], '448': [1000.0, 1000.0], '449': [1000.0, 1000.0], '450': [1000.0, 1000.0], '451': [1000.0, 1000.0], '452': [1000.0, 1000.0], '453': [1000.0, 1000.0], '454': [1000.0, 1000.0], '455': [1000.0, 1000.0], '456': [1000.0, 1000.0], '457': [1000.0, 1000.0], '458': [1000.0, 1000.0], '459': [1000.0, 1000.0], '460': [1000.0, 1000.0], '461': [1000.0, 1000.0], '462': [1000.0, 1000.0], '463': [1000.0, 1000.0], '464': [1000.0, 1000.0], '465': [1000.0, 1000.0], '466': [1000.0, 1000.0], '467': [1000.0, 1000.0], '468': [1000.0, 1000.0], '469': [1000.0, 1000.0], '470': [1000.0, 1000.0], '471': [1000.0, 1000.0], '472': [1000.0, 1000.0], '473': [1000.0, 1000.0], '474': [1000.0, 1000.0], '475': [1000.0, 1000.0], '476': [1000.0, 1000.0], '477': [1000.0, 1000.0], '478': [1000.0, 1000.0], '479': [1000.0, 1000.0], '480': [1000.0, 1000.0], '481': [1000.0, 1000.0], '482': [1000.0, 1000.0], '483': [1000.0, 1000.0], '484': [1000.0, 1000.0], '485': [1000.0, 1000.0], '486': [1000.0, 1000.0], '487': [1000.0, 1000.0], '488': [1000.0, 1000.0], '489': [1000.0, 1000.0], '490': [1000.0, 1000.0], '491': [1000.0, 1000.0], '492': [1000.0, 1000.0], '493': [1000.0, 1000.0], '494': [1000.0, 1000.0], '495': [1000.0, 1000.0], '496': [1000.0, 1000.0], '497': [1000.0, 1000.0], '498': [1000.0, 1000.0], '499': [1000.0, 1000.0], '500': [1000.0, 1000.0], '501': [1000.0, 1000.0], '502': [1000.0, 1000.0], '503': [1000.0, 1000.0], '504': [1000.0, 1000.0], '505': [1000.0, 1000.0], '506': [1000.0, 1000.0], '507': [1000.0, 1000.0], '508': [1000.0, 1000.0], '509': [1000.0, 1000.0], '510': [1000.0, 1000.0], '511': [1000.0, 1000.0], '512': [1000.0, 1000.0], '513': [1000.0, 1000.0], '514': [1000.0, 1000.0], '515': [1000.0, 1000.0], '516': [1000.0, 1000.0], '517': [1000.0, 1000.0], '518': [1000.0, 1000.0], '519': [1000.0, 1000.0], '520': [1000.0, 1000.0], '521': [1000.0, 1000.0], '522': [1000.0, 1000.0], '523': [1000.0, 1000.0], '524': [1000.0, 1000.0], '525': [1000.0, 1000.0], '526': [1000.0, 1000.0], '527': [1000.0, 1000.0], '528': [1000.0, 1000.0], '529': [1000.0, 1000.0], '530': [1000.0, 1000.0], '531': [1000.0, 1000.0], '532': [1000.0, 1000.0], '533': [1000.0, 1000.0], '534': [1000.0, 1000.0], '535': [1000.0, 1000.0], '536': [1000.0, 1000.0], '537': [1000.0, 1000.0], '538': [1000.0, 1000.0], '539': [1000.0, 1000.0], '540': [1000.0, 1000.0], '541': [1000.0, 1000.0], '542': [1000.0, 1000.0], '543': [1000.0, 1000.0], '544': [1000.0, 1000.0], '545': [1000.0, 1000.0], '546': [1000.0, 1000.0], '547': [1000.0, 1000.0], '548': [1000.0, 1000.0], '549': [1000.0, 1000.0], '550': [1000.0, 1000.0], '551': [1000.0, 1000.0], '552': [1000.0, 1000.0], '553': [1000.0, 1000.0], '554': [1000.0, 1000.0], '555': [1000.0, 1000.0], '556': [1000.0, 1000.0], '557': [1000.0, 1000.0], '558': [1000.0, 1000.0], '559': [1000.0, 1000.0], '560': [1000.0, 1000.0], '561': [1000.0, 1000.0], '562': [1000.0, 1000.0], '563': [1000.0, 1000.0], '564': [1000.0, 1000.0], '565': [1000.0, 1000.0], '566': [1000.0, 1000.0], '567': [1000.0, 1000.0], '568': [1000.0, 1000.0], '569': [1000.0, 1000.0], '570': [1000.0, 1000.0], '571': [1000.0, 1000.0], '572': [1000.0, 1000.0], '573': [1000.0, 1000.0], '574': [1000.0, 1000.0], '575': [1000.0, 1000.0], '576': [1000.0, 1000.0], '577': [1000.0, 1000.0], '578': [1000.0, 1000.0], '579': [1000.0, 1000.0], '580': [1000.0, 1000.0], '581': [1000.0, 1000.0], '582': [1000.0, 1000.0], '583': [1000.0, 1000.0], '584': [1000.0, 1000.0], '585': [1000.0, 1000.0], '586': [1000.0, 1000.0], '587': [1000.0, 1000.0], '588': [1000.0, 1000.0], '589': [1000.0, 1000.0], '590': [1000.0, 1000.0], '591': [1000.0, 1000.0], '592': [1000.0, 1000.0], '593': [1000.0, 1000.0], '594': [1000.0, 1000.0], '595': [1000.0, 1000.0], '596': [1000.0, 1000.0], '597': [1000.0, 1000.0], '598': [1000.0, 1000.0], '599': [1000.0, 1000.0], '600': [1000.0, 1000.0], '601': [1000.0, 1000.0], '602': [1000.0, 1000.0], '603': [1000.0, 1000.0], '604': [1000.0, 1000.0], '605': [1000.0, 1000.0], '606': [1000.0, 1000.0], '607': [1000.0, 1000.0], '608': [1000.0, 1000.0], '609': [1000.0, 1000.0], '610': [1000.0, 1000.0], '611': [1000.0, 1000.0], '612': [1000.0, 1000.0], '613': [1000.0, 1000.0], '614': [1000.0, 1000.0], '615': [1000.0, 1000.0], '616': [1000.0, 1000.0], '617': [1000.0, 1000.0], '618': [1000.0, 1000.0], '619': [1000.0, 1000.0], '620': [1000.0, 1000.0], '621': [1000.0, 1000.0], '622': [1000.0, 1000.0], '623': [1000.0, 1000.0], '624': [1000.0, 1000.0], '625': [1000.0, 1000.0], '626': [1000.0, 1000.0], '627': [1000.0, 1000.0], '628': [1000.0, 1000.0], '629': [1000.0, 1000.0], '630': [1000.0, 1000.0], '631': [1000.0, 1000.0], '632': [1000.0, 1000.0], '633': [1000.0, 1000.0], '634': [1000.0, 1000.0], '635': [1000.0, 1000.0], '636': [1000.0, 1000.0], '637': [1000.0, 1000.0], '638': [1000.0, 1000.0], '639': [1000.0, 1000.0], '640': [1000.0, 1000.0], '641': [1000.0, 1000.0], '642': [1000.0, 1000.0], '643': [1000.0, 1000.0], '644': [1000.0, 1000.0], '645': [1000.0, 1000.0], '646': [1000.0, 1000.0], '647': [1000.0, 1000.0], '648': [1000.0, 1000.0], '649': [1000.0, 1000.0], '650': [1000.0, 1000.0], '651': [1000.0, 1000.0], '652': [1000.0, 1000.0], '653': [1000.0, 1000.0], '654': [1000.0, 1000.0], '655': [1000.0, 1000.0], '656': [1000.0, 1000.0], '657': [1000.0, 1000.0], '658': [1000.0, 1000.0], '659': [1000.0, 1000.0], '660': [1000.0, 1000.0], '661': [1000.0, 1000.0], '662': [1000.0, 1000.0], '663': [1000.0, 1000.0], '664': [1000.0, 1000.0], '665': [1000.0, 1000.0], '666': [1000.0, 1000.0], '667': [1000.0, 1000.0], '668': [1000.0, 1000.0], '669': [1000.0, 1000.0], '670': [1000.0, 1000.0], '671': [1000.0, 1000.0], '672': [1000.0, 1000.0], '673': [1000.0, 1000.0], '674': [1000.0, 1000.0], '675': [1000.0, 1000.0], '676': [1000.0, 1000.0], '677': [1000.0, 1000.0], '678': [1000.0, 1000.0], '679': [1000.0, 1000.0], '680': [1000.0, 1000.0], '681': [1000.0, 1000.0], '682': [1000.0, 1000.0], '683': [1000.0, 1000.0], '684': [1000.0, 1000.0], '685': [1000.0, 1000.0], '686': [1000.0, 1000.0], '687': [1000.0, 1000.0], '688': [1000.0, 1000.0], '689': [1000.0, 1000.0], '690': [1000.0, 1000.0], '691': [1000.0, 1000.0], '692': [1000.0, 1000.0], '693': [1000.0, 1000.0], '694': [1000.0, 1000.0], '695': [1000.0, 1000.0], '696': [1000.0, 1000.0], '697': [1000.0, 1000.0], '698': [1000.0, 1000.0], '699': [1000.0, 1000.0], '700': [1000.0, 1000.0], '701': [1000.0, 1000.0], '702': [1000.0, 1000.0], '703': [1000.0, 1000.0], '704': [1000.0, 1000.0], '705': [1000.0, 1000.0], '706': [1000.0, 1000.0], '707': [1000.0, 1000.0], '708': [1000.0, 1000.0], '709': [1000.0, 1000.0], '710': [1000.0, 1000.0], '711': [1000.0, 1000.0], '712': [1000.0, 1000.0], '713': [1000.0, 1000.0], '714': [1000.0, 1000.0], '715': [1000.0, 1000.0], '716': [1000.0, 1000.0], '717': [1000.0, 1000.0], '718': [1000.0, 1000.0], '719': [1000.0, 1000.0], '720': [1000.0, 1000.0], '721': [1000.0, 1000.0], '722': [1000.0, 1000.0], '723': [1000.0, 1000.0], '724': [1000.0, 1000.0], '725': [1000.0, 1000.0], '726': [1000.0, 1000.0], '727': [1000.0, 1000.0], '728': [1000.0, 1000.0], '729': [1000.0, 1000.0], '730': [1000.0, 1000.0], '731': [1000.0, 1000.0], '732': [1000.0, 1000.0], '733': [1000.0, 1000.0], '734': [1000.0, 1000.0], '735': [1000.0, 1000.0], '736': [1000.0, 1000.0], '737': [1000.0, 1000.0], '738': [1000.0, 1000.0], '739': [1000.0, 1000.0], '740': [1000.0, 1000.0], '741': [1000.0, 1000.0], '742': [1000.0, 1000.0], '743': [1000.0, 1000.0], '744': [1000.0, 1000.0], '745': [1000.0, 1000.0], '746': [1000.0, 1000.0], '747': [1000.0, 1000.0], '748': [1000.0, 1000.0], '749': [1000.0, 1000.0], '750': [1000.0, 1000.0], '751': [1000.0, 1000.0], '752': [1000.0, 1000.0], '753': [1000.0, 1000.0], '754': [1000.0, 1000.0], '755': [1000.0, 1000.0], '756': [1000.0, 1000.0], '757': [1000.0, 1000.0], '758': [1000.0, 1000.0], '759': [1000.0, 1000.0], '760': [1000.0, 1000.0], '761': [1000.0, 1000.0], '762': [1000.0, 1000.0], '763': [1000.0, 1000.0], '764': [1000.0, 1000.0], '765': [1000.0, 1000.0], '766': [1000.0, 1000.0], '767': [1000.0, 1000.0], '768': [1000.0, 1000.0], '769': [1000.0, 1000.0], '770': [1000.0, 1000.0], '771': [1000.0, 1000.0], '772': [1000.0, 1000.0], '773': [1000.0, 1000.0], '774': [1000.0, 1000.0], '775': [1000.0, 1000.0], '776': [1000.0, 1000.0], '777': [1000.0, 1000.0], '778': [1000.0, 1000.0], '779': [1000.0, 1000.0], '780': [1000.0, 1000.0], '781': [1000.0, 1000.0], '782': [1000.0, 1000.0], '783': [1000.0, 1000.0], '784': [1000.0, 1000.0], '785': [1000.0, 1000.0], '786': [1000.0, 1000.0], '787': [1000.0, 1000.0], '788': [1000.0, 1000.0], '789': [1000.0, 1000.0], '790': [1000.0, 1000.0], '791': [1000.0, 1000.0], '792': [1000.0, 1000.0], '793': [1000.0, 1000.0], '794': [1000.0, 1000.0], '795': [1000.0, 1000.0], '796': [1000.0, 1000.0], '797': [1000.0, 1000.0], '798': [1000.0, 1000.0], '799': [1000.0, 1000.0], '800': [1000.0, 1000.0], '801': [1000.0, 1000.0], '802': [1000.0, 1000.0], '803': [1000.0, 1000.0], '804': [1000.0, 1000.0], '805': [1000.0, 1000.0], '806': [1000.0, 1000.0], '807': [1000.0, 1000.0], '808': [1000.0, 1000.0], '809': [1000.0, 1000.0], '810': [1000.0, 1000.0], '811': [1000.0, 1000.0], '812': [1000.0, 1000.0], '813': [1000.0, 1000.0], '814': [1000.0, 1000.0], '815': [1000.0, 1000.0], '816': [1000.0, 1000.0], '817': [1000.0, 1000.0], '818': [1000.0, 1000.0], '819': [1000.0, 1000.0], '820': [1000.0, 1000.0], '821': [1000.0, 1000.0], '822': [1000.0, 1000.0], '823': [1000.0, 1000.0], '824': [1000.0, 1000.0], '825': [1000.0, 1000.0], '826': [1000.0, 1000.0], '827': [1000.0, 1000.0], '828': [1000.0, 1000.0], '829': [1000.0, 1000.0], '830': [1000.0, 1000.0], '831': [1000.0, 1000.0], '832': [1000.0, 1000.0], '833': [1000.0, 1000.0], '834': [1000.0, 1000.0], '835': [1000.0, 1000.0], '836': [1000.0, 1000.0], '837': [1000.0, 1000.0], '838': [1000.0, 1000.0], '839': [1000.0, 1000.0], '840': [1000.0, 1000.0], '841': [1000.0, 1000.0], '842': [1000.0, 1000.0], '843': [1000.0, 1000.0], '844': [1000.0, 1000.0], '845': [1000.0, 1000.0], '846': [1000.0, 1000.0], '847': [1000.0, 1000.0], '848': [1000.0, 1000.0], '849': [1000.0, 1000.0], '850': [1000.0, 1000.0], '851': [1000.0, 1000.0], '852': [1000.0, 1000.0], '853': [1000.0, 1000.0], '854': [1000.0, 1000.0], '855': [1000.0, 1000.0], '856': [1000.0, 1000.0], '857': [1000.0, 1000.0], '858': [1000.0, 1000.0], '859': [1000.0, 1000.0], '860': [1000.0, 1000.0], '861': [1000.0, 1000.0], '862': [1000.0, 1000.0], '863': [1000.0, 1000.0], '864': [1000.0, 1000.0], '865': [1000.0, 1000.0], '866': [1000.0, 1000.0], '867': [1000.0, 1000.0], '868': [1000.0, 1000.0], '869': [1000.0, 1000.0], '870': [1000.0, 1000.0], '871': [1000.0, 1000.0], '872': [1000.0, 1000.0], '873': [1000.0, 1000.0], '874': [1000.0, 1000.0], '875': [1000.0, 1000.0], '876': [1000.0, 1000.0], '877': [1000.0, 1000.0], '878': [1000.0, 1000.0], '879': [1000.0, 1000.0], '880': [1000.0, 1000.0], '881': [1000.0, 1000.0], '882': [1000.0, 1000.0], '883': [1000.0, 1000.0], '884': [1000.0, 1000.0], '885': [1000.0, 1000.0], '886': [1000.0, 1000.0], '887': [1000.0, 1000.0], '888': [1000.0, 1000.0], '889': [1000.0, 1000.0], '890': [1000.0, 1000.0], '891': [1000.0, 1000.0], '892': [1000.0, 1000.0], '893': [1000.0, 1000.0], '894': [1000.0, 1000.0], '895': [1000.0, 1000.0], '896': [1000.0, 1000.0], '897': [1000.0, 1000.0], '898': [1000.0, 1000.0], '899': [1000.0, 1000.0], '900': [1000.0, 1000.0], '901': [1000.0, 1000.0], '902': [1000.0, 1000.0], '903': [1000.0, 1000.0], '904': [1000.0, 1000.0], '905': [1000.0, 1000.0], '906': [1000.0, 1000.0], '907': [1000.0, 1000.0], '908': [1000.0, 1000.0], '909': [1000.0, 1000.0], '910': [1000.0, 1000.0], '911': [1000.0, 1000.0], '912': [1000.0, 1000.0], '913': [1000.0, 1000.0], '914': [1000.0, 1000.0], '915': [1000.0, 1000.0], '916': [1000.0, 1000.0], '917': [1000.0, 1000.0], '918': [1000.0, 1000.0], '919': [1000.0, 1000.0], '920': [1000.0, 1000.0], '921': [1000.0, 1000.0], '922': [1000.0, 1000.0], '923': [1000.0, 1000.0], '924': [1000.0, 1000.0], '925': [1000.0, 1000.0], '926': [1000.0, 1000.0], '927': [1000.0, 1000.0], '928': [1000.0, 1000.0], '929': [1000.0, 1000.0], '930': [1000.0, 1000.0], '931': [1000.0, 1000.0], '932': [1000.0, 1000.0], '933': [1000.0, 1000.0], '934': [1000.0, 1000.0], '935': [1000.0, 1000.0], '936': [1000.0, 1000.0], '937': [1000.0, 1000.0], '938': [1000.0, 1000.0], '939': [1000.0, 1000.0], '940': [1000.0, 1000.0], '941': [1000.0, 1000.0], '942': [1000.0, 1000.0], '943': [1000.0, 1000.0], '944': [1000.0, 1000.0], '945': [1000.0, 1000.0], '946': [1000.0, 1000.0], '947': [1000.0, 1000.0], '948': [1000.0, 1000.0], '949': [1000.0, 1000.0], '950': [1000.0, 1000.0], '951': [1000.0, 1000.0], '952': [1000.0, 1000.0], '953': [1000.0, 1000.0], '954': [1000.0, 1000.0], '955': [1000.0, 1000.0], '956': [1000.0, 1000.0], '957': [1000.0, 1000.0], '958': [1000.0, 1000.0], '959': [1000.0, 1000.0], '960': [1000.0, 1000.0], '961': [1000.0, 1000.0], '962': [1000.0, 1000.0], '963': [1000.0, 1000.0], '964': [1000.0, 1000.0], '965': [1000.0, 1000.0], '966': [1000.0, 1000.0], '967': [1000.0, 1000.0], '968': [1000.0, 1000.0], '969': [1000.0, 1000.0], '970': [1000.0, 1000.0], '971': [1000.0, 1000.0], '972': [1000.0, 1000.0], '973': [1000.0, 1000.0], '974': [1000.0, 1000.0], '975': [1000.0, 1000.0], '976': [1000.0, 1000.0], '977': [1000.0, 1000.0], '978': [1000.0, 1000.0], '979': [1000.0, 1000.0], '980': [1000.0, 1000.0], '981': [1000.0, 1000.0], '982': [1000.0, 1000.0], '983': [1000.0, 1000.0], '984': [1000.0, 1000.0], '985': [1000.0, 1000.0], '986': [1000.0, 1000.0], '987': [1000.0, 1000.0], '988': [1000.0, 1000.0], '989': [1000.0, 1000.0], '990': [1000.0, 1000.0], '991': [1000.0, 1000.0], '992': [1000.0, 1000.0], '993': [1000.0, 1000.0], '994': [1000.0, 1000.0], '995': [1000.0, 1000.0], '996': [1000.0, 1000.0], '997': [1000.0, 1000.0], '998': [1000.0, 1000.0], '999': [1000.0, 1000.0], '1000': [1000.0, 1000.0], '1001': [1000.0, 1000.0], '1002': [1000.0, 1000.0], '1003': [1000.0, 1000.0], '1004': [1000.0, 1000.0], '1005': [1000.0, 1000.0], '1006': [1000.0, 1000.0], '1007': [1000.0, 1000.0], '1008': [1000.0, 1000.0], '1009': [1000.0, 1000.0], '1010': [1000.0, 1000.0], '1011': [1000.0, 1000.0], '1012': [1000.0, 1000.0], '1013': [1000.0, 1000.0], '1014': [1000.0, 1000.0], '1015': [1000.0, 1000.0], '1016': [1000.0, 1000.0], '1017': [1000.0, 1000.0], '1018': [1000.0, 1000.0], '1019': [1000.0, 1000.0], '1020': [1000.0, 1000.0], '1021': [1000.0, 1000.0], '1022': [1000.0, 1000.0], '1023': [1000.0, 1000.0], '1024': [1000.0, 1000.0], '1025': [1000.0, 1000.0], '1026': [1000.0, 1000.0], '1027': [1000.0, 1000.0], '1028': [1000.0, 1000.0], '1029': [1000.0, 1000.0], '1030': [1000.0, 1000.0], '1031': [1000.0, 1000.0], '1032': [1000.0, 1000.0], '1033': [1000.0, 1000.0], '1034': [1000.0, 1000.0], '1035': [1000.0, 1000.0], '1036': [1000.0, 1000.0], '1037': [1000.0, 1000.0], '1038': [1000.0, 1000.0], '1039': [1000.0, 1000.0], '1040': [1000.0, 1000.0], '1041': [1000.0, 1000.0], '1042': [1000.0, 1000.0], '1043': [1000.0, 1000.0], '1044': [1000.0, 1000.0], '1045': [1000.0, 1000.0], '1046': [1000.0, 1000.0], '1047': [1000.0, 1000.0], '1048': [1000.0, 1000.0], '1049': [1000.0, 1000.0], '1050': [1000.0, 1000.0], '1051': [1000.0, 1000.0], '1052': [1000.0, 1000.0], '1053': [1000.0, 1000.0], '1054': [1000.0, 1000.0], '1055': [1000.0, 1000.0], '1056': [1000.0, 1000.0], '1057': [1000.0, 1000.0], '1058': [1000.0, 1000.0], '1059': [1000.0, 1000.0], '1060': [1000.0, 1000.0], '1061': [1000.0, 1000.0], '1062': [1000.0, 1000.0], '1063': [1000.0, 1000.0], '1064': [1000.0, 1000.0], '1065': [1000.0, 1000.0], '1066': [1000.0, 1000.0], '1067': [1000.0, 1000.0], '1068': [1000.0, 1000.0], '1069': [1000.0, 1000.0], '1070': [1000.0, 1000.0], '1071': [1000.0, 1000.0], '1072': [1000.0, 1000.0], '1073': [1000.0, 1000.0], '1074': [1000.0, 1000.0], '1075': [1000.0, 1000.0], '1076': [1000.0, 1000.0], '1077': [1000.0, 1000.0], '1078': [1000.0, 1000.0], '1079': [1000.0, 1000.0], '1080': [1000.0, 1000.0], '1081': [1000.0, 1000.0], '1082': [1000.0, 1000.0], '1083': [1000.0, 1000.0], '1084': [1000.0, 1000.0], '1085': [1000.0, 1000.0], '1086': [1000.0, 1000.0], '1087': [1000.0, 1000.0], '1088': [1000.0, 1000.0], '1089': [1000.0, 1000.0], '1090': [1000.0, 1000.0], '1091': [1000.0, 1000.0], '1092': [1000.0, 1000.0], '1093': [1000.0, 1000.0], '1094': [1000.0, 1000.0], '1095': [1000.0, 1000.0], '1096': [1000.0, 1000.0], '1097': [1000.0, 1000.0], '1098': [1000.0, 1000.0], '1099': [1000.0, 1000.0], '1100': [1000.0, 1000.0], '1101': [1000.0, 1000.0], '1102': [1000.0, 1000.0], '1103': [1000.0, 1000.0], '1104': [1000.0, 1000.0], '1105': [1000.0, 1000.0], '1106': [1000.0, 1000.0], '1107': [1000.0, 1000.0], '1108': [1000.0, 1000.0], '1109': [1000.0, 1000.0], '1110': [1000.0, 1000.0], '1111': [1000.0, 1000.0], '1112': [1000.0, 1000.0], '1113': [1000.0, 1000.0], '1114': [1000.0, 1000.0], '1115': [1000.0, 1000.0], '1116': [1000.0, 1000.0], '1117': [1000.0, 1000.0], '1118': [1000.0, 1000.0], '1119': [1000.0, 1000.0], '1120': [1000.0, 1000.0], '1121': [1000.0, 1000.0], '1122': [1000.0, 1000.0], '1123': [1000.0, 1000.0], '1124': [1000.0, 1000.0], '1125': [1000.0, 1000.0], '1126': [1000.0, 1000.0], '1127': [1000.0, 1000.0], '1128': [1000.0, 1000.0], '1129': [1000.0, 1000.0], '1130': [1000.0, 1000.0], '1131': [1000.0, 1000.0], '1132': [1000.0, 1000.0], '1133': [1000.0, 1000.0], '1134': [1000.0, 1000.0], '1135': [1000.0, 1000.0], '1136': [1000.0, 1000.0], '1137': [1000.0, 1000.0], '1138': [1000.0, 1000.0], '1139': [1000.0, 1000.0], '1140': [1000.0, 1000.0], '1141': [1000.0, 1000.0], '1142': [1000.0, 1000.0], '1143': [1000.0, 1000.0], '1144': [1000.0, 1000.0], '1145': [1000.0, 1000.0], '1146': [1000.0, 1000.0], '1147': [1000.0, 1000.0], '1148': [1000.0, 1000.0], '1149': [1000.0, 1000.0], '1150': [1000.0, 1000.0], '1151': [1000.0, 1000.0], '1152': [1000.0, 1000.0], '1153': [1000.0, 1000.0], '1154': [1000.0, 1000.0], '1155': [1000.0, 1000.0], '1156': [1000.0, 1000.0], '1157': [1000.0, 1000.0], '1158': [1000.0, 1000.0], '1159': [1000.0, 1000.0], '1160': [1000.0, 1000.0], '1161': [1000.0, 1000.0], '1162': [1000.0, 1000.0], '1163': [1000.0, 1000.0], '1164': [1000.0, 1000.0], '1165': [1000.0, 1000.0], '1166': [1000.0, 1000.0], '1167': [1000.0, 1000.0], '1168': [1000.0, 1000.0], '1169': [1000.0, 1000.0], '1170': [1000.0, 1000.0], '1171': [1000.0, 1000.0], '1172': [1000.0, 1000.0], '1173': [1000.0, 1000.0], '1174': [1000.0, 1000.0], '1175': [1000.0, 1000.0], '1176': [1000.0, 1000.0], '1177': [1000.0, 1000.0], '1178': [1000.0, 1000.0], '1179': [1000.0, 1000.0], '1180': [1000.0, 1000.0], '1181': [1000.0, 1000.0], '1182': [1000.0, 1000.0], '1183': [1000.0, 1000.0], '1184': [1000.0, 1000.0], '1185': [1000.0, 1000.0], '1186': [1000.0, 1000.0], '1187': [1000.0, 1000.0], '1188': [1000.0, 1000.0], '1189': [1000.0, 1000.0], '1190': [1000.0, 1000.0], '1191': [1000.0, 1000.0], '1192': [1000.0, 1000.0], '1193': [1000.0, 1000.0], '1194': [1000.0, 1000.0], '1195': [1000.0, 1000.0], '1196': [1000.0, 1000.0], '1197': [1000.0, 1000.0], '1198': [1000.0, 1000.0], '1199': [1000.0, 1000.0], '1200': [1000.0, 1000.0], '1201': [1000.0, 1000.0], '1202': [1000.0, 1000.0], '1203': [1000.0, 1000.0], '1204': [1000.0, 1000.0], '1205': [1000.0, 1000.0], '1206': [1000.0, 1000.0], '1207': [1000.0, 1000.0], '1208': [1000.0, 1000.0], '1209': [1000.0, 1000.0], '1210': [1000.0, 1000.0], '1211': [1000.0, 1000.0], '1212': [1000.0, 1000.0], '1213': [1000.0, 1000.0], '1214': [1000.0, 1000.0], '1215': [1000.0, 1000.0], '1216': [1000.0, 1000.0], '1217': [1000.0, 1000.0], '1218': [1000.0, 1000.0], '1219': [1000.0, 1000.0], '1220': [1000.0, 1000.0], '1221': [1000.0, 1000.0], '1222': [1000.0, 1000.0], '1223': [1000.0, 1000.0], '1224': [1000.0, 1000.0], '1225': [1000.0, 1000.0], '1226': [1000.0, 1000.0], '1227': [1000.0, 1000.0], '1228': [1000.0, 1000.0], '1229': [1000.0, 1000.0], '1230': [1000.0, 1000.0], '1231': [1000.0, 1000.0], '1232': [1000.0, 1000.0], '1233': [1000.0, 1000.0], '1234': [1000.0, 1000.0], '1235': [1000.0, 1000.0], '1236': [1000.0, 1000.0], '1237': [1000.0, 1000.0], '1238': [1000.0, 1000.0], '1239': [1000.0, 1000.0], '1240': [1000.0, 1000.0], '1241': [1000.0, 1000.0], '1242': [1000.0, 1000.0], '1243': [1000.0, 1000.0], '1244': [1000.0, 1000.0], '1245': [1000.0, 1000.0], '1246': [1000.0, 1000.0], '1247': [1000.0, 1000.0], '1248': [1000.0, 1000.0], '1249': [1000.0, 1000.0], '1250': [1000.0, 1000.0], '1251': [1000.0, 1000.0], '1252': [1000.0, 1000.0], '1253': [1000.0, 1000.0], '1254': [1000.0, 1000.0], '1255': [1000.0, 1000.0], '1256': [1000.0, 1000.0], '1257': [1000.0, 1000.0], '1258': [1000.0, 1000.0], '1259': [1000.0, 1000.0], '1260': [1000.0, 1000.0], '1261': [1000.0, 1000.0], '1262': [1000.0, 1000.0], '1263': [1000.0, 1000.0], '1264': [1000.0, 1000.0], '1265': [1000.0, 1000.0], '1266': [1000.0, 1000.0], '1267': [1000.0, 1000.0], '1268': [1000.0, 1000.0], '1269': [1000.0, 1000.0], '1270': [1000.0, 1000.0], '1271': [1000.0, 1000.0], '1272': [1000.0, 1000.0], '1273': [1000.0, 1000.0], '1274': [1000.0, 1000.0], '1275': [1000.0, 1000.0], '1276': [1000.0, 1000.0], '1277': [1000.0, 1000.0], '1278': [1000.0, 1000.0], '1279': [1000.0, 1000.0], '1280': [1000.0, 1000.0], '1281': [1000.0, 1000.0], '1282': [1000.0, 1000.0], '1283': [1000.0, 1000.0], '1284': [1000.0, 1000.0], '1285': [1000.0, 1000.0], '1286': [1000.0, 1000.0], '1287': [1000.0, 1000.0], }
 
model = RK4(ODE, 0.0, y, 0.1, 3600, None, lowerbound, upperbound)
